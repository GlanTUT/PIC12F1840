

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Fri Nov 21 14:49:36 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	text66,local,class=CODE,merge=1,delta=2
    79                           	psect	text67,local,class=CODE,merge=1,delta=2
    80                           	psect	text68,local,class=CODE,merge=1,delta=2
    81                           	psect	text69,local,class=CODE,merge=1,delta=2
    82                           	psect	text70,local,class=CODE,merge=1,delta=2
    83                           	psect	text71,local,class=CODE,merge=1,delta=2
    84                           	psect	text72,local,class=CODE,merge=1,delta=2
    85                           	psect	text73,local,class=CODE,merge=1,delta=2
    86                           	psect	text74,local,class=CODE,merge=1,delta=2
    87                           	psect	text75,local,class=CODE,merge=1,delta=2
    88                           	psect	text76,local,class=CODE,merge=1,delta=2
    89                           	psect	text77,local,class=CODE,merge=1,delta=2
    90                           	psect	text78,local,class=CODE,merge=1,delta=2
    91                           	psect	text79,local,class=CODE,merge=1,delta=2
    92                           	psect	text80,local,class=CODE,merge=1,delta=2
    93                           	psect	text81,local,class=CODE,merge=1,delta=2
    94                           	psect	text82,local,class=CODE,merge=1,delta=2
    95                           	psect	text83,local,class=CODE,merge=1,delta=2
    96                           	psect	text84,local,class=CODE,merge=1,delta=2
    97                           	psect	text85,local,class=CODE,merge=1,delta=2
    98                           	dabs	1,0x7E,2
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011D                     	;# 
   268  018C                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019C                     	;# 
   286  019C                     	;# 
   287  019D                     	;# 
   288  019E                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  008C                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  010C                     	;# 
   374  0111                     	;# 
   375  0112                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011D                     	;# 
   384  011D                     	;# 
   385  018C                     	;# 
   386  0191                     	;# 
   387  0191                     	;# 
   388  0192                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0194                     	;# 
   393  0195                     	;# 
   394  0196                     	;# 
   395  0197                     	;# 
   396  0199                     	;# 
   397  019A                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019C                     	;# 
   403  019C                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  020C                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0294                     	;# 
   428  0295                     	;# 
   429  0295                     	;# 
   430  0296                     	;# 
   431  0391                     	;# 
   432  0392                     	;# 
   433  0393                     	;# 
   434  039A                     	;# 
   435  039C                     	;# 
   436  039D                     	;# 
   437  039E                     	;# 
   438  039F                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0095                     	;# 
   480  0096                     	;# 
   481  0097                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009A                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  010C                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  011A                     	;# 
   499  011B                     	;# 
   500  011D                     	;# 
   501  011D                     	;# 
   502  018C                     	;# 
   503  0191                     	;# 
   504  0191                     	;# 
   505  0192                     	;# 
   506  0193                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0194                     	;# 
   510  0195                     	;# 
   511  0196                     	;# 
   512  0197                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  020C                     	;# 
   525  0211                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0212                     	;# 
   529  0213                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0214                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0216                     	;# 
   537  0216                     	;# 
   538  0217                     	;# 
   539  0217                     	;# 
   540  0291                     	;# 
   541  0291                     	;# 
   542  0292                     	;# 
   543  0293                     	;# 
   544  0294                     	;# 
   545  0295                     	;# 
   546  0295                     	;# 
   547  0296                     	;# 
   548  0391                     	;# 
   549  0392                     	;# 
   550  0393                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  008C                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  010C                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  011A                     	;# 
   616  011B                     	;# 
   617  011D                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  020C                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0391                     	;# 
   666  0392                     	;# 
   667  0393                     	;# 
   668  039A                     	;# 
   669  039C                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0FE4                     	;# 
   674  0FE5                     	;# 
   675  0FE6                     	;# 
   676  0FE7                     	;# 
   677  0FE8                     	;# 
   678  0FE9                     	;# 
   679  0FEA                     	;# 
   680  0FEB                     	;# 
   681  0FED                     	;# 
   682  0FEE                     	;# 
   683  0FEF                     	;# 
   684                           
   685                           	psect	stringtext
   686  0600                     __pstringtext:	
   687  0600                     _dpowers:	
   688  0600  3401               	retlw	1
   689  0601  3400               	retlw	0
   690  0602  340A               	retlw	10
   691  0603  3400               	retlw	0
   692  0604  3464               	retlw	100
   693  0605  3400               	retlw	0
   694  0606  34E8               	retlw	232
   695  0607  3403               	retlw	3
   696  0608  3410               	retlw	16
   697  0609  3427               	retlw	39
   698  060A                     __end_of_dpowers:	
   699  000B                     _INTCONbits	set	11
   700  0011                     _PIR1bits	set	17
   701  0018                     _T1CONbits	set	24
   702  0017                     _TMR1H	set	23
   703  0016                     _TMR1L	set	22
   704  0099                     _OSCCONbits	set	153
   705  0091                     _PIE1bits	set	145
   706  008C                     _TRISAbits	set	140
   707  018C                     _ANSELAbits	set	396
   708  0216                     _SSP1CON2	set	534
   709  0216                     _SSP1CON2bits	set	534
   710  0212                     _SSPADD	set	530
   711  0211                     _SSPBUF	set	529
   712  0215                     _SSPCON1	set	533
   713  0216                     _SSPCON2	set	534
   714  0214                     _SSPSTATbits	set	532
   715  060A                     __stringdata:	
   716  060A                     STR_5:	
   717  060A  3425               	retlw	37	;'%'
   718  060B  342E               	retlw	46	;'.'
   719  060C  3432               	retlw	50	;'2'
   720  060D  3475               	retlw	117	;'u'
   721  060E  343A               	retlw	58	;':'
   722  060F  3425               	retlw	37	;'%'
   723  0610  342E               	retlw	46	;'.'
   724  0611  3432               	retlw	50	;'2'
   725  0612  3475               	retlw	117	;'u'
   726  0613  343A               	retlw	58	;':'
   727  0614  3425               	retlw	37	;'%'
   728  0615  342E               	retlw	46	;'.'
   729  0616  3432               	retlw	50	;'2'
   730  0617  3475               	retlw	117	;'u'
   731  0618  3420               	retlw	32	;' '
   732  0619  3400               	retlw	0
   733  061A                     STR_6:	
   734  061A  3425               	retlw	37	;'%'
   735  061B  342E               	retlw	46	;'.'
   736  061C  3432               	retlw	50	;'2'
   737  061D  3475               	retlw	117	;'u'
   738  061E  342F               	retlw	47	;'/'
   739  061F  3425               	retlw	37	;'%'
   740  0620  342E               	retlw	46	;'.'
   741  0621  3432               	retlw	50	;'2'
   742  0622  3475               	retlw	117	;'u'
   743  0623  342F               	retlw	47	;'/'
   744  0624  3425               	retlw	37	;'%'
   745  0625  342E               	retlw	46	;'.'
   746  0626  3432               	retlw	50	;'2'
   747  0627  3475               	retlw	117	;'u'
   748  0628  3400               	retlw	0
   749  0629                     STR_4:	
   750  0629  3425               	retlw	37	;'%'
   751  062A  342E               	retlw	46	;'.'
   752  062B  3432               	retlw	50	;'2'
   753  062C  3475               	retlw	117	;'u'
   754  062D  343A               	retlw	58	;':'
   755  062E  3425               	retlw	37	;'%'
   756  062F  342E               	retlw	46	;'.'
   757  0630  3432               	retlw	50	;'2'
   758  0631  3475               	retlw	117	;'u'
   759  0632  343A               	retlw	58	;':'
   760  0633  3425               	retlw	37	;'%'
   761  0634  342E               	retlw	46	;'.'
   762  0635  3432               	retlw	50	;'2'
   763  0636  3475               	retlw	117	;'u'
   764  0637  3400               	retlw	0
   765  0638                     STR_1:	
   766  0638  3454               	retlw	84	;'T'
   767  0639  3469               	retlw	105	;'i'
   768  063A  346D               	retlw	109	;'m'
   769  063B  3465               	retlw	101	;'e'
   770  063C  343A               	retlw	58	;':'
   771  063D  3420               	retlw	32	;' '
   772  063E  3400               	retlw	0
   773  063F                     STR_2:	
   774  063F  3444               	retlw	68	;'D'
   775  0640  3461               	retlw	97	;'a'
   776  0641  3474               	retlw	116	;'t'
   777  0642  3465               	retlw	101	;'e'
   778  0643  343A               	retlw	58	;':'
   779  0644  3420               	retlw	32	;' '
   780  0645  3400               	retlw	0
   781  0646                     STR_3:	
   782  0646  3425               	retlw	37	;'%'
   783  0647  3475               	retlw	117	;'u'
   784  0648  3400               	retlw	0
   785  0649                     __end_of__stringdata:	
   786                           
   787                           ; #config settings
   788  0000                     
   789                           	psect	cinit
   790  00D6                     start_initialization:	
   791  00D6                     __initialization:	
   792                           
   793                           ; Clear objects allocated to BANK0
   794  00D6  01D5               	clrf	__pbssBANK0& (0+127)
   795  00D7  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   796  00D8  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   797  00D9  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   798  00DA  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   799                           
   800                           ; Clear objects allocated to BANK1
   801  00DB  30B7               	movlw	low __pbssBANK1
   802  00DC  0084               	movwf	4
   803  00DD  3000               	movlw	high __pbssBANK1
   804  00DE  0085               	movwf	5
   805  00DF  3013               	movlw	19
   806  00E0  318C  2411         	fcall	clear_ram0
   807  00E2                     end_of_initialization:	
   808                           ;End of C runtime variable initialization code
   809                           
   810  00E2                     __end_of__initialization:	
   811  00E2  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   812  00E3  0020               	movlb	0
   813  00E4  318F  2F7C         	ljmp	_main	;jump to C main() function
   814                           
   815                           	psect	bssBANK0
   816  0055                     __pbssBANK0:	
   817  0055                     _g_bl:	
   818  0055                     	ds	1
   819  0056                     _g_clk_pos:	
   820  0056                     	ds	1
   821  0057                     _g_counter1:	
   822  0057                     	ds	1
   823  0058                     _g_last_valid_key:	
   824  0058                     	ds	1
   825  0059                     _g_old_key:	
   826  0059                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829  00B7                     __pbssBANK1:	
   830  00B7                     _g_reg_data:	
   831  00B7                     	ds	7
   832  00BE                     _display_config:	
   833  00BE                     	ds	6
   834  00C4                     _g_reload_value:	
   835  00C4                     	ds	2
   836  00C6                     _LCDPort:	
   837  00C6                     	ds	1
   838  00C7                     _g_reg_ctrl:	
   839  00C7                     	ds	1
   840  00C8                     _g_slave_addr_7b:	
   841  00C8                     	ds	1
   842  00C9                     _g_slave_address_7b:	
   843  00C9                     	ds	1
   844                           
   845                           	psect	clrtext
   846  0C11                     clear_ram0:	
   847                           ;	Called with FSR0 containing the base address, and
   848                           ;	WREG with the size to clear
   849                           
   850  0C11  0064               	clrwdt	;clear the watchdog before getting into this loop
   851  0C12                     clrloop0:	
   852  0C12  0180               	clrf	0	;clear RAM location pointed to by FSR
   853  0C13  3101               	addfsr 0,1
   854  0C14  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   855  0C15  2C12               	goto	clrloop0	;have we reached the end yet?
   856  0C16  3400               	retlw	0	;all done for this memory range, return
   857                           
   858                           	psect	cstackBANK1
   859  00A0                     __pcstackBANK1:	
   860  00A0                     ??_mcp23017_set_slave_addr:	
   861  00A0                     ?_write_t1:	
   862                           ; 0 bytes @ 0x0
   863                           
   864  00A0                     ??_i2c_wait:	
   865                           ; 0 bytes @ 0x0
   866                           
   867  00A0                     ??_i2c_start:	
   868                           ; 0 bytes @ 0x0
   869                           
   870  00A0                     ??_i2c_restart:	
   871                           ; 0 bytes @ 0x0
   872                           
   873  00A0                     ??_i2c_stop:	
   874                           ; 0 bytes @ 0x0
   875                           
   876  00A0                     ??_i2c_send_ack:	
   877                           ; 0 bytes @ 0x0
   878                           
   879  00A0                     ?_i2c_send_address:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  00A0                     ??_i2c_send_data:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  00A0                     ??_i2c_read_data:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  00A0                     ?___lldiv:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  00A0                     i2c_send_ack@ack:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  00A0                     i2c_send_address@mode:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  00A0                     i2c_send_data@data:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  00A0                     write_t1@value:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  00A0                     ___lldiv@divisor:	
   904                           ; 2 bytes @ 0x0
   905                           
   906                           
   907                           ; 4 bytes @ 0x0
   908  00A0                     	ds	1
   909  00A1                     ??_i2c_send_address:	
   910  00A1                     i2c_read_data@read_data:	
   911                           ; 0 bytes @ 0x1
   912                           
   913  00A1                     mcp23017_set_slave_addr@address_3b:	
   914                           ; 1 bytes @ 0x1
   915                           
   916                           
   917                           ; 1 bytes @ 0x1
   918  00A1                     	ds	1
   919  00A2                     ?_init:	
   920  00A2                     ??_write_t1:	
   921                           ; 0 bytes @ 0x2
   922                           
   923  00A2                     ??_mcp23017_init:	
   924                           ; 0 bytes @ 0x2
   925                           
   926  00A2                     i2c_send_address@address:	
   927                           ; 0 bytes @ 0x2
   928                           
   929  00A2                     mcp23017_init@address_3b:	
   930                           ; 1 bytes @ 0x2
   931                           
   932  00A2                     init@load_value:	
   933                           ; 1 bytes @ 0x2
   934                           
   935                           
   936                           ; 2 bytes @ 0x2
   937  00A2                     	ds	1
   938  00A3                     ??_ds1307_get_clock:	
   939  00A3                     ?_mcp23017_write_reg:	
   940                           ; 0 bytes @ 0x3
   941                           
   942  00A3                     mcp23017_write_reg@value:	
   943                           ; 0 bytes @ 0x3
   944                           
   945                           
   946                           ; 1 bytes @ 0x3
   947  00A3                     	ds	1
   948  00A4                     ??_mcp23017_write_reg:	
   949  00A4                     mcp23017_write_reg@reg_address:	
   950                           ; 0 bytes @ 0x4
   951                           
   952  00A4                     init@prescaler:	
   953                           ; 1 bytes @ 0x4
   954                           
   955  00A4                     ds1307_get_clock@r:	
   956                           ; 1 bytes @ 0x4
   957                           
   958  00A4                     ___lldiv@dividend:	
   959                           ; 1 bytes @ 0x4
   960                           
   961                           
   962                           ; 4 bytes @ 0x4
   963  00A4                     	ds	1
   964  00A5                     ??_keypad_init:	
   965  00A5                     ??_ds1307_init:	
   966                           ; 0 bytes @ 0x5
   967                           
   968  00A5                     ??_init:	
   969                           ; 0 bytes @ 0x5
   970                           
   971  00A5                     ??_mcp23017_ioa_send_byte:	
   972                           ; 0 bytes @ 0x5
   973                           
   974                           
   975                           ; 0 bytes @ 0x5
   976  00A5                     	ds	1
   977  00A6                     ??_lcd_backlight:	
   978  00A6                     ??__send_nibble:	
   979                           ; 0 bytes @ 0x6
   980                           
   981  00A6                     lcd_backlight@state:	
   982                           ; 0 bytes @ 0x6
   983                           
   984                           
   985                           ; 1 bytes @ 0x6
   986  00A6                     	ds	2
   987  00A8                     ??___lldiv:	
   988  00A8                     __send_nibble@data:	
   989                           ; 0 bytes @ 0x8
   990                           
   991                           
   992                           ; 1 bytes @ 0x8
   993  00A8                     	ds	1
   994  00A9                     ??__send_byte:	
   995  00A9                     ??__set_4bit_interface:	
   996                           ; 0 bytes @ 0x9
   997                           
   998  00A9                     ___lldiv@quotient:	
   999                           ; 0 bytes @ 0x9
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x9
  1003  00A9                     	ds	1
  1004  00AA                     __send_byte@data:	
  1005                           
  1006                           ; 1 bytes @ 0xA
  1007  00AA                     	ds	1
  1008  00AB                     ??_lcd_command:	
  1009                           
  1010                           ; 0 bytes @ 0xB
  1011  00AB                     	ds	1
  1012  00AC                     lcd_command@command:	
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  00AC                     	ds	1
  1016  00AD                     ?_lcd_flags_set:	
  1017  00AD                     lcd_flags_set@flags:	
  1018                           ; 0 bytes @ 0xD
  1019                           
  1020  00AD                     ___lldiv@counter:	
  1021                           ; 1 bytes @ 0xD
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0xD
  1025  00AD                     	ds	1
  1026  00AE                     ?_i2c_init:	
  1027  00AE                     lcd_flags_set@value:	
  1028                           ; 0 bytes @ 0xE
  1029                           
  1030  00AE                     i2c_init@clock_hz:	
  1031                           ; 1 bytes @ 0xE
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0xE
  1035  00AE                     	ds	1
  1036  00AF                     ??_lcd_flags_set:	
  1037                           
  1038                           ; 0 bytes @ 0xF
  1039  00AF                     	ds	1
  1040  00B0                     lcd_flags_set@instruction:	
  1041                           
  1042                           ; 1 bytes @ 0x10
  1043  00B0                     	ds	1
  1044  00B1                     lcd_flags_set@index:	
  1045                           
  1046                           ; 1 bytes @ 0x11
  1047  00B1                     	ds	1
  1048  00B2                     ??_lcd_initialize:	
  1049  00B2                     ??_i2c_init:	
  1050                           ; 0 bytes @ 0x12
  1051                           
  1052                           
  1053                           ; 0 bytes @ 0x12
  1054  00B2                     	ds	2
  1055  00B4                     lcd_initialize@i:	
  1056                           
  1057                           ; 1 bytes @ 0x14
  1058  00B4                     	ds	2
  1059  00B6                     ??_main:	
  1060                           
  1061                           ; 0 bytes @ 0x16
  1062  00B6                     	ds	1
  1063                           
  1064                           	psect	cstackCOMMON
  1065  0070                     __pcstackCOMMON:	
  1066  0070                     ?_mcp23017_set_slave_addr:	
  1067  0070                     ?_keypad_init:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0070                     ?_ds1307_init:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0070                     ?_lcd_initialize:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0070                     ?_ds1307_stop_clock:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_ds1307_get_clock:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ??_ds1307_is_12hr_mode:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ?_ds1307_set_pm_am:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ??_ds1307_set_pm_am:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?_ds1307_set_hours:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_ds1307_set_minutes:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_ds1307_set_seconds:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?_ds1307_set_month:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ?_ds1307_set_day_of_month:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?_ds1307_set_year:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_ds1307_switch_to_24hr:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_ds1307_switch_to_12hr:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_ds1307_set_clock:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_ds1307_time_formatted:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_ds1307_date_formatted:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_lcd_backlight:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_lcd_data:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_lcd_command:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_isdigit:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ??_isdigit:	
  1137                           ; 1 bit 
  1138                           
  1139  0070                     ?_i2c_wait:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_i2c_start:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ?_i2c_restart:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_i2c_stop:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_i2c_send_ack:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_i2c_send_data:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_mcp23017_init:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_main:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_update_clock:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_tmr_isr:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_ds1307_start_clock:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_ds1307_set_hr_mode:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ??_ds1307_set_hr_mode:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_mcp23017_ioa_send_byte:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0070                     ?__send_nibble:	
  1182                           ; 0 bytes @ 0x0
  1183                           
  1184  0070                     ?__send_byte:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?__set_4bit_interface:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?i1_i2c_wait:	
  1191                           ; 0 bytes @ 0x0
  1192                           
  1193  0070                     ??i1_i2c_wait:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?i1_i2c_start:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ??i1_i2c_start:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?i1_i2c_restart:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ??i1_i2c_restart:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?i1_i2c_stop:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ??i1_i2c_stop:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?i1_i2c_send_ack:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ??i1_i2c_send_ack:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0070                     ?i1_i2c_send_address:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0070                     ?i1_i2c_send_data:	
  1224                           ; 0 bytes @ 0x0
  1225                           
  1226  0070                     ??i1_i2c_send_data:	
  1227                           ; 0 bytes @ 0x0
  1228                           
  1229  0070                     ??i1_i2c_read_data:	
  1230                           ; 0 bytes @ 0x0
  1231                           
  1232  0070                     ?i1_write_t1:	
  1233                           ; 0 bytes @ 0x0
  1234                           
  1235  0070                     ?i1_ds1307_get_clock:	
  1236                           ; 0 bytes @ 0x0
  1237                           
  1238  0070                     ?i1_mcp23017_ioa_send_byte:	
  1239                           ; 0 bytes @ 0x0
  1240                           
  1241  0070                     ?i1__send_nibble:	
  1242                           ; 0 bytes @ 0x0
  1243                           
  1244  0070                     ?i1__send_byte:	
  1245                           ; 0 bytes @ 0x0
  1246                           
  1247  0070                     ?i1_lcd_command:	
  1248                           ; 0 bytes @ 0x0
  1249                           
  1250  0070                     ?i1_lcd_backlight:	
  1251                           ; 0 bytes @ 0x0
  1252                           
  1253  0070                     ?_ds1307_is_12hr_mode:	
  1254                           ; 0 bytes @ 0x0
  1255                           
  1256  0070                     ?_ds1307_get_hours:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_ds1307_is_pm:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_ds1307_get_minutes:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_ds1307_get_seconds:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_ds1307_get_month:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_ds1307_get_day_of_month:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_ds1307_get_year:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_keypad_read_key:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_i2c_read_data:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_mcp23017_read_reg:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_adjust_val:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_dec_to_bcd:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_bcd_to_dec:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_ds1307_read_addr:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_keypad_scan:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?___bmul:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?i1_i2c_read_data:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?___awdiv:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?___awmod:	
  1311                           ; 2 bytes @ 0x0
  1312                           
  1313  0070                     ?___lwdiv:	
  1314                           ; 2 bytes @ 0x0
  1315                           
  1316  0070                     adjust_val@lim_dwn:	
  1317                           ; 2 bytes @ 0x0
  1318                           
  1319  0070                     ___bmul@multiplicand:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     _isdigit$1061:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     i1i2c_send_ack@ack:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     i1i2c_send_address@mode:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     i1i2c_send_data@data:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ___awdiv@divisor:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ___awmod@divisor:	
  1338                           ; 2 bytes @ 0x0
  1339                           
  1340  0070                     ___lwdiv@divisor:	
  1341                           ; 2 bytes @ 0x0
  1342                           
  1343  0070                     i1write_t1@value:	
  1344                           ; 2 bytes @ 0x0
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x0
  1348  0070                     	ds	1
  1349  0071                     ??___bmul:	
  1350  0071                     ??i1_i2c_send_address:	
  1351                           ; 0 bytes @ 0x1
  1352                           
  1353  0071                     adjust_val@lim_up:	
  1354                           ; 0 bytes @ 0x1
  1355                           
  1356  0071                     ds1307_set_pm_am@pm_am:	
  1357                           ; 1 bytes @ 0x1
  1358                           
  1359  0071                     ds1307_set_hr_mode@mode:	
  1360                           ; 1 bytes @ 0x1
  1361                           
  1362  0071                     isdigit@c:	
  1363                           ; 1 bytes @ 0x1
  1364                           
  1365  0071                     i1i2c_read_data@read_data:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x1
  1370  0071                     	ds	1
  1371  0072                     ??i1_write_t1:	
  1372  0072                     adjust_val@up_down:	
  1373                           ; 0 bytes @ 0x2
  1374                           
  1375  0072                     ___bmul@product:	
  1376                           ; 1 bytes @ 0x2
  1377                           
  1378  0072                     i1i2c_send_address@address:	
  1379                           ; 1 bytes @ 0x2
  1380                           
  1381  0072                     ___awdiv@dividend:	
  1382                           ; 1 bytes @ 0x2
  1383                           
  1384  0072                     ___awmod@dividend:	
  1385                           ; 2 bytes @ 0x2
  1386                           
  1387  0072                     ___lwdiv@dividend:	
  1388                           ; 2 bytes @ 0x2
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0x2
  1392  0072                     	ds	1
  1393  0073                     ??_mcp23017_read_reg:	
  1394  0073                     ??_adjust_val:	
  1395                           ; 0 bytes @ 0x3
  1396                           
  1397  0073                     ??_ds1307_read_addr:	
  1398                           ; 0 bytes @ 0x3
  1399                           
  1400  0073                     ?_ds1307_write_addr:	
  1401                           ; 0 bytes @ 0x3
  1402                           
  1403  0073                     ?i1_mcp23017_write_reg:	
  1404                           ; 0 bytes @ 0x3
  1405                           
  1406  0073                     ??i1_ds1307_get_clock:	
  1407                           ; 0 bytes @ 0x3
  1408                           
  1409  0073                     ds1307_write_addr@value:	
  1410                           ; 0 bytes @ 0x3
  1411                           
  1412  0073                     ___bmul@multiplier:	
  1413                           ; 1 bytes @ 0x3
  1414                           
  1415  0073                     i1mcp23017_write_reg@value:	
  1416                           ; 1 bytes @ 0x3
  1417                           
  1418                           
  1419                           ; 1 bytes @ 0x3
  1420  0073                     	ds	1
  1421  0074                     ??_bcd_to_dec:	
  1422  0074                     ??_ds1307_write_addr:	
  1423                           ; 0 bytes @ 0x4
  1424                           
  1425  0074                     ??___awdiv:	
  1426                           ; 0 bytes @ 0x4
  1427                           
  1428  0074                     ??___awmod:	
  1429                           ; 0 bytes @ 0x4
  1430                           
  1431  0074                     ??___lwdiv:	
  1432                           ; 0 bytes @ 0x4
  1433                           
  1434  0074                     ??i1_mcp23017_write_reg:	
  1435                           ; 0 bytes @ 0x4
  1436                           
  1437  0074                     mcp23017_read_reg@reg_address:	
  1438                           ; 0 bytes @ 0x4
  1439                           
  1440  0074                     adjust_val@value:	
  1441                           ; 1 bytes @ 0x4
  1442                           
  1443  0074                     ds1307_read_addr@addr:	
  1444                           ; 1 bytes @ 0x4
  1445                           
  1446  0074                     ds1307_write_addr@addr:	
  1447                           ; 1 bytes @ 0x4
  1448                           
  1449  0074                     i1mcp23017_write_reg@reg_address:	
  1450                           ; 1 bytes @ 0x4
  1451                           
  1452  0074                     i1ds1307_get_clock@r:	
  1453                           ; 1 bytes @ 0x4
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x4
  1457  0074                     	ds	1
  1458  0075                     ??i1_mcp23017_ioa_send_byte:	
  1459  0075                     mcp23017_read_reg@value:	
  1460                           ; 0 bytes @ 0x5
  1461                           
  1462  0075                     ds1307_read_addr@read_value:	
  1463                           ; 1 bytes @ 0x5
  1464                           
  1465  0075                     ___awdiv@counter:	
  1466                           ; 1 bytes @ 0x5
  1467                           
  1468  0075                     ___awmod@counter:	
  1469                           ; 1 bytes @ 0x5
  1470                           
  1471  0075                     ___lwdiv@quotient:	
  1472                           ; 1 bytes @ 0x5
  1473                           
  1474                           
  1475                           ; 2 bytes @ 0x5
  1476  0075                     	ds	1
  1477  0076                     ??_ds1307_stop_clock:	
  1478  0076                     ??_keypad_read_key:	
  1479                           ; 0 bytes @ 0x6
  1480                           
  1481  0076                     ??_ds1307_start_clock:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0076                     ??_keypad_scan:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0076                     ??i1__send_nibble:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0076                     ??i1_lcd_backlight:	
  1491                           ; 0 bytes @ 0x6
  1492                           
  1493  0076                     ___awdiv@sign:	
  1494                           ; 0 bytes @ 0x6
  1495                           
  1496  0076                     ___awmod@sign:	
  1497                           ; 1 bytes @ 0x6
  1498                           
  1499  0076                     i1lcd_backlight@state:	
  1500                           ; 1 bytes @ 0x6
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x6
  1504  0076                     	ds	1
  1505  0077                     bcd_to_dec@bcd:	
  1506  0077                     ds1307_stop_clock@tsec:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509  0077                     ds1307_start_clock@tsec:	
  1510                           ; 1 bytes @ 0x7
  1511                           
  1512  0077                     keypad_read_key@key:	
  1513                           ; 1 bytes @ 0x7
  1514                           
  1515  0077                     ___lwdiv@counter:	
  1516                           ; 1 bytes @ 0x7
  1517                           
  1518  0077                     ___awdiv@quotient:	
  1519                           ; 1 bytes @ 0x7
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x7
  1523  0077                     	ds	1
  1524  0078                     ??_ds1307_get_hours:	
  1525  0078                     ??_ds1307_get_minutes:	
  1526                           ; 0 bytes @ 0x8
  1527                           
  1528  0078                     ??_ds1307_get_seconds:	
  1529                           ; 0 bytes @ 0x8
  1530                           
  1531  0078                     ??_ds1307_get_month:	
  1532                           ; 0 bytes @ 0x8
  1533                           
  1534  0078                     ??_ds1307_get_day_of_month:	
  1535                           ; 0 bytes @ 0x8
  1536                           
  1537  0078                     ??_ds1307_get_year:	
  1538                           ; 0 bytes @ 0x8
  1539                           
  1540  0078                     ??_ds1307_set_clock:	
  1541                           ; 0 bytes @ 0x8
  1542                           
  1543  0078                     ?___lwmod:	
  1544                           ; 0 bytes @ 0x8
  1545                           
  1546  0078                     i1__send_nibble@data:	
  1547                           ; 2 bytes @ 0x8
  1548                           
  1549  0078                     ___lwmod@divisor:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x8
  1554  0078                     	ds	1
  1555  0079                     ??i1__send_byte:	
  1556  0079                     dec_to_bcd@dec:	
  1557                           ; 0 bytes @ 0x9
  1558                           
  1559  0079                     ds1307_set_clock@r:	
  1560                           ; 1 bytes @ 0x9
  1561                           
  1562  0079                     ds1307_get_hours@hours:	
  1563                           ; 1 bytes @ 0x9
  1564                           
  1565                           
  1566                           ; 1 bytes @ 0x9
  1567  0079                     	ds	1
  1568  007A                     ??_ds1307_is_pm:	
  1569  007A                     ??_ds1307_set_hours:	
  1570                           ; 0 bytes @ 0xA
  1571                           
  1572  007A                     ??_ds1307_set_minutes:	
  1573                           ; 0 bytes @ 0xA
  1574                           
  1575  007A                     ??_ds1307_set_seconds:	
  1576                           ; 0 bytes @ 0xA
  1577                           
  1578  007A                     ??_ds1307_set_month:	
  1579                           ; 0 bytes @ 0xA
  1580                           
  1581  007A                     ??_ds1307_set_day_of_month:	
  1582                           ; 0 bytes @ 0xA
  1583                           
  1584  007A                     ??_ds1307_set_year:	
  1585                           ; 0 bytes @ 0xA
  1586                           
  1587  007A                     i1__send_byte@data:	
  1588                           ; 0 bytes @ 0xA
  1589                           
  1590  007A                     ___lwmod@dividend:	
  1591                           ; 1 bytes @ 0xA
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0xA
  1595  007A                     	ds	1
  1596  007B                     ??_lcd_data:	
  1597  007B                     ??i1_lcd_command:	
  1598                           ; 0 bytes @ 0xB
  1599                           
  1600  007B                     ds1307_set_minutes@min:	
  1601                           ; 0 bytes @ 0xB
  1602                           
  1603  007B                     ds1307_set_day_of_month@dom:	
  1604                           ; 1 bytes @ 0xB
  1605                           
  1606  007B                     ds1307_set_month@month:	
  1607                           ; 1 bytes @ 0xB
  1608                           
  1609  007B                     ds1307_set_year@year:	
  1610                           ; 1 bytes @ 0xB
  1611                           
  1612                           
  1613                           ; 1 bytes @ 0xB
  1614  007B                     	ds	1
  1615  007C                     ??___lwmod:	
  1616  007C                     ds1307_set_seconds@sec:	
  1617                           ; 0 bytes @ 0xC
  1618                           
  1619  007C                     ds1307_set_hours@hours:	
  1620                           ; 1 bytes @ 0xC
  1621                           
  1622  007C                     ds1307_is_pm@is_pm:	
  1623                           ; 1 bytes @ 0xC
  1624                           
  1625  007C                     lcd_data@data:	
  1626                           ; 1 bytes @ 0xC
  1627                           
  1628  007C                     i1lcd_command@command:	
  1629                           ; 1 bytes @ 0xC
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0xC
  1633  007C                     	ds	1
  1634  007D                     ??_ds1307_switch_to_24hr:	
  1635  007D                     ??_ds1307_switch_to_12hr:	
  1636                           ; 0 bytes @ 0xD
  1637                           
  1638  007D                     ?_lcd_goto:	
  1639                           ; 0 bytes @ 0xD
  1640                           
  1641  007D                     lcd_write@i:	
  1642                           ; 0 bytes @ 0xD
  1643                           
  1644  007D                     lcd_goto@col:	
  1645                           ; 1 bytes @ 0xD
  1646                           
  1647  007D                     ___lwmod@counter:	
  1648                           ; 1 bytes @ 0xD
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0xD
  1652  007D                     	ds	1
  1653                           
  1654                           	psect	cstackBANK0
  1655  0020                     __pcstackBANK0:	
  1656  0020                     ??_lcd_goto:	
  1657  0020                     ?_lcd_write:	
  1658                           ; 0 bytes @ 0x0
  1659                           
  1660  0020                     ??_dec_to_bcd:	
  1661                           ; 0 bytes @ 0x0
  1662                           
  1663  0020                     ?_sprintf:	
  1664                           ; 0 bytes @ 0x0
  1665                           
  1666  0020                     lcd_write@str:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     sprintf@f:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x0
  1674  0020                     	ds	1
  1675  0021                     lcd_goto@row:	
  1676                           
  1677                           ; 1 bytes @ 0x1
  1678  0021                     	ds	1
  1679  0022                     ??_lcd_write:	
  1680  0022                     lcd_goto@addr:	
  1681                           ; 0 bytes @ 0x2
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x2
  1685  0022                     	ds	5
  1686  0027                     ds1307_switch_to_12hr@pm_am:	
  1687  0027                     ds1307_switch_to_24hr@pm_am:	
  1688                           ; 1 bytes @ 0x7
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x7
  1692  0027                     	ds	1
  1693  0028                     ??_sprintf:	
  1694  0028                     ds1307_switch_to_12hr@hrs:	
  1695                           ; 0 bytes @ 0x8
  1696                           
  1697  0028                     ds1307_switch_to_24hr@hrs:	
  1698                           ; 1 bytes @ 0x8
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x8
  1702  0028                     	ds	1
  1703  0029                     ??_update_clock:	
  1704                           
  1705                           ; 0 bytes @ 0x9
  1706  0029                     	ds	3
  1707  002C                     update_clock@pm:	
  1708  002C                     sprintf@flag:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711                           
  1712                           ; 1 bytes @ 0xC
  1713  002C                     	ds	1
  1714  002D                     update_clock@up_down:	
  1715  002D                     sprintf@ap:	
  1716                           ; 1 bytes @ 0xD
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0xD
  1720  002D                     	ds	1
  1721  002E                     update_clock@val:	
  1722  002E                     sprintf@_val:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0xE
  1727  002E                     	ds	4
  1728  0032                     sprintf@sp:	
  1729                           
  1730                           ; 1 bytes @ 0x12
  1731  0032                     	ds	1
  1732  0033                     sprintf@prec:	
  1733                           
  1734                           ; 1 bytes @ 0x13
  1735  0033                     	ds	1
  1736  0034                     sprintf@c:	
  1737                           
  1738                           ; 1 bytes @ 0x14
  1739  0034                     	ds	1
  1740  0035                     ??_ds1307_time_formatted:	
  1741  0035                     ??_ds1307_date_formatted:	
  1742                           ; 0 bytes @ 0x15
  1743                           
  1744                           
  1745                           ; 0 bytes @ 0x15
  1746  0035                     	ds	6
  1747  003B                     ds1307_time_formatted@p_str_time:	
  1748  003B                     ds1307_date_formatted@p_str_date:	
  1749                           ; 1 bytes @ 0x1B
  1750                           
  1751                           
  1752                           ; 1 bytes @ 0x1B
  1753  003B                     	ds	1
  1754  003C                     ??_tmr_isr:	
  1755                           
  1756                           ; 0 bytes @ 0x1C
  1757  003C                     	ds	3
  1758  003F                     tmr_isr@date:	
  1759                           
  1760                           ; 10 bytes @ 0x1F
  1761  003F                     	ds	10
  1762  0049                     tmr_isr@time:	
  1763                           
  1764                           ; 10 bytes @ 0x29
  1765  0049                     	ds	10
  1766  0053                     tmr_isr@pos:	
  1767                           
  1768                           ; 2 bytes @ 0x33
  1769  0053                     	ds	2
  1770                           
  1771                           	psect	maintext
  1772  0F7C                     __pmaintext:	
  1773 ;;
  1774 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1775 ;;
  1776 ;; *************** function _main *****************
  1777 ;; Defined at:
  1778 ;;		line 80 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 17F/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1792 ;;      Params:         0       0       0       0
  1793 ;;      Locals:         0       0       0       0
  1794 ;;      Temps:          0       0       1       0
  1795 ;;      Totals:         0       0       1       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels required when called:   18
  1798 ;; This function calls:
  1799 ;;		_ds1307_init
  1800 ;;		_i2c_init
  1801 ;;		_init
  1802 ;;		_keypad_init
  1803 ;;		_lcd_initialize
  1804 ;;		_mcp23017_init
  1805 ;; This function is called by:
  1806 ;;		Startup code after reset
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _main
  1812  0F7C                     _main:	
  1813                           
  1814                           ;main.c: 81: OSCCONbits.IRCF = 0b1110; OSCCONbits.SPLLEN = 1;
  1815                           
  1816                           ;incstack = 0
  1817 ;; hardware stack exceeded
  1818                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1819  0F7C  0021               	movlb	1	; select bank1
  1820  0F7D  0819               	movf	25,w	;volatile
  1821  0F7E  3987               	andlw	-121
  1822  0F7F  3870               	iorlw	112
  1823  0F80  0099               	movwf	25	;volatile
  1824  0F81  1799               	bsf	25,7	;volatile
  1825                           
  1826                           ;main.c: 83: i2c_init(100000);
  1827  0F82  3000               	movlw	0
  1828  0F83  00B1               	movwf	(i2c_init@clock_hz+3)^(0+128)
  1829  0F84  3001               	movlw	1
  1830  0F85  00B0               	movwf	(i2c_init@clock_hz+2)^(0+128)
  1831  0F86  3086               	movlw	134
  1832  0F87  00AF               	movwf	(i2c_init@clock_hz+1)^(0+128)
  1833  0F88  30A0               	movlw	160
  1834  0F89  00AE               	movwf	i2c_init@clock_hz^(0+128)
  1835  0F8A  3184  24CF  318F   	fcall	_i2c_init
  1836                           
  1837                           ;main.c: 84: mcp23017_init(0b000);
  1838  0F8D  3000               	movlw	0
  1839  0F8E  318C  240B  318F   	fcall	_mcp23017_init
  1840                           
  1841                           ;main.c: 85: keypad_init();
  1842  0F91  318E  265E  318F   	fcall	_keypad_init
  1843                           
  1844                           ;main.c: 87: ds1307_init();
  1845  0F94  318B  23C6  318F   	fcall	_ds1307_init
  1846                           
  1847                           ;main.c: 88: lcd_initialize();
  1848  0F97  3183  232A  318F   	fcall	_lcd_initialize
  1849                           
  1850                           ;main.c: 89: init(50000, 3);
  1851  0F9A  3050               	movlw	80
  1852  0F9B  0021               	movlb	1	; select bank1
  1853  0F9C  00A2               	movwf	init@load_value^(0+128)
  1854  0F9D  30C3               	movlw	195
  1855  0F9E  00A3               	movwf	(init@load_value^(0+128)+1)
  1856  0F9F  3003               	movlw	3
  1857  0FA0  00B6               	movwf	??_main^(0+128)
  1858  0FA1  0836               	movf	??_main^(0+128),w
  1859  0FA2  00A4               	movwf	init@prescaler^(0+128)
  1860  0FA3  3187  278B  318F   	fcall	_init
  1861  0FA6                     l174:	
  1862                           ;main.c: 91: for (;;) {
  1863                           
  1864                           
  1865                           ;main.c: 92: ;
  1866                           ;main.c: 93: }
  1867  0FA6  2FA6               	goto	l174
  1868  0FA7                     __end_of_main:	
  1869                           
  1870                           	psect	text1
  1871  0C0B                     __ptext1:	
  1872 ;; *************** function _mcp23017_init *****************
  1873 ;; Defined at:
  1874 ;;		line 50 in file "mcp23017.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  address_3b      1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  address_3b      1    2[BANK1 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1888 ;;      Params:         0       0       0       0
  1889 ;;      Locals:         0       0       1       0
  1890 ;;      Temps:          0       0       0       0
  1891 ;;      Totals:         0       0       1       0
  1892 ;;Total ram usage:        1 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:   10
  1895 ;; This function calls:
  1896 ;;		_mcp23017_set_slave_addr
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _mcp23017_init
  1904  0C0B                     _mcp23017_init:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _mcp23017_init: [wreg+status,2+status,0+pclath+cstack]
  1908                           ;mcp23017_init@address_3b stored from wreg
  1909  0C0B  0021               	movlb	1	; select bank1
  1910  0C0C  00A2               	movwf	mcp23017_init@address_3b^(0+128)
  1911                           
  1912                           ;mcp23017.c: 52: mcp23017_set_slave_addr(address_3b);
  1913  0C0D  0822               	movf	mcp23017_init@address_3b^(0+128),w
  1914  0C0E  318C  2434         	fcall	_mcp23017_set_slave_addr
  1915  0C10  0008               	return
  1916  0C11                     __end_of_mcp23017_init:	
  1917                           
  1918                           	psect	text2
  1919  0C34                     __ptext2:	
  1920 ;; *************** function _mcp23017_set_slave_addr *****************
  1921 ;; Defined at:
  1922 ;;		line 55 in file "mcp23017.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  address_3b      1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  address_3b      1    1[BANK1 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1936 ;;      Params:         0       0       0       0
  1937 ;;      Locals:         0       0       1       0
  1938 ;;      Temps:          0       0       1       0
  1939 ;;      Totals:         0       0       2       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    9
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_mcp23017_init
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _mcp23017_set_slave_addr
  1952  0C34                     _mcp23017_set_slave_addr:	
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _mcp23017_set_slave_addr: [wreg+status,2]
  1956                           ;mcp23017_set_slave_addr@address_3b stored from wreg
  1957  0C34  0021               	movlb	1	; select bank1
  1958  0C35  00A1               	movwf	mcp23017_set_slave_addr@address_3b^(0+128)
  1959                           
  1960                           ;mcp23017.c: 57: g_slave_address_7b = (0b0100 << 3) | address_3b;
  1961  0C36  0821               	movf	mcp23017_set_slave_addr@address_3b^(0+128),w
  1962  0C37  3820               	iorlw	32
  1963  0C38  00A0               	movwf	??_mcp23017_set_slave_addr^(0+128)
  1964  0C39  0820               	movf	??_mcp23017_set_slave_addr^(0+128),w
  1965  0C3A  00C9               	movwf	_g_slave_address_7b^(0+128)
  1966  0C3B  0008               	return
  1967  0C3C                     __end_of_mcp23017_set_slave_addr:	
  1968                           
  1969                           	psect	text3
  1970  032A                     __ptext3:	
  1971 ;; *************** function _lcd_initialize *****************
  1972 ;; Defined at:
  1973 ;;		line 144 in file "HD44780-IOE.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  i               1   20[BANK1 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1987 ;;      Params:         0       0       0       0
  1988 ;;      Locals:         0       0       1       0
  1989 ;;      Temps:          0       0       2       0
  1990 ;;      Totals:         0       0       3       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:   17
  1994 ;; This function calls:
  1995 ;;		__set_4bit_interface
  1996 ;;		_lcd_backlight
  1997 ;;		_lcd_command
  1998 ;;		_lcd_flags_set
  1999 ;;		_mcp23017_write_reg
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _lcd_initialize
  2007  032A                     _lcd_initialize:	
  2008                           
  2009                           ;HD44780-IOE.c: 145: unsigned char i;
  2010                           ;HD44780-IOE.c: 148: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
  2011                           
  2012                           ;incstack = 0
  2013 ;; hardware stack exceeded
  2014                           ; Regs used in _lcd_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2015  032A  3068               	movlw	104
  2016  032B  0021               	movlb	1	; select bank1
  2017  032C  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2018  032D  30E4               	movlw	228
  2019  032E  00B2               	movwf	??_lcd_initialize^(0+128)
  2020  032F                     u2577:	
  2021  032F  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2022  0330  2B2F               	goto	u2577
  2023  0331  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2024  0332  2B2F               	goto	u2577
  2025  0333  0000               	nop
  2026                           
  2027                           ;HD44780-IOE.c: 151: mcp23017_write_reg(MCP23017_REG_IODIRA, 0x00);
  2028  0334  0021               	movlb	1	; select bank1
  2029  0335  01A3               	clrf	mcp23017_write_reg@value^(0+128)
  2030  0336  3000               	movlw	0
  2031  0337  318E  2613  3183   	fcall	_mcp23017_write_reg
  2032                           
  2033                           ;HD44780-IOE.c: 152: mcp23017_write_reg(MCP23017_REG_GPIOA, 0x00);
  2034  033A  0021               	movlb	1	; select bank1
  2035  033B  01A3               	clrf	mcp23017_write_reg@value^(0+128)
  2036  033C  3012               	movlw	18
  2037  033D  318E  2613  3183   	fcall	_mcp23017_write_reg
  2038                           
  2039                           ;HD44780-IOE.c: 155: for (i = 0; i < 6; i++) {
  2040  0340  0021               	movlb	1	; select bank1
  2041  0341  01B4               	clrf	lcd_initialize@i^(0+128)
  2042  0342  3006               	movlw	6
  2043  0343  0234               	subwf	lcd_initialize@i^(0+128),w
  2044  0344  1803               	btfsc	3,0
  2045  0345  2B53               	goto	l2843
  2046  0346                     l2837:	
  2047                           
  2048                           ;HD44780-IOE.c: 156: display_config[i] = 0x00;
  2049  0346  0834               	movf	lcd_initialize@i^(0+128),w
  2050  0347  3EBE               	addlw	_display_config& (0+255)
  2051  0348  0086               	movwf	6
  2052  0349  0187               	clrf	7
  2053  034A  0181               	clrf	1
  2054  034B  3001               	movlw	1
  2055  034C  00B2               	movwf	??_lcd_initialize^(0+128)
  2056  034D  0832               	movf	??_lcd_initialize^(0+128),w
  2057  034E  07B4               	addwf	lcd_initialize@i^(0+128),f
  2058  034F  3006               	movlw	6
  2059  0350  0234               	subwf	lcd_initialize@i^(0+128),w
  2060  0351  1C03               	skipc
  2061  0352  2B46               	goto	l2837
  2062  0353                     l2843:	
  2063                           
  2064                           ;HD44780-IOE.c: 157: }
  2065                           ;HD44780-IOE.c: 159: _set_4bit_interface();
  2066  0353  318D  253E  3183   	fcall	__set_4bit_interface
  2067                           
  2068                           ;HD44780-IOE.c: 162: lcd_flags_set(0x20, 0x10 | 0x04, 0);
  2069  0356  3014               	movlw	20
  2070  0357  0021               	movlb	1	; select bank1
  2071  0358  00B2               	movwf	??_lcd_initialize^(0+128)
  2072  0359  0832               	movf	??_lcd_initialize^(0+128),w
  2073  035A  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2074  035B  01AE               	clrf	lcd_flags_set@value^(0+128)
  2075  035C  3020               	movlw	32
  2076  035D  3186  2690  3183   	fcall	_lcd_flags_set
  2077                           
  2078                           ;HD44780-IOE.c: 163: lcd_flags_set(0x20, 0x08, 1);
  2079  0360  3008               	movlw	8
  2080  0361  0021               	movlb	1	; select bank1
  2081  0362  00B2               	movwf	??_lcd_initialize^(0+128)
  2082  0363  0832               	movf	??_lcd_initialize^(0+128),w
  2083  0364  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2084  0365  01AE               	clrf	lcd_flags_set@value^(0+128)
  2085  0366  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2086  0367  3020               	movlw	32
  2087  0368  3186  2690  3183   	fcall	_lcd_flags_set
  2088                           
  2089                           ;HD44780-IOE.c: 165: lcd_backlight(1);
  2090  036B  3001               	movlw	1
  2091  036C  318C  2460  3183   	fcall	_lcd_backlight
  2092                           
  2093                           ;HD44780-IOE.c: 166: lcd_flags_set(0x08, 0x04, 1);
  2094  036F  3004               	movlw	4
  2095  0370  0021               	movlb	1	; select bank1
  2096  0371  00B2               	movwf	??_lcd_initialize^(0+128)
  2097  0372  0832               	movf	??_lcd_initialize^(0+128),w
  2098  0373  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2099  0374  01AE               	clrf	lcd_flags_set@value^(0+128)
  2100  0375  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2101  0376  3008               	movlw	8
  2102  0377  3186  2690  3183   	fcall	_lcd_flags_set
  2103                           
  2104                           ;HD44780-IOE.c: 167: lcd_flags_set(0x08, 0x02, 0);
  2105  037A  3002               	movlw	2
  2106  037B  0021               	movlb	1	; select bank1
  2107  037C  00B2               	movwf	??_lcd_initialize^(0+128)
  2108  037D  0832               	movf	??_lcd_initialize^(0+128),w
  2109  037E  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2110  037F  01AE               	clrf	lcd_flags_set@value^(0+128)
  2111  0380  3008               	movlw	8
  2112  0381  3186  2690  3183   	fcall	_lcd_flags_set
  2113                           
  2114                           ;HD44780-IOE.c: 168: lcd_flags_set(0x08, 0x01, 0);
  2115  0384  0021               	movlb	1	; select bank1
  2116  0385  01AD               	clrf	lcd_flags_set@flags^(0+128)
  2117  0386  0AAD               	incf	lcd_flags_set@flags^(0+128),f
  2118  0387  01AE               	clrf	lcd_flags_set@value^(0+128)
  2119  0388  3008               	movlw	8
  2120  0389  3186  2690  3183   	fcall	_lcd_flags_set
  2121                           
  2122                           ;HD44780-IOE.c: 170: lcd_flags_set(0x04, 0x02, 1);
  2123  038C  3002               	movlw	2
  2124  038D  0021               	movlb	1	; select bank1
  2125  038E  00B2               	movwf	??_lcd_initialize^(0+128)
  2126  038F  0832               	movf	??_lcd_initialize^(0+128),w
  2127  0390  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2128  0391  01AE               	clrf	lcd_flags_set@value^(0+128)
  2129  0392  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2130  0393  3004               	movlw	4
  2131  0394  3186  2690  3183   	fcall	_lcd_flags_set
  2132                           
  2133                           ;HD44780-IOE.c: 171: lcd_flags_set(0x04, 0x01, 0);
  2134  0397  0021               	movlb	1	; select bank1
  2135  0398  01AD               	clrf	lcd_flags_set@flags^(0+128)
  2136  0399  0AAD               	incf	lcd_flags_set@flags^(0+128),f
  2137  039A  01AE               	clrf	lcd_flags_set@value^(0+128)
  2138  039B  3004               	movlw	4
  2139  039C  3186  2690  3183   	fcall	_lcd_flags_set
  2140                           
  2141                           ;HD44780-IOE.c: 173: lcd_command(0x01); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  2142  039F  3001               	movlw	1
  2143  03A0  318D  2572  3183   	fcall	_lcd_command
  2144  03A3  3015               	movlw	21
  2145  03A4  0021               	movlb	1	; select bank1
  2146  03A5  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2147  03A6  30C6               	movlw	198
  2148  03A7  00B2               	movwf	??_lcd_initialize^(0+128)
  2149  03A8                     u2587:	
  2150  03A8  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2151  03A9  2BA8               	goto	u2587
  2152  03AA  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2153  03AB  2BA8               	goto	u2587
  2154  03AC  0000               	nop
  2155                           
  2156                           ;HD44780-IOE.c: 174: lcd_command(0x02); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  2157  03AD  3002               	movlw	2
  2158  03AE  318D  2572  3183   	fcall	_lcd_command
  2159  03B1  3015               	movlw	21
  2160  03B2  0021               	movlb	1	; select bank1
  2161  03B3  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2162  03B4  30C6               	movlw	198
  2163  03B5  00B2               	movwf	??_lcd_initialize^(0+128)
  2164  03B6                     u2597:	
  2165  03B6  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2166  03B7  2BB6               	goto	u2597
  2167  03B8  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2168  03B9  2BB6               	goto	u2597
  2169  03BA  0000               	nop
  2170  03BB  0008               	return
  2171  03BC                     __end_of_lcd_initialize:	
  2172                           
  2173                           	psect	text4
  2174  0690                     __ptext4:	
  2175 ;; *************** function _lcd_flags_set *****************
  2176 ;; Defined at:
  2177 ;;		line 193 in file "HD44780-IOE.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  instruction     1    wreg     unsigned char 
  2180 ;;  flags           1   13[BANK1 ] unsigned char 
  2181 ;;  value           1   14[BANK1 ] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  instruction     1   16[BANK1 ] unsigned char 
  2184 ;;  index           1   17[BANK1 ] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2194 ;;      Params:         0       0       2       0
  2195 ;;      Locals:         0       0       2       0
  2196 ;;      Temps:          0       0       1       0
  2197 ;;      Totals:         0       0       5       0
  2198 ;;Total ram usage:        5 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:   16
  2201 ;; This function calls:
  2202 ;;		_lcd_command
  2203 ;; This function is called by:
  2204 ;;		_lcd_initialize
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _lcd_flags_set
  2210  0690                     _lcd_flags_set:	
  2211                           
  2212                           ;incstack = 0
  2213 ;; hardware stack exceeded
  2214                           ; Regs used in _lcd_flags_set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2215                           ;lcd_flags_set@instruction stored from wreg
  2216  0690  0021               	movlb	1	; select bank1
  2217  0691  00B0               	movwf	lcd_flags_set@instruction^(0+128)
  2218                           
  2219                           ;HD44780-IOE.c: 196: unsigned char index;
  2220                           ;HD44780-IOE.c: 198: switch (instruction) {
  2221  0692  2EA3               	goto	l2737
  2222  0693                     l2725:	
  2223                           ;HD44780-IOE.c: 199: case 0x04:
  2224                           
  2225                           
  2226                           ;HD44780-IOE.c: 200: index = 0;
  2227  0693  01B1               	clrf	lcd_flags_set@index^(0+128)
  2228                           
  2229                           ;HD44780-IOE.c: 201: break;
  2230  0694  2EB7               	goto	l2739
  2231  0695                     l500:	
  2232                           ;HD44780-IOE.c: 202: case 0x08:
  2233                           
  2234                           
  2235                           ;HD44780-IOE.c: 203: index = 1;
  2236  0695  01B1               	clrf	lcd_flags_set@index^(0+128)
  2237  0696  0AB1               	incf	lcd_flags_set@index^(0+128),f
  2238                           
  2239                           ;HD44780-IOE.c: 204: break;
  2240  0697  2EB7               	goto	l2739
  2241  0698                     l2727:	
  2242                           ;HD44780-IOE.c: 205: case 0x10:
  2243                           
  2244                           
  2245                           ;HD44780-IOE.c: 206: index = 2;
  2246  0698  3002               	movlw	2
  2247  0699  2E9F               	goto	L3
  2248  069A                     l2729:	
  2249                           ;HD44780-IOE.c: 208: case 0x20:
  2250                           
  2251                           ;HD44780-IOE.c: 207: break;
  2252                           
  2253                           
  2254                           ;HD44780-IOE.c: 209: index = 3;
  2255  069A  3003               	movlw	3
  2256  069B  2E9F               	goto	L3
  2257  069C                     l2731:	
  2258                           ;HD44780-IOE.c: 211: case 0x40:
  2259                           
  2260                           ;HD44780-IOE.c: 210: break;
  2261                           
  2262                           
  2263                           ;HD44780-IOE.c: 212: index = 4;
  2264  069C  3004               	movlw	4
  2265  069D  2E9F               	goto	L3
  2266  069E                     l2733:	
  2267                           ;HD44780-IOE.c: 214: case 0x80:
  2268                           
  2269                           ;HD44780-IOE.c: 213: break;
  2270                           
  2271                           
  2272                           ;HD44780-IOE.c: 215: index = 5;
  2273  069E  3005               	movlw	5
  2274  069F                     L3:	
  2275  069F  00AF               	movwf	??_lcd_flags_set^(0+128)
  2276  06A0  082F               	movf	??_lcd_flags_set^(0+128),w
  2277  06A1  00B1               	movwf	lcd_flags_set@index^(0+128)
  2278                           
  2279                           ;HD44780-IOE.c: 217: }
  2280                           
  2281                           ;HD44780-IOE.c: 216: break;
  2282  06A2  2EB7               	goto	l2739
  2283  06A3                     l2737:	
  2284  06A3  0830               	movf	lcd_flags_set@instruction^(0+128),w
  2285                           
  2286                           ; Switch size 1, requested type "space"
  2287                           ; Number of cases is 6, Range of values is 4 to 128
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte           19    10 (average)
  2291                           ; direct_byte          259     9 (fixed)
  2292                           ; jumptable            263     9 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  06A4  3A04               	xorlw	4	; case 4
  2295  06A5  1903               	skipnz
  2296  06A6  2E93               	goto	l2725
  2297  06A7  3A0C               	xorlw	12	; case 8
  2298  06A8  1903               	skipnz
  2299  06A9  2E95               	goto	l500
  2300  06AA  3A18               	xorlw	24	; case 16
  2301  06AB  1903               	skipnz
  2302  06AC  2E98               	goto	l2727
  2303  06AD  3A30               	xorlw	48	; case 32
  2304  06AE  1903               	skipnz
  2305  06AF  2E9A               	goto	l2729
  2306  06B0  3A60               	xorlw	96	; case 64
  2307  06B1  1903               	skipnz
  2308  06B2  2E9C               	goto	l2731
  2309  06B3  3AC0               	xorlw	192	; case 128
  2310  06B4  1903               	skipnz
  2311  06B5  2E9E               	goto	l2733
  2312  06B6  2EB7               	goto	l2739
  2313  06B7                     l2739:	
  2314                           
  2315                           ;HD44780-IOE.c: 219: if (value == 0)
  2316  06B7  08AE               	movf	lcd_flags_set@value^(0+128),f
  2317  06B8  1D03               	skipz
  2318  06B9  2EC3               	goto	l2743
  2319                           
  2320                           ;HD44780-IOE.c: 220: display_config[index] &= ~flags;
  2321  06BA  092D               	comf	lcd_flags_set@flags^(0+128),w
  2322  06BB  00AF               	movwf	??_lcd_flags_set^(0+128)
  2323  06BC  0831               	movf	lcd_flags_set@index^(0+128),w
  2324  06BD  3EBE               	addlw	_display_config& (0+255)
  2325  06BE  0086               	movwf	6
  2326  06BF  0187               	clrf	7
  2327  06C0  082F               	movf	??_lcd_flags_set^(0+128),w
  2328  06C1  0581               	andwf	1,f
  2329  06C2  2ECB               	goto	l2745
  2330  06C3                     l2743:	
  2331                           
  2332                           ;HD44780-IOE.c: 221: else
  2333                           ;HD44780-IOE.c: 222: display_config[index] |= flags;
  2334  06C3  082D               	movf	lcd_flags_set@flags^(0+128),w
  2335  06C4  00AF               	movwf	??_lcd_flags_set^(0+128)
  2336  06C5  0831               	movf	lcd_flags_set@index^(0+128),w
  2337  06C6  3EBE               	addlw	_display_config& (0+255)
  2338  06C7  0086               	movwf	6
  2339  06C8  0187               	clrf	7
  2340  06C9  082F               	movf	??_lcd_flags_set^(0+128),w
  2341  06CA  0481               	iorwf	1,f
  2342  06CB                     l2745:	
  2343                           
  2344                           ;HD44780-IOE.c: 224: lcd_command(instruction | display_config[index]);
  2345  06CB  0831               	movf	lcd_flags_set@index^(0+128),w
  2346  06CC  3EBE               	addlw	_display_config& (0+255)
  2347  06CD  0086               	movwf	6
  2348  06CE  0187               	clrf	7
  2349  06CF  0801               	movf	1,w
  2350  06D0  0430               	iorwf	lcd_flags_set@instruction^(0+128),w
  2351  06D1  318D  2572         	fcall	_lcd_command
  2352  06D3  0008               	return
  2353  06D4                     __end_of_lcd_flags_set:	
  2354                           
  2355                           	psect	text5
  2356  0D72                     __ptext5:	
  2357 ;; *************** function _lcd_command *****************
  2358 ;; Defined at:
  2359 ;;		line 177 in file "HD44780-IOE.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  command         1    wreg     unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  command         1   12[BANK1 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       0       0       0
  2374 ;;      Locals:         0       0       1       0
  2375 ;;      Temps:          0       0       1       0
  2376 ;;      Totals:         0       0       2       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   15
  2380 ;; This function calls:
  2381 ;;		__send_byte
  2382 ;;		_mcp23017_ioa_send_byte
  2383 ;; This function is called by:
  2384 ;;		_lcd_initialize
  2385 ;;		_lcd_flags_set
  2386 ;;		_lcd_add_character
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _lcd_command
  2392  0D72                     _lcd_command:	
  2393                           
  2394                           ;incstack = 0
  2395 ;; hardware stack exceeded
  2396                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  2397                           ;lcd_command@command stored from wreg
  2398  0D72  0021               	movlb	1	; select bank1
  2399  0D73  00AC               	movwf	lcd_command@command^(0+128)
  2400                           
  2401                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  2402  0D74  1246               	bcf	_LCDPort^(0+128),4
  2403                           
  2404                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  2405  0D75  318C  2457  318D   	fcall	_mcp23017_ioa_send_byte
  2406                           
  2407                           ;HD44780-IOE.c: 180: __nop();
  2408  0D78  0000               	nop
  2409                           
  2410                           ;HD44780-IOE.c: 181: _send_byte(command);
  2411  0D79  0021               	movlb	1	; select bank1
  2412  0D7A  082C               	movf	lcd_command@command^(0+128),w
  2413  0D7B  318D  2560  318D   	fcall	__send_byte
  2414                           
  2415                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  2416  0D7E  3085               	movlw	133
  2417  0D7F  0021               	movlb	1	; select bank1
  2418  0D80  00AB               	movwf	??_lcd_command^(0+128)
  2419  0D81                     u2607:	
  2420  0D81  0BAB               	decfsz	??_lcd_command^(0+128),f
  2421  0D82  2D81               	goto	u2607
  2422  0D83  0008               	return
  2423  0D84                     __end_of_lcd_command:	
  2424                           
  2425                           	psect	text6
  2426  0D60                     __ptext6:	
  2427 ;; *************** function __send_byte *****************
  2428 ;; Defined at:
  2429 ;;		line 81 in file "HD44780-IOE.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  data            1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  data            1   10[BANK1 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2443 ;;      Params:         0       0       0       0
  2444 ;;      Locals:         0       0       1       0
  2445 ;;      Temps:          0       0       1       0
  2446 ;;      Totals:         0       0       2       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:   14
  2450 ;; This function calls:
  2451 ;;		__send_nibble
  2452 ;; This function is called by:
  2453 ;;		_lcd_command
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function __send_byte
  2459  0D60                     __send_byte:	
  2460                           
  2461                           ;incstack = 0
  2462 ;; hardware stack exceeded
  2463                           ; Regs used in __send_byte: [wreg+status,2+status,0+pclath+cstack]
  2464                           ;__send_byte@data stored from wreg
  2465  0D60  0021               	movlb	1	; select bank1
  2466  0D61  00AA               	movwf	__send_byte@data^(0+128)
  2467                           
  2468                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  2469  0D62  082A               	movf	__send_byte@data^(0+128),w
  2470  0D63  00A9               	movwf	??__send_byte^(0+128)
  2471  0D64  3004               	movlw	4
  2472  0D65                     u1575:	
  2473  0D65  36A9               	lsrf	??__send_byte^(0+128),f
  2474  0D66  0B89               	decfsz	9,f
  2475  0D67  2D65               	goto	u1575
  2476  0D68  0829               	movf	??__send_byte^(0+128),w
  2477  0D69  318F  27D3  318D   	fcall	__send_nibble
  2478                           
  2479                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  2480  0D6C  0021               	movlb	1	; select bank1
  2481  0D6D  082A               	movf	__send_byte@data^(0+128),w
  2482  0D6E  390F               	andlw	15
  2483  0D6F  318F  27D3         	fcall	__send_nibble
  2484  0D71  0008               	return
  2485  0D72                     __end_of__send_byte:	
  2486                           
  2487                           	psect	text7
  2488  0C60                     __ptext7:	
  2489 ;; *************** function _lcd_backlight *****************
  2490 ;; Defined at:
  2491 ;;		line 227 in file "HD44780-IOE.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  state           1    wreg     unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  state           1    6[BANK1 ] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2505 ;;      Params:         0       0       0       0
  2506 ;;      Locals:         0       0       1       0
  2507 ;;      Temps:          0       0       0       0
  2508 ;;      Totals:         0       0       1       0
  2509 ;;Total ram usage:        1 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:   13
  2512 ;; This function calls:
  2513 ;;		_mcp23017_ioa_send_byte
  2514 ;; This function is called by:
  2515 ;;		_lcd_initialize
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _lcd_backlight
  2521  0C60                     _lcd_backlight:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  2525                           ;lcd_backlight@state stored from wreg
  2526  0C60  0021               	movlb	1	; select bank1
  2527  0C61  00A6               	movwf	lcd_backlight@state^(0+128)
  2528                           
  2529                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  2530  0C62  0826               	movf	lcd_backlight@state^(0+128),w
  2531  0C63  1346               	bcf	_LCDPort^(0+128),6
  2532  0C64  1D03               	skipz
  2533  0C65  1746               	bsf	_LCDPort^(0+128),6
  2534                           
  2535                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  2536  0C66  318C  2457         	fcall	_mcp23017_ioa_send_byte
  2537  0C68  0008               	return
  2538  0C69                     __end_of_lcd_backlight:	
  2539                           
  2540                           	psect	text8
  2541  0D3E                     __ptext8:	
  2542 ;; *************** function __set_4bit_interface *****************
  2543 ;; Defined at:
  2544 ;;		line 86 in file "HD44780-IOE.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2558 ;;      Params:         0       0       0       0
  2559 ;;      Locals:         0       0       0       0
  2560 ;;      Temps:          0       0       1       0
  2561 ;;      Totals:         0       0       1       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:   14
  2565 ;; This function calls:
  2566 ;;		__send_nibble
  2567 ;;		_mcp23017_ioa_send_byte
  2568 ;; This function is called by:
  2569 ;;		_lcd_initialize
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function __set_4bit_interface
  2575  0D3E                     __set_4bit_interface:	
  2576                           
  2577                           ;HD44780-IOE.c: 87: LCDPort.A4 = 0;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in __set_4bit_interface: [wreg+status,2+status,0+pclath+cstack]
  2581  0D3E  0021               	movlb	1	; select bank1
  2582  0D3F  1246               	bcf	_LCDPort^(0+128),4
  2583                           
  2584                           ;HD44780-IOE.c: 88: mcp23017_ioa_send_byte();
  2585  0D40  318C  2457  318D   	fcall	_mcp23017_ioa_send_byte
  2586                           
  2587                           ;HD44780-IOE.c: 89: __nop();
  2588  0D43  0000               	nop
  2589                           
  2590                           ;HD44780-IOE.c: 90: _send_nibble(0b0010);
  2591  0D44  3002               	movlw	2
  2592  0D45  318F  27D3  318D   	fcall	__send_nibble
  2593                           
  2594                           ;HD44780-IOE.c: 91: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  2595  0D48  3085               	movlw	133
  2596  0D49  0021               	movlb	1	; select bank1
  2597  0D4A  00A9               	movwf	??__set_4bit_interface^(0+128)
  2598  0D4B                     u2617:	
  2599  0D4B  0BA9               	decfsz	??__set_4bit_interface^(0+128),f
  2600  0D4C  2D4B               	goto	u2617
  2601  0D4D  0008               	return
  2602  0D4E                     __end_of__set_4bit_interface:	
  2603                           
  2604                           	psect	text9
  2605  0FD3                     __ptext9:	
  2606 ;; *************** function __send_nibble *****************
  2607 ;; Defined at:
  2608 ;;		line 65 in file "HD44780-IOE.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  data            1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  data            1    8[BANK1 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2622 ;;      Params:         0       0       0       0
  2623 ;;      Locals:         0       0       1       0
  2624 ;;      Temps:          0       0       2       0
  2625 ;;      Totals:         0       0       3       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   13
  2629 ;; This function calls:
  2630 ;;		_mcp23017_ioa_send_byte
  2631 ;; This function is called by:
  2632 ;;		__send_byte
  2633 ;;		__set_4bit_interface
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function __send_nibble
  2639  0FD3                     __send_nibble:	
  2640                           
  2641                           ;incstack = 0
  2642 ;; hardware stack exceeded
  2643                           ; Regs used in __send_nibble: [wreg+status,2+status,0+pclath+cstack]
  2644                           ;__send_nibble@data stored from wreg
  2645  0FD3  0021               	movlb	1	; select bank1
  2646  0FD4  00A8               	movwf	__send_nibble@data^(0+128)
  2647                           
  2648                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  2649  0FD5  30F0               	movlw	240
  2650  0FD6  00A6               	movwf	??__send_nibble^(0+128)
  2651  0FD7  0826               	movf	??__send_nibble^(0+128),w
  2652  0FD8  05C6               	andwf	_LCDPort^(0+128),f
  2653                           
  2654                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  2655  0FD9  0828               	movf	__send_nibble@data^(0+128),w
  2656  0FDA  390F               	andlw	15
  2657  0FDB  00A6               	movwf	??__send_nibble^(0+128)
  2658  0FDC  0826               	movf	??__send_nibble^(0+128),w
  2659  0FDD  04C6               	iorwf	_LCDPort^(0+128),f
  2660                           
  2661                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  2662  0FDE  318C  2457  318F   	fcall	_mcp23017_ioa_send_byte
  2663                           
  2664                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  2665  0FE1  0021               	movlb	1	; select bank1
  2666  0FE2  16C6               	bsf	_LCDPort^(0+128),5
  2667                           
  2668                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  2669  0FE3  318C  2457  318F   	fcall	_mcp23017_ioa_send_byte
  2670                           
  2671                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  2672  0FE6  3003               	movlw	3
  2673  0FE7  0021               	movlb	1	; select bank1
  2674  0FE8  00A7               	movwf	(??__send_nibble^(0+128)+1)
  2675  0FE9  3097               	movlw	151
  2676  0FEA  00A6               	movwf	??__send_nibble^(0+128)
  2677  0FEB                     u2627:	
  2678  0FEB  0BA6               	decfsz	??__send_nibble^(0+128),f
  2679  0FEC  2FEB               	goto	u2627
  2680  0FED  0BA7               	decfsz	(??__send_nibble^(0+128)+1),f
  2681  0FEE  2FEB               	goto	u2627
  2682  0FEF  3200               	nop2
  2683                           
  2684                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  2685  0FF0  0021               	movlb	1	; select bank1
  2686  0FF1  12C6               	bcf	_LCDPort^(0+128),5
  2687                           
  2688                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  2689  0FF2  318C  2457  318F   	fcall	_mcp23017_ioa_send_byte
  2690                           
  2691                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  2692  0FF5  3003               	movlw	3
  2693  0FF6  0021               	movlb	1	; select bank1
  2694  0FF7  00A7               	movwf	(??__send_nibble^(0+128)+1)
  2695  0FF8  3097               	movlw	151
  2696  0FF9  00A6               	movwf	??__send_nibble^(0+128)
  2697  0FFA                     u2637:	
  2698  0FFA  0BA6               	decfsz	??__send_nibble^(0+128),f
  2699  0FFB  2FFA               	goto	u2637
  2700  0FFC  0BA7               	decfsz	(??__send_nibble^(0+128)+1),f
  2701  0FFD  2FFA               	goto	u2637
  2702  0FFE  3200               	nop2
  2703  0FFF  0008               	return
  2704  1000                     __end_of__send_nibble:	
  2705                           
  2706                           	psect	text10
  2707  0C57                     __ptext10:	
  2708 ;; *************** function _mcp23017_ioa_send_byte *****************
  2709 ;; Defined at:
  2710 ;;		line 59 in file "HD44780-IOE.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;		None               void
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2724 ;;      Params:         0       0       0       0
  2725 ;;      Locals:         0       0       0       0
  2726 ;;      Temps:          0       0       1       0
  2727 ;;      Totals:         0       0       1       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:   12
  2731 ;; This function calls:
  2732 ;;		_mcp23017_write_reg
  2733 ;; This function is called by:
  2734 ;;		__send_nibble
  2735 ;;		__set_4bit_interface
  2736 ;;		_lcd_command
  2737 ;;		_lcd_backlight
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _mcp23017_ioa_send_byte
  2743  0C57                     _mcp23017_ioa_send_byte:	
  2744                           
  2745                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  2749  0C57  0021               	movlb	1	; select bank1
  2750  0C58  0846               	movf	_LCDPort^(0+128),w
  2751  0C59  00A5               	movwf	??_mcp23017_ioa_send_byte^(0+128)
  2752  0C5A  0825               	movf	??_mcp23017_ioa_send_byte^(0+128),w
  2753  0C5B  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2754  0C5C  3012               	movlw	18
  2755  0C5D  318E  2613         	fcall	_mcp23017_write_reg
  2756  0C5F  0008               	return
  2757  0C60                     __end_of_mcp23017_ioa_send_byte:	
  2758                           
  2759                           	psect	text11
  2760  0E5E                     __ptext11:	
  2761 ;; *************** function _keypad_init *****************
  2762 ;; Defined at:
  2763 ;;		line 57 in file "keypad.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2777 ;;      Params:         0       0       0       0
  2778 ;;      Locals:         0       0       0       0
  2779 ;;      Temps:          0       0       1       0
  2780 ;;      Totals:         0       0       1       0
  2781 ;;Total ram usage:        1 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:   12
  2784 ;; This function calls:
  2785 ;;		_mcp23017_write_reg
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _keypad_init
  2793  0E5E                     _keypad_init:	
  2794                           
  2795                           ;keypad.c: 58: mcp23017_write_reg(MCP23017_REG_IODIRB, 0xFF);
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _keypad_init: [wreg+status,2+status,0+pclath+cstack]
  2799  0E5E  30FF               	movlw	255
  2800  0E5F  0021               	movlb	1	; select bank1
  2801  0E60  00A5               	movwf	??_keypad_init^(0+128)
  2802  0E61  0825               	movf	??_keypad_init^(0+128),w
  2803  0E62  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2804  0E63  3001               	movlw	1
  2805  0E64  318E  2613  318E   	fcall	_mcp23017_write_reg
  2806                           
  2807                           ;keypad.c: 59: mcp23017_write_reg(MCP23017_REG_GPPUB,0xFF);
  2808  0E67  30FF               	movlw	255
  2809  0E68  0021               	movlb	1	; select bank1
  2810  0E69  00A5               	movwf	??_keypad_init^(0+128)
  2811  0E6A  0825               	movf	??_keypad_init^(0+128),w
  2812  0E6B  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2813  0E6C  300D               	movlw	13
  2814  0E6D  318E  2613  318E   	fcall	_mcp23017_write_reg
  2815                           
  2816                           ;keypad.c: 60: mcp23017_write_reg(MCP23017_REG_IPOLB,0xFF);
  2817  0E70  30FF               	movlw	255
  2818  0E71  0021               	movlb	1	; select bank1
  2819  0E72  00A5               	movwf	??_keypad_init^(0+128)
  2820  0E73  0825               	movf	??_keypad_init^(0+128),w
  2821  0E74  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2822  0E75  3003               	movlw	3
  2823  0E76  318E  2613         	fcall	_mcp23017_write_reg
  2824  0E78  0008               	return
  2825  0E79                     __end_of_keypad_init:	
  2826                           
  2827                           	psect	text12
  2828  0E13                     __ptext12:	
  2829 ;; *************** function _mcp23017_write_reg *****************
  2830 ;; Defined at:
  2831 ;;		line 60 in file "mcp23017.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  reg_address     1    wreg     unsigned char 
  2834 ;;  value           1    3[BANK1 ] unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  reg_address     1    4[BANK1 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2846 ;;      Params:         0       0       1       0
  2847 ;;      Locals:         0       0       1       0
  2848 ;;      Temps:          0       0       0       0
  2849 ;;      Totals:         0       0       2       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:   11
  2853 ;; This function calls:
  2854 ;;		_i2c_send_address
  2855 ;;		_i2c_send_data
  2856 ;;		_i2c_start
  2857 ;;		_i2c_stop
  2858 ;; This function is called by:
  2859 ;;		_mcp23017_ioa_send_byte
  2860 ;;		_lcd_initialize
  2861 ;;		_keypad_init
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _mcp23017_write_reg
  2867  0E13                     _mcp23017_write_reg:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  2871                           ;mcp23017_write_reg@reg_address stored from wreg
  2872  0E13  0021               	movlb	1	; select bank1
  2873  0E14  00A4               	movwf	mcp23017_write_reg@reg_address^(0+128)
  2874                           
  2875                           ;mcp23017.c: 62: i2c_start();
  2876  0E15  318B  23F5  318E   	fcall	_i2c_start
  2877                           
  2878                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  2879  0E18  0021               	movlb	1	; select bank1
  2880  0E19  01A0               	clrf	i2c_send_address@mode^(0+128)
  2881  0E1A  0849               	movf	_g_slave_address_7b^(0+128),w
  2882  0E1B  318C  24DF  318E   	fcall	_i2c_send_address
  2883                           
  2884                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  2885  0E1E  0021               	movlb	1	; select bank1
  2886  0E1F  0824               	movf	mcp23017_write_reg@reg_address^(0+128),w
  2887  0E20  318C  244E  318E   	fcall	_i2c_send_data
  2888                           
  2889                           ;mcp23017.c: 65: i2c_send_data(value);
  2890  0E23  0021               	movlb	1	; select bank1
  2891  0E24  0823               	movf	mcp23017_write_reg@value^(0+128),w
  2892  0E25  318C  244E  318E   	fcall	_i2c_send_data
  2893                           
  2894                           ;mcp23017.c: 66: i2c_stop();
  2895  0E28  318B  23FA         	fcall	_i2c_stop
  2896  0E2A  0008               	return
  2897  0E2B                     __end_of_mcp23017_write_reg:	
  2898                           
  2899                           	psect	text13
  2900  078B                     __ptext13:	
  2901 ;; *************** function _init *****************
  2902 ;; Defined at:
  2903 ;;		line 96 in file "main.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  load_value      2    2[BANK1 ] unsigned int 
  2906 ;;  prescaler       1    4[BANK1 ] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2918 ;;      Params:         0       0       3       0
  2919 ;;      Locals:         0       0       0       0
  2920 ;;      Temps:          0       0       2       0
  2921 ;;      Totals:         0       0       5       0
  2922 ;;Total ram usage:        5 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:   10
  2925 ;; This function calls:
  2926 ;;		_write_t1
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _init
  2934  078B                     _init:	
  2935                           
  2936                           ;main.c: 98: INTCONbits.GIE = 0;
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2940  078B  138B               	bcf	11,7	;volatile
  2941                           
  2942                           ;main.c: 99: PIR1bits.TMR1IF = 0;
  2943  078C  0020               	movlb	0	; select bank0
  2944  078D  1011               	bcf	17,0	;volatile
  2945                           
  2946                           ;main.c: 100: PIE1bits.TMR1IE = 1;
  2947  078E  0021               	movlb	1	; select bank1
  2948  078F  1411               	bsf	17,0	;volatile
  2949                           
  2950                           ;main.c: 101: INTCONbits.PEIE = 1;
  2951  0790  170B               	bsf	11,6	;volatile
  2952                           
  2953                           ;main.c: 102: INTCONbits.GIE = 1;
  2954  0791  178B               	bsf	11,7	;volatile
  2955                           
  2956                           ;main.c: 105: T1CONbits.TMR1ON = 0;
  2957  0792  0020               	movlb	0	; select bank0
  2958  0793  1018               	bcf	24,0	;volatile
  2959                           
  2960                           ;main.c: 106: T1CONbits.TMR1CS = 00;
  2961  0794  303F               	movlw	-193
  2962  0795  0598               	andwf	24,f	;volatile
  2963                           
  2964                           ;main.c: 107: T1CONbits.T1CKPS = prescaler;
  2965  0796  0021               	movlb	1	; select bank1
  2966  0797  0824               	movf	init@prescaler^(0+128),w
  2967  0798  00A5               	movwf	??_init^(0+128)
  2968  0799  0EA5               	swapf	??_init^(0+128),f
  2969  079A  0020               	movlb	0	; select bank0
  2970  079B  0818               	movf	24,w	;volatile
  2971  079C  0021               	movlb	1	; select bank1
  2972  079D  0625               	xorwf	??_init^(0+128),w
  2973  079E  39CF               	andlw	-49
  2974  079F  0625               	xorwf	??_init^(0+128),w
  2975  07A0  0020               	movlb	0	; select bank0
  2976  07A1  0098               	movwf	24	;volatile
  2977                           
  2978                           ;main.c: 108: g_reload_value = 65536 - load_value;
  2979  07A2  0021               	movlb	1	; select bank1
  2980  07A3  0922               	comf	init@load_value^(0+128),w
  2981  07A4  00A5               	movwf	??_init^(0+128)
  2982  07A5  0923               	comf	(init@load_value+1)^(0+128),w
  2983  07A6  00A6               	movwf	(??_init^(0+128)+1)
  2984  07A7  0AA5               	incf	??_init^(0+128),f
  2985  07A8  1903               	skipnz
  2986  07A9  0AA6               	incf	(??_init^(0+128)+1),f
  2987  07AA  0825               	movf	??_init^(0+128),w
  2988  07AB  00C4               	movwf	_g_reload_value^(0+128)
  2989  07AC  0826               	movf	(??_init+1)^(0+128),w
  2990  07AD  00C5               	movwf	(_g_reload_value+1)^(0+128)
  2991                           
  2992                           ;main.c: 109: write_t1(g_reload_value);
  2993  07AE  0845               	movf	(_g_reload_value+1)^(0+128),w
  2994  07AF  01A1               	clrf	(write_t1@value+1)^(0+128)
  2995  07B0  07A1               	addwf	(write_t1@value+1)^(0+128),f
  2996  07B1  0844               	movf	_g_reload_value^(0+128),w
  2997  07B2  01A0               	clrf	write_t1@value^(0+128)
  2998  07B3  07A0               	addwf	write_t1@value^(0+128),f
  2999  07B4  318C  2474         	fcall	_write_t1
  3000                           
  3001                           ;main.c: 110: T1CONbits.TMR1ON = 1;
  3002  07B6  0020               	movlb	0	; select bank0
  3003  07B7  1418               	bsf	24,0	;volatile
  3004                           
  3005                           ;main.c: 112: g_bl = 1;
  3006  07B8  01D5               	clrf	_g_bl
  3007  07B9  0AD5               	incf	_g_bl,f
  3008                           
  3009                           ;main.c: 113: g_clk_pos = CLK_POS_HR;
  3010  07BA  01D6               	clrf	_g_clk_pos
  3011  07BB  0AD6               	incf	_g_clk_pos,f
  3012  07BC  0008               	return
  3013  07BD                     __end_of_init:	
  3014                           
  3015                           	psect	text14
  3016  0C74                     __ptext14:	
  3017 ;; *************** function _write_t1 *****************
  3018 ;; Defined at:
  3019 ;;		line 116 in file "main.c"
  3020 ;; Parameters:    Size  Location     Type
  3021 ;;  value           2    0[BANK1 ] unsigned int 
  3022 ;; Auto vars:     Size  Location     Type
  3023 ;;		None
  3024 ;; Return value:  Size  Location     Type
  3025 ;;		None               void
  3026 ;; Registers used:
  3027 ;;		wreg, status,2
  3028 ;; Tracked objects:
  3029 ;;		On entry : 0/0
  3030 ;;		On exit  : 0/0
  3031 ;;		Unchanged: 0/0
  3032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3033 ;;      Params:         0       0       2       0
  3034 ;;      Locals:         0       0       0       0
  3035 ;;      Temps:          0       0       0       0
  3036 ;;      Totals:         0       0       2       0
  3037 ;;Total ram usage:        2 bytes
  3038 ;; Hardware stack levels used:    1
  3039 ;; Hardware stack levels required when called:    9
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_init
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           
  3048                           ;psect for function _write_t1
  3049  0C74                     _write_t1:	
  3050                           
  3051                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  3052                           
  3053                           ;incstack = 0
  3054                           ; Regs used in _write_t1: [wreg+status,2]
  3055  0C74  0020               	movlb	0	; select bank0
  3056  0C75  1018               	bcf	24,0	;volatile
  3057                           
  3058                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  3059  0C76  0021               	movlb	1	; select bank1
  3060  0C77  0821               	movf	(write_t1@value+1)^(0+128),w
  3061  0C78  0020               	movlb	0	; select bank0
  3062  0C79  0097               	movwf	23	;volatile
  3063                           
  3064                           ;main.c: 121: TMR1L = (uint8_t) value;
  3065  0C7A  0021               	movlb	1	; select bank1
  3066  0C7B  0820               	movf	write_t1@value^(0+128),w
  3067  0C7C  0020               	movlb	0	; select bank0
  3068  0C7D  0096               	movwf	22	;volatile
  3069                           
  3070                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  3071  0C7E  1418               	bsf	24,0	;volatile
  3072  0C7F  0008               	return
  3073  0C80                     __end_of_write_t1:	
  3074                           
  3075                           	psect	text15
  3076  04CF                     __ptext15:	
  3077 ;; *************** function _i2c_init *****************
  3078 ;; Defined at:
  3079 ;;		line 51 in file "pic12f1840_i2c.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;  clock_hz        4   14[BANK1 ] unsigned long 
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;		None
  3084 ;; Return value:  Size  Location     Type
  3085 ;;		None               void
  3086 ;; Registers used:
  3087 ;;		wreg, status,2, status,0, pclath, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3093 ;;      Params:         0       0       4       0
  3094 ;;      Locals:         0       0       0       0
  3095 ;;      Temps:          0       0       4       0
  3096 ;;      Totals:         0       0       8       0
  3097 ;;Total ram usage:        8 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:   10
  3100 ;; This function calls:
  3101 ;;		___lldiv
  3102 ;; This function is called by:
  3103 ;;		_main
  3104 ;; This function uses a non-reentrant model
  3105 ;;
  3106                           
  3107                           
  3108                           ;psect for function _i2c_init
  3109  04CF                     _i2c_init:	
  3110                           
  3111                           ;pic12f1840_i2c.c: 53: ANSELAbits.ANSA1 = 0; TRISAbits.TRISA1 = 1;
  3112                           
  3113                           ;incstack = 0
  3114                           ; Regs used in _i2c_init: [wreg+status,2+status,0+pclath+cstack]
  3115  04CF  0023               	movlb	3	; select bank3
  3116  04D0  108C               	bcf	12,1	;volatile
  3117  04D1  0021               	movlb	1	; select bank1
  3118  04D2  148C               	bsf	12,1	;volatile
  3119                           
  3120                           ;pic12f1840_i2c.c: 54: ANSELAbits.ANSA2 = 0; TRISAbits.TRISA2 = 1;
  3121  04D3  0023               	movlb	3	; select bank3
  3122  04D4  110C               	bcf	12,2	;volatile
  3123  04D5  0021               	movlb	1	; select bank1
  3124  04D6  150C               	bsf	12,2	;volatile
  3125                           
  3126                           ;pic12f1840_i2c.c: 57: SSPCON1 = 0b00101000;
  3127  04D7  3028               	movlw	40
  3128  04D8  0024               	movlb	4	; select bank4
  3129  04D9  0095               	movwf	21	;volatile
  3130                           
  3131                           ;pic12f1840_i2c.c: 58: SSPCON2 = 0x00;
  3132  04DA  0196               	clrf	22	;volatile
  3133                           
  3134                           ;pic12f1840_i2c.c: 64: SSPADD = (uint8_t) ((32000000UL) / (4 * clock_hz)) - 1;
  3135  04DB  0021               	movlb	1	; select bank1
  3136  04DC  082E               	movf	i2c_init@clock_hz^(0+128),w
  3137  04DD  00B2               	movwf	??_i2c_init^(0+128)
  3138  04DE  082F               	movf	(i2c_init@clock_hz+1)^(0+128),w
  3139  04DF  00B3               	movwf	(??_i2c_init^(0+128)+1)
  3140  04E0  0830               	movf	(i2c_init@clock_hz+2)^(0+128),w
  3141  04E1  00B4               	movwf	(??_i2c_init^(0+128)+2)
  3142  04E2  0831               	movf	(i2c_init@clock_hz+3)^(0+128),w
  3143  04E3  00B5               	movwf	(??_i2c_init^(0+128)+3)
  3144  04E4  3002               	movlw	2
  3145  04E5                     u2295:	
  3146  04E5  35B2               	lslf	??_i2c_init^(0+128),f
  3147  04E6  0DB3               	rlf	(??_i2c_init^(0+128)+1),f
  3148  04E7  0DB4               	rlf	(??_i2c_init^(0+128)+2),f
  3149  04E8  0DB5               	rlf	(??_i2c_init^(0+128)+3),f
  3150  04E9  0B89               	decfsz	9,f
  3151  04EA  2CE5               	goto	u2295
  3152  04EB  0835               	movf	(??_i2c_init+3)^(0+128),w
  3153  04EC  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  3154  04ED  0834               	movf	(??_i2c_init+2)^(0+128),w
  3155  04EE  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  3156  04EF  0833               	movf	(??_i2c_init+1)^(0+128),w
  3157  04F0  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  3158  04F1  0832               	movf	??_i2c_init^(0+128),w
  3159  04F2  00A0               	movwf	___lldiv@divisor^(0+128)
  3160  04F3  3001               	movlw	1
  3161  04F4  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  3162  04F5  30E8               	movlw	232
  3163  04F6  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  3164  04F7  3048               	movlw	72
  3165  04F8  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  3166  04F9  3000               	movlw	0
  3167  04FA  00A4               	movwf	___lldiv@dividend^(0+128)
  3168  04FB  3184  2429  3184   	fcall	___lldiv
  3169  04FE  0021               	movlb	1	; select bank1
  3170  04FF  0820               	movf	?___lldiv^(0+128),w
  3171  0500  3EFF               	addlw	255
  3172  0501  0024               	movlb	4	; select bank4
  3173  0502  0092               	movwf	18	;volatile
  3174                           
  3175                           ;pic12f1840_i2c.c: 69: if (clock_hz == 400000) {
  3176  0503  3000               	movlw	0
  3177  0504  0021               	movlb	1	; select bank1
  3178  0505  0631               	xorwf	(i2c_init@clock_hz+3)^(0+128),w
  3179  0506  1D03               	skipz
  3180  0507  2D12               	goto	u2305
  3181  0508  3006               	movlw	6
  3182  0509  0630               	xorwf	(i2c_init@clock_hz+2)^(0+128),w
  3183  050A  1D03               	skipz
  3184  050B  2D12               	goto	u2305
  3185  050C  301A               	movlw	26
  3186  050D  062F               	xorwf	(i2c_init@clock_hz+1)^(0+128),w
  3187  050E  1D03               	skipz
  3188  050F  2D12               	goto	u2305
  3189  0510  3080               	movlw	128
  3190  0511  062E               	xorwf	i2c_init@clock_hz^(0+128),w
  3191  0512                     u2305:	
  3192  0512  1D03               	skipz
  3193  0513  2D17               	goto	l21
  3194                           
  3195                           ;pic12f1840_i2c.c: 70: SSPSTATbits.SMP = 0;
  3196  0514  0024               	movlb	4	; select bank4
  3197  0515  1394               	bcf	20,7	;volatile
  3198                           
  3199                           ;pic12f1840_i2c.c: 71: } else {
  3200  0516  0008               	return
  3201  0517                     l21:	
  3202                           
  3203                           ;pic12f1840_i2c.c: 72: SSPSTATbits.SMP = 1;
  3204  0517  0024               	movlb	4	; select bank4
  3205  0518  1794               	bsf	20,7	;volatile
  3206  0519  0008               	return
  3207  051A                     __end_of_i2c_init:	
  3208                           
  3209                           	psect	text16
  3210  0429                     __ptext16:	
  3211 ;; *************** function ___lldiv *****************
  3212 ;; Defined at:
  3213 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c"
  3214 ;; Parameters:    Size  Location     Type
  3215 ;;  divisor         4    0[BANK1 ] unsigned long 
  3216 ;;  dividend        4    4[BANK1 ] unsigned long 
  3217 ;; Auto vars:     Size  Location     Type
  3218 ;;  quotient        4    9[BANK1 ] unsigned long 
  3219 ;;  counter         1   13[BANK1 ] unsigned char 
  3220 ;; Return value:  Size  Location     Type
  3221 ;;                  4    0[BANK1 ] unsigned long 
  3222 ;; Registers used:
  3223 ;;		wreg, status,2, status,0
  3224 ;; Tracked objects:
  3225 ;;		On entry : 0/0
  3226 ;;		On exit  : 0/0
  3227 ;;		Unchanged: 0/0
  3228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3229 ;;      Params:         0       0       8       0
  3230 ;;      Locals:         0       0       5       0
  3231 ;;      Temps:          0       0       1       0
  3232 ;;      Totals:         0       0      14       0
  3233 ;;Total ram usage:       14 bytes
  3234 ;; Hardware stack levels used:    1
  3235 ;; Hardware stack levels required when called:    9
  3236 ;; This function calls:
  3237 ;;		Nothing
  3238 ;; This function is called by:
  3239 ;;		_i2c_init
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           
  3244                           ;psect for function ___lldiv
  3245  0429                     ___lldiv:	
  3246                           
  3247                           ;incstack = 0
  3248                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3249  0429  3000               	movlw	0
  3250  042A  0021               	movlb	1	; select bank1
  3251  042B  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  3252  042C  3000               	movlw	0
  3253  042D  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  3254  042E  3000               	movlw	0
  3255  042F  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  3256  0430  3000               	movlw	0
  3257  0431  00A9               	movwf	___lldiv@quotient^(0+128)
  3258  0432  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3259  0433  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  3260  0434  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  3261  0435  0420               	iorwf	___lldiv@divisor^(0+128),w
  3262  0436  1903               	skipnz
  3263  0437  2C73               	goto	l2771
  3264  0438  01AD               	clrf	___lldiv@counter^(0+128)
  3265  0439  0AAD               	incf	___lldiv@counter^(0+128),f
  3266  043A                     l2757:	
  3267  043A  1BA3               	btfsc	(___lldiv@divisor+3)^(0+128),7
  3268  043B  2C48               	goto	l2759
  3269  043C  3001               	movlw	1
  3270  043D                     u2215:	
  3271  043D  35A0               	lslf	___lldiv@divisor^(0+128),f
  3272  043E  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  3273  043F  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  3274  0440  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  3275  0441  0B89               	decfsz	9,f
  3276  0442  2C3D               	goto	u2215
  3277  0443  3001               	movlw	1
  3278  0444  00A8               	movwf	??___lldiv^(0+128)
  3279  0445  0828               	movf	??___lldiv^(0+128),w
  3280  0446  07AD               	addwf	___lldiv@counter^(0+128),f
  3281  0447  2C3A               	goto	l2757
  3282  0448                     l2759:	
  3283  0448  3001               	movlw	1
  3284  0449                     u2235:	
  3285  0449  35A9               	lslf	___lldiv@quotient^(0+128),f
  3286  044A  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  3287  044B  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  3288  044C  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  3289  044D  0B89               	decfsz	9,f
  3290  044E  2C49               	goto	u2235
  3291  044F  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3292  0450  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  3293  0451  1D03               	skipz
  3294  0452  2C5D               	goto	u2245
  3295  0453  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3296  0454  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  3297  0455  1D03               	skipz
  3298  0456  2C5D               	goto	u2245
  3299  0457  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3300  0458  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  3301  0459  1D03               	skipz
  3302  045A  2C5D               	goto	u2245
  3303  045B  0820               	movf	___lldiv@divisor^(0+128),w
  3304  045C  0224               	subwf	___lldiv@dividend^(0+128),w
  3305  045D                     u2245:	
  3306  045D  1C03               	skipc
  3307  045E  2C68               	goto	l2767
  3308  045F  0820               	movf	___lldiv@divisor^(0+128),w
  3309  0460  02A4               	subwf	___lldiv@dividend^(0+128),f
  3310  0461  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3311  0462  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  3312  0463  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3313  0464  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  3314  0465  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3315  0466  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  3316  0467  1429               	bsf	___lldiv@quotient^(0+128),0
  3317  0468                     l2767:	
  3318  0468  3001               	movlw	1
  3319  0469                     u2255:	
  3320  0469  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  3321  046A  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  3322  046B  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  3323  046C  0CA0               	rrf	___lldiv@divisor^(0+128),f
  3324  046D  0B89               	decfsz	9,f
  3325  046E  2C69               	goto	u2255
  3326  046F  3001               	movlw	1
  3327  0470  02AD               	subwf	___lldiv@counter^(0+128),f
  3328  0471  1D03               	btfss	3,2
  3329  0472  2C48               	goto	l2759
  3330  0473                     l2771:	
  3331  0473  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  3332  0474  00A3               	movwf	(?___lldiv+3)^(0+128)
  3333  0475  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  3334  0476  00A2               	movwf	(?___lldiv+2)^(0+128)
  3335  0477  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  3336  0478  00A1               	movwf	(?___lldiv+1)^(0+128)
  3337  0479  0829               	movf	___lldiv@quotient^(0+128),w
  3338  047A  00A0               	movwf	?___lldiv^(0+128)
  3339  047B  0008               	return
  3340  047C                     __end_of___lldiv:	
  3341                           
  3342                           	psect	text17
  3343  0BC6                     __ptext17:	
  3344 ;; *************** function _ds1307_init *****************
  3345 ;; Defined at:
  3346 ;;		line 81 in file "ds1307.c"
  3347 ;; Parameters:    Size  Location     Type
  3348 ;;		None
  3349 ;; Auto vars:     Size  Location     Type
  3350 ;;		None
  3351 ;; Return value:  Size  Location     Type
  3352 ;;		None               void
  3353 ;; Registers used:
  3354 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3355 ;; Tracked objects:
  3356 ;;		On entry : 0/0
  3357 ;;		On exit  : 0/0
  3358 ;;		Unchanged: 0/0
  3359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3360 ;;      Params:         0       0       0       0
  3361 ;;      Locals:         0       0       0       0
  3362 ;;      Temps:          0       0       0       0
  3363 ;;      Totals:         0       0       0       0
  3364 ;;Total ram usage:        0 bytes
  3365 ;; Hardware stack levels used:    1
  3366 ;; Hardware stack levels required when called:   12
  3367 ;; This function calls:
  3368 ;;		_ds1307_get_clock
  3369 ;; This function is called by:
  3370 ;;		_main
  3371 ;; This function uses a non-reentrant model
  3372 ;;
  3373                           
  3374                           
  3375                           ;psect for function _ds1307_init
  3376  0BC6                     _ds1307_init:	
  3377                           
  3378                           ;ds1307.c: 83: ds1307_get_clock();
  3379                           
  3380                           ;incstack = 0
  3381                           ; Regs used in _ds1307_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3382  0BC6  3186  26D4         	fcall	_ds1307_get_clock
  3383  0BC8  0008               	return
  3384  0BC9                     __end_of_ds1307_init:	
  3385                           
  3386                           	psect	text18
  3387  06D4                     __ptext18:	
  3388 ;; *************** function _ds1307_get_clock *****************
  3389 ;; Defined at:
  3390 ;;		line 140 in file "ds1307.c"
  3391 ;; Parameters:    Size  Location     Type
  3392 ;;		None
  3393 ;; Auto vars:     Size  Location     Type
  3394 ;;  r               1    4[BANK1 ] unsigned char 
  3395 ;; Return value:  Size  Location     Type
  3396 ;;		None               void
  3397 ;; Registers used:
  3398 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3399 ;; Tracked objects:
  3400 ;;		On entry : 0/0
  3401 ;;		On exit  : 0/0
  3402 ;;		Unchanged: 0/0
  3403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3404 ;;      Params:         0       0       0       0
  3405 ;;      Locals:         0       0       1       0
  3406 ;;      Temps:          0       0       1       0
  3407 ;;      Totals:         0       0       2       0
  3408 ;;Total ram usage:        2 bytes
  3409 ;; Hardware stack levels used:    1
  3410 ;; Hardware stack levels required when called:   11
  3411 ;; This function calls:
  3412 ;;		_i2c_read_data
  3413 ;;		_i2c_restart
  3414 ;;		_i2c_send_ack
  3415 ;;		_i2c_send_address
  3416 ;;		_i2c_send_data
  3417 ;;		_i2c_start
  3418 ;;		_i2c_stop
  3419 ;; This function is called by:
  3420 ;;		_ds1307_init
  3421 ;; This function uses a non-reentrant model
  3422 ;;
  3423                           
  3424                           
  3425                           ;psect for function _ds1307_get_clock
  3426  06D4                     _ds1307_get_clock:	
  3427                           
  3428                           ;ds1307.c: 143: i2c_start();
  3429                           
  3430                           ;incstack = 0
  3431                           ; Regs used in _ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3432  06D4  318B  23F5  3186   	fcall	_i2c_start
  3433                           
  3434                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  3435  06D7  0021               	movlb	1	; select bank1
  3436  06D8  01A0               	clrf	i2c_send_address@mode^(0+128)
  3437  06D9  3068               	movlw	104
  3438  06DA  318C  24DF  3186   	fcall	_i2c_send_address
  3439                           
  3440                           ;ds1307.c: 145: i2c_send_data(0x00);
  3441  06DD  3000               	movlw	0
  3442  06DE  318C  244E  3186   	fcall	_i2c_send_data
  3443                           
  3444                           ;ds1307.c: 146: i2c_restart();
  3445  06E1  318B  23F0  3186   	fcall	_i2c_restart
  3446                           
  3447                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  3448  06E4  0021               	movlb	1	; select bank1
  3449  06E5  01A0               	clrf	i2c_send_address@mode^(0+128)
  3450  06E6  0AA0               	incf	i2c_send_address@mode^(0+128),f
  3451  06E7  3068               	movlw	104
  3452  06E8  318C  24DF  3186   	fcall	_i2c_send_address
  3453                           
  3454                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  3455  06EB  0021               	movlb	1	; select bank1
  3456  06EC  01A4               	clrf	ds1307_get_clock@r^(0+128)
  3457  06ED  3007               	movlw	7
  3458  06EE  0224               	subwf	ds1307_get_clock@r^(0+128),w
  3459  06EF  1803               	btfsc	3,0
  3460  06F0  2F09               	goto	l2517
  3461  06F1                     l2509:	
  3462                           
  3463                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  3464  06F1  318C  24D0  3186   	fcall	_i2c_read_data
  3465  06F4  0021               	movlb	1	; select bank1
  3466  06F5  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3467  06F6  0824               	movf	ds1307_get_clock@r^(0+128),w
  3468  06F7  3EB7               	addlw	_g_reg_data& (0+255)
  3469  06F8  0086               	movwf	6
  3470  06F9  0187               	clrf	7
  3471  06FA  0823               	movf	??_ds1307_get_clock^(0+128),w
  3472  06FB  0081               	movwf	1
  3473                           
  3474                           ;ds1307.c: 151: i2c_send_ack(0);
  3475  06FC  3000               	movlw	0
  3476  06FD  318C  24A7  3186   	fcall	_i2c_send_ack
  3477  0700  3001               	movlw	1
  3478  0701  0021               	movlb	1	; select bank1
  3479  0702  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3480  0703  0823               	movf	??_ds1307_get_clock^(0+128),w
  3481  0704  07A4               	addwf	ds1307_get_clock@r^(0+128),f
  3482  0705  3007               	movlw	7
  3483  0706  0224               	subwf	ds1307_get_clock@r^(0+128),w
  3484  0707  1C03               	skipc
  3485  0708  2EF1               	goto	l2509
  3486  0709                     l2517:	
  3487                           
  3488                           ;ds1307.c: 152: }
  3489                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  3490  0709  318C  24D0  3186   	fcall	_i2c_read_data
  3491  070C  0021               	movlb	1	; select bank1
  3492  070D  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3493  070E  0823               	movf	??_ds1307_get_clock^(0+128),w
  3494  070F  00C7               	movwf	_g_reg_ctrl^(0+128)
  3495                           
  3496                           ;ds1307.c: 154: i2c_send_ack(1);
  3497  0710  3001               	movlw	1
  3498  0711  318C  24A7  3186   	fcall	_i2c_send_ack
  3499                           
  3500                           ;ds1307.c: 155: i2c_stop();
  3501  0714  318B  23FA         	fcall	_i2c_stop
  3502  0716  0008               	return
  3503  0717                     __end_of_ds1307_get_clock:	
  3504                           
  3505                           	psect	text19
  3506  0BFA                     __ptext19:	
  3507 ;; *************** function _i2c_stop *****************
  3508 ;; Defined at:
  3509 ;;		line 92 in file "pic12f1840_i2c.c"
  3510 ;; Parameters:    Size  Location     Type
  3511 ;;		None
  3512 ;; Auto vars:     Size  Location     Type
  3513 ;;		None
  3514 ;; Return value:  Size  Location     Type
  3515 ;;		None               void
  3516 ;; Registers used:
  3517 ;;		wreg, status,2, status,0, pclath, cstack
  3518 ;; Tracked objects:
  3519 ;;		On entry : 0/0
  3520 ;;		On exit  : 0/0
  3521 ;;		Unchanged: 0/0
  3522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3523 ;;      Params:         0       0       0       0
  3524 ;;      Locals:         0       0       0       0
  3525 ;;      Temps:          0       0       0       0
  3526 ;;      Totals:         0       0       0       0
  3527 ;;Total ram usage:        0 bytes
  3528 ;; Hardware stack levels used:    1
  3529 ;; Hardware stack levels required when called:   10
  3530 ;; This function calls:
  3531 ;;		_i2c_wait
  3532 ;; This function is called by:
  3533 ;;		_mcp23017_write_reg
  3534 ;;		_ds1307_get_clock
  3535 ;;		_at24c32_write_byte
  3536 ;;		_at24c32_is_write_busy
  3537 ;;		_at24c32_read_byte
  3538 ;; This function uses a non-reentrant model
  3539 ;;
  3540                           
  3541                           
  3542                           ;psect for function _i2c_stop
  3543  0BFA                     _i2c_stop:	
  3544                           
  3545                           ;pic12f1840_i2c.c: 93: i2c_wait();
  3546                           
  3547                           ;incstack = 0
  3548                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  3549  0BFA  318C  2425         	fcall	_i2c_wait
  3550                           
  3551                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  3552  0BFC  0024               	movlb	4	; select bank4
  3553  0BFD  1516               	bsf	22,2	;volatile
  3554  0BFE  0008               	return
  3555  0BFF                     __end_of_i2c_stop:	
  3556                           
  3557                           	psect	text20
  3558  0BF5                     __ptext20:	
  3559 ;; *************** function _i2c_start *****************
  3560 ;; Defined at:
  3561 ;;		line 82 in file "pic12f1840_i2c.c"
  3562 ;; Parameters:    Size  Location     Type
  3563 ;;		None
  3564 ;; Auto vars:     Size  Location     Type
  3565 ;;		None
  3566 ;; Return value:  Size  Location     Type
  3567 ;;		None               void
  3568 ;; Registers used:
  3569 ;;		wreg, status,2, status,0, pclath, cstack
  3570 ;; Tracked objects:
  3571 ;;		On entry : 0/0
  3572 ;;		On exit  : 0/0
  3573 ;;		Unchanged: 0/0
  3574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3575 ;;      Params:         0       0       0       0
  3576 ;;      Locals:         0       0       0       0
  3577 ;;      Temps:          0       0       0       0
  3578 ;;      Totals:         0       0       0       0
  3579 ;;Total ram usage:        0 bytes
  3580 ;; Hardware stack levels used:    1
  3581 ;; Hardware stack levels required when called:   10
  3582 ;; This function calls:
  3583 ;;		_i2c_wait
  3584 ;; This function is called by:
  3585 ;;		_mcp23017_write_reg
  3586 ;;		_ds1307_get_clock
  3587 ;;		_at24c32_write_byte
  3588 ;;		_at24c32_is_write_busy
  3589 ;;		_at24c32_read_byte
  3590 ;; This function uses a non-reentrant model
  3591 ;;
  3592                           
  3593                           
  3594                           ;psect for function _i2c_start
  3595  0BF5                     _i2c_start:	
  3596                           
  3597                           ;pic12f1840_i2c.c: 83: i2c_wait();
  3598                           
  3599                           ;incstack = 0
  3600                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3601  0BF5  318C  2425         	fcall	_i2c_wait
  3602                           
  3603                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  3604  0BF7  0024               	movlb	4	; select bank4
  3605  0BF8  1416               	bsf	22,0	;volatile
  3606  0BF9  0008               	return
  3607  0BFA                     __end_of_i2c_start:	
  3608                           
  3609                           	psect	text21
  3610  0C4E                     __ptext21:	
  3611 ;; *************** function _i2c_send_data *****************
  3612 ;; Defined at:
  3613 ;;		line 115 in file "pic12f1840_i2c.c"
  3614 ;; Parameters:    Size  Location     Type
  3615 ;;  data            1    wreg     unsigned char 
  3616 ;; Auto vars:     Size  Location     Type
  3617 ;;  data            1    0[BANK1 ] unsigned char 
  3618 ;; Return value:  Size  Location     Type
  3619 ;;		None               void
  3620 ;; Registers used:
  3621 ;;		wreg, status,2, status,0, pclath, cstack
  3622 ;; Tracked objects:
  3623 ;;		On entry : 0/0
  3624 ;;		On exit  : 0/0
  3625 ;;		Unchanged: 0/0
  3626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3627 ;;      Params:         0       0       0       0
  3628 ;;      Locals:         0       0       1       0
  3629 ;;      Temps:          0       0       0       0
  3630 ;;      Totals:         0       0       1       0
  3631 ;;Total ram usage:        1 bytes
  3632 ;; Hardware stack levels used:    1
  3633 ;; Hardware stack levels required when called:   10
  3634 ;; This function calls:
  3635 ;;		_i2c_wait
  3636 ;; This function is called by:
  3637 ;;		_mcp23017_write_reg
  3638 ;;		_ds1307_get_clock
  3639 ;;		_at24c32_write_byte
  3640 ;;		_at24c32_read_byte
  3641 ;; This function uses a non-reentrant model
  3642 ;;
  3643                           
  3644                           
  3645                           ;psect for function _i2c_send_data
  3646  0C4E                     _i2c_send_data:	
  3647                           
  3648                           ;incstack = 0
  3649                           ; Regs used in _i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  3650                           ;i2c_send_data@data stored from wreg
  3651  0C4E  0021               	movlb	1	; select bank1
  3652  0C4F  00A0               	movwf	i2c_send_data@data^(0+128)
  3653                           
  3654                           ;pic12f1840_i2c.c: 116: i2c_wait();
  3655  0C50  318C  2425         	fcall	_i2c_wait
  3656                           
  3657                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  3658  0C52  0021               	movlb	1	; select bank1
  3659  0C53  0820               	movf	i2c_send_data@data^(0+128),w
  3660  0C54  0024               	movlb	4	; select bank4
  3661  0C55  0091               	movwf	17	;volatile
  3662  0C56  0008               	return
  3663  0C57                     __end_of_i2c_send_data:	
  3664                           
  3665                           	psect	text22
  3666  0CDF                     __ptext22:	
  3667 ;; *************** function _i2c_send_address *****************
  3668 ;; Defined at:
  3669 ;;		line 108 in file "pic12f1840_i2c.c"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;  address         1    wreg     unsigned char 
  3672 ;;  mode            1    0[BANK1 ] unsigned char 
  3673 ;; Auto vars:     Size  Location     Type
  3674 ;;  address         1    2[BANK1 ] unsigned char 
  3675 ;; Return value:  Size  Location     Type
  3676 ;;		None               void
  3677 ;; Registers used:
  3678 ;;		wreg, status,2, status,0, pclath, cstack
  3679 ;; Tracked objects:
  3680 ;;		On entry : 0/0
  3681 ;;		On exit  : 0/0
  3682 ;;		Unchanged: 0/0
  3683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3684 ;;      Params:         0       0       1       0
  3685 ;;      Locals:         0       0       1       0
  3686 ;;      Temps:          0       0       1       0
  3687 ;;      Totals:         0       0       3       0
  3688 ;;Total ram usage:        3 bytes
  3689 ;; Hardware stack levels used:    1
  3690 ;; Hardware stack levels required when called:   10
  3691 ;; This function calls:
  3692 ;;		_i2c_wait
  3693 ;; This function is called by:
  3694 ;;		_mcp23017_write_reg
  3695 ;;		_ds1307_get_clock
  3696 ;;		_at24c32_write_byte
  3697 ;;		_at24c32_is_write_busy
  3698 ;;		_at24c32_read_byte
  3699 ;; This function uses a non-reentrant model
  3700 ;;
  3701                           
  3702                           
  3703                           ;psect for function _i2c_send_address
  3704  0CDF                     _i2c_send_address:	
  3705                           
  3706                           ;incstack = 0
  3707                           ; Regs used in _i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  3708                           ;i2c_send_address@address stored from wreg
  3709  0CDF  0021               	movlb	1	; select bank1
  3710  0CE0  00A2               	movwf	i2c_send_address@address^(0+128)
  3711                           
  3712                           ;pic12f1840_i2c.c: 109: i2c_wait();
  3713  0CE1  318C  2425         	fcall	_i2c_wait
  3714                           
  3715                           ;pic12f1840_i2c.c: 110: address <<= 1;
  3716  0CE3  1003               	clrc
  3717  0CE4  0021               	movlb	1	; select bank1
  3718  0CE5  0DA2               	rlf	i2c_send_address@address^(0+128),f
  3719                           
  3720                           ;pic12f1840_i2c.c: 111: address += mode;
  3721  0CE6  0820               	movf	i2c_send_address@mode^(0+128),w
  3722  0CE7  00A1               	movwf	??_i2c_send_address^(0+128)
  3723  0CE8  0821               	movf	??_i2c_send_address^(0+128),w
  3724  0CE9  07A2               	addwf	i2c_send_address@address^(0+128),f
  3725                           
  3726                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  3727  0CEA  0822               	movf	i2c_send_address@address^(0+128),w
  3728  0CEB  0024               	movlb	4	; select bank4
  3729  0CEC  0091               	movwf	17	;volatile
  3730  0CED  0008               	return
  3731  0CEE                     __end_of_i2c_send_address:	
  3732                           
  3733                           	psect	text23
  3734  0CA7                     __ptext23:	
  3735 ;; *************** function _i2c_send_ack *****************
  3736 ;; Defined at:
  3737 ;;		line 97 in file "pic12f1840_i2c.c"
  3738 ;; Parameters:    Size  Location     Type
  3739 ;;  ack             1    wreg     unsigned char 
  3740 ;; Auto vars:     Size  Location     Type
  3741 ;;  ack             1    0[BANK1 ] unsigned char 
  3742 ;; Return value:  Size  Location     Type
  3743 ;;		None               void
  3744 ;; Registers used:
  3745 ;;		wreg, status,2, status,0, pclath, cstack
  3746 ;; Tracked objects:
  3747 ;;		On entry : 0/0
  3748 ;;		On exit  : 0/0
  3749 ;;		Unchanged: 0/0
  3750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3751 ;;      Params:         0       0       0       0
  3752 ;;      Locals:         0       0       1       0
  3753 ;;      Temps:          0       0       0       0
  3754 ;;      Totals:         0       0       1       0
  3755 ;;Total ram usage:        1 bytes
  3756 ;; Hardware stack levels used:    1
  3757 ;; Hardware stack levels required when called:   10
  3758 ;; This function calls:
  3759 ;;		_i2c_wait
  3760 ;; This function is called by:
  3761 ;;		_ds1307_get_clock
  3762 ;;		_at24c32_read_byte
  3763 ;; This function uses a non-reentrant model
  3764 ;;
  3765                           
  3766                           
  3767                           ;psect for function _i2c_send_ack
  3768  0CA7                     _i2c_send_ack:	
  3769                           
  3770                           ;incstack = 0
  3771                           ; Regs used in _i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  3772                           ;i2c_send_ack@ack stored from wreg
  3773  0CA7  0021               	movlb	1	; select bank1
  3774  0CA8  00A0               	movwf	i2c_send_ack@ack^(0+128)
  3775                           
  3776                           ;pic12f1840_i2c.c: 98: i2c_wait();
  3777  0CA9  318C  2425         	fcall	_i2c_wait
  3778                           
  3779                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  3780  0CAB  0021               	movlb	1	; select bank1
  3781  0CAC  0820               	movf	i2c_send_ack@ack^(0+128),w
  3782  0CAD  0024               	movlb	4	; select bank4
  3783  0CAE  1D03               	skipz
  3784  0CAF  1696               	bsf	22,5	;volatile
  3785  0CB0  1903               	skipnz
  3786  0CB1  1296               	bcf	22,5	;volatile
  3787                           
  3788                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  3789  0CB2  1616               	bsf	22,4	;volatile
  3790  0CB3  0008               	return
  3791  0CB4                     __end_of_i2c_send_ack:	
  3792                           
  3793                           	psect	text24
  3794  0BF0                     __ptext24:	
  3795 ;; *************** function _i2c_restart *****************
  3796 ;; Defined at:
  3797 ;;		line 87 in file "pic12f1840_i2c.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;		None               void
  3804 ;; Registers used:
  3805 ;;		wreg, status,2, status,0, pclath, cstack
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3811 ;;      Params:         0       0       0       0
  3812 ;;      Locals:         0       0       0       0
  3813 ;;      Temps:          0       0       0       0
  3814 ;;      Totals:         0       0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used:    1
  3817 ;; Hardware stack levels required when called:   10
  3818 ;; This function calls:
  3819 ;;		_i2c_wait
  3820 ;; This function is called by:
  3821 ;;		_ds1307_get_clock
  3822 ;;		_at24c32_read_byte
  3823 ;; This function uses a non-reentrant model
  3824 ;;
  3825                           
  3826                           
  3827                           ;psect for function _i2c_restart
  3828  0BF0                     _i2c_restart:	
  3829                           
  3830                           ;pic12f1840_i2c.c: 88: i2c_wait();
  3831                           
  3832                           ;incstack = 0
  3833                           ; Regs used in _i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  3834  0BF0  318C  2425         	fcall	_i2c_wait
  3835                           
  3836                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  3837  0BF2  0024               	movlb	4	; select bank4
  3838  0BF3  1496               	bsf	22,1	;volatile
  3839  0BF4  0008               	return
  3840  0BF5                     __end_of_i2c_restart:	
  3841                           
  3842                           	psect	text25
  3843  0CD0                     __ptext25:	
  3844 ;; *************** function _i2c_read_data *****************
  3845 ;; Defined at:
  3846 ;;		line 120 in file "pic12f1840_i2c.c"
  3847 ;; Parameters:    Size  Location     Type
  3848 ;;		None
  3849 ;; Auto vars:     Size  Location     Type
  3850 ;;  read_data       1    1[BANK1 ] unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      unsigned char 
  3853 ;; Registers used:
  3854 ;;		wreg, status,2, status,0, pclath, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3860 ;;      Params:         0       0       0       0
  3861 ;;      Locals:         0       0       1       0
  3862 ;;      Temps:          0       0       1       0
  3863 ;;      Totals:         0       0       2       0
  3864 ;;Total ram usage:        2 bytes
  3865 ;; Hardware stack levels used:    1
  3866 ;; Hardware stack levels required when called:   10
  3867 ;; This function calls:
  3868 ;;		_i2c_wait
  3869 ;; This function is called by:
  3870 ;;		_ds1307_get_clock
  3871 ;;		_at24c32_read_byte
  3872 ;; This function uses a non-reentrant model
  3873 ;;
  3874                           
  3875                           
  3876                           ;psect for function _i2c_read_data
  3877  0CD0                     _i2c_read_data:	
  3878                           
  3879                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  3880                           ;pic12f1840_i2c.c: 123: i2c_wait();
  3881                           
  3882                           ;incstack = 0
  3883                           ; Regs used in _i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  3884  0CD0  318C  2425  318C   	fcall	_i2c_wait
  3885                           
  3886                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  3887  0CD3  0024               	movlb	4	; select bank4
  3888  0CD4  1596               	bsf	22,3	;volatile
  3889                           
  3890                           ;pic12f1840_i2c.c: 125: i2c_wait();
  3891  0CD5  318C  2425         	fcall	_i2c_wait
  3892                           
  3893                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  3894  0CD7  0024               	movlb	4	; select bank4
  3895  0CD8  0811               	movf	17,w	;volatile
  3896  0CD9  0021               	movlb	1	; select bank1
  3897  0CDA  00A0               	movwf	??_i2c_read_data^(0+128)
  3898  0CDB  0820               	movf	??_i2c_read_data^(0+128),w
  3899  0CDC  00A1               	movwf	i2c_read_data@read_data^(0+128)
  3900                           
  3901                           ;pic12f1840_i2c.c: 128: return read_data;
  3902  0CDD  0821               	movf	i2c_read_data@read_data^(0+128),w
  3903  0CDE  0008               	return
  3904  0CDF                     __end_of_i2c_read_data:	
  3905                           
  3906                           	psect	text26
  3907  0C25                     __ptext26:	
  3908 ;; *************** function _i2c_wait *****************
  3909 ;; Defined at:
  3910 ;;		line 76 in file "pic12f1840_i2c.c"
  3911 ;; Parameters:    Size  Location     Type
  3912 ;;		None
  3913 ;; Auto vars:     Size  Location     Type
  3914 ;;		None
  3915 ;; Return value:  Size  Location     Type
  3916 ;;		None               void
  3917 ;; Registers used:
  3918 ;;		wreg, status,2
  3919 ;; Tracked objects:
  3920 ;;		On entry : 0/0
  3921 ;;		On exit  : 0/0
  3922 ;;		Unchanged: 0/0
  3923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3924 ;;      Params:         0       0       0       0
  3925 ;;      Locals:         0       0       0       0
  3926 ;;      Temps:          0       0       0       0
  3927 ;;      Totals:         0       0       0       0
  3928 ;;Total ram usage:        0 bytes
  3929 ;; Hardware stack levels used:    1
  3930 ;; Hardware stack levels required when called:    9
  3931 ;; This function calls:
  3932 ;;		Nothing
  3933 ;; This function is called by:
  3934 ;;		_i2c_start
  3935 ;;		_i2c_restart
  3936 ;;		_i2c_stop
  3937 ;;		_i2c_send_ack
  3938 ;;		_i2c_send_address
  3939 ;;		_i2c_send_data
  3940 ;;		_i2c_read_data
  3941 ;;		_i2c_read_ack
  3942 ;; This function uses a non-reentrant model
  3943 ;;
  3944                           
  3945                           
  3946                           ;psect for function _i2c_wait
  3947  0C25                     _i2c_wait:	
  3948  0C25                     l2089:	
  3949                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  3950                           
  3951                           ;incstack = 0
  3952                           ; Regs used in _i2c_wait: [wreg+status,2]
  3953                           
  3954  0C25  0024               	movlb	4	; select bank4
  3955  0C26  0816               	movf	22,w	;volatile
  3956  0C27  391F               	andlw	31
  3957  0C28  1903               	btfsc	3,2
  3958  0C29  1914               	btfsc	20,2	;volatile
  3959  0C2A  2C25               	goto	l2089
  3960  0C2B  0008               	return
  3961  0C2C                     __end_of_i2c_wait:	
  3962                           
  3963                           	psect	intentry
  3964  0004                     __pintentry:	
  3965 ;; *************** function _tmr_isr *****************
  3966 ;; Defined at:
  3967 ;;		line 208 in file "main.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  time           10   41[BANK0 ] unsigned char [10]
  3972 ;;  date           10   31[BANK0 ] unsigned char [10]
  3973 ;;  pos             2   51[BANK0 ] unsigned char [2]
  3974 ;; Return value:  Size  Location     Type
  3975 ;;		None               void
  3976 ;; Registers used:
  3977 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3978 ;; Tracked objects:
  3979 ;;		On entry : 0/0
  3980 ;;		On exit  : 0/0
  3981 ;;		Unchanged: 0/0
  3982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3983 ;;      Params:         0       0       0       0
  3984 ;;      Locals:         0      22       0       0
  3985 ;;      Temps:          0       3       0       0
  3986 ;;      Totals:         0      25       0       0
  3987 ;;Total ram usage:       25 bytes
  3988 ;; Hardware stack levels used:    1
  3989 ;; Hardware stack levels required when called:    8
  3990 ;; This function calls:
  3991 ;;		_ds1307_date_formatted
  3992 ;;		_ds1307_time_formatted
  3993 ;;		_keypad_read_key
  3994 ;;		_lcd_goto
  3995 ;;		_lcd_write
  3996 ;;		_sprintf
  3997 ;;		_update_clock
  3998 ;;		i1_ds1307_get_clock
  3999 ;;		i1_lcd_backlight
  4000 ;;		i1_write_t1
  4001 ;; This function is called by:
  4002 ;;		Interrupt level 1
  4003 ;; This function uses a non-reentrant model
  4004 ;;
  4005                           
  4006  0004                     _tmr_isr:	
  4007                           
  4008                           ;incstack = 0
  4009 ;; hardware stack exceeded
  4010                           ; Regs used in _tmr_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4011  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4012  0005  3180               	pagesel	$
  4013  0006  0020               	movlb	0	; select bank0
  4014  0007  087F               	movf	127,w
  4015  0008  00BE               	movwf	??_tmr_isr+2
  4016                           
  4017                           ;main.c: 209: write_t1(g_reload_value);
  4018  0009  0021               	movlb	1	; select bank1
  4019  000A  0845               	movf	(_g_reload_value+1)^(0+128),w
  4020  000B  01F1               	clrf	i1write_t1@value+1
  4021  000C  07F1               	addwf	i1write_t1@value+1,f
  4022  000D  0844               	movf	_g_reload_value^(0+128),w
  4023  000E  01F0               	clrf	i1write_t1@value
  4024  000F  07F0               	addwf	i1write_t1@value,f
  4025  0010  318C  242C  3180   	fcall	i1_write_t1
  4026                           
  4027                           ;main.c: 210: g_counter1++;
  4028  0013  3001               	movlw	1
  4029  0014  0020               	movlb	0	; select bank0
  4030  0015  00BC               	movwf	??_tmr_isr
  4031  0016  083C               	movf	??_tmr_isr,w
  4032  0017  07D7               	addwf	_g_counter1,f
  4033                           
  4034                           ;main.c: 213: switch (keypad_read_key()) {
  4035  0018  2847               	goto	i1l3059
  4036  0019                     i1l3039:	
  4037                           ;main.c: 214: case 0x01:
  4038                           
  4039                           
  4040                           ;main.c: 215: update_clock(1);
  4041  0019  3001               	movlw	1
  4042  001A  3180  20E6  3180   	fcall	_update_clock
  4043                           
  4044                           ;main.c: 216: break;
  4045  001D  285A               	goto	i1l3061
  4046  001E                     i1l3041:	
  4047                           ;main.c: 217: case 0x02:
  4048                           
  4049                           
  4050                           ;main.c: 218: update_clock(0);
  4051  001E  3000               	movlw	0
  4052  001F  3180  20E6  3180   	fcall	_update_clock
  4053                           
  4054                           ;main.c: 219: break;
  4055  0022  285A               	goto	i1l3061
  4056  0023                     i1l3043:	
  4057                           ;main.c: 220: case 0x04:
  4058                           
  4059                           
  4060                           ;main.c: 221: if (g_clk_pos == CLK_POS_HR) {
  4061  0023  0020               	movlb	0	; select bank0
  4062  0024  0856               	movf	_g_clk_pos,w
  4063  0025  3A01               	xorlw	1
  4064  0026  1D03               	skipz
  4065  0027  282D               	goto	i1l3047
  4066                           
  4067                           ;main.c: 222: g_clk_pos = CLK_POS_HR_MOD;
  4068  0028  3007               	movlw	7
  4069  0029  00BC               	movwf	??_tmr_isr
  4070  002A  083C               	movf	??_tmr_isr,w
  4071  002B  00D6               	movwf	_g_clk_pos
  4072                           
  4073                           ;main.c: 223: } else {
  4074  002C  285A               	goto	i1l3061
  4075  002D                     i1l3047:	
  4076                           
  4077                           ;main.c: 224: g_clk_pos--;
  4078  002D  3001               	movlw	1
  4079  002E  02D6               	subwf	_g_clk_pos,f
  4080                           
  4081                           ;main.c: 225: }
  4082                           ;main.c: 226: break;
  4083  002F  285A               	goto	i1l3061
  4084  0030                     i1l3049:	
  4085                           ;main.c: 227: case 0x08:
  4086                           
  4087                           
  4088                           ;main.c: 228: if (g_clk_pos == CLK_POS_HR_MOD) {
  4089  0030  0020               	movlb	0	; select bank0
  4090  0031  0856               	movf	_g_clk_pos,w
  4091  0032  3A07               	xorlw	7
  4092  0033  1D03               	skipz
  4093  0034  2838               	goto	i1l3053
  4094                           
  4095                           ;main.c: 229: g_clk_pos = CLK_POS_HR;
  4096  0035  01D6               	clrf	_g_clk_pos
  4097  0036  0AD6               	incf	_g_clk_pos,f
  4098                           
  4099                           ;main.c: 230: } else {
  4100  0037  285A               	goto	i1l3061
  4101  0038                     i1l3053:	
  4102                           
  4103                           ;main.c: 231: g_clk_pos++;
  4104  0038  3001               	movlw	1
  4105  0039  00BC               	movwf	??_tmr_isr
  4106  003A  083C               	movf	??_tmr_isr,w
  4107  003B  07D6               	addwf	_g_clk_pos,f
  4108                           
  4109                           ;main.c: 232: }
  4110                           ;main.c: 233: break;
  4111  003C  285A               	goto	i1l3061
  4112  003D                     i1l3055:	
  4113                           ;main.c: 234: case 0x10:
  4114                           
  4115                           
  4116                           ;main.c: 235: g_bl = !g_bl;
  4117  003D  0020               	movlb	0	; select bank0
  4118  003E  0855               	movf	_g_bl,w
  4119  003F  3A00               	xorlw	0
  4120  0040  3000               	movlw	0
  4121  0041  1903               	skipnz
  4122  0042  3001               	movlw	1
  4123  0043  00BC               	movwf	??_tmr_isr
  4124  0044  083C               	movf	??_tmr_isr,w
  4125  0045  00D5               	movwf	_g_bl
  4126                           
  4127                           ;main.c: 237: }
  4128                           
  4129                           ;main.c: 236: break;
  4130  0046  285A               	goto	i1l3061
  4131  0047                     i1l3059:	
  4132  0047  318E  269B  3180   	fcall	_keypad_read_key
  4133                           
  4134                           ; Switch size 1, requested type "space"
  4135                           ; Number of cases is 5, Range of values is 1 to 16
  4136                           ; switch strategies available:
  4137                           ; Name         Instructions Cycles
  4138                           ; simple_byte           16     9 (average)
  4139                           ; direct_byte           41     9 (fixed)
  4140                           ; jumptable            263     9 (fixed)
  4141                           ;	Chosen strategy is simple_byte
  4142  004A  3A01               	xorlw	1	; case 1
  4143  004B  1903               	skipnz
  4144  004C  2819               	goto	i1l3039
  4145  004D  3A03               	xorlw	3	; case 2
  4146  004E  1903               	skipnz
  4147  004F  281E               	goto	i1l3041
  4148  0050  3A06               	xorlw	6	; case 4
  4149  0051  1903               	skipnz
  4150  0052  2823               	goto	i1l3043
  4151  0053  3A0C               	xorlw	12	; case 8
  4152  0054  1903               	skipnz
  4153  0055  2830               	goto	i1l3049
  4154  0056  3A18               	xorlw	24	; case 16
  4155  0057  1903               	skipnz
  4156  0058  283D               	goto	i1l3055
  4157  0059  285A               	goto	i1l3061
  4158  005A                     i1l3061:	
  4159                           
  4160                           ;main.c: 240: if (g_counter1 == 10) {
  4161  005A  0020               	movlb	0	; select bank0
  4162  005B  0857               	movf	_g_counter1,w
  4163  005C  3A0A               	xorlw	10
  4164  005D  1D03               	skipz
  4165  005E  28CF               	goto	i1l3095
  4166                           
  4167                           ;main.c: 241: uint8_t time[10], date[10], pos[2];
  4168                           ;main.c: 243: ds1307_get_clock();
  4169  005F  3187  2717  3180   	fcall	i1_ds1307_get_clock
  4170                           
  4171                           ;main.c: 244: ds1307_time_formatted(time);
  4172  0062  3049               	movlw	tmr_isr@time& (0+255)
  4173  0063  3183  23BC  3180   	fcall	_ds1307_time_formatted
  4174                           
  4175                           ;main.c: 245: ds1307_date_formatted(date);
  4176  0066  303F               	movlw	tmr_isr@date& (0+255)
  4177  0067  3185  25D7  3180   	fcall	_ds1307_date_formatted
  4178                           
  4179                           ;main.c: 246: lcd_goto(1, 1);
  4180  006A  01FD               	clrf	lcd_goto@col
  4181  006B  0AFD               	incf	lcd_goto@col,f
  4182  006C  3001               	movlw	1
  4183  006D  318F  2703  3180   	fcall	_lcd_goto
  4184                           
  4185                           ;main.c: 247: lcd_write((uint8_t *) "Time: ");
  4186  0070  3038               	movlw	low (STR_1| (0+32768))
  4187  0071  0020               	movlb	0	; select bank0
  4188  0072  00A0               	movwf	lcd_write@str
  4189  0073  3086               	movlw	high (STR_1| (0+32768))
  4190  0074  00A1               	movwf	lcd_write@str+1
  4191  0075  318F  272A  3180   	fcall	_lcd_write
  4192                           
  4193                           ;main.c: 248: lcd_goto(1, 7);
  4194  0078  3007               	movlw	7
  4195  0079  0020               	movlb	0	; select bank0
  4196  007A  00BC               	movwf	??_tmr_isr
  4197  007B  083C               	movf	??_tmr_isr,w
  4198  007C  00FD               	movwf	lcd_goto@col
  4199  007D  3001               	movlw	1
  4200  007E  318F  2703  3180   	fcall	_lcd_goto
  4201                           
  4202                           ;main.c: 249: lcd_write(time);
  4203  0081  3049               	movlw	low tmr_isr@time
  4204  0082  0020               	movlb	0	; select bank0
  4205  0083  00A0               	movwf	lcd_write@str
  4206  0084  3000               	movlw	high tmr_isr@time
  4207  0085  00A1               	movwf	lcd_write@str+1
  4208  0086  318F  272A  3180   	fcall	_lcd_write
  4209                           
  4210                           ;main.c: 250: lcd_goto(2, 1);
  4211  0089  01FD               	clrf	lcd_goto@col
  4212  008A  0AFD               	incf	lcd_goto@col,f
  4213  008B  3002               	movlw	2
  4214  008C  318F  2703  3180   	fcall	_lcd_goto
  4215                           
  4216                           ;main.c: 251: lcd_write((uint8_t *) "Date: ");
  4217  008F  303F               	movlw	low (STR_2| (0+32768))
  4218  0090  0020               	movlb	0	; select bank0
  4219  0091  00A0               	movwf	lcd_write@str
  4220  0092  3086               	movlw	high (STR_2| (0+32768))
  4221  0093  00A1               	movwf	lcd_write@str+1
  4222  0094  318F  272A  3180   	fcall	_lcd_write
  4223                           
  4224                           ;main.c: 252: lcd_goto(2, 7);
  4225  0097  3007               	movlw	7
  4226  0098  0020               	movlb	0	; select bank0
  4227  0099  00BC               	movwf	??_tmr_isr
  4228  009A  083C               	movf	??_tmr_isr,w
  4229  009B  00FD               	movwf	lcd_goto@col
  4230  009C  3002               	movlw	2
  4231  009D  318F  2703  3180   	fcall	_lcd_goto
  4232                           
  4233                           ;main.c: 253: lcd_write(date);
  4234  00A0  303F               	movlw	low tmr_isr@date
  4235  00A1  0020               	movlb	0	; select bank0
  4236  00A2  00A0               	movwf	lcd_write@str
  4237  00A3  3000               	movlw	high tmr_isr@date
  4238  00A4  00A1               	movwf	lcd_write@str+1
  4239  00A5  318F  272A  3180   	fcall	_lcd_write
  4240                           
  4241                           ;main.c: 254: lcd_goto(2, 16);
  4242  00A8  3010               	movlw	16
  4243  00A9  0020               	movlb	0	; select bank0
  4244  00AA  00BC               	movwf	??_tmr_isr
  4245  00AB  083C               	movf	??_tmr_isr,w
  4246  00AC  00FD               	movwf	lcd_goto@col
  4247  00AD  3002               	movlw	2
  4248  00AE  318F  2703  3180   	fcall	_lcd_goto
  4249                           
  4250                           ;main.c: 255: sprintf(pos, "%u", g_clk_pos);
  4251  00B1  3046               	movlw	low (STR_3| (0+32768))
  4252  00B2  0020               	movlb	0	; select bank0
  4253  00B3  00A0               	movwf	sprintf@f
  4254  00B4  3086               	movlw	high (STR_3| (0+32768))
  4255  00B5  00A1               	movwf	sprintf@f+1
  4256  00B6  0856               	movf	_g_clk_pos,w
  4257  00B7  00BC               	movwf	??_tmr_isr
  4258  00B8  01BD               	clrf	??_tmr_isr+1
  4259  00B9  083C               	movf	??_tmr_isr,w
  4260  00BA  00A2               	movwf	?_sprintf+2
  4261  00BB  083D               	movf	??_tmr_isr+1,w
  4262  00BC  00A3               	movwf	?_sprintf+3
  4263  00BD  3053               	movlw	tmr_isr@pos& (0+255)
  4264  00BE  3182  221B  3180   	fcall	_sprintf
  4265                           
  4266                           ;main.c: 256: lcd_write(pos);
  4267  00C1  3053               	movlw	low tmr_isr@pos
  4268  00C2  0020               	movlb	0	; select bank0
  4269  00C3  00A0               	movwf	lcd_write@str
  4270  00C4  3000               	movlw	high tmr_isr@pos
  4271  00C5  00A1               	movwf	lcd_write@str+1
  4272  00C6  318F  272A  3180   	fcall	_lcd_write
  4273                           
  4274                           ;main.c: 258: lcd_backlight(g_bl);
  4275  00C9  0020               	movlb	0	; select bank0
  4276  00CA  0855               	movf	_g_bl,w
  4277  00CB  318C  2445         	fcall	i1_lcd_backlight
  4278                           
  4279                           ;main.c: 259: g_counter1 = 0;
  4280  00CD  0020               	movlb	0	; select bank0
  4281  00CE  01D7               	clrf	_g_counter1
  4282  00CF                     i1l3095:	
  4283                           
  4284                           ;main.c: 260: }
  4285                           ;main.c: 262: PIR1bits.TMR1IF = 0;
  4286  00CF  1011               	bcf	17,0	;volatile
  4287  00D0  083E               	movf	??_tmr_isr+2,w
  4288  00D1  00FF               	movwf	127
  4289  00D2  107E               	bcf	126,0	;clear compiler interrupt flag
  4290  00D3  0009               	retfie
  4291  00D4                     __end_of_tmr_isr:	
  4292                           
  4293                           	psect	text28
  4294  0C2C                     __ptext28:	
  4295 ;; *************** function i1_write_t1 *****************
  4296 ;; Defined at:
  4297 ;;		line 116 in file "main.c"
  4298 ;; Parameters:    Size  Location     Type
  4299 ;;  value           2    0[COMMON] unsigned int 
  4300 ;; Auto vars:     Size  Location     Type
  4301 ;;		None
  4302 ;; Return value:  Size  Location     Type
  4303 ;;		None               void
  4304 ;; Registers used:
  4305 ;;		wreg, status,2
  4306 ;; Tracked objects:
  4307 ;;		On entry : 0/0
  4308 ;;		On exit  : 0/0
  4309 ;;		Unchanged: 0/0
  4310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4311 ;;      Params:         2       0       0       0
  4312 ;;      Locals:         0       0       0       0
  4313 ;;      Temps:          0       0       0       0
  4314 ;;      Totals:         2       0       0       0
  4315 ;;Total ram usage:        2 bytes
  4316 ;; Hardware stack levels used:    1
  4317 ;; This function calls:
  4318 ;;		Nothing
  4319 ;; This function is called by:
  4320 ;;		_tmr_isr
  4321 ;; This function uses a non-reentrant model
  4322 ;;
  4323                           
  4324                           
  4325                           ;psect for function i1_write_t1
  4326  0C2C                     i1_write_t1:	
  4327                           
  4328                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  4329                           
  4330                           ;incstack = 0
  4331                           ; Regs used in i1_write_t1: [wreg+status,2]
  4332  0C2C  0020               	movlb	0	; select bank0
  4333  0C2D  1018               	bcf	24,0	;volatile
  4334                           
  4335                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  4336  0C2E  0871               	movf	i1write_t1@value+1,w
  4337  0C2F  0097               	movwf	23	;volatile
  4338                           
  4339                           ;main.c: 121: TMR1L = (uint8_t) value;
  4340  0C30  0870               	movf	i1write_t1@value,w
  4341  0C31  0096               	movwf	22	;volatile
  4342                           
  4343                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  4344  0C32  1418               	bsf	24,0	;volatile
  4345  0C33  0008               	return
  4346  0C34                     __end_ofi1_write_t1:	
  4347                           
  4348                           	psect	text29
  4349  0C45                     __ptext29:	
  4350 ;; *************** function i1_lcd_backlight *****************
  4351 ;; Defined at:
  4352 ;;		line 227 in file "HD44780-IOE.c"
  4353 ;; Parameters:    Size  Location     Type
  4354 ;;  state           1    wreg     unsigned char 
  4355 ;; Auto vars:     Size  Location     Type
  4356 ;;  state           1    6[COMMON] unsigned char 
  4357 ;; Return value:  Size  Location     Type
  4358 ;;		None               void
  4359 ;; Registers used:
  4360 ;;		wreg, status,2, status,0, pclath, cstack
  4361 ;; Tracked objects:
  4362 ;;		On entry : 0/0
  4363 ;;		On exit  : 0/0
  4364 ;;		Unchanged: 0/0
  4365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4366 ;;      Params:         0       0       0       0
  4367 ;;      Locals:         1       0       0       0
  4368 ;;      Temps:          0       0       0       0
  4369 ;;      Totals:         1       0       0       0
  4370 ;;Total ram usage:        1 bytes
  4371 ;; Hardware stack levels used:    1
  4372 ;; Hardware stack levels required when called:    4
  4373 ;; This function calls:
  4374 ;;		i1_mcp23017_ioa_send_byte
  4375 ;; This function is called by:
  4376 ;;		_tmr_isr
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           
  4381                           ;psect for function i1_lcd_backlight
  4382  0C45                     i1_lcd_backlight:	
  4383                           
  4384                           ;incstack = 0
  4385                           ; Regs used in i1_lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  4386                           ;i1lcd_backlight@state stored from wreg
  4387  0C45  00F6               	movwf	i1lcd_backlight@state
  4388                           
  4389                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  4390  0C46  0876               	movf	i1lcd_backlight@state,w
  4391  0C47  0021               	movlb	1	; select bank1
  4392  0C48  1346               	bcf	_LCDPort^(0+128),6
  4393  0C49  1D03               	skipz
  4394  0C4A  1746               	bsf	_LCDPort^(0+128),6
  4395                           
  4396                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  4397  0C4B  318C  243C         	fcall	i1_mcp23017_ioa_send_byte
  4398  0C4D  0008               	return
  4399  0C4E                     __end_ofi1_lcd_backlight:	
  4400                           
  4401                           	psect	text30
  4402  00E6                     __ptext30:	
  4403 ;; *************** function _update_clock *****************
  4404 ;; Defined at:
  4405 ;;		line 139 in file "main.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  up_down         1    wreg     unsigned char 
  4408 ;; Auto vars:     Size  Location     Type
  4409 ;;  up_down         1   13[BANK0 ] unsigned char 
  4410 ;;  val             1   14[BANK0 ] unsigned char 
  4411 ;;  pm              1   12[BANK0 ] unsigned char 
  4412 ;; Return value:  Size  Location     Type
  4413 ;;		None               void
  4414 ;; Registers used:
  4415 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4416 ;; Tracked objects:
  4417 ;;		On entry : 0/0
  4418 ;;		On exit  : 0/0
  4419 ;;		Unchanged: 0/0
  4420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4421 ;;      Params:         0       0       0       0
  4422 ;;      Locals:         0       3       0       0
  4423 ;;      Temps:          0       3       0       0
  4424 ;;      Totals:         0       6       0       0
  4425 ;;Total ram usage:        6 bytes
  4426 ;; Hardware stack levels used:    1
  4427 ;; Hardware stack levels required when called:    5
  4428 ;; This function calls:
  4429 ;;		_adjust_val
  4430 ;;		_ds1307_get_day_of_month
  4431 ;;		_ds1307_get_hours
  4432 ;;		_ds1307_get_minutes
  4433 ;;		_ds1307_get_month
  4434 ;;		_ds1307_get_seconds
  4435 ;;		_ds1307_get_year
  4436 ;;		_ds1307_is_12hr_mode
  4437 ;;		_ds1307_is_pm
  4438 ;;		_ds1307_set_clock
  4439 ;;		_ds1307_set_day_of_month
  4440 ;;		_ds1307_set_hours
  4441 ;;		_ds1307_set_minutes
  4442 ;;		_ds1307_set_month
  4443 ;;		_ds1307_set_pm_am
  4444 ;;		_ds1307_set_seconds
  4445 ;;		_ds1307_set_year
  4446 ;;		_ds1307_stop_clock
  4447 ;;		_ds1307_switch_to_12hr
  4448 ;;		_ds1307_switch_to_24hr
  4449 ;;		i1_ds1307_get_clock
  4450 ;; This function is called by:
  4451 ;;		_tmr_isr
  4452 ;; This function uses a non-reentrant model
  4453 ;;
  4454                           
  4455                           
  4456                           ;psect for function _update_clock
  4457  00E6                     _update_clock:	
  4458                           
  4459                           ;incstack = 0
  4460                           ; Regs used in _update_clock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4461                           ;update_clock@up_down stored from wreg
  4462  00E6  0020               	movlb	0	; select bank0
  4463  00E7  00AD               	movwf	update_clock@up_down
  4464                           
  4465                           ;main.c: 140: uint8_t val;
  4466                           ;main.c: 141: bool pm;
  4467                           ;main.c: 143: ds1307_stop_clock();
  4468  00E8  318D  25FD  3180   	fcall	_ds1307_stop_clock
  4469                           
  4470                           ;main.c: 144: ds1307_get_clock();
  4471  00EB  3187  2717  3180   	fcall	i1_ds1307_get_clock
  4472                           
  4473                           ;main.c: 145: switch (g_clk_pos) {
  4474  00EE  2A00               	goto	i1l2937
  4475  00EF                     i1l2883:	
  4476                           ;main.c: 146: case CLK_POS_HR:
  4477                           
  4478                           
  4479                           ;main.c: 148: if (ds1307_is_12hr_mode()) {
  4480  00EF  318B  23DC  3180   	fcall	_ds1307_is_12hr_mode
  4481  00F2  3A00               	xorlw	0
  4482  00F3  1903               	skipnz
  4483  00F4  2942               	goto	i1l2917
  4484                           
  4485                           ;main.c: 149: val = ds1307_get_hours();
  4486  00F5  318D  25AA  3180   	fcall	_ds1307_get_hours
  4487  00F8  0020               	movlb	0	; select bank0
  4488  00F9  00A9               	movwf	??_update_clock
  4489  00FA  0829               	movf	??_update_clock,w
  4490  00FB  00AE               	movwf	update_clock@val
  4491                           
  4492                           ;main.c: 150: pm = ds1307_is_pm();
  4493  00FC  318E  2644  3180   	fcall	_ds1307_is_pm
  4494  00FF  0020               	movlb	0	; select bank0
  4495  0100  00A9               	movwf	??_update_clock
  4496  0101  0829               	movf	??_update_clock,w
  4497  0102  00AC               	movwf	update_clock@pm
  4498                           
  4499                           ;main.c: 151: if (((val == 12) && (!up_down)) || ((val == 11) && up_down)) {
  4500  0103  082E               	movf	update_clock@val,w
  4501  0104  3A0C               	xorlw	12
  4502  0105  1903               	btfsc	3,2
  4503  0106  082D               	movf	update_clock@up_down,w
  4504  0107  1903               	btfsc	3,2
  4505  0108  2910               	goto	i1l2895
  4506  0109  082E               	movf	update_clock@val,w
  4507  010A  3A0B               	xorlw	11
  4508  010B  1D03               	skipz
  4509  010C  2918               	goto	i1l197
  4510  010D  082D               	movf	update_clock@up_down,w
  4511  010E  1903               	btfsc	3,2
  4512  010F  2918               	goto	i1l197
  4513  0110                     i1l2895:	
  4514                           
  4515                           ;main.c: 152: pm = !pm;
  4516  0110  082C               	movf	update_clock@pm,w
  4517  0111  3A00               	xorlw	0
  4518  0112  3000               	movlw	0
  4519  0113  1903               	skipnz
  4520  0114  3001               	movlw	1
  4521  0115  00A9               	movwf	??_update_clock
  4522  0116  0829               	movf	??_update_clock,w
  4523  0117  00AC               	movwf	update_clock@pm
  4524  0118                     i1l197:	
  4525                           
  4526                           ;main.c: 153: }
  4527                           ;main.c: 154: if ((val == 12) && (up_down)) {
  4528  0118  082E               	movf	update_clock@val,w
  4529  0119  3A0C               	xorlw	12
  4530  011A  1D03               	skipz
  4531  011B  2922               	goto	i1l2901
  4532  011C  082D               	movf	update_clock@up_down,w
  4533  011D  1903               	btfsc	3,2
  4534  011E  2922               	goto	i1l2901
  4535                           
  4536                           ;main.c: 155: val = 1;
  4537  011F  01AE               	clrf	update_clock@val
  4538  0120  0AAE               	incf	update_clock@val,f
  4539                           
  4540                           ;main.c: 156: } else if ((val == 1) && (!up_down)) {
  4541  0121  2938               	goto	i1l2913
  4542  0122                     i1l2901:	
  4543  0122  082E               	movf	update_clock@val,w
  4544  0123  3A01               	xorlw	1
  4545  0124  1D03               	skipz
  4546  0125  292E               	goto	i1l2907
  4547  0126  08AD               	movf	update_clock@up_down,f
  4548  0127  1D03               	skipz
  4549  0128  292E               	goto	i1l2907
  4550                           
  4551                           ;main.c: 157: val = 12;
  4552  0129  300C               	movlw	12
  4553  012A  00A9               	movwf	??_update_clock
  4554  012B  0829               	movf	??_update_clock,w
  4555  012C  00AE               	movwf	update_clock@val
  4556                           
  4557                           ;main.c: 158: } else if (up_down) {
  4558  012D  2938               	goto	i1l2913
  4559  012E                     i1l2907:	
  4560  012E  082D               	movf	update_clock@up_down,w
  4561  012F  1903               	btfsc	3,2
  4562  0130  2936               	goto	i1l2911
  4563                           
  4564                           ;main.c: 159: val++;
  4565  0131  3001               	movlw	1
  4566  0132  00A9               	movwf	??_update_clock
  4567  0133  0829               	movf	??_update_clock,w
  4568  0134  07AE               	addwf	update_clock@val,f
  4569                           
  4570                           ;main.c: 160: } else {
  4571  0135  2938               	goto	i1l2913
  4572  0136                     i1l2911:	
  4573                           
  4574                           ;main.c: 161: val--;
  4575  0136  3001               	movlw	1
  4576  0137  02AE               	subwf	update_clock@val,f
  4577  0138                     i1l2913:	
  4578                           
  4579                           ;main.c: 162: }
  4580                           ;main.c: 163: ds1307_set_pm_am(pm);
  4581  0138  082C               	movf	update_clock@pm,w
  4582  0139  318E  262B  3180   	fcall	_ds1307_set_pm_am
  4583                           
  4584                           ;main.c: 164: ds1307_set_hours(val);
  4585  013C  0020               	movlb	0	; select bank0
  4586  013D  082E               	movf	update_clock@val,w
  4587  013E  318F  27A7  3180   	fcall	_ds1307_set_hours
  4588                           
  4589                           ;main.c: 165: } else {
  4590  0141  2A18               	goto	i1l2939
  4591  0142                     i1l2917:	
  4592                           
  4593                           ;main.c: 166: val = ds1307_get_hours();
  4594  0142  318D  25AA  3180   	fcall	_ds1307_get_hours
  4595  0145  0020               	movlb	0	; select bank0
  4596  0146  00A9               	movwf	??_update_clock
  4597  0147  0829               	movf	??_update_clock,w
  4598  0148  00AE               	movwf	update_clock@val
  4599                           
  4600                           ;main.c: 167: val = adjust_val(val, 0, 23, up_down);
  4601  0149  01F0               	clrf	adjust_val@lim_dwn
  4602  014A  3017               	movlw	23
  4603  014B  00A9               	movwf	??_update_clock
  4604  014C  0829               	movf	??_update_clock,w
  4605  014D  00F1               	movwf	adjust_val@lim_up
  4606  014E  082D               	movf	update_clock@up_down,w
  4607  014F  00AA               	movwf	??_update_clock+1
  4608  0150  082A               	movf	??_update_clock+1,w
  4609  0151  00F2               	movwf	adjust_val@up_down
  4610  0152  082E               	movf	update_clock@val,w
  4611  0153  318E  26BD  3180   	fcall	_adjust_val
  4612  0156  0020               	movlb	0	; select bank0
  4613  0157  00AB               	movwf	??_update_clock+2
  4614  0158  082B               	movf	??_update_clock+2,w
  4615  0159  00AE               	movwf	update_clock@val
  4616                           
  4617                           ;main.c: 168: ds1307_set_hours(val);
  4618  015A  082E               	movf	update_clock@val,w
  4619  015B  318F  27A7  3180   	fcall	_ds1307_set_hours
  4620                           
  4621                           ;main.c: 169: }
  4622                           ;main.c: 170: break;
  4623  015E  2A18               	goto	i1l2939
  4624  015F                     i1l2919:	
  4625                           ;main.c: 171: case CLK_POS_MIN:
  4626                           
  4627                           
  4628                           ;main.c: 172: val = ds1307_get_minutes();
  4629  015F  318B  23D7  3180   	fcall	_ds1307_get_minutes
  4630  0162  0020               	movlb	0	; select bank0
  4631  0163  00A9               	movwf	??_update_clock
  4632  0164  0829               	movf	??_update_clock,w
  4633  0165  00AE               	movwf	update_clock@val
  4634                           
  4635                           ;main.c: 173: val = adjust_val(val, 0, 59, up_down);
  4636  0166  01F0               	clrf	adjust_val@lim_dwn
  4637  0167  303B               	movlw	59
  4638  0168  00A9               	movwf	??_update_clock
  4639  0169  0829               	movf	??_update_clock,w
  4640  016A  00F1               	movwf	adjust_val@lim_up
  4641  016B  082D               	movf	update_clock@up_down,w
  4642  016C  00AA               	movwf	??_update_clock+1
  4643  016D  082A               	movf	??_update_clock+1,w
  4644  016E  00F2               	movwf	adjust_val@up_down
  4645  016F  082E               	movf	update_clock@val,w
  4646  0170  318E  26BD  3180   	fcall	_adjust_val
  4647  0173  0020               	movlb	0	; select bank0
  4648  0174  00AB               	movwf	??_update_clock+2
  4649  0175  082B               	movf	??_update_clock+2,w
  4650  0176  00AE               	movwf	update_clock@val
  4651                           
  4652                           ;main.c: 174: ds1307_set_minutes(val);
  4653  0177  082E               	movf	update_clock@val,w
  4654  0178  318C  248D  3180   	fcall	_ds1307_set_minutes
  4655                           
  4656                           ;main.c: 175: break;
  4657  017B  2A18               	goto	i1l2939
  4658  017C                     i1l2921:	
  4659                           ;main.c: 176: case CLK_POS_SEC:
  4660                           
  4661                           
  4662                           ;main.c: 177: val = ds1307_get_seconds();
  4663  017C  318C  2405  3180   	fcall	_ds1307_get_seconds
  4664  017F  0020               	movlb	0	; select bank0
  4665  0180  00A9               	movwf	??_update_clock
  4666  0181  0829               	movf	??_update_clock,w
  4667  0182  00AE               	movwf	update_clock@val
  4668                           
  4669                           ;main.c: 178: val = adjust_val(val, 0, 59, up_down);
  4670  0183  01F0               	clrf	adjust_val@lim_dwn
  4671  0184  303B               	movlw	59
  4672  0185  00A9               	movwf	??_update_clock
  4673  0186  0829               	movf	??_update_clock,w
  4674  0187  00F1               	movwf	adjust_val@lim_up
  4675  0188  082D               	movf	update_clock@up_down,w
  4676  0189  00AA               	movwf	??_update_clock+1
  4677  018A  082A               	movf	??_update_clock+1,w
  4678  018B  00F2               	movwf	adjust_val@up_down
  4679  018C  082E               	movf	update_clock@val,w
  4680  018D  318E  26BD  3180   	fcall	_adjust_val
  4681  0190  0020               	movlb	0	; select bank0
  4682  0191  00AB               	movwf	??_update_clock+2
  4683  0192  082B               	movf	??_update_clock+2,w
  4684  0193  00AE               	movwf	update_clock@val
  4685                           
  4686                           ;main.c: 179: ds1307_set_seconds(val);
  4687  0194  082E               	movf	update_clock@val,w
  4688  0195  318D  254E  3180   	fcall	_ds1307_set_seconds
  4689                           
  4690                           ;main.c: 180: break;
  4691  0198  2A18               	goto	i1l2939
  4692  0199                     i1l2923:	
  4693                           ;main.c: 181: case CLK_POS_MON:
  4694                           
  4695                           
  4696                           ;main.c: 182: val = ds1307_get_month();
  4697  0199  318B  23CD  3180   	fcall	_ds1307_get_month
  4698  019C  0020               	movlb	0	; select bank0
  4699  019D  00A9               	movwf	??_update_clock
  4700  019E  0829               	movf	??_update_clock,w
  4701  019F  00AE               	movwf	update_clock@val
  4702                           
  4703                           ;main.c: 183: val = adjust_val(val, 1, 12, up_down);
  4704  01A0  01F0               	clrf	adjust_val@lim_dwn
  4705  01A1  0AF0               	incf	adjust_val@lim_dwn,f
  4706  01A2  300C               	movlw	12
  4707  01A3  00A9               	movwf	??_update_clock
  4708  01A4  0829               	movf	??_update_clock,w
  4709  01A5  00F1               	movwf	adjust_val@lim_up
  4710  01A6  082D               	movf	update_clock@up_down,w
  4711  01A7  00AA               	movwf	??_update_clock+1
  4712  01A8  082A               	movf	??_update_clock+1,w
  4713  01A9  00F2               	movwf	adjust_val@up_down
  4714  01AA  082E               	movf	update_clock@val,w
  4715  01AB  318E  26BD  3180   	fcall	_adjust_val
  4716  01AE  0020               	movlb	0	; select bank0
  4717  01AF  00AB               	movwf	??_update_clock+2
  4718  01B0  082B               	movf	??_update_clock+2,w
  4719  01B1  00AE               	movwf	update_clock@val
  4720                           
  4721                           ;main.c: 184: ds1307_set_month(val);
  4722  01B2  082E               	movf	update_clock@val,w
  4723  01B3  318D  252E  3180   	fcall	_ds1307_set_month
  4724                           
  4725                           ;main.c: 185: break;
  4726  01B6  2A18               	goto	i1l2939
  4727  01B7                     i1l2925:	
  4728                           ;main.c: 186: case CLK_POS_DAY:
  4729                           
  4730                           
  4731                           ;main.c: 187: val = ds1307_get_day_of_month();
  4732  01B7  318B  23FF  3180   	fcall	_ds1307_get_day_of_month
  4733  01BA  0020               	movlb	0	; select bank0
  4734  01BB  00A9               	movwf	??_update_clock
  4735  01BC  0829               	movf	??_update_clock,w
  4736  01BD  00AE               	movwf	update_clock@val
  4737                           
  4738                           ;main.c: 188: val = adjust_val(val, 1, 31, up_down);
  4739  01BE  01F0               	clrf	adjust_val@lim_dwn
  4740  01BF  0AF0               	incf	adjust_val@lim_dwn,f
  4741  01C0  301F               	movlw	31
  4742  01C1  00A9               	movwf	??_update_clock
  4743  01C2  0829               	movf	??_update_clock,w
  4744  01C3  00F1               	movwf	adjust_val@lim_up
  4745  01C4  082D               	movf	update_clock@up_down,w
  4746  01C5  00AA               	movwf	??_update_clock+1
  4747  01C6  082A               	movf	??_update_clock+1,w
  4748  01C7  00F2               	movwf	adjust_val@up_down
  4749  01C8  082E               	movf	update_clock@val,w
  4750  01C9  318E  26BD  3180   	fcall	_adjust_val
  4751  01CC  0020               	movlb	0	; select bank0
  4752  01CD  00AB               	movwf	??_update_clock+2
  4753  01CE  082B               	movf	??_update_clock+2,w
  4754  01CF  00AE               	movwf	update_clock@val
  4755                           
  4756                           ;main.c: 189: ds1307_set_day_of_month(val);
  4757  01D0  082E               	movf	update_clock@val,w
  4758  01D1  318D  251E  3180   	fcall	_ds1307_set_day_of_month
  4759                           
  4760                           ;main.c: 190: break;
  4761  01D4  2A18               	goto	i1l2939
  4762  01D5                     i1l2927:	
  4763                           ;main.c: 191: case CLK_POS_YR:
  4764                           
  4765                           
  4766                           ;main.c: 192: val = ds1307_get_year();
  4767  01D5  318B  23D2  3180   	fcall	_ds1307_get_year
  4768  01D8  0020               	movlb	0	; select bank0
  4769  01D9  00A9               	movwf	??_update_clock
  4770  01DA  0829               	movf	??_update_clock,w
  4771  01DB  00AE               	movwf	update_clock@val
  4772                           
  4773                           ;main.c: 193: val = adjust_val(val, 0, 99, up_down);
  4774  01DC  01F0               	clrf	adjust_val@lim_dwn
  4775  01DD  3063               	movlw	99
  4776  01DE  00A9               	movwf	??_update_clock
  4777  01DF  0829               	movf	??_update_clock,w
  4778  01E0  00F1               	movwf	adjust_val@lim_up
  4779  01E1  082D               	movf	update_clock@up_down,w
  4780  01E2  00AA               	movwf	??_update_clock+1
  4781  01E3  082A               	movf	??_update_clock+1,w
  4782  01E4  00F2               	movwf	adjust_val@up_down
  4783  01E5  082E               	movf	update_clock@val,w
  4784  01E6  318E  26BD  3180   	fcall	_adjust_val
  4785  01E9  0020               	movlb	0	; select bank0
  4786  01EA  00AB               	movwf	??_update_clock+2
  4787  01EB  082B               	movf	??_update_clock+2,w
  4788  01EC  00AE               	movwf	update_clock@val
  4789                           
  4790                           ;main.c: 194: ds1307_set_year(val);
  4791  01ED  082E               	movf	update_clock@val,w
  4792  01EE  318C  249A  3180   	fcall	_ds1307_set_year
  4793                           
  4794                           ;main.c: 195: break;
  4795  01F1  2A18               	goto	i1l2939
  4796  01F2                     i1l2929:	
  4797                           ;main.c: 196: case CLK_POS_HR_MOD:
  4798                           
  4799                           
  4800                           ;main.c: 197: if (ds1307_is_12hr_mode() == 1) {
  4801  01F2  318B  23DC  3180   	fcall	_ds1307_is_12hr_mode
  4802  01F5  3A01               	xorlw	1
  4803  01F6  1D03               	skipz
  4804  01F7  29FC               	goto	i1l2933
  4805                           
  4806                           ;main.c: 198: ds1307_switch_to_24hr();
  4807  01F8  3187  27BD  3180   	fcall	_ds1307_switch_to_24hr
  4808                           
  4809                           ;main.c: 199: } else {
  4810  01FB  2A18               	goto	i1l2939
  4811  01FC                     i1l2933:	
  4812                           
  4813                           ;main.c: 200: ds1307_switch_to_12hr();
  4814  01FC  3185  251A  3180   	fcall	_ds1307_switch_to_12hr
  4815                           
  4816                           ;main.c: 203: }
  4817                           
  4818                           ;main.c: 201: }
  4819                           ;main.c: 202: break;
  4820  01FF  2A18               	goto	i1l2939
  4821  0200                     i1l2937:	
  4822  0200  0020               	movlb	0	; select bank0
  4823  0201  0856               	movf	_g_clk_pos,w
  4824                           
  4825                           ; Switch size 1, requested type "space"
  4826                           ; Number of cases is 7, Range of values is 1 to 7
  4827                           ; switch strategies available:
  4828                           ; Name         Instructions Cycles
  4829                           ; simple_byte           22    12 (average)
  4830                           ; direct_byte           23     9 (fixed)
  4831                           ; jumptable            263     9 (fixed)
  4832                           ;	Chosen strategy is simple_byte
  4833  0202  3A01               	xorlw	1	; case 1
  4834  0203  1903               	skipnz
  4835  0204  28EF               	goto	i1l2883
  4836  0205  3A03               	xorlw	3	; case 2
  4837  0206  1903               	skipnz
  4838  0207  295F               	goto	i1l2919
  4839  0208  3A01               	xorlw	1	; case 3
  4840  0209  1903               	skipnz
  4841  020A  297C               	goto	i1l2921
  4842  020B  3A07               	xorlw	7	; case 4
  4843  020C  1903               	skipnz
  4844  020D  2999               	goto	i1l2923
  4845  020E  3A01               	xorlw	1	; case 5
  4846  020F  1903               	skipnz
  4847  0210  29B7               	goto	i1l2925
  4848  0211  3A03               	xorlw	3	; case 6
  4849  0212  1903               	skipnz
  4850  0213  29D5               	goto	i1l2927
  4851  0214  3A01               	xorlw	1	; case 7
  4852  0215  1903               	skipnz
  4853  0216  29F2               	goto	i1l2929
  4854  0217  2A18               	goto	i1l2939
  4855  0218                     i1l2939:	
  4856                           
  4857                           ;main.c: 204: ds1307_set_clock();
  4858  0218  3185  254B         	fcall	_ds1307_set_clock
  4859  021A  0008               	return
  4860  021B                     __end_of_update_clock:	
  4861                           
  4862                           	psect	text31
  4863  0717                     __ptext31:	
  4864 ;; *************** function i1_ds1307_get_clock *****************
  4865 ;; Defined at:
  4866 ;;		line 140 in file "ds1307.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;		None
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  ds1307_get_c    1    4[COMMON] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;		None               void
  4873 ;; Registers used:
  4874 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4880 ;;      Params:         0       0       0       0
  4881 ;;      Locals:         1       0       0       0
  4882 ;;      Temps:          1       0       0       0
  4883 ;;      Totals:         2       0       0       0
  4884 ;;Total ram usage:        2 bytes
  4885 ;; Hardware stack levels used:    1
  4886 ;; Hardware stack levels required when called:    2
  4887 ;; This function calls:
  4888 ;;		i1_i2c_read_data
  4889 ;;		i1_i2c_restart
  4890 ;;		i1_i2c_send_ack
  4891 ;;		i1_i2c_send_address
  4892 ;;		i1_i2c_send_data
  4893 ;;		i1_i2c_start
  4894 ;;		i1_i2c_stop
  4895 ;; This function is called by:
  4896 ;;		_update_clock
  4897 ;;		_tmr_isr
  4898 ;; This function uses a non-reentrant model
  4899 ;;
  4900                           
  4901                           
  4902                           ;psect for function i1_ds1307_get_clock
  4903  0717                     i1_ds1307_get_clock:	
  4904                           
  4905                           ;ds1307.c: 143: i2c_start();
  4906                           
  4907                           ;incstack = 0
  4908                           ; Regs used in i1_ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4909  0717  318B  23E6  3187   	fcall	i1_i2c_start
  4910                           
  4911                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  4912  071A  01F0               	clrf	i1i2c_send_address@mode
  4913  071B  3068               	movlw	104
  4914  071C  318C  2480  3187   	fcall	i1_i2c_send_address
  4915                           
  4916                           ;ds1307.c: 145: i2c_send_data(0x00);
  4917  071F  3000               	movlw	0
  4918  0720  318C  241E  3187   	fcall	i1_i2c_send_data
  4919                           
  4920                           ;ds1307.c: 146: i2c_restart();
  4921  0723  318B  23E1  3187   	fcall	i1_i2c_restart
  4922                           
  4923                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  4924  0726  01F0               	clrf	i1i2c_send_address@mode
  4925  0727  0AF0               	incf	i1i2c_send_address@mode,f
  4926  0728  3068               	movlw	104
  4927  0729  318C  2480  3187   	fcall	i1_i2c_send_address
  4928                           
  4929                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  4930  072C  01F4               	clrf	i1ds1307_get_clock@r
  4931  072D  3007               	movlw	7
  4932  072E  0274               	subwf	i1ds1307_get_clock@r,w
  4933  072F  1803               	btfsc	3,0
  4934  0730  2F47               	goto	i1l2791
  4935  0731                     i1l2783:	
  4936                           
  4937                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  4938  0731  318C  24C2  3187   	fcall	i1_i2c_read_data
  4939  0734  00F3               	movwf	??i1_ds1307_get_clock
  4940  0735  0874               	movf	i1ds1307_get_clock@r,w
  4941  0736  3EB7               	addlw	_g_reg_data& (0+255)
  4942  0737  0086               	movwf	6
  4943  0738  0187               	clrf	7
  4944  0739  0873               	movf	??i1_ds1307_get_clock,w
  4945  073A  0081               	movwf	1
  4946                           
  4947                           ;ds1307.c: 151: i2c_send_ack(0);
  4948  073B  3000               	movlw	0
  4949  073C  318C  2469  3187   	fcall	i1_i2c_send_ack
  4950  073F  3001               	movlw	1
  4951  0740  00F3               	movwf	??i1_ds1307_get_clock
  4952  0741  0873               	movf	??i1_ds1307_get_clock,w
  4953  0742  07F4               	addwf	i1ds1307_get_clock@r,f
  4954  0743  3007               	movlw	7
  4955  0744  0274               	subwf	i1ds1307_get_clock@r,w
  4956  0745  1C03               	skipc
  4957  0746  2F31               	goto	i1l2783
  4958  0747                     i1l2791:	
  4959                           
  4960                           ;ds1307.c: 152: }
  4961                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  4962  0747  318C  24C2  3187   	fcall	i1_i2c_read_data
  4963  074A  00F3               	movwf	??i1_ds1307_get_clock
  4964  074B  0873               	movf	??i1_ds1307_get_clock,w
  4965  074C  0021               	movlb	1	; select bank1
  4966  074D  00C7               	movwf	_g_reg_ctrl^(0+128)
  4967                           
  4968                           ;ds1307.c: 154: i2c_send_ack(1);
  4969  074E  3001               	movlw	1
  4970  074F  318C  2469  3187   	fcall	i1_i2c_send_ack
  4971                           
  4972                           ;ds1307.c: 155: i2c_stop();
  4973  0752  318B  23EB         	fcall	i1_i2c_stop
  4974  0754  0008               	return
  4975  0755                     __end_ofi1_ds1307_get_clock:	
  4976                           
  4977                           	psect	text32
  4978  07BD                     __ptext32:	
  4979 ;; *************** function _ds1307_switch_to_24hr *****************
  4980 ;; Defined at:
  4981 ;;		line 341 in file "ds1307.c"
  4982 ;; Parameters:    Size  Location     Type
  4983 ;;		None
  4984 ;; Auto vars:     Size  Location     Type
  4985 ;;  hrs             1    8[BANK0 ] unsigned char 
  4986 ;;  pm_am           1    7[BANK0 ] unsigned char 
  4987 ;; Return value:  Size  Location     Type
  4988 ;;		None               void
  4989 ;; Registers used:
  4990 ;;		wreg, status,2, status,0, pclath, cstack
  4991 ;; Tracked objects:
  4992 ;;		On entry : 0/0
  4993 ;;		On exit  : 0/0
  4994 ;;		Unchanged: 0/0
  4995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4996 ;;      Params:         0       0       0       0
  4997 ;;      Locals:         0       2       0       0
  4998 ;;      Temps:          1       0       0       0
  4999 ;;      Totals:         1       2       0       0
  5000 ;;Total ram usage:        3 bytes
  5001 ;; Hardware stack levels used:    1
  5002 ;; Hardware stack levels required when called:    4
  5003 ;; This function calls:
  5004 ;;		_ds1307_get_hours
  5005 ;;		_ds1307_is_12hr_mode
  5006 ;;		_ds1307_is_pm
  5007 ;;		_ds1307_set_hours
  5008 ;;		_ds1307_set_hr_mode
  5009 ;; This function is called by:
  5010 ;;		_update_clock
  5011 ;; This function uses a non-reentrant model
  5012 ;;
  5013                           
  5014                           
  5015                           ;psect for function _ds1307_switch_to_24hr
  5016  07BD                     _ds1307_switch_to_24hr:	
  5017                           
  5018                           ;ds1307.c: 342: if (ds1307_is_12hr_mode() == 1) {
  5019                           
  5020                           ;incstack = 0
  5021                           ; Regs used in _ds1307_switch_to_24hr: [wreg+status,2+status,0+pclath+cstack]
  5022  07BD  318B  23DC  3187   	fcall	_ds1307_is_12hr_mode
  5023  07C0  3A01               	xorlw	1
  5024  07C1  1D03               	skipz
  5025  07C2  0008               	return
  5026                           
  5027                           ;ds1307.c: 343: uint8_t hrs;
  5028                           ;ds1307.c: 344: bool pm_am;
  5029                           ;ds1307.c: 345: pm_am = ds1307_is_pm();
  5030  07C3  318E  2644  3187   	fcall	_ds1307_is_pm
  5031  07C6  00FD               	movwf	??_ds1307_switch_to_24hr
  5032  07C7  087D               	movf	??_ds1307_switch_to_24hr,w
  5033  07C8  0020               	movlb	0	; select bank0
  5034  07C9  00A7               	movwf	ds1307_switch_to_24hr@pm_am
  5035                           
  5036                           ;ds1307.c: 346: hrs = ds1307_get_hours();
  5037  07CA  318D  25AA  3187   	fcall	_ds1307_get_hours
  5038  07CD  00FD               	movwf	??_ds1307_switch_to_24hr
  5039  07CE  087D               	movf	??_ds1307_switch_to_24hr,w
  5040  07CF  0020               	movlb	0	; select bank0
  5041  07D0  00A8               	movwf	ds1307_switch_to_24hr@hrs
  5042                           
  5043                           ;ds1307.c: 347: if ((!pm_am) && (hrs == 12)) {
  5044  07D1  08A7               	movf	ds1307_switch_to_24hr@pm_am,f
  5045  07D2  1D03               	skipz
  5046  07D3  2FDA               	goto	i1l2573
  5047  07D4  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5048  07D5  3A0C               	xorlw	12
  5049  07D6  1D03               	skipz
  5050  07D7  2FDA               	goto	i1l2573
  5051                           
  5052                           ;ds1307.c: 349: hrs = 0;
  5053  07D8  01A8               	clrf	ds1307_switch_to_24hr@hrs
  5054                           
  5055                           ;ds1307.c: 350: } else if (pm_am && (hrs < 12)) {
  5056  07D9  2FE6               	goto	i1l2579
  5057  07DA                     i1l2573:	
  5058  07DA  0827               	movf	ds1307_switch_to_24hr@pm_am,w
  5059  07DB  1903               	btfsc	3,2
  5060  07DC  2FE6               	goto	i1l2579
  5061  07DD  300C               	movlw	12
  5062  07DE  0228               	subwf	ds1307_switch_to_24hr@hrs,w
  5063  07DF  1803               	skipnc
  5064  07E0  2FE6               	goto	i1l2579
  5065                           
  5066                           ;ds1307.c: 352: hrs = hrs + 12;
  5067  07E1  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5068  07E2  3E0C               	addlw	12
  5069  07E3  00FD               	movwf	??_ds1307_switch_to_24hr
  5070  07E4  087D               	movf	??_ds1307_switch_to_24hr,w
  5071  07E5  00A8               	movwf	ds1307_switch_to_24hr@hrs
  5072  07E6                     i1l2579:	
  5073                           
  5074                           ;ds1307.c: 353: }
  5075                           ;ds1307.c: 355: ds1307_set_hr_mode(0x00);
  5076  07E6  3000               	movlw	0
  5077  07E7  318D  2597  3187   	fcall	_ds1307_set_hr_mode
  5078                           
  5079                           ;ds1307.c: 356: ds1307_set_hours(hrs);
  5080  07EA  0020               	movlb	0	; select bank0
  5081  07EB  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5082  07EC  318F  27A7         	fcall	_ds1307_set_hours
  5083  07EE  0008               	return
  5084  07EF                     __end_of_ds1307_switch_to_24hr:	
  5085                           
  5086                           	psect	text33
  5087  051A                     __ptext33:	
  5088 ;; *************** function _ds1307_switch_to_12hr *****************
  5089 ;; Defined at:
  5090 ;;		line 316 in file "ds1307.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;		None
  5093 ;; Auto vars:     Size  Location     Type
  5094 ;;  hrs             1    8[BANK0 ] unsigned char 
  5095 ;;  pm_am           1    7[BANK0 ] unsigned char 
  5096 ;; Return value:  Size  Location     Type
  5097 ;;		None               void
  5098 ;; Registers used:
  5099 ;;		wreg, status,2, status,0, pclath, cstack
  5100 ;; Tracked objects:
  5101 ;;		On entry : 0/0
  5102 ;;		On exit  : 0/0
  5103 ;;		Unchanged: 0/0
  5104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5105 ;;      Params:         0       0       0       0
  5106 ;;      Locals:         0       2       0       0
  5107 ;;      Temps:          1       0       0       0
  5108 ;;      Totals:         1       2       0       0
  5109 ;;Total ram usage:        3 bytes
  5110 ;; Hardware stack levels used:    1
  5111 ;; Hardware stack levels required when called:    3
  5112 ;; This function calls:
  5113 ;;		_ds1307_get_hours
  5114 ;;		_ds1307_is_12hr_mode
  5115 ;;		_ds1307_set_hours
  5116 ;;		_ds1307_set_hr_mode
  5117 ;;		_ds1307_set_pm_am
  5118 ;; This function is called by:
  5119 ;;		_update_clock
  5120 ;; This function uses a non-reentrant model
  5121 ;;
  5122                           
  5123                           
  5124                           ;psect for function _ds1307_switch_to_12hr
  5125  051A                     _ds1307_switch_to_12hr:	
  5126                           
  5127                           ;ds1307.c: 317: if (ds1307_is_12hr_mode() == 0) {
  5128                           
  5129                           ;incstack = 0
  5130                           ; Regs used in _ds1307_switch_to_12hr: [wreg+status,2+status,0+pclath+cstack]
  5131  051A  318B  23DC  3185   	fcall	_ds1307_is_12hr_mode
  5132  051D  3800               	iorlw	0
  5133  051E  1D03               	skipz
  5134  051F  0008               	return
  5135                           
  5136                           ;ds1307.c: 318: uint8_t hrs;
  5137                           ;ds1307.c: 319: bool pm_am;
  5138                           ;ds1307.c: 320: hrs = ds1307_get_hours();
  5139  0520  318D  25AA  3185   	fcall	_ds1307_get_hours
  5140  0523  00FD               	movwf	??_ds1307_switch_to_12hr
  5141  0524  087D               	movf	??_ds1307_switch_to_12hr,w
  5142  0525  0020               	movlb	0	; select bank0
  5143  0526  00A8               	movwf	ds1307_switch_to_12hr@hrs
  5144                           
  5145                           ;ds1307.c: 321: if (hrs < 12) {
  5146  0527  300C               	movlw	12
  5147  0528  0228               	subwf	ds1307_switch_to_12hr@hrs,w
  5148  0529  1803               	skipnc
  5149  052A  2D2D               	goto	i1l404
  5150                           
  5151                           ;ds1307.c: 322: pm_am = 0x00;
  5152  052B  01A7               	clrf	ds1307_switch_to_12hr@pm_am
  5153                           
  5154                           ;ds1307.c: 323: } else {
  5155  052C  2D2F               	goto	i1l2591
  5156  052D                     i1l404:	
  5157                           
  5158                           ;ds1307.c: 324: pm_am = 0x01;
  5159  052D  01A7               	clrf	ds1307_switch_to_12hr@pm_am
  5160  052E  0AA7               	incf	ds1307_switch_to_12hr@pm_am,f
  5161  052F                     i1l2591:	
  5162                           
  5163                           ;ds1307.c: 325: }
  5164                           ;ds1307.c: 326: if (hrs == 0) {
  5165  052F  08A8               	movf	ds1307_switch_to_12hr@hrs,f
  5166  0530  1D03               	skipz
  5167  0531  2D34               	goto	i1l2595
  5168                           
  5169                           ;ds1307.c: 328: hrs = 12;
  5170  0532  300C               	movlw	12
  5171  0533  2D3A               	goto	L4
  5172  0534                     i1l2595:	
  5173                           ;ds1307.c: 329: } else if (hrs > 12) {
  5174                           
  5175  0534  300D               	movlw	13
  5176  0535  0228               	subwf	ds1307_switch_to_12hr@hrs,w
  5177  0536  1C03               	skipc
  5178  0537  2D3D               	goto	i1l2599
  5179                           
  5180                           ;ds1307.c: 331: hrs = hrs - 12;
  5181  0538  0828               	movf	ds1307_switch_to_12hr@hrs,w
  5182  0539  3EF4               	addlw	244
  5183  053A                     L4:	
  5184  053A  00FD               	movwf	??_ds1307_switch_to_12hr
  5185  053B  087D               	movf	??_ds1307_switch_to_12hr,w
  5186  053C  00A8               	movwf	ds1307_switch_to_12hr@hrs
  5187  053D                     i1l2599:	
  5188                           
  5189                           ;ds1307.c: 332: }
  5190                           ;ds1307.c: 335: ds1307_set_hr_mode(0x01);
  5191  053D  3001               	movlw	1
  5192  053E  318D  2597  3185   	fcall	_ds1307_set_hr_mode
  5193                           
  5194                           ;ds1307.c: 336: ds1307_set_pm_am(pm_am);
  5195  0541  0020               	movlb	0	; select bank0
  5196  0542  0827               	movf	ds1307_switch_to_12hr@pm_am,w
  5197  0543  318E  262B  3185   	fcall	_ds1307_set_pm_am
  5198                           
  5199                           ;ds1307.c: 337: ds1307_set_hours(hrs);
  5200  0546  0020               	movlb	0	; select bank0
  5201  0547  0828               	movf	ds1307_switch_to_12hr@hrs,w
  5202  0548  318F  27A7         	fcall	_ds1307_set_hours
  5203  054A  0008               	return
  5204  054B                     __end_of_ds1307_switch_to_12hr:	
  5205                           
  5206                           	psect	text34
  5207  0E2B                     __ptext34:	
  5208 ;; *************** function _ds1307_set_pm_am *****************
  5209 ;; Defined at:
  5210 ;;		line 294 in file "ds1307.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  pm_am           1    wreg     unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  pm_am           1    1[COMMON] unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;		None               void
  5217 ;; Registers used:
  5218 ;;		wreg, status,2, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5224 ;;      Params:         0       0       0       0
  5225 ;;      Locals:         1       0       0       0
  5226 ;;      Temps:          1       0       0       0
  5227 ;;      Totals:         2       0       0       0
  5228 ;;Total ram usage:        2 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:    1
  5231 ;; This function calls:
  5232 ;;		_ds1307_is_12hr_mode
  5233 ;; This function is called by:
  5234 ;;		_update_clock
  5235 ;;		_ds1307_switch_to_12hr
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           
  5240                           ;psect for function _ds1307_set_pm_am
  5241  0E2B                     _ds1307_set_pm_am:	
  5242                           
  5243                           ;incstack = 0
  5244                           ; Regs used in _ds1307_set_pm_am: [wreg+status,2+pclath+cstack]
  5245                           ;ds1307_set_pm_am@pm_am stored from wreg
  5246  0E2B  00F1               	movwf	ds1307_set_pm_am@pm_am
  5247                           
  5248                           ;ds1307.c: 295: if (ds1307_is_12hr_mode()) {
  5249  0E2C  318B  23DC  318E   	fcall	_ds1307_is_12hr_mode
  5250  0E2F  3A00               	xorlw	0
  5251  0E30  1903               	skipnz
  5252  0E31  0008               	return
  5253                           
  5254                           ;ds1307.c: 296: if (pm_am == 0x01) {
  5255  0E32  0871               	movf	ds1307_set_pm_am@pm_am,w
  5256  0E33  3A01               	xorlw	1
  5257  0E34  1D03               	skipz
  5258  0E35  2E3D               	goto	i1l2375
  5259                           
  5260                           ;ds1307.c: 298: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b00100000
      +                          ;
  5261  0E36  0021               	movlb	1	; select bank1
  5262  0E37  0839               	movf	(_g_reg_data^(0+128)+2),w
  5263  0E38  3820               	iorlw	32
  5264  0E39  00F0               	movwf	??_ds1307_set_pm_am
  5265  0E3A  0870               	movf	??_ds1307_set_pm_am,w
  5266  0E3B  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5267                           
  5268                           ;ds1307.c: 299: } else {
  5269  0E3C  0008               	return
  5270  0E3D                     i1l2375:	
  5271                           
  5272                           ;ds1307.c: 301: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b11011111
      +                          ;
  5273  0E3D  0021               	movlb	1	; select bank1
  5274  0E3E  0839               	movf	(_g_reg_data^(0+128)+2),w
  5275  0E3F  39DF               	andlw	223
  5276  0E40  00F0               	movwf	??_ds1307_set_pm_am
  5277  0E41  0870               	movf	??_ds1307_set_pm_am,w
  5278  0E42  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5279  0E43  0008               	return
  5280  0E44                     __end_of_ds1307_set_pm_am:	
  5281                           
  5282                           	psect	text35
  5283  0D97                     __ptext35:	
  5284 ;; *************** function _ds1307_set_hr_mode *****************
  5285 ;; Defined at:
  5286 ;;		line 306 in file "ds1307.c"
  5287 ;; Parameters:    Size  Location     Type
  5288 ;;  mode            1    wreg     unsigned char 
  5289 ;; Auto vars:     Size  Location     Type
  5290 ;;  mode            1    1[COMMON] unsigned char 
  5291 ;; Return value:  Size  Location     Type
  5292 ;;		None               void
  5293 ;; Registers used:
  5294 ;;		wreg, status,2
  5295 ;; Tracked objects:
  5296 ;;		On entry : 0/0
  5297 ;;		On exit  : 0/0
  5298 ;;		Unchanged: 0/0
  5299 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5300 ;;      Params:         0       0       0       0
  5301 ;;      Locals:         1       0       0       0
  5302 ;;      Temps:          1       0       0       0
  5303 ;;      Totals:         2       0       0       0
  5304 ;;Total ram usage:        2 bytes
  5305 ;; Hardware stack levels used:    1
  5306 ;; This function calls:
  5307 ;;		Nothing
  5308 ;; This function is called by:
  5309 ;;		_ds1307_switch_to_12hr
  5310 ;;		_ds1307_switch_to_24hr
  5311 ;; This function uses a non-reentrant model
  5312 ;;
  5313                           
  5314                           
  5315                           ;psect for function _ds1307_set_hr_mode
  5316  0D97                     _ds1307_set_hr_mode:	
  5317                           
  5318                           ;incstack = 0
  5319                           ; Regs used in _ds1307_set_hr_mode: [wreg+status,2]
  5320                           ;ds1307_set_hr_mode@mode stored from wreg
  5321  0D97  00F1               	movwf	ds1307_set_hr_mode@mode
  5322                           
  5323                           ;ds1307.c: 309: if (mode == 1) {
  5324  0D98  0871               	movf	ds1307_set_hr_mode@mode,w
  5325  0D99  3A01               	xorlw	1
  5326  0D9A  1D03               	skipz
  5327  0D9B  2DA3               	goto	i1l2397
  5328                           
  5329                           ;ds1307.c: 310: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b01000000
      +                          ;
  5330  0D9C  0021               	movlb	1	; select bank1
  5331  0D9D  0839               	movf	(_g_reg_data^(0+128)+2),w
  5332  0D9E  3840               	iorlw	64
  5333  0D9F  00F0               	movwf	??_ds1307_set_hr_mode
  5334  0DA0  0870               	movf	??_ds1307_set_hr_mode,w
  5335  0DA1  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5336                           
  5337                           ;ds1307.c: 311: } else {
  5338  0DA2  0008               	return
  5339  0DA3                     i1l2397:	
  5340                           
  5341                           ;ds1307.c: 312: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b10111111
      +                          ;
  5342  0DA3  0021               	movlb	1	; select bank1
  5343  0DA4  0839               	movf	(_g_reg_data^(0+128)+2),w
  5344  0DA5  39BF               	andlw	191
  5345  0DA6  00F0               	movwf	??_ds1307_set_hr_mode
  5346  0DA7  0870               	movf	??_ds1307_set_hr_mode,w
  5347  0DA8  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5348  0DA9  0008               	return
  5349  0DAA                     __end_of_ds1307_set_hr_mode:	
  5350                           
  5351                           	psect	text36
  5352  0FA7                     __ptext36:	
  5353 ;; *************** function _ds1307_set_hours *****************
  5354 ;; Defined at:
  5355 ;;		line 223 in file "ds1307.c"
  5356 ;; Parameters:    Size  Location     Type
  5357 ;;  hours           1    wreg     unsigned char 
  5358 ;; Auto vars:     Size  Location     Type
  5359 ;;  hours           1   12[COMMON] unsigned char 
  5360 ;; Return value:  Size  Location     Type
  5361 ;;		None               void
  5362 ;; Registers used:
  5363 ;;		wreg, status,2, status,0, pclath, cstack
  5364 ;; Tracked objects:
  5365 ;;		On entry : 0/0
  5366 ;;		On exit  : 0/0
  5367 ;;		Unchanged: 0/0
  5368 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5369 ;;      Params:         0       0       0       0
  5370 ;;      Locals:         1       0       0       0
  5371 ;;      Temps:          2       0       0       0
  5372 ;;      Totals:         3       0       0       0
  5373 ;;Total ram usage:        3 bytes
  5374 ;; Hardware stack levels used:    1
  5375 ;; Hardware stack levels required when called:    2
  5376 ;; This function calls:
  5377 ;;		_dec_to_bcd
  5378 ;;		_ds1307_is_12hr_mode
  5379 ;; This function is called by:
  5380 ;;		_update_clock
  5381 ;;		_ds1307_switch_to_12hr
  5382 ;;		_ds1307_switch_to_24hr
  5383 ;; This function uses a non-reentrant model
  5384 ;;
  5385                           
  5386                           
  5387                           ;psect for function _ds1307_set_hours
  5388  0FA7                     _ds1307_set_hours:	
  5389                           
  5390                           ;incstack = 0
  5391                           ; Regs used in _ds1307_set_hours: [wreg+status,2+status,0+pclath+cstack]
  5392                           ;ds1307_set_hours@hours stored from wreg
  5393  0FA7  00FC               	movwf	ds1307_set_hours@hours
  5394                           
  5395                           ;ds1307.c: 224: if (ds1307_is_12hr_mode()) {
  5396  0FA8  318B  23DC  318F   	fcall	_ds1307_is_12hr_mode
  5397  0FAB  3A00               	xorlw	0
  5398  0FAC  1903               	skipnz
  5399  0FAD  2FC2               	goto	i1l2385
  5400                           
  5401                           ;ds1307.c: 226: if ((hours > 0) && (hours < 13)) {
  5402  0FAE  087C               	movf	ds1307_set_hours@hours,w
  5403  0FAF  1903               	btfsc	3,2
  5404  0FB0  0008               	return
  5405  0FB1  300D               	movlw	13
  5406  0FB2  027C               	subwf	ds1307_set_hours@hours,w
  5407  0FB3  1803               	skipnc
  5408  0FB4  0008               	return
  5409                           
  5410                           ;ds1307.c: 228: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x60);
  5411  0FB5  3060               	movlw	96
  5412  0FB6  0021               	movlb	1	; select bank1
  5413  0FB7  0539               	andwf	(_g_reg_data^(0+128)+2),w
  5414  0FB8  00FA               	movwf	??_ds1307_set_hours
  5415  0FB9  087C               	movf	ds1307_set_hours@hours,w
  5416  0FBA  3185  257B         	fcall	_dec_to_bcd
  5417  0FBC  047A               	iorwf	??_ds1307_set_hours,w
  5418  0FBD  00FB               	movwf	??_ds1307_set_hours+1
  5419  0FBE  087B               	movf	??_ds1307_set_hours+1,w
  5420  0FBF  0021               	movlb	1	; select bank1
  5421  0FC0  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5422                           
  5423                           ;ds1307.c: 229: }
  5424                           ;ds1307.c: 230: } else {
  5425  0FC1  0008               	return
  5426  0FC2                     i1l2385:	
  5427                           
  5428                           ;ds1307.c: 231: if (hours < 24) {
  5429  0FC2  3018               	movlw	24
  5430  0FC3  027C               	subwf	ds1307_set_hours@hours,w
  5431  0FC4  1803               	skipnc
  5432  0FC5  0008               	return
  5433                           
  5434                           ;ds1307.c: 233: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x40);
  5435  0FC6  3040               	movlw	64
  5436  0FC7  0021               	movlb	1	; select bank1
  5437  0FC8  0539               	andwf	(_g_reg_data^(0+128)+2),w
  5438  0FC9  00FA               	movwf	??_ds1307_set_hours
  5439  0FCA  087C               	movf	ds1307_set_hours@hours,w
  5440  0FCB  3185  257B         	fcall	_dec_to_bcd
  5441  0FCD  047A               	iorwf	??_ds1307_set_hours,w
  5442  0FCE  00FB               	movwf	??_ds1307_set_hours+1
  5443  0FCF  087B               	movf	??_ds1307_set_hours+1,w
  5444  0FD0  0021               	movlb	1	; select bank1
  5445  0FD1  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5446  0FD2  0008               	return
  5447  0FD3                     __end_of_ds1307_set_hours:	
  5448                           
  5449                           	psect	text37
  5450  0C9A                     __ptext37:	
  5451 ;; *************** function _ds1307_set_year *****************
  5452 ;; Defined at:
  5453 ;;		line 275 in file "ds1307.c"
  5454 ;; Parameters:    Size  Location     Type
  5455 ;;  year            1    wreg     unsigned char 
  5456 ;; Auto vars:     Size  Location     Type
  5457 ;;  year            1   11[COMMON] unsigned char 
  5458 ;; Return value:  Size  Location     Type
  5459 ;;		None               void
  5460 ;; Registers used:
  5461 ;;		wreg, status,2, status,0, pclath, cstack
  5462 ;; Tracked objects:
  5463 ;;		On entry : 0/0
  5464 ;;		On exit  : 0/0
  5465 ;;		Unchanged: 0/0
  5466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5467 ;;      Params:         0       0       0       0
  5468 ;;      Locals:         1       0       0       0
  5469 ;;      Temps:          1       0       0       0
  5470 ;;      Totals:         2       0       0       0
  5471 ;;Total ram usage:        2 bytes
  5472 ;; Hardware stack levels used:    1
  5473 ;; Hardware stack levels required when called:    2
  5474 ;; This function calls:
  5475 ;;		_dec_to_bcd
  5476 ;; This function is called by:
  5477 ;;		_update_clock
  5478 ;; This function uses a non-reentrant model
  5479 ;;
  5480                           
  5481                           
  5482                           ;psect for function _ds1307_set_year
  5483  0C9A                     _ds1307_set_year:	
  5484                           
  5485                           ;incstack = 0
  5486                           ; Regs used in _ds1307_set_year: [wreg+status,2+status,0+pclath+cstack]
  5487                           ;ds1307_set_year@year stored from wreg
  5488  0C9A  00FB               	movwf	ds1307_set_year@year
  5489                           
  5490                           ;ds1307.c: 276: if (year < 100) {
  5491  0C9B  3064               	movlw	100
  5492  0C9C  027B               	subwf	ds1307_set_year@year,w
  5493  0C9D  1803               	skipnc
  5494  0C9E  0008               	return
  5495                           
  5496                           ;ds1307.c: 277: g_reg_data[DS1307_REG_YEAR] = dec_to_bcd(year);
  5497  0C9F  087B               	movf	ds1307_set_year@year,w
  5498  0CA0  3185  257B         	fcall	_dec_to_bcd
  5499  0CA2  00FA               	movwf	??_ds1307_set_year
  5500  0CA3  087A               	movf	??_ds1307_set_year,w
  5501  0CA4  0021               	movlb	1	; select bank1
  5502  0CA5  00BD               	movwf	(_g_reg_data^(0+128)+6)
  5503  0CA6  0008               	return
  5504  0CA7                     __end_of_ds1307_set_year:	
  5505                           
  5506                           	psect	text38
  5507  0D4E                     __ptext38:	
  5508 ;; *************** function _ds1307_set_seconds *****************
  5509 ;; Defined at:
  5510 ;;		line 192 in file "ds1307.c"
  5511 ;; Parameters:    Size  Location     Type
  5512 ;;  sec             1    wreg     unsigned char 
  5513 ;; Auto vars:     Size  Location     Type
  5514 ;;  sec             1   12[COMMON] unsigned char 
  5515 ;; Return value:  Size  Location     Type
  5516 ;;		None               void
  5517 ;; Registers used:
  5518 ;;		wreg, status,2, status,0, pclath, cstack
  5519 ;; Tracked objects:
  5520 ;;		On entry : 0/0
  5521 ;;		On exit  : 0/0
  5522 ;;		Unchanged: 0/0
  5523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5524 ;;      Params:         0       0       0       0
  5525 ;;      Locals:         1       0       0       0
  5526 ;;      Temps:          2       0       0       0
  5527 ;;      Totals:         3       0       0       0
  5528 ;;Total ram usage:        3 bytes
  5529 ;; Hardware stack levels used:    1
  5530 ;; Hardware stack levels required when called:    2
  5531 ;; This function calls:
  5532 ;;		_dec_to_bcd
  5533 ;; This function is called by:
  5534 ;;		_update_clock
  5535 ;; This function uses a non-reentrant model
  5536 ;;
  5537                           
  5538                           
  5539                           ;psect for function _ds1307_set_seconds
  5540  0D4E                     _ds1307_set_seconds:	
  5541                           
  5542                           ;incstack = 0
  5543                           ; Regs used in _ds1307_set_seconds: [wreg+status,2+status,0+pclath+cstack]
  5544                           ;ds1307_set_seconds@sec stored from wreg
  5545  0D4E  00FC               	movwf	ds1307_set_seconds@sec
  5546                           
  5547                           ;ds1307.c: 194: if (sec < 60) {
  5548  0D4F  303C               	movlw	60
  5549  0D50  027C               	subwf	ds1307_set_seconds@sec,w
  5550  0D51  1803               	skipnc
  5551  0D52  0008               	return
  5552                           
  5553                           ;ds1307.c: 196: g_reg_data[DS1307_REG_SECONDS] = dec_to_bcd(sec) | (g_reg_data[DS1307_RE
      +                          G_SECONDS] & 0x80);
  5554  0D53  3080               	movlw	128
  5555  0D54  0021               	movlb	1	; select bank1
  5556  0D55  0537               	andwf	_g_reg_data^(0+128),w
  5557  0D56  00FA               	movwf	??_ds1307_set_seconds
  5558  0D57  087C               	movf	ds1307_set_seconds@sec,w
  5559  0D58  3185  257B         	fcall	_dec_to_bcd
  5560  0D5A  047A               	iorwf	??_ds1307_set_seconds,w
  5561  0D5B  00FB               	movwf	??_ds1307_set_seconds+1
  5562  0D5C  087B               	movf	??_ds1307_set_seconds+1,w
  5563  0D5D  0021               	movlb	1	; select bank1
  5564  0D5E  00B7               	movwf	_g_reg_data^(0+128)
  5565  0D5F  0008               	return
  5566  0D60                     __end_of_ds1307_set_seconds:	
  5567                           
  5568                           	psect	text39
  5569  0D2E                     __ptext39:	
  5570 ;; *************** function _ds1307_set_month *****************
  5571 ;; Defined at:
  5572 ;;		line 264 in file "ds1307.c"
  5573 ;; Parameters:    Size  Location     Type
  5574 ;;  month           1    wreg     unsigned char 
  5575 ;; Auto vars:     Size  Location     Type
  5576 ;;  month           1   11[COMMON] unsigned char 
  5577 ;; Return value:  Size  Location     Type
  5578 ;;		None               void
  5579 ;; Registers used:
  5580 ;;		wreg, status,2, status,0, pclath, cstack
  5581 ;; Tracked objects:
  5582 ;;		On entry : 0/0
  5583 ;;		On exit  : 0/0
  5584 ;;		Unchanged: 0/0
  5585 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5586 ;;      Params:         0       0       0       0
  5587 ;;      Locals:         1       0       0       0
  5588 ;;      Temps:          1       0       0       0
  5589 ;;      Totals:         2       0       0       0
  5590 ;;Total ram usage:        2 bytes
  5591 ;; Hardware stack levels used:    1
  5592 ;; Hardware stack levels required when called:    2
  5593 ;; This function calls:
  5594 ;;		_dec_to_bcd
  5595 ;; This function is called by:
  5596 ;;		_update_clock
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           
  5601                           ;psect for function _ds1307_set_month
  5602  0D2E                     _ds1307_set_month:	
  5603                           
  5604                           ;incstack = 0
  5605                           ; Regs used in _ds1307_set_month: [wreg+status,2+status,0+pclath+cstack]
  5606                           ;ds1307_set_month@month stored from wreg
  5607  0D2E  00FB               	movwf	ds1307_set_month@month
  5608                           
  5609                           ;ds1307.c: 265: if ((month > 0) && (month < 13)) {
  5610  0D2F  087B               	movf	ds1307_set_month@month,w
  5611  0D30  1903               	btfsc	3,2
  5612  0D31  0008               	return
  5613  0D32  300D               	movlw	13
  5614  0D33  027B               	subwf	ds1307_set_month@month,w
  5615  0D34  1803               	skipnc
  5616  0D35  0008               	return
  5617                           
  5618                           ;ds1307.c: 266: g_reg_data[DS1307_REG_MONTH] = dec_to_bcd(month);
  5619  0D36  087B               	movf	ds1307_set_month@month,w
  5620  0D37  3185  257B         	fcall	_dec_to_bcd
  5621  0D39  00FA               	movwf	??_ds1307_set_month
  5622  0D3A  087A               	movf	??_ds1307_set_month,w
  5623  0D3B  0021               	movlb	1	; select bank1
  5624  0D3C  00BC               	movwf	(_g_reg_data^(0+128)+5)
  5625  0D3D  0008               	return
  5626  0D3E                     __end_of_ds1307_set_month:	
  5627                           
  5628                           	psect	text40
  5629  0C8D                     __ptext40:	
  5630 ;; *************** function _ds1307_set_minutes *****************
  5631 ;; Defined at:
  5632 ;;		line 204 in file "ds1307.c"
  5633 ;; Parameters:    Size  Location     Type
  5634 ;;  min             1    wreg     unsigned char 
  5635 ;; Auto vars:     Size  Location     Type
  5636 ;;  min             1   11[COMMON] unsigned char 
  5637 ;; Return value:  Size  Location     Type
  5638 ;;		None               void
  5639 ;; Registers used:
  5640 ;;		wreg, status,2, status,0, pclath, cstack
  5641 ;; Tracked objects:
  5642 ;;		On entry : 0/0
  5643 ;;		On exit  : 0/0
  5644 ;;		Unchanged: 0/0
  5645 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5646 ;;      Params:         0       0       0       0
  5647 ;;      Locals:         1       0       0       0
  5648 ;;      Temps:          1       0       0       0
  5649 ;;      Totals:         2       0       0       0
  5650 ;;Total ram usage:        2 bytes
  5651 ;; Hardware stack levels used:    1
  5652 ;; Hardware stack levels required when called:    2
  5653 ;; This function calls:
  5654 ;;		_dec_to_bcd
  5655 ;; This function is called by:
  5656 ;;		_update_clock
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           
  5661                           ;psect for function _ds1307_set_minutes
  5662  0C8D                     _ds1307_set_minutes:	
  5663                           
  5664                           ;incstack = 0
  5665                           ; Regs used in _ds1307_set_minutes: [wreg+status,2+status,0+pclath+cstack]
  5666                           ;ds1307_set_minutes@min stored from wreg
  5667  0C8D  00FB               	movwf	ds1307_set_minutes@min
  5668                           
  5669                           ;ds1307.c: 206: if (min < 60) {
  5670  0C8E  303C               	movlw	60
  5671  0C8F  027B               	subwf	ds1307_set_minutes@min,w
  5672  0C90  1803               	skipnc
  5673  0C91  0008               	return
  5674                           
  5675                           ;ds1307.c: 207: g_reg_data[DS1307_REG_MINUTES] = dec_to_bcd(min);
  5676  0C92  087B               	movf	ds1307_set_minutes@min,w
  5677  0C93  3185  257B         	fcall	_dec_to_bcd
  5678  0C95  00FA               	movwf	??_ds1307_set_minutes
  5679  0C96  087A               	movf	??_ds1307_set_minutes,w
  5680  0C97  0021               	movlb	1	; select bank1
  5681  0C98  00B8               	movwf	(_g_reg_data^(0+128)+1)
  5682  0C99  0008               	return
  5683  0C9A                     __end_of_ds1307_set_minutes:	
  5684                           
  5685                           	psect	text41
  5686  0D1E                     __ptext41:	
  5687 ;; *************** function _ds1307_set_day_of_month *****************
  5688 ;; Defined at:
  5689 ;;		line 254 in file "ds1307.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  dom             1    wreg     unsigned char 
  5692 ;; Auto vars:     Size  Location     Type
  5693 ;;  dom             1   11[COMMON] unsigned char 
  5694 ;; Return value:  Size  Location     Type
  5695 ;;		None               void
  5696 ;; Registers used:
  5697 ;;		wreg, status,2, status,0, pclath, cstack
  5698 ;; Tracked objects:
  5699 ;;		On entry : 0/0
  5700 ;;		On exit  : 0/0
  5701 ;;		Unchanged: 0/0
  5702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5703 ;;      Params:         0       0       0       0
  5704 ;;      Locals:         1       0       0       0
  5705 ;;      Temps:          1       0       0       0
  5706 ;;      Totals:         2       0       0       0
  5707 ;;Total ram usage:        2 bytes
  5708 ;; Hardware stack levels used:    1
  5709 ;; Hardware stack levels required when called:    2
  5710 ;; This function calls:
  5711 ;;		_dec_to_bcd
  5712 ;; This function is called by:
  5713 ;;		_update_clock
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           
  5718                           ;psect for function _ds1307_set_day_of_month
  5719  0D1E                     _ds1307_set_day_of_month:	
  5720                           
  5721                           ;incstack = 0
  5722                           ; Regs used in _ds1307_set_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  5723                           ;ds1307_set_day_of_month@dom stored from wreg
  5724  0D1E  00FB               	movwf	ds1307_set_day_of_month@dom
  5725                           
  5726                           ;ds1307.c: 255: if ((dom > 0) && (dom < 32)) {
  5727  0D1F  087B               	movf	ds1307_set_day_of_month@dom,w
  5728  0D20  1903               	btfsc	3,2
  5729  0D21  0008               	return
  5730  0D22  3020               	movlw	32
  5731  0D23  027B               	subwf	ds1307_set_day_of_month@dom,w
  5732  0D24  1803               	skipnc
  5733  0D25  0008               	return
  5734                           
  5735                           ;ds1307.c: 256: g_reg_data[DS1307_REG_DAY_OM] = dec_to_bcd(dom);
  5736  0D26  087B               	movf	ds1307_set_day_of_month@dom,w
  5737  0D27  3185  257B         	fcall	_dec_to_bcd
  5738  0D29  00FA               	movwf	??_ds1307_set_day_of_month
  5739  0D2A  087A               	movf	??_ds1307_set_day_of_month,w
  5740  0D2B  0021               	movlb	1	; select bank1
  5741  0D2C  00BB               	movwf	(_g_reg_data^(0+128)+4)
  5742  0D2D  0008               	return
  5743  0D2E                     __end_of_ds1307_set_day_of_month:	
  5744                           
  5745                           	psect	text42
  5746  057B                     __ptext42:	
  5747 ;; *************** function _dec_to_bcd *****************
  5748 ;; Defined at:
  5749 ;;		line 67 in file "ds1307.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  dec             1    wreg     unsigned char 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  dec             1    9[COMMON] unsigned char 
  5754 ;; Return value:  Size  Location     Type
  5755 ;;                  1    wreg      unsigned char 
  5756 ;; Registers used:
  5757 ;;		wreg, status,2, status,0, pclath, cstack
  5758 ;; Tracked objects:
  5759 ;;		On entry : 0/0
  5760 ;;		On exit  : 0/0
  5761 ;;		Unchanged: 0/0
  5762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5763 ;;      Params:         0       0       0       0
  5764 ;;      Locals:         1       0       0       0
  5765 ;;      Temps:          0       7       0       0
  5766 ;;      Totals:         1       7       0       0
  5767 ;;Total ram usage:        8 bytes
  5768 ;; Hardware stack levels used:    1
  5769 ;; Hardware stack levels required when called:    1
  5770 ;; This function calls:
  5771 ;;		___awdiv
  5772 ;;		___awmod
  5773 ;; This function is called by:
  5774 ;;		_ds1307_set_seconds
  5775 ;;		_ds1307_set_minutes
  5776 ;;		_ds1307_set_hours
  5777 ;;		_ds1307_set_day_of_month
  5778 ;;		_ds1307_set_month
  5779 ;;		_ds1307_set_year
  5780 ;; This function uses a non-reentrant model
  5781 ;;
  5782                           
  5783                           
  5784                           ;psect for function _dec_to_bcd
  5785  057B                     _dec_to_bcd:	
  5786                           
  5787                           ;incstack = 0
  5788                           ; Regs used in _dec_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  5789                           ;dec_to_bcd@dec stored from wreg
  5790  057B  00F9               	movwf	dec_to_bcd@dec
  5791                           
  5792                           ;ds1307.c: 70: return (((uint8_t) (dec / 10) << 4) | (dec % 10));
  5793  057C  300A               	movlw	10
  5794  057D  00F0               	movwf	___awmod@divisor
  5795  057E  3000               	movlw	0
  5796  057F  00F1               	movwf	___awmod@divisor+1
  5797  0580  0879               	movf	dec_to_bcd@dec,w
  5798  0581  0020               	movlb	0	; select bank0
  5799  0582  00A0               	movwf	??_dec_to_bcd
  5800  0583  01A1               	clrf	??_dec_to_bcd+1
  5801  0584  0820               	movf	??_dec_to_bcd,w
  5802  0585  00F2               	movwf	___awmod@dividend
  5803  0586  0821               	movf	??_dec_to_bcd+1,w
  5804  0587  00F3               	movwf	___awmod@dividend+1
  5805  0588  3186  2649  3185   	fcall	___awmod
  5806  058B  0870               	movf	?___awmod,w
  5807  058C  0020               	movlb	0	; select bank0
  5808  058D  00A2               	movwf	??_dec_to_bcd+2
  5809  058E  0871               	movf	?___awmod+1,w
  5810  058F  00A3               	movwf	??_dec_to_bcd+3
  5811  0590  300A               	movlw	10
  5812  0591  00F0               	movwf	___awdiv@divisor
  5813  0592  3000               	movlw	0
  5814  0593  00F1               	movwf	___awdiv@divisor+1
  5815  0594  0879               	movf	dec_to_bcd@dec,w
  5816  0595  00A4               	movwf	??_dec_to_bcd+4
  5817  0596  01A5               	clrf	??_dec_to_bcd+5
  5818  0597  0824               	movf	??_dec_to_bcd+4,w
  5819  0598  00F2               	movwf	___awdiv@dividend
  5820  0599  0825               	movf	??_dec_to_bcd+5,w
  5821  059A  00F3               	movwf	___awdiv@dividend+1
  5822  059B  3184  247C  3185   	fcall	___awdiv
  5823  059E  0870               	movf	?___awdiv,w
  5824  059F  0020               	movlb	0	; select bank0
  5825  05A0  00A6               	movwf	??_dec_to_bcd+6
  5826  05A1  3003               	movlw	3
  5827  05A2                     u156_25:	
  5828  05A2  35A6               	lslf	??_dec_to_bcd+6,f
  5829  05A3  3EFF               	addlw	-1
  5830  05A4  1D03               	skipz
  5831  05A5  2DA2               	goto	u156_25
  5832  05A6  3526               	lslf	??_dec_to_bcd+6,w
  5833  05A7  0422               	iorwf	??_dec_to_bcd+2,w
  5834  05A8  0008               	return
  5835  05A9                     __end_of_dec_to_bcd:	
  5836                           
  5837                           	psect	text43
  5838  0649                     __ptext43:	
  5839 ;; *************** function ___awmod *****************
  5840 ;; Defined at:
  5841 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awmod.c"
  5842 ;; Parameters:    Size  Location     Type
  5843 ;;  divisor         2    0[COMMON] int 
  5844 ;;  dividend        2    2[COMMON] int 
  5845 ;; Auto vars:     Size  Location     Type
  5846 ;;  sign            1    6[COMMON] unsigned char 
  5847 ;;  counter         1    5[COMMON] unsigned char 
  5848 ;; Return value:  Size  Location     Type
  5849 ;;                  2    0[COMMON] int 
  5850 ;; Registers used:
  5851 ;;		wreg, status,2, status,0
  5852 ;; Tracked objects:
  5853 ;;		On entry : 0/0
  5854 ;;		On exit  : 0/0
  5855 ;;		Unchanged: 0/0
  5856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5857 ;;      Params:         4       0       0       0
  5858 ;;      Locals:         2       0       0       0
  5859 ;;      Temps:          1       0       0       0
  5860 ;;      Totals:         7       0       0       0
  5861 ;;Total ram usage:        7 bytes
  5862 ;; Hardware stack levels used:    1
  5863 ;; This function calls:
  5864 ;;		Nothing
  5865 ;; This function is called by:
  5866 ;;		_dec_to_bcd
  5867 ;; This function uses a non-reentrant model
  5868 ;;
  5869                           
  5870                           
  5871                           ;psect for function ___awmod
  5872  0649                     ___awmod:	
  5873                           
  5874                           ;incstack = 0
  5875                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5876  0649  01F6               	clrf	___awmod@sign
  5877  064A  1FF3               	btfss	___awmod@dividend+1,7
  5878  064B  2E53               	goto	i1l2237
  5879  064C  09F2               	comf	___awmod@dividend,f
  5880  064D  09F3               	comf	___awmod@dividend+1,f
  5881  064E  0AF2               	incf	___awmod@dividend,f
  5882  064F  1903               	skipnz
  5883  0650  0AF3               	incf	___awmod@dividend+1,f
  5884  0651  01F6               	clrf	___awmod@sign
  5885  0652  0AF6               	incf	___awmod@sign,f
  5886  0653                     i1l2237:	
  5887  0653  1FF1               	btfss	___awmod@divisor+1,7
  5888  0654  2E5A               	goto	i1l2241
  5889  0655  09F0               	comf	___awmod@divisor,f
  5890  0656  09F1               	comf	___awmod@divisor+1,f
  5891  0657  0AF0               	incf	___awmod@divisor,f
  5892  0658  1903               	skipnz
  5893  0659  0AF1               	incf	___awmod@divisor+1,f
  5894  065A                     i1l2241:	
  5895  065A  0871               	movf	___awmod@divisor+1,w
  5896  065B  0470               	iorwf	___awmod@divisor,w
  5897  065C  1903               	skipnz
  5898  065D  2E81               	goto	i1l2259
  5899  065E  01F5               	clrf	___awmod@counter
  5900  065F  0AF5               	incf	___awmod@counter,f
  5901  0660                     i1l2249:	
  5902  0660  1BF1               	btfsc	___awmod@divisor+1,7
  5903  0661  2E6C               	goto	i1l2251
  5904  0662  3001               	movlw	1
  5905  0663                     u149_25:	
  5906  0663  35F0               	lslf	___awmod@divisor,f
  5907  0664  0DF1               	rlf	___awmod@divisor+1,f
  5908  0665  0B89               	decfsz	9,f
  5909  0666  2E63               	goto	u149_25
  5910  0667  3001               	movlw	1
  5911  0668  00F4               	movwf	??___awmod
  5912  0669  0874               	movf	??___awmod,w
  5913  066A  07F5               	addwf	___awmod@counter,f
  5914  066B  2E60               	goto	i1l2249
  5915  066C                     i1l2251:	
  5916  066C  0871               	movf	___awmod@divisor+1,w
  5917  066D  0273               	subwf	___awmod@dividend+1,w
  5918  066E  1D03               	skipz
  5919  066F  2E72               	goto	u151_25
  5920  0670  0870               	movf	___awmod@divisor,w
  5921  0671  0272               	subwf	___awmod@dividend,w
  5922  0672                     u151_25:	
  5923  0672  1C03               	skipc
  5924  0673  2E78               	goto	i1l2255
  5925  0674  0870               	movf	___awmod@divisor,w
  5926  0675  02F2               	subwf	___awmod@dividend,f
  5927  0676  0871               	movf	___awmod@divisor+1,w
  5928  0677  3BF3               	subwfb	___awmod@dividend+1,f
  5929  0678                     i1l2255:	
  5930  0678  3001               	movlw	1
  5931  0679                     u152_25:	
  5932  0679  36F1               	lsrf	___awmod@divisor+1,f
  5933  067A  0CF0               	rrf	___awmod@divisor,f
  5934  067B  0B89               	decfsz	9,f
  5935  067C  2E79               	goto	u152_25
  5936  067D  3001               	movlw	1
  5937  067E  02F5               	subwf	___awmod@counter,f
  5938  067F  1D03               	btfss	3,2
  5939  0680  2E6C               	goto	i1l2251
  5940  0681                     i1l2259:	
  5941  0681  0876               	movf	___awmod@sign,w
  5942  0682  1903               	btfsc	3,2
  5943  0683  2E89               	goto	i1l2263
  5944  0684  09F2               	comf	___awmod@dividend,f
  5945  0685  09F3               	comf	___awmod@dividend+1,f
  5946  0686  0AF2               	incf	___awmod@dividend,f
  5947  0687  1903               	skipnz
  5948  0688  0AF3               	incf	___awmod@dividend+1,f
  5949  0689                     i1l2263:	
  5950  0689  0873               	movf	___awmod@dividend+1,w
  5951  068A  01F1               	clrf	?___awmod+1
  5952  068B  07F1               	addwf	?___awmod+1,f
  5953  068C  0872               	movf	___awmod@dividend,w
  5954  068D  01F0               	clrf	?___awmod
  5955  068E  07F0               	addwf	?___awmod,f
  5956  068F  0008               	return
  5957  0690                     __end_of___awmod:	
  5958                           
  5959                           	psect	text44
  5960  047C                     __ptext44:	
  5961 ;; *************** function ___awdiv *****************
  5962 ;; Defined at:
  5963 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\awdiv.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  divisor         2    0[COMMON] int 
  5966 ;;  dividend        2    2[COMMON] int 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  quotient        2    7[COMMON] int 
  5969 ;;  sign            1    6[COMMON] unsigned char 
  5970 ;;  counter         1    5[COMMON] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  2    0[COMMON] int 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5980 ;;      Params:         4       0       0       0
  5981 ;;      Locals:         4       0       0       0
  5982 ;;      Temps:          1       0       0       0
  5983 ;;      Totals:         9       0       0       0
  5984 ;;Total ram usage:        9 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_dec_to_bcd
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           
  5994                           ;psect for function ___awdiv
  5995  047C                     ___awdiv:	
  5996                           
  5997                           ;incstack = 0
  5998                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5999  047C  01F6               	clrf	___awdiv@sign
  6000  047D  1FF1               	btfss	___awdiv@divisor+1,7
  6001  047E  2C86               	goto	i1l2193
  6002  047F  09F0               	comf	___awdiv@divisor,f
  6003  0480  09F1               	comf	___awdiv@divisor+1,f
  6004  0481  0AF0               	incf	___awdiv@divisor,f
  6005  0482  1903               	skipnz
  6006  0483  0AF1               	incf	___awdiv@divisor+1,f
  6007  0484  01F6               	clrf	___awdiv@sign
  6008  0485  0AF6               	incf	___awdiv@sign,f
  6009  0486                     i1l2193:	
  6010  0486  1FF3               	btfss	___awdiv@dividend+1,7
  6011  0487  2C91               	goto	i1l2199
  6012  0488  09F2               	comf	___awdiv@dividend,f
  6013  0489  09F3               	comf	___awdiv@dividend+1,f
  6014  048A  0AF2               	incf	___awdiv@dividend,f
  6015  048B  1903               	skipnz
  6016  048C  0AF3               	incf	___awdiv@dividend+1,f
  6017  048D  3001               	movlw	1
  6018  048E  00F4               	movwf	??___awdiv
  6019  048F  0874               	movf	??___awdiv,w
  6020  0490  06F6               	xorwf	___awdiv@sign,f
  6021  0491                     i1l2199:	
  6022  0491  01F7               	clrf	___awdiv@quotient
  6023  0492  01F8               	clrf	___awdiv@quotient+1
  6024  0493  0871               	movf	___awdiv@divisor+1,w
  6025  0494  0470               	iorwf	___awdiv@divisor,w
  6026  0495  1903               	skipnz
  6027  0496  2CC0               	goto	i1l2221
  6028  0497  01F5               	clrf	___awdiv@counter
  6029  0498  0AF5               	incf	___awdiv@counter,f
  6030  0499                     i1l2209:	
  6031  0499  1BF1               	btfsc	___awdiv@divisor+1,7
  6032  049A  2CA5               	goto	i1l2211
  6033  049B  3001               	movlw	1
  6034  049C                     u139_25:	
  6035  049C  35F0               	lslf	___awdiv@divisor,f
  6036  049D  0DF1               	rlf	___awdiv@divisor+1,f
  6037  049E  0B89               	decfsz	9,f
  6038  049F  2C9C               	goto	u139_25
  6039  04A0  3001               	movlw	1
  6040  04A1  00F4               	movwf	??___awdiv
  6041  04A2  0874               	movf	??___awdiv,w
  6042  04A3  07F5               	addwf	___awdiv@counter,f
  6043  04A4  2C99               	goto	i1l2209
  6044  04A5                     i1l2211:	
  6045  04A5  3001               	movlw	1
  6046  04A6                     u141_25:	
  6047  04A6  35F7               	lslf	___awdiv@quotient,f
  6048  04A7  0DF8               	rlf	___awdiv@quotient+1,f
  6049  04A8  0B89               	decfsz	9,f
  6050  04A9  2CA6               	goto	u141_25
  6051  04AA  0871               	movf	___awdiv@divisor+1,w
  6052  04AB  0273               	subwf	___awdiv@dividend+1,w
  6053  04AC  1D03               	skipz
  6054  04AD  2CB0               	goto	u142_25
  6055  04AE  0870               	movf	___awdiv@divisor,w
  6056  04AF  0272               	subwf	___awdiv@dividend,w
  6057  04B0                     u142_25:	
  6058  04B0  1C03               	skipc
  6059  04B1  2CB7               	goto	i1l2217
  6060  04B2  0870               	movf	___awdiv@divisor,w
  6061  04B3  02F2               	subwf	___awdiv@dividend,f
  6062  04B4  0871               	movf	___awdiv@divisor+1,w
  6063  04B5  3BF3               	subwfb	___awdiv@dividend+1,f
  6064  04B6  1477               	bsf	___awdiv@quotient,0
  6065  04B7                     i1l2217:	
  6066  04B7  3001               	movlw	1
  6067  04B8                     u143_25:	
  6068  04B8  36F1               	lsrf	___awdiv@divisor+1,f
  6069  04B9  0CF0               	rrf	___awdiv@divisor,f
  6070  04BA  0B89               	decfsz	9,f
  6071  04BB  2CB8               	goto	u143_25
  6072  04BC  3001               	movlw	1
  6073  04BD  02F5               	subwf	___awdiv@counter,f
  6074  04BE  1D03               	btfss	3,2
  6075  04BF  2CA5               	goto	i1l2211
  6076  04C0                     i1l2221:	
  6077  04C0  0876               	movf	___awdiv@sign,w
  6078  04C1  1903               	btfsc	3,2
  6079  04C2  2CC8               	goto	i1l2225
  6080  04C3  09F7               	comf	___awdiv@quotient,f
  6081  04C4  09F8               	comf	___awdiv@quotient+1,f
  6082  04C5  0AF7               	incf	___awdiv@quotient,f
  6083  04C6  1903               	skipnz
  6084  04C7  0AF8               	incf	___awdiv@quotient+1,f
  6085  04C8                     i1l2225:	
  6086  04C8  0878               	movf	___awdiv@quotient+1,w
  6087  04C9  01F1               	clrf	?___awdiv+1
  6088  04CA  07F1               	addwf	?___awdiv+1,f
  6089  04CB  0877               	movf	___awdiv@quotient,w
  6090  04CC  01F0               	clrf	?___awdiv
  6091  04CD  07F0               	addwf	?___awdiv,f
  6092  04CE  0008               	return
  6093  04CF                     __end_of___awdiv:	
  6094                           
  6095                           	psect	text45
  6096  054B                     __ptext45:	
  6097 ;; *************** function _ds1307_set_clock *****************
  6098 ;; Defined at:
  6099 ;;		line 158 in file "ds1307.c"
  6100 ;; Parameters:    Size  Location     Type
  6101 ;;		None
  6102 ;; Auto vars:     Size  Location     Type
  6103 ;;  r               1    9[COMMON] unsigned char 
  6104 ;; Return value:  Size  Location     Type
  6105 ;;		None               void
  6106 ;; Registers used:
  6107 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6108 ;; Tracked objects:
  6109 ;;		On entry : 0/0
  6110 ;;		On exit  : 0/0
  6111 ;;		Unchanged: 0/0
  6112 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6113 ;;      Params:         0       0       0       0
  6114 ;;      Locals:         1       0       0       0
  6115 ;;      Temps:          1       0       0       0
  6116 ;;      Totals:         2       0       0       0
  6117 ;;Total ram usage:        2 bytes
  6118 ;; Hardware stack levels used:    1
  6119 ;; Hardware stack levels required when called:    4
  6120 ;; This function calls:
  6121 ;;		_ds1307_start_clock
  6122 ;;		_ds1307_stop_clock
  6123 ;;		i1_i2c_send_address
  6124 ;;		i1_i2c_send_data
  6125 ;;		i1_i2c_start
  6126 ;;		i1_i2c_stop
  6127 ;; This function is called by:
  6128 ;;		_update_clock
  6129 ;; This function uses a non-reentrant model
  6130 ;;
  6131                           
  6132                           
  6133                           ;psect for function _ds1307_set_clock
  6134  054B                     _ds1307_set_clock:	
  6135                           
  6136                           ;ds1307.c: 162: ds1307_stop_clock();
  6137                           
  6138                           ;incstack = 0
  6139                           ; Regs used in _ds1307_set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6140  054B  318D  25FD  3185   	fcall	_ds1307_stop_clock
  6141                           
  6142                           ;ds1307.c: 163: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  6143  054E  0021               	movlb	1	; select bank1
  6144  054F  0837               	movf	_g_reg_data^(0+128),w
  6145  0550  3880               	iorlw	128
  6146  0551  00F8               	movwf	??_ds1307_set_clock
  6147  0552  0878               	movf	??_ds1307_set_clock,w
  6148  0553  00B7               	movwf	_g_reg_data^(0+128)
  6149                           
  6150                           ;ds1307.c: 164: i2c_start();
  6151  0554  318B  23E6  3185   	fcall	i1_i2c_start
  6152                           
  6153                           ;ds1307.c: 165: i2c_send_address(0b01101000, 0);
  6154  0557  01F0               	clrf	i1i2c_send_address@mode
  6155  0558  3068               	movlw	104
  6156  0559  318C  2480  3185   	fcall	i1_i2c_send_address
  6157                           
  6158                           ;ds1307.c: 166: i2c_send_data(0x00);
  6159  055C  3000               	movlw	0
  6160  055D  318C  241E  3185   	fcall	i1_i2c_send_data
  6161                           
  6162                           ;ds1307.c: 167: for (uint8_t r = 0x00; r < 0x07; r++) {
  6163  0560  01F9               	clrf	ds1307_set_clock@r
  6164  0561  3007               	movlw	7
  6165  0562  0279               	subwf	ds1307_set_clock@r,w
  6166  0563  1803               	btfsc	3,0
  6167  0564  2D75               	goto	i1l2625
  6168  0565                     i1l2619:	
  6169                           
  6170                           ;ds1307.c: 168: i2c_send_data(g_reg_data[r]);
  6171  0565  0879               	movf	ds1307_set_clock@r,w
  6172  0566  3EB7               	addlw	_g_reg_data& (0+255)
  6173  0567  0086               	movwf	6
  6174  0568  0187               	clrf	7
  6175  0569  0801               	movf	1,w
  6176  056A  318C  241E  3185   	fcall	i1_i2c_send_data
  6177  056D  3001               	movlw	1
  6178  056E  00F8               	movwf	??_ds1307_set_clock
  6179  056F  0878               	movf	??_ds1307_set_clock,w
  6180  0570  07F9               	addwf	ds1307_set_clock@r,f
  6181  0571  3007               	movlw	7
  6182  0572  0279               	subwf	ds1307_set_clock@r,w
  6183  0573  1C03               	skipc
  6184  0574  2D65               	goto	i1l2619
  6185  0575                     i1l2625:	
  6186                           
  6187                           ;ds1307.c: 169: }
  6188                           ;ds1307.c: 170: i2c_stop();
  6189  0575  318B  23EB  3185   	fcall	i1_i2c_stop
  6190                           
  6191                           ;ds1307.c: 171: ds1307_start_clock();
  6192  0578  318D  25E7         	fcall	_ds1307_start_clock
  6193  057A  0008               	return
  6194  057B                     __end_of_ds1307_set_clock:	
  6195                           
  6196                           	psect	text46
  6197  0DFD                     __ptext46:	
  6198 ;; *************** function _ds1307_stop_clock *****************
  6199 ;; Defined at:
  6200 ;;		line 114 in file "ds1307.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;		None
  6203 ;; Auto vars:     Size  Location     Type
  6204 ;;  tsec            1    7[COMMON] unsigned char 
  6205 ;; Return value:  Size  Location     Type
  6206 ;;		None               void
  6207 ;; Registers used:
  6208 ;;		wreg, status,2, status,0, pclath, cstack
  6209 ;; Tracked objects:
  6210 ;;		On entry : 0/0
  6211 ;;		On exit  : 0/0
  6212 ;;		Unchanged: 0/0
  6213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6214 ;;      Params:         0       0       0       0
  6215 ;;      Locals:         1       0       0       0
  6216 ;;      Temps:          1       0       0       0
  6217 ;;      Totals:         2       0       0       0
  6218 ;;Total ram usage:        2 bytes
  6219 ;; Hardware stack levels used:    1
  6220 ;; Hardware stack levels required when called:    3
  6221 ;; This function calls:
  6222 ;;		_ds1307_read_addr
  6223 ;;		_ds1307_write_addr
  6224 ;; This function is called by:
  6225 ;;		_update_clock
  6226 ;;		_ds1307_set_clock
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           
  6231                           ;psect for function _ds1307_stop_clock
  6232  0DFD                     _ds1307_stop_clock:	
  6233                           
  6234                           ;ds1307.c: 119: uint8_t tsec;
  6235                           ;ds1307.c: 120: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  6236                           
  6237                           ;incstack = 0
  6238                           ; Regs used in _ds1307_stop_clock: [wreg+status,2+status,0+pclath+cstack]
  6239  0DFD  3000               	movlw	0
  6240  0DFE  318E  26DF  318D   	fcall	_ds1307_read_addr
  6241  0E01  00F6               	movwf	??_ds1307_stop_clock
  6242  0E02  0876               	movf	??_ds1307_stop_clock,w
  6243  0E03  00F7               	movwf	ds1307_stop_clock@tsec
  6244                           
  6245                           ;ds1307.c: 121: ds1307_write_addr(DS1307_REG_SECONDS, (tsec | 0x80));
  6246  0E04  0877               	movf	ds1307_stop_clock@tsec,w
  6247  0E05  3880               	iorlw	128
  6248  0E06  00F6               	movwf	??_ds1307_stop_clock
  6249  0E07  0876               	movf	??_ds1307_stop_clock,w
  6250  0E08  00F3               	movwf	ds1307_write_addr@value
  6251  0E09  3000               	movlw	0
  6252  0E0A  318D  25BE         	fcall	_ds1307_write_addr
  6253                           
  6254                           ;ds1307.c: 122: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  6255  0E0C  0021               	movlb	1	; select bank1
  6256  0E0D  0837               	movf	_g_reg_data^(0+128),w
  6257  0E0E  3880               	iorlw	128
  6258  0E0F  00F6               	movwf	??_ds1307_stop_clock
  6259  0E10  0876               	movf	??_ds1307_stop_clock,w
  6260  0E11  00B7               	movwf	_g_reg_data^(0+128)
  6261  0E12  0008               	return
  6262  0E13                     __end_of_ds1307_stop_clock:	
  6263                           
  6264                           	psect	text47
  6265  0DE7                     __ptext47:	
  6266 ;; *************** function _ds1307_start_clock *****************
  6267 ;; Defined at:
  6268 ;;		line 125 in file "ds1307.c"
  6269 ;; Parameters:    Size  Location     Type
  6270 ;;		None
  6271 ;; Auto vars:     Size  Location     Type
  6272 ;;  tsec            1    7[COMMON] unsigned char 
  6273 ;; Return value:  Size  Location     Type
  6274 ;;		None               void
  6275 ;; Registers used:
  6276 ;;		wreg, status,2, status,0, pclath, cstack
  6277 ;; Tracked objects:
  6278 ;;		On entry : 0/0
  6279 ;;		On exit  : 0/0
  6280 ;;		Unchanged: 0/0
  6281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6282 ;;      Params:         0       0       0       0
  6283 ;;      Locals:         1       0       0       0
  6284 ;;      Temps:          1       0       0       0
  6285 ;;      Totals:         2       0       0       0
  6286 ;;Total ram usage:        2 bytes
  6287 ;; Hardware stack levels used:    1
  6288 ;; Hardware stack levels required when called:    3
  6289 ;; This function calls:
  6290 ;;		_ds1307_read_addr
  6291 ;;		_ds1307_write_addr
  6292 ;; This function is called by:
  6293 ;;		_ds1307_set_clock
  6294 ;; This function uses a non-reentrant model
  6295 ;;
  6296                           
  6297                           
  6298                           ;psect for function _ds1307_start_clock
  6299  0DE7                     _ds1307_start_clock:	
  6300                           
  6301                           ;ds1307.c: 130: uint8_t tsec;
  6302                           ;ds1307.c: 131: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  6303                           
  6304                           ;incstack = 0
  6305                           ; Regs used in _ds1307_start_clock: [wreg+status,2+status,0+pclath+cstack]
  6306  0DE7  3000               	movlw	0
  6307  0DE8  318E  26DF  318D   	fcall	_ds1307_read_addr
  6308  0DEB  00F6               	movwf	??_ds1307_start_clock
  6309  0DEC  0876               	movf	??_ds1307_start_clock,w
  6310  0DED  00F7               	movwf	ds1307_start_clock@tsec
  6311                           
  6312                           ;ds1307.c: 132: ds1307_write_addr(DS1307_REG_SECONDS, (tsec & 0x7F));
  6313  0DEE  0877               	movf	ds1307_start_clock@tsec,w
  6314  0DEF  397F               	andlw	127
  6315  0DF0  00F6               	movwf	??_ds1307_start_clock
  6316  0DF1  0876               	movf	??_ds1307_start_clock,w
  6317  0DF2  00F3               	movwf	ds1307_write_addr@value
  6318  0DF3  3000               	movlw	0
  6319  0DF4  318D  25BE         	fcall	_ds1307_write_addr
  6320                           
  6321                           ;ds1307.c: 133: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] & 0x7F;
  6322  0DF6  0021               	movlb	1	; select bank1
  6323  0DF7  0837               	movf	_g_reg_data^(0+128),w
  6324  0DF8  397F               	andlw	127
  6325  0DF9  00F6               	movwf	??_ds1307_start_clock
  6326  0DFA  0876               	movf	??_ds1307_start_clock,w
  6327  0DFB  00B7               	movwf	_g_reg_data^(0+128)
  6328  0DFC  0008               	return
  6329  0DFD                     __end_of_ds1307_start_clock:	
  6330                           
  6331                           	psect	text48
  6332  0DBE                     __ptext48:	
  6333 ;; *************** function _ds1307_write_addr *****************
  6334 ;; Defined at:
  6335 ;;		line 103 in file "ds1307.c"
  6336 ;; Parameters:    Size  Location     Type
  6337 ;;  addr            1    wreg     unsigned char 
  6338 ;;  value           1    3[COMMON] unsigned char 
  6339 ;; Auto vars:     Size  Location     Type
  6340 ;;  addr            1    4[COMMON] unsigned char 
  6341 ;; Return value:  Size  Location     Type
  6342 ;;		None               void
  6343 ;; Registers used:
  6344 ;;		wreg, status,2, status,0, pclath, cstack
  6345 ;; Tracked objects:
  6346 ;;		On entry : 0/0
  6347 ;;		On exit  : 0/0
  6348 ;;		Unchanged: 0/0
  6349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6350 ;;      Params:         1       0       0       0
  6351 ;;      Locals:         1       0       0       0
  6352 ;;      Temps:          0       0       0       0
  6353 ;;      Totals:         2       0       0       0
  6354 ;;Total ram usage:        2 bytes
  6355 ;; Hardware stack levels used:    1
  6356 ;; Hardware stack levels required when called:    2
  6357 ;; This function calls:
  6358 ;;		i1_i2c_send_address
  6359 ;;		i1_i2c_send_data
  6360 ;;		i1_i2c_start
  6361 ;;		i1_i2c_stop
  6362 ;; This function is called by:
  6363 ;;		_ds1307_stop_clock
  6364 ;;		_ds1307_start_clock
  6365 ;;		_ds1307_set_control
  6366 ;;		_ds1307_write_ram
  6367 ;; This function uses a non-reentrant model
  6368 ;;
  6369                           
  6370                           
  6371                           ;psect for function _ds1307_write_addr
  6372  0DBE                     _ds1307_write_addr:	
  6373                           
  6374                           ;incstack = 0
  6375                           ; Regs used in _ds1307_write_addr: [wreg+status,2+status,0+pclath+cstack]
  6376                           ;ds1307_write_addr@addr stored from wreg
  6377  0DBE  00F4               	movwf	ds1307_write_addr@addr
  6378                           
  6379                           ;ds1307.c: 107: i2c_start();
  6380  0DBF  318B  23E6  318D   	fcall	i1_i2c_start
  6381                           
  6382                           ;ds1307.c: 108: i2c_send_address(0b01101000, 0);
  6383  0DC2  01F0               	clrf	i1i2c_send_address@mode
  6384  0DC3  3068               	movlw	104
  6385  0DC4  318C  2480  318D   	fcall	i1_i2c_send_address
  6386                           
  6387                           ;ds1307.c: 109: i2c_send_data(addr);
  6388  0DC7  0874               	movf	ds1307_write_addr@addr,w
  6389  0DC8  318C  241E  318D   	fcall	i1_i2c_send_data
  6390                           
  6391                           ;ds1307.c: 110: i2c_send_data(value);
  6392  0DCB  0873               	movf	ds1307_write_addr@value,w
  6393  0DCC  318C  241E  318D   	fcall	i1_i2c_send_data
  6394                           
  6395                           ;ds1307.c: 111: i2c_stop();
  6396  0DCF  318B  23EB         	fcall	i1_i2c_stop
  6397  0DD1  0008               	return
  6398  0DD2                     __end_of_ds1307_write_addr:	
  6399                           
  6400                           	psect	text49
  6401  0EDF                     __ptext49:	
  6402 ;; *************** function _ds1307_read_addr *****************
  6403 ;; Defined at:
  6404 ;;		line 86 in file "ds1307.c"
  6405 ;; Parameters:    Size  Location     Type
  6406 ;;  addr            1    wreg     unsigned char 
  6407 ;; Auto vars:     Size  Location     Type
  6408 ;;  addr            1    4[COMMON] unsigned char 
  6409 ;;  read_value      1    5[COMMON] unsigned char 
  6410 ;; Return value:  Size  Location     Type
  6411 ;;                  1    wreg      unsigned char 
  6412 ;; Registers used:
  6413 ;;		wreg, status,2, status,0, pclath, cstack
  6414 ;; Tracked objects:
  6415 ;;		On entry : 0/0
  6416 ;;		On exit  : 0/0
  6417 ;;		Unchanged: 0/0
  6418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6419 ;;      Params:         0       0       0       0
  6420 ;;      Locals:         2       0       0       0
  6421 ;;      Temps:          1       0       0       0
  6422 ;;      Totals:         3       0       0       0
  6423 ;;Total ram usage:        3 bytes
  6424 ;; Hardware stack levels used:    1
  6425 ;; Hardware stack levels required when called:    2
  6426 ;; This function calls:
  6427 ;;		i1_i2c_read_data
  6428 ;;		i1_i2c_restart
  6429 ;;		i1_i2c_send_ack
  6430 ;;		i1_i2c_send_address
  6431 ;;		i1_i2c_send_data
  6432 ;;		i1_i2c_start
  6433 ;;		i1_i2c_stop
  6434 ;; This function is called by:
  6435 ;;		_ds1307_stop_clock
  6436 ;;		_ds1307_start_clock
  6437 ;;		_ds1307_read_ram
  6438 ;; This function uses a non-reentrant model
  6439 ;;
  6440                           
  6441                           
  6442                           ;psect for function _ds1307_read_addr
  6443  0EDF                     _ds1307_read_addr:	
  6444                           
  6445                           ;incstack = 0
  6446                           ; Regs used in _ds1307_read_addr: [wreg+status,2+status,0+pclath+cstack]
  6447                           ;ds1307_read_addr@addr stored from wreg
  6448  0EDF  00F4               	movwf	ds1307_read_addr@addr
  6449                           
  6450                           ;ds1307.c: 87: uint8_t read_value;
  6451                           ;ds1307.c: 91: i2c_start();
  6452  0EE0  318B  23E6  318E   	fcall	i1_i2c_start
  6453                           
  6454                           ;ds1307.c: 92: i2c_send_address(0b01101000, 0);
  6455  0EE3  01F0               	clrf	i1i2c_send_address@mode
  6456  0EE4  3068               	movlw	104
  6457  0EE5  318C  2480  318E   	fcall	i1_i2c_send_address
  6458                           
  6459                           ;ds1307.c: 93: i2c_send_data(addr);
  6460  0EE8  0874               	movf	ds1307_read_addr@addr,w
  6461  0EE9  318C  241E  318E   	fcall	i1_i2c_send_data
  6462                           
  6463                           ;ds1307.c: 94: i2c_restart();
  6464  0EEC  318B  23E1  318E   	fcall	i1_i2c_restart
  6465                           
  6466                           ;ds1307.c: 95: i2c_send_address(0b01101000, 1);
  6467  0EEF  01F0               	clrf	i1i2c_send_address@mode
  6468  0EF0  0AF0               	incf	i1i2c_send_address@mode,f
  6469  0EF1  3068               	movlw	104
  6470  0EF2  318C  2480  318E   	fcall	i1_i2c_send_address
  6471                           
  6472                           ;ds1307.c: 96: read_value = i2c_read_data();
  6473  0EF5  318C  24C2  318E   	fcall	i1_i2c_read_data
  6474  0EF8  00F3               	movwf	??_ds1307_read_addr
  6475  0EF9  0873               	movf	??_ds1307_read_addr,w
  6476  0EFA  00F5               	movwf	ds1307_read_addr@read_value
  6477                           
  6478                           ;ds1307.c: 97: i2c_send_ack(1);
  6479  0EFB  3001               	movlw	1
  6480  0EFC  318C  2469  318E   	fcall	i1_i2c_send_ack
  6481                           
  6482                           ;ds1307.c: 98: i2c_stop();
  6483  0EFF  318B  23EB         	fcall	i1_i2c_stop
  6484                           
  6485                           ;ds1307.c: 100: return read_value;
  6486  0F01  0875               	movf	ds1307_read_addr@read_value,w
  6487  0F02  0008               	return
  6488  0F03                     __end_of_ds1307_read_addr:	
  6489                           
  6490                           	psect	text50
  6491  0C69                     __ptext50:	
  6492 ;; *************** function i1_i2c_send_ack *****************
  6493 ;; Defined at:
  6494 ;;		line 97 in file "pic12f1840_i2c.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  ack             1    wreg     unsigned char 
  6497 ;; Auto vars:     Size  Location     Type
  6498 ;;  ack             1    0[COMMON] unsigned char 
  6499 ;; Return value:  Size  Location     Type
  6500 ;;		None               void
  6501 ;; Registers used:
  6502 ;;		wreg, status,2, status,0, pclath, cstack
  6503 ;; Tracked objects:
  6504 ;;		On entry : 0/0
  6505 ;;		On exit  : 0/0
  6506 ;;		Unchanged: 0/0
  6507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6508 ;;      Params:         0       0       0       0
  6509 ;;      Locals:         1       0       0       0
  6510 ;;      Temps:          0       0       0       0
  6511 ;;      Totals:         1       0       0       0
  6512 ;;Total ram usage:        1 bytes
  6513 ;; Hardware stack levels used:    1
  6514 ;; Hardware stack levels required when called:    1
  6515 ;; This function calls:
  6516 ;;		i1_i2c_wait
  6517 ;; This function is called by:
  6518 ;;		_ds1307_read_addr
  6519 ;;		i1_ds1307_get_clock
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           
  6524                           ;psect for function i1_i2c_send_ack
  6525  0C69                     i1_i2c_send_ack:	
  6526                           
  6527                           ;incstack = 0
  6528                           ; Regs used in i1_i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  6529                           ;i1i2c_send_ack@ack stored from wreg
  6530  0C69  00F0               	movwf	i1i2c_send_ack@ack
  6531                           
  6532                           ;pic12f1840_i2c.c: 98: i2c_wait();
  6533  0C6A  318C  2417         	fcall	i1_i2c_wait
  6534                           
  6535                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  6536  0C6C  0870               	movf	i1i2c_send_ack@ack,w
  6537  0C6D  0024               	movlb	4	; select bank4
  6538  0C6E  1D03               	skipz
  6539  0C6F  1696               	bsf	22,5	;volatile
  6540  0C70  1903               	skipnz
  6541  0C71  1296               	bcf	22,5	;volatile
  6542                           
  6543                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  6544  0C72  1616               	bsf	22,4	;volatile
  6545  0C73  0008               	return
  6546  0C74                     __end_ofi1_i2c_send_ack:	
  6547                           
  6548                           	psect	text51
  6549  0EBD                     __ptext51:	
  6550 ;; *************** function _adjust_val *****************
  6551 ;; Defined at:
  6552 ;;		line 126 in file "main.c"
  6553 ;; Parameters:    Size  Location     Type
  6554 ;;  value           1    wreg     unsigned char 
  6555 ;;  lim_dwn         1    0[COMMON] unsigned char 
  6556 ;;  lim_up          1    1[COMMON] unsigned char 
  6557 ;;  up_down         1    2[COMMON] unsigned char 
  6558 ;; Auto vars:     Size  Location     Type
  6559 ;;  value           1    4[COMMON] unsigned char 
  6560 ;; Return value:  Size  Location     Type
  6561 ;;                  1    wreg      unsigned char 
  6562 ;; Registers used:
  6563 ;;		wreg, status,2, status,0
  6564 ;; Tracked objects:
  6565 ;;		On entry : 0/0
  6566 ;;		On exit  : 0/0
  6567 ;;		Unchanged: 0/0
  6568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6569 ;;      Params:         3       0       0       0
  6570 ;;      Locals:         1       0       0       0
  6571 ;;      Temps:          1       0       0       0
  6572 ;;      Totals:         5       0       0       0
  6573 ;;Total ram usage:        5 bytes
  6574 ;; Hardware stack levels used:    1
  6575 ;; This function calls:
  6576 ;;		Nothing
  6577 ;; This function is called by:
  6578 ;;		_update_clock
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           
  6583                           ;psect for function _adjust_val
  6584  0EBD                     _adjust_val:	
  6585                           
  6586                           ;incstack = 0
  6587                           ; Regs used in _adjust_val: [wreg+status,2+status,0]
  6588                           ;adjust_val@value stored from wreg
  6589  0EBD  00F4               	movwf	adjust_val@value
  6590                           
  6591                           ;main.c: 127: if ((value == lim_up) && (up_down)) {
  6592  0EBE  0874               	movf	adjust_val@value,w
  6593  0EBF  0671               	xorwf	adjust_val@lim_up,w
  6594  0EC0  1D03               	skipz
  6595  0EC1  2EC7               	goto	i1l2485
  6596  0EC2  0872               	movf	adjust_val@up_down,w
  6597  0EC3  1903               	btfsc	3,2
  6598  0EC4  2EC7               	goto	i1l2485
  6599                           
  6600                           ;main.c: 128: value = lim_dwn;
  6601  0EC5  0870               	movf	adjust_val@lim_dwn,w
  6602  0EC6  2ECF               	goto	L5
  6603  0EC7                     i1l2485:	
  6604                           ;main.c: 129: } else if ((value == lim_dwn) && (!up_down)) {
  6605                           
  6606  0EC7  0874               	movf	adjust_val@value,w
  6607  0EC8  0670               	xorwf	adjust_val@lim_dwn,w
  6608  0EC9  1D03               	skipz
  6609  0ECA  2ED3               	goto	i1l2491
  6610  0ECB  08F2               	movf	adjust_val@up_down,f
  6611  0ECC  1D03               	skipz
  6612  0ECD  2ED3               	goto	i1l2491
  6613                           
  6614                           ;main.c: 130: value = lim_up;
  6615  0ECE  0871               	movf	adjust_val@lim_up,w
  6616  0ECF                     L5:	
  6617  0ECF  00F3               	movwf	??_adjust_val
  6618  0ED0  0873               	movf	??_adjust_val,w
  6619  0ED1  00F4               	movwf	adjust_val@value
  6620                           
  6621                           ;main.c: 131: } else if (up_down) {
  6622  0ED2  2EDD               	goto	i1l2497
  6623  0ED3                     i1l2491:	
  6624  0ED3  0872               	movf	adjust_val@up_down,w
  6625  0ED4  1903               	btfsc	3,2
  6626  0ED5  2EDB               	goto	i1l2495
  6627                           
  6628                           ;main.c: 132: value++;
  6629  0ED6  3001               	movlw	1
  6630  0ED7  00F3               	movwf	??_adjust_val
  6631  0ED8  0873               	movf	??_adjust_val,w
  6632  0ED9  07F4               	addwf	adjust_val@value,f
  6633                           
  6634                           ;main.c: 133: } else {
  6635  0EDA  2EDD               	goto	i1l2497
  6636  0EDB                     i1l2495:	
  6637                           
  6638                           ;main.c: 134: value--;
  6639  0EDB  3001               	movlw	1
  6640  0EDC  02F4               	subwf	adjust_val@value,f
  6641  0EDD                     i1l2497:	
  6642                           
  6643                           ;main.c: 135: }
  6644                           ;main.c: 136: return value;
  6645  0EDD  0874               	movf	adjust_val@value,w
  6646  0EDE  0008               	return
  6647  0EDF                     __end_of_adjust_val:	
  6648                           
  6649                           	psect	text52
  6650  0F2A                     __ptext52:	
  6651 ;; *************** function _lcd_write *****************
  6652 ;; Defined at:
  6653 ;;		line 101 in file "HD44780-IOE.c"
  6654 ;; Parameters:    Size  Location     Type
  6655 ;;  str             2    0[BANK0 ] PTR unsigned char 
  6656 ;;		 -> tmr_isr@pos(2), STR_2(7), STR_1(7), tmr_isr@date(10), 
  6657 ;;		 -> tmr_isr@time(10), 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;  i               1   13[COMMON] unsigned char 
  6660 ;; Return value:  Size  Location     Type
  6661 ;;		None               void
  6662 ;; Registers used:
  6663 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6669 ;;      Params:         0       2       0       0
  6670 ;;      Locals:         1       0       0       0
  6671 ;;      Temps:          0       2       0       0
  6672 ;;      Totals:         1       4       0       0
  6673 ;;Total ram usage:        5 bytes
  6674 ;; Hardware stack levels used:    1
  6675 ;; Hardware stack levels required when called:    7
  6676 ;; This function calls:
  6677 ;;		_lcd_data
  6678 ;; This function is called by:
  6679 ;;		_tmr_isr
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           
  6683                           
  6684                           ;psect for function _lcd_write
  6685  0F2A                     _lcd_write:	
  6686                           
  6687                           ;HD44780-IOE.c: 102: unsigned char i = 0;
  6688                           
  6689                           ;incstack = 0
  6690 ;; hardware stack exceeded
  6691                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6692  0F2A  01FD               	clrf	lcd_write@i
  6693  0F2B                     i1l3005:	
  6694                           ;HD44780-IOE.c: 104: while (str[i] != '\0')
  6695                           
  6696  0F2B  0020               	movlb	0	; select bank0
  6697  0F2C  0821               	movf	lcd_write@str+1,w
  6698  0F2D  00A3               	movwf	??_lcd_write+1
  6699  0F2E  0820               	movf	lcd_write@str,w
  6700  0F2F  00A2               	movwf	??_lcd_write
  6701  0F30  087D               	movf	lcd_write@i,w
  6702  0F31  0722               	addwf	??_lcd_write,w
  6703  0F32  0084               	movwf	4
  6704  0F33  0823               	movf	??_lcd_write+1,w
  6705  0F34  1803               	skipnc
  6706  0F35  0A23               	incf	??_lcd_write+1,w
  6707  0F36  0085               	movwf	5
  6708  0F37  0800               	movf	0,w	;code access
  6709  0F38  3800               	iorlw	0
  6710  0F39  1903               	btfsc	3,2
  6711  0F3A  0008               	return
  6712                           
  6713                           ;HD44780-IOE.c: 105: lcd_data(str[i++]);
  6714  0F3B  0020               	movlb	0	; select bank0
  6715  0F3C  0821               	movf	lcd_write@str+1,w
  6716  0F3D  00A3               	movwf	??_lcd_write+1
  6717  0F3E  0820               	movf	lcd_write@str,w
  6718  0F3F  00A2               	movwf	??_lcd_write
  6719  0F40  087D               	movf	lcd_write@i,w
  6720  0F41  0722               	addwf	??_lcd_write,w
  6721  0F42  0084               	movwf	4
  6722  0F43  0823               	movf	??_lcd_write+1,w
  6723  0F44  1803               	skipnc
  6724  0F45  0A23               	incf	??_lcd_write+1,w
  6725  0F46  0085               	movwf	5
  6726  0F47  0800               	movf	0,w	;code access
  6727  0F48  318D  250E  318F   	fcall	_lcd_data
  6728  0F4B  3001               	movlw	1
  6729  0F4C  0020               	movlb	0	; select bank0
  6730  0F4D  00A2               	movwf	??_lcd_write
  6731  0F4E  0822               	movf	??_lcd_write,w
  6732  0F4F  07FD               	addwf	lcd_write@i,f
  6733  0F50  2F2B               	goto	i1l3005
  6734  0F51                     __end_of_lcd_write:	
  6735                           
  6736                           	psect	text53
  6737  0D0E                     __ptext53:	
  6738 ;; *************** function _lcd_data *****************
  6739 ;; Defined at:
  6740 ;;		line 185 in file "HD44780-IOE.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  data            1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  data            1   12[COMMON] unsigned char 
  6745 ;; Return value:  Size  Location     Type
  6746 ;;		None               void
  6747 ;; Registers used:
  6748 ;;		wreg, status,2, status,0, pclath, cstack
  6749 ;; Tracked objects:
  6750 ;;		On entry : 0/0
  6751 ;;		On exit  : 0/0
  6752 ;;		Unchanged: 0/0
  6753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6754 ;;      Params:         0       0       0       0
  6755 ;;      Locals:         1       0       0       0
  6756 ;;      Temps:          1       0       0       0
  6757 ;;      Totals:         2       0       0       0
  6758 ;;Total ram usage:        2 bytes
  6759 ;; Hardware stack levels used:    1
  6760 ;; Hardware stack levels required when called:    6
  6761 ;; This function calls:
  6762 ;;		i1__send_byte
  6763 ;;		i1_mcp23017_ioa_send_byte
  6764 ;; This function is called by:
  6765 ;;		_lcd_write
  6766 ;;		_lcd_add_character
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function _lcd_data
  6772  0D0E                     _lcd_data:	
  6773                           
  6774                           ;incstack = 0
  6775 ;; hardware stack exceeded
  6776                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  6777                           ;lcd_data@data stored from wreg
  6778  0D0E  00FC               	movwf	lcd_data@data
  6779                           
  6780                           ;HD44780-IOE.c: 186: LCDPort.A4 = 1;
  6781  0D0F  0021               	movlb	1	; select bank1
  6782  0D10  1646               	bsf	_LCDPort^(0+128),4
  6783                           
  6784                           ;HD44780-IOE.c: 187: mcp23017_ioa_send_byte();
  6785  0D11  318C  243C  318D   	fcall	i1_mcp23017_ioa_send_byte
  6786                           
  6787                           ;HD44780-IOE.c: 188: __nop();
  6788  0D14  0000               	nop
  6789                           
  6790                           ;HD44780-IOE.c: 189: _send_byte(data);
  6791  0D15  087C               	movf	lcd_data@data,w
  6792  0D16  318C  24EE  318D   	fcall	i1__send_byte
  6793                           
  6794                           ;HD44780-IOE.c: 190: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  6795  0D19  3085               	movlw	133
  6796  0D1A  00FB               	movwf	??_lcd_data
  6797  0D1B                     u264_27:	
  6798  0D1B  0BFB               	decfsz	??_lcd_data,f
  6799  0D1C  2D1B               	goto	u264_27
  6800  0D1D  0008               	return
  6801  0D1E                     __end_of_lcd_data:	
  6802                           
  6803                           	psect	text54
  6804  0F03                     __ptext54:	
  6805 ;; *************** function _lcd_goto *****************
  6806 ;; Defined at:
  6807 ;;		line 111 in file "HD44780-IOE.c"
  6808 ;; Parameters:    Size  Location     Type
  6809 ;;  row             1    wreg     unsigned char 
  6810 ;;  col             1   13[COMMON] unsigned char 
  6811 ;; Auto vars:     Size  Location     Type
  6812 ;;  row             1    1[BANK0 ] unsigned char 
  6813 ;;  addr            1    2[BANK0 ] unsigned char 
  6814 ;; Return value:  Size  Location     Type
  6815 ;;		None               void
  6816 ;; Registers used:
  6817 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6818 ;; Tracked objects:
  6819 ;;		On entry : 0/0
  6820 ;;		On exit  : 0/0
  6821 ;;		Unchanged: 0/0
  6822 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6823 ;;      Params:         1       0       0       0
  6824 ;;      Locals:         0       2       0       0
  6825 ;;      Temps:          0       1       0       0
  6826 ;;      Totals:         1       3       0       0
  6827 ;;Total ram usage:        4 bytes
  6828 ;; Hardware stack levels used:    1
  6829 ;; Hardware stack levels required when called:    7
  6830 ;; This function calls:
  6831 ;;		i1_lcd_command
  6832 ;; This function is called by:
  6833 ;;		_tmr_isr
  6834 ;; This function uses a non-reentrant model
  6835 ;;
  6836                           
  6837                           
  6838                           ;psect for function _lcd_goto
  6839  0F03                     _lcd_goto:	
  6840                           
  6841                           ;incstack = 0
  6842 ;; hardware stack exceeded
  6843                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6844                           ;lcd_goto@row stored from wreg
  6845  0F03  0020               	movlb	0	; select bank0
  6846  0F04  00A1               	movwf	lcd_goto@row
  6847                           
  6848                           ;HD44780-IOE.c: 112: unsigned char addr;
  6849                           ;HD44780-IOE.c: 114: switch (row) {
  6850  0F05  2F12               	goto	i1l2993
  6851  0F06                     i1l2981:	
  6852                           ;HD44780-IOE.c: 115: case 1: addr = 0x00;
  6853                           
  6854  0F06  2F10               	goto	i1l2989
  6855  0F07                     i1l2983:	
  6856                           ;HD44780-IOE.c: 117: case 2: addr = 0x40;
  6857                           
  6858                           ;HD44780-IOE.c: 116: break;
  6859                           
  6860  0F07  3040               	movlw	64
  6861  0F08  2F0C               	goto	L7
  6862  0F09                     i1l2985:	
  6863                           ;HD44780-IOE.c: 119: case 3: addr = 0x14;
  6864                           
  6865                           ;HD44780-IOE.c: 118: break;
  6866                           
  6867  0F09  3014               	movlw	20
  6868  0F0A  2F0C               	goto	L7
  6869  0F0B                     i1l2987:	
  6870                           ;HD44780-IOE.c: 121: case 4: addr = 0x54;
  6871                           
  6872                           ;HD44780-IOE.c: 120: break;
  6873                           
  6874  0F0B  3054               	movlw	84
  6875  0F0C                     L7:	
  6876  0F0C  00A0               	movwf	??_lcd_goto
  6877  0F0D  0820               	movf	??_lcd_goto,w
  6878  0F0E  00A2               	movwf	lcd_goto@addr
  6879                           
  6880                           ;HD44780-IOE.c: 122: break;
  6881  0F0F  2F20               	goto	i1l2995
  6882  0F10                     i1l2989:	
  6883                           ;HD44780-IOE.c: 123: default:addr = 0x00;
  6884                           
  6885  0F10  01A2               	clrf	lcd_goto@addr
  6886                           
  6887                           ;HD44780-IOE.c: 125: }
  6888                           
  6889                           ;HD44780-IOE.c: 124: break;
  6890  0F11  2F20               	goto	i1l2995
  6891  0F12                     i1l2993:	
  6892  0F12  0821               	movf	lcd_goto@row,w
  6893                           
  6894                           ; Switch size 1, requested type "space"
  6895                           ; Number of cases is 4, Range of values is 1 to 4
  6896                           ; switch strategies available:
  6897                           ; Name         Instructions Cycles
  6898                           ; simple_byte           13     7 (average)
  6899                           ; direct_byte           17     9 (fixed)
  6900                           ; jumptable            263     9 (fixed)
  6901                           ;	Chosen strategy is simple_byte
  6902  0F13  3A01               	xorlw	1	; case 1
  6903  0F14  1903               	skipnz
  6904  0F15  2F06               	goto	i1l2981
  6905  0F16  3A03               	xorlw	3	; case 2
  6906  0F17  1903               	skipnz
  6907  0F18  2F07               	goto	i1l2983
  6908  0F19  3A01               	xorlw	1	; case 3
  6909  0F1A  1903               	skipnz
  6910  0F1B  2F09               	goto	i1l2985
  6911  0F1C  3A07               	xorlw	7	; case 4
  6912  0F1D  1903               	skipnz
  6913  0F1E  2F0B               	goto	i1l2987
  6914  0F1F  2F10               	goto	i1l2989
  6915  0F20                     i1l2995:	
  6916                           
  6917                           ;HD44780-IOE.c: 126: addr += col - 1;
  6918  0F20  087D               	movf	lcd_goto@col,w
  6919  0F21  3EFF               	addlw	255
  6920  0F22  00A0               	movwf	??_lcd_goto
  6921  0F23  0820               	movf	??_lcd_goto,w
  6922  0F24  07A2               	addwf	lcd_goto@addr,f
  6923                           
  6924                           ;HD44780-IOE.c: 127: lcd_command(0x80 | addr);
  6925  0F25  0822               	movf	lcd_goto@addr,w
  6926  0F26  3880               	iorlw	128
  6927  0F27  318C  24FE         	fcall	i1_lcd_command
  6928  0F29  0008               	return
  6929  0F2A                     __end_of_lcd_goto:	
  6930                           
  6931                           	psect	text55
  6932  0CFE                     __ptext55:	
  6933 ;; *************** function i1_lcd_command *****************
  6934 ;; Defined at:
  6935 ;;		line 177 in file "HD44780-IOE.c"
  6936 ;; Parameters:    Size  Location     Type
  6937 ;;  command         1    wreg     unsigned char 
  6938 ;; Auto vars:     Size  Location     Type
  6939 ;;  command         1   12[COMMON] unsigned char 
  6940 ;; Return value:  Size  Location     Type
  6941 ;;		None               void
  6942 ;; Registers used:
  6943 ;;		wreg, status,2, status,0, pclath, cstack
  6944 ;; Tracked objects:
  6945 ;;		On entry : 0/0
  6946 ;;		On exit  : 0/0
  6947 ;;		Unchanged: 0/0
  6948 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6949 ;;      Params:         0       0       0       0
  6950 ;;      Locals:         1       0       0       0
  6951 ;;      Temps:          1       0       0       0
  6952 ;;      Totals:         2       0       0       0
  6953 ;;Total ram usage:        2 bytes
  6954 ;; Hardware stack levels used:    1
  6955 ;; Hardware stack levels required when called:    6
  6956 ;; This function calls:
  6957 ;;		i1__send_byte
  6958 ;;		i1_mcp23017_ioa_send_byte
  6959 ;; This function is called by:
  6960 ;;		_lcd_goto
  6961 ;; This function uses a non-reentrant model
  6962 ;;
  6963                           
  6964                           
  6965                           ;psect for function i1_lcd_command
  6966  0CFE                     i1_lcd_command:	
  6967                           
  6968                           ;incstack = 0
  6969 ;; hardware stack exceeded
  6970                           ; Regs used in i1_lcd_command: [wreg+status,2+status,0+pclath+cstack]
  6971                           ;i1lcd_command@command stored from wreg
  6972  0CFE  00FC               	movwf	i1lcd_command@command
  6973                           
  6974                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  6975  0CFF  0021               	movlb	1	; select bank1
  6976  0D00  1246               	bcf	_LCDPort^(0+128),4
  6977                           
  6978                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  6979  0D01  318C  243C  318C   	fcall	i1_mcp23017_ioa_send_byte
  6980                           
  6981                           ;HD44780-IOE.c: 180: __nop();
  6982  0D04  0000               	nop
  6983                           
  6984                           ;HD44780-IOE.c: 181: _send_byte(command);
  6985  0D05  087C               	movf	i1lcd_command@command,w
  6986  0D06  318C  24EE  318C   	fcall	i1__send_byte
  6987                           
  6988                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  6989  0D09  3085               	movlw	133
  6990  0D0A  00FB               	movwf	??i1_lcd_command
  6991  0D0B                     u265_27:	
  6992  0D0B  0BFB               	decfsz	??i1_lcd_command,f
  6993  0D0C  2D0B               	goto	u265_27
  6994  0D0D  0008               	return
  6995  0D0E                     __end_ofi1_lcd_command:	
  6996                           
  6997                           	psect	text56
  6998  0CEE                     __ptext56:	
  6999 ;; *************** function i1__send_byte *****************
  7000 ;; Defined at:
  7001 ;;		line 81 in file "HD44780-IOE.c"
  7002 ;; Parameters:    Size  Location     Type
  7003 ;;  data            1    wreg     unsigned char 
  7004 ;; Auto vars:     Size  Location     Type
  7005 ;;  data            1   10[COMMON] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;		None               void
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0, pclath, cstack
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7015 ;;      Params:         0       0       0       0
  7016 ;;      Locals:         1       0       0       0
  7017 ;;      Temps:          1       0       0       0
  7018 ;;      Totals:         2       0       0       0
  7019 ;;Total ram usage:        2 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; Hardware stack levels required when called:    5
  7022 ;; This function calls:
  7023 ;;		i1__send_nibble
  7024 ;; This function is called by:
  7025 ;;		_lcd_data
  7026 ;;		i1_lcd_command
  7027 ;; This function uses a non-reentrant model
  7028 ;;
  7029                           
  7030                           
  7031                           ;psect for function i1__send_byte
  7032  0CEE                     i1__send_byte:	
  7033                           
  7034                           ;incstack = 0
  7035 ;; hardware stack exceeded
  7036                           ; Regs used in i1__send_byte: [wreg+status,2+status,0+pclath+cstack]
  7037                           ;i1__send_byte@data stored from wreg
  7038  0CEE  00FA               	movwf	i1__send_byte@data
  7039                           
  7040                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  7041  0CEF  087A               	movf	i1__send_byte@data,w
  7042  0CF0  00F9               	movwf	??i1__send_byte
  7043  0CF1  3004               	movlw	4
  7044  0CF2                     u181_25:	
  7045  0CF2  36F9               	lsrf	??i1__send_byte,f
  7046  0CF3  0B89               	decfsz	9,f
  7047  0CF4  2CF2               	goto	u181_25
  7048  0CF5  0879               	movf	??i1__send_byte,w
  7049  0CF6  318F  2751  318C   	fcall	i1__send_nibble
  7050                           
  7051                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  7052  0CF9  087A               	movf	i1__send_byte@data,w
  7053  0CFA  390F               	andlw	15
  7054  0CFB  318F  2751         	fcall	i1__send_nibble
  7055  0CFD  0008               	return
  7056  0CFE                     __end_ofi1__send_byte:	
  7057                           
  7058                           	psect	text57
  7059  0F51                     __ptext57:	
  7060 ;; *************** function i1__send_nibble *****************
  7061 ;; Defined at:
  7062 ;;		line 65 in file "HD44780-IOE.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  data            1    wreg     unsigned char 
  7065 ;; Auto vars:     Size  Location     Type
  7066 ;;  data            1    8[COMMON] unsigned char 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;		None               void
  7069 ;; Registers used:
  7070 ;;		wreg, status,2, status,0, pclath, cstack
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7076 ;;      Params:         0       0       0       0
  7077 ;;      Locals:         1       0       0       0
  7078 ;;      Temps:          2       0       0       0
  7079 ;;      Totals:         3       0       0       0
  7080 ;;Total ram usage:        3 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; Hardware stack levels required when called:    4
  7083 ;; This function calls:
  7084 ;;		i1_mcp23017_ioa_send_byte
  7085 ;; This function is called by:
  7086 ;;		i1__send_byte
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           
  7091                           ;psect for function i1__send_nibble
  7092  0F51                     i1__send_nibble:	
  7093                           
  7094                           ;incstack = 0
  7095 ;; hardware stack exceeded
  7096                           ; Regs used in i1__send_nibble: [wreg+status,2+status,0+pclath+cstack]
  7097                           ;i1__send_nibble@data stored from wreg
  7098  0F51  00F8               	movwf	i1__send_nibble@data
  7099                           
  7100                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  7101  0F52  30F0               	movlw	240
  7102  0F53  00F6               	movwf	??i1__send_nibble
  7103  0F54  0876               	movf	??i1__send_nibble,w
  7104  0F55  0021               	movlb	1	; select bank1
  7105  0F56  05C6               	andwf	_LCDPort^(0+128),f
  7106                           
  7107                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  7108  0F57  0878               	movf	i1__send_nibble@data,w
  7109  0F58  390F               	andlw	15
  7110  0F59  00F6               	movwf	??i1__send_nibble
  7111  0F5A  0876               	movf	??i1__send_nibble,w
  7112  0F5B  04C6               	iorwf	_LCDPort^(0+128),f
  7113                           
  7114                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  7115  0F5C  318C  243C  318F   	fcall	i1_mcp23017_ioa_send_byte
  7116                           
  7117                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  7118  0F5F  0021               	movlb	1	; select bank1
  7119  0F60  16C6               	bsf	_LCDPort^(0+128),5
  7120                           
  7121                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  7122  0F61  318C  243C  318F   	fcall	i1_mcp23017_ioa_send_byte
  7123                           
  7124                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  7125  0F64  3003               	movlw	3
  7126  0F65  00F7               	movwf	??i1__send_nibble+1
  7127  0F66  3097               	movlw	151
  7128  0F67  00F6               	movwf	??i1__send_nibble
  7129  0F68                     u266_27:	
  7130  0F68  0BF6               	decfsz	??i1__send_nibble,f
  7131  0F69  2F68               	goto	u266_27
  7132  0F6A  0BF7               	decfsz	??i1__send_nibble+1,f
  7133  0F6B  2F68               	goto	u266_27
  7134  0F6C  3200               	nop2
  7135                           
  7136                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  7137  0F6D  0021               	movlb	1	; select bank1
  7138  0F6E  12C6               	bcf	_LCDPort^(0+128),5
  7139                           
  7140                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  7141  0F6F  318C  243C  318F   	fcall	i1_mcp23017_ioa_send_byte
  7142                           
  7143                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  7144  0F72  3003               	movlw	3
  7145  0F73  00F7               	movwf	??i1__send_nibble+1
  7146  0F74  3097               	movlw	151
  7147  0F75  00F6               	movwf	??i1__send_nibble
  7148  0F76                     u267_27:	
  7149  0F76  0BF6               	decfsz	??i1__send_nibble,f
  7150  0F77  2F76               	goto	u267_27
  7151  0F78  0BF7               	decfsz	??i1__send_nibble+1,f
  7152  0F79  2F76               	goto	u267_27
  7153  0F7A  3200               	nop2
  7154  0F7B  0008               	return
  7155  0F7C                     __end_ofi1__send_nibble:	
  7156                           
  7157                           	psect	text58
  7158  0C3C                     __ptext58:	
  7159 ;; *************** function i1_mcp23017_ioa_send_byte *****************
  7160 ;; Defined at:
  7161 ;;		line 59 in file "HD44780-IOE.c"
  7162 ;; Parameters:    Size  Location     Type
  7163 ;;		None
  7164 ;; Auto vars:     Size  Location     Type
  7165 ;;		None
  7166 ;; Return value:  Size  Location     Type
  7167 ;;		None               void
  7168 ;; Registers used:
  7169 ;;		wreg, status,2, status,0, pclath, cstack
  7170 ;; Tracked objects:
  7171 ;;		On entry : 0/0
  7172 ;;		On exit  : 0/0
  7173 ;;		Unchanged: 0/0
  7174 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7175 ;;      Params:         0       0       0       0
  7176 ;;      Locals:         0       0       0       0
  7177 ;;      Temps:          1       0       0       0
  7178 ;;      Totals:         1       0       0       0
  7179 ;;Total ram usage:        1 bytes
  7180 ;; Hardware stack levels used:    1
  7181 ;; Hardware stack levels required when called:    3
  7182 ;; This function calls:
  7183 ;;		i1_mcp23017_write_reg
  7184 ;; This function is called by:
  7185 ;;		_lcd_data
  7186 ;;		i1__send_nibble
  7187 ;;		i1_lcd_command
  7188 ;;		i1_lcd_backlight
  7189 ;; This function uses a non-reentrant model
  7190 ;;
  7191                           
  7192                           
  7193                           ;psect for function i1_mcp23017_ioa_send_byte
  7194  0C3C                     i1_mcp23017_ioa_send_byte:	
  7195                           
  7196                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  7197                           
  7198                           ;incstack = 0
  7199                           ; Regs used in i1_mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7200  0C3C  0021               	movlb	1	; select bank1
  7201  0C3D  0846               	movf	_LCDPort^(0+128),w
  7202  0C3E  00F5               	movwf	??i1_mcp23017_ioa_send_byte
  7203  0C3F  0875               	movf	??i1_mcp23017_ioa_send_byte,w
  7204  0C40  00F3               	movwf	i1mcp23017_write_reg@value
  7205  0C41  3012               	movlw	18
  7206  0C42  318D  25D2         	fcall	i1_mcp23017_write_reg
  7207  0C44  0008               	return
  7208  0C45                     __end_ofi1_mcp23017_ioa_send_byte:	
  7209                           
  7210                           	psect	text59
  7211  0DD2                     __ptext59:	
  7212 ;; *************** function i1_mcp23017_write_reg *****************
  7213 ;; Defined at:
  7214 ;;		line 60 in file "mcp23017.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  reg_address     1    wreg     unsigned char 
  7217 ;;  value           1    3[COMMON] unsigned char 
  7218 ;; Auto vars:     Size  Location     Type
  7219 ;;  reg_address     1    4[COMMON] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;		None               void
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0, pclath, cstack
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7229 ;;      Params:         1       0       0       0
  7230 ;;      Locals:         1       0       0       0
  7231 ;;      Temps:          0       0       0       0
  7232 ;;      Totals:         2       0       0       0
  7233 ;;Total ram usage:        2 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    2
  7236 ;; This function calls:
  7237 ;;		i1_i2c_send_address
  7238 ;;		i1_i2c_send_data
  7239 ;;		i1_i2c_start
  7240 ;;		i1_i2c_stop
  7241 ;; This function is called by:
  7242 ;;		i1_mcp23017_ioa_send_byte
  7243 ;; This function uses a non-reentrant model
  7244 ;;
  7245                           
  7246                           
  7247                           ;psect for function i1_mcp23017_write_reg
  7248  0DD2                     i1_mcp23017_write_reg:	
  7249                           
  7250                           ;incstack = 0
  7251                           ; Regs used in i1_mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  7252                           ;i1mcp23017_write_reg@reg_address stored from wreg
  7253  0DD2  00F4               	movwf	i1mcp23017_write_reg@reg_address
  7254                           
  7255                           ;mcp23017.c: 62: i2c_start();
  7256  0DD3  318B  23E6  318D   	fcall	i1_i2c_start
  7257                           
  7258                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  7259  0DD6  01F0               	clrf	i1i2c_send_address@mode
  7260  0DD7  0021               	movlb	1	; select bank1
  7261  0DD8  0849               	movf	_g_slave_address_7b^(0+128),w
  7262  0DD9  318C  2480  318D   	fcall	i1_i2c_send_address
  7263                           
  7264                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  7265  0DDC  0874               	movf	i1mcp23017_write_reg@reg_address,w
  7266  0DDD  318C  241E  318D   	fcall	i1_i2c_send_data
  7267                           
  7268                           ;mcp23017.c: 65: i2c_send_data(value);
  7269  0DE0  0873               	movf	i1mcp23017_write_reg@value,w
  7270  0DE1  318C  241E  318D   	fcall	i1_i2c_send_data
  7271                           
  7272                           ;mcp23017.c: 66: i2c_stop();
  7273  0DE4  318B  23EB         	fcall	i1_i2c_stop
  7274  0DE6  0008               	return
  7275  0DE7                     __end_ofi1_mcp23017_write_reg:	
  7276                           
  7277                           	psect	text60
  7278  0E9B                     __ptext60:	
  7279 ;; *************** function _keypad_read_key *****************
  7280 ;; Defined at:
  7281 ;;		line 63 in file "keypad.c"
  7282 ;; Parameters:    Size  Location     Type
  7283 ;;		None
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  key             1    7[COMMON] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      unsigned char 
  7288 ;; Registers used:
  7289 ;;		wreg, status,2, status,0, pclath, cstack
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7295 ;;      Params:         0       0       0       0
  7296 ;;      Locals:         1       0       0       0
  7297 ;;      Temps:          1       0       0       0
  7298 ;;      Totals:         2       0       0       0
  7299 ;;Total ram usage:        2 bytes
  7300 ;; Hardware stack levels used:    1
  7301 ;; Hardware stack levels required when called:    4
  7302 ;; This function calls:
  7303 ;;		_keypad_scan
  7304 ;; This function is called by:
  7305 ;;		_tmr_isr
  7306 ;; This function uses a non-reentrant model
  7307 ;;
  7308                           
  7309                           
  7310                           ;psect for function _keypad_read_key
  7311  0E9B                     _keypad_read_key:	
  7312                           
  7313                           ;keypad.c: 64: uint8_t key;
  7314                           ;keypad.c: 66: key = keypad_scan();
  7315                           
  7316                           ;incstack = 0
  7317                           ; Regs used in _keypad_read_key: [wreg+status,2+status,0+pclath+cstack]
  7318  0E9B  318B  23C9  318E   	fcall	_keypad_scan
  7319  0E9E  00F6               	movwf	??_keypad_read_key
  7320  0E9F  0876               	movf	??_keypad_read_key,w
  7321  0EA0  00F7               	movwf	keypad_read_key@key
  7322                           
  7323                           ;keypad.c: 67: if (key == (0)) {
  7324  0EA1  08F7               	movf	keypad_read_key@key,f
  7325  0EA2  1D03               	skipz
  7326  0EA3  2EA8               	goto	i1l2947
  7327                           
  7328                           ;keypad.c: 69: g_old_key = (0);
  7329  0EA4  0020               	movlb	0	; select bank0
  7330  0EA5  01D9               	clrf	_g_old_key
  7331                           
  7332                           ;keypad.c: 70: g_last_valid_key = (0);
  7333  0EA6  01D8               	clrf	_g_last_valid_key
  7334                           
  7335                           ;keypad.c: 71: } else if (key == g_old_key) {
  7336  0EA7  2EBB               	goto	i1l2959
  7337  0EA8                     i1l2947:	
  7338  0EA8  0877               	movf	keypad_read_key@key,w
  7339  0EA9  0020               	movlb	0	; select bank0
  7340  0EAA  0659               	xorwf	_g_old_key,w
  7341  0EAB  1D03               	skipz
  7342  0EAC  2EB6               	goto	i1l2955
  7343                           
  7344                           ;keypad.c: 73: if (key != g_last_valid_key) {
  7345  0EAD  0877               	movf	keypad_read_key@key,w
  7346  0EAE  0658               	xorwf	_g_last_valid_key,w
  7347  0EAF  1903               	skipnz
  7348  0EB0  2EBA               	goto	i1l2957
  7349                           
  7350                           ;keypad.c: 75: g_last_valid_key = key;
  7351  0EB1  0877               	movf	keypad_read_key@key,w
  7352  0EB2  00F6               	movwf	??_keypad_read_key
  7353  0EB3  0876               	movf	??_keypad_read_key,w
  7354  0EB4  00D8               	movwf	_g_last_valid_key
  7355                           
  7356                           ;keypad.c: 76: }
  7357  0EB5  2EBB               	goto	i1l2959
  7358  0EB6                     i1l2955:	
  7359                           ;keypad.c: 79: }
  7360                           ;keypad.c: 80: } else {
  7361                           
  7362                           ;keypad.c: 77: else{
  7363                           ;keypad.c: 78: key = (0);
  7364                           
  7365                           
  7366                           ;keypad.c: 81: g_old_key = key;
  7367  0EB6  0877               	movf	keypad_read_key@key,w
  7368  0EB7  00F6               	movwf	??_keypad_read_key
  7369  0EB8  0876               	movf	??_keypad_read_key,w
  7370  0EB9  00D9               	movwf	_g_old_key
  7371  0EBA                     i1l2957:	
  7372                           
  7373                           ;keypad.c: 82: key = (0);
  7374  0EBA  01F7               	clrf	keypad_read_key@key
  7375  0EBB                     i1l2959:	
  7376                           
  7377                           ;keypad.c: 83: }
  7378                           ;keypad.c: 84: return key;
  7379  0EBB  0877               	movf	keypad_read_key@key,w
  7380  0EBC  0008               	return
  7381  0EBD                     __end_of_keypad_read_key:	
  7382                           
  7383                           	psect	text61
  7384  0BC9                     __ptext61:	
  7385 ;; *************** function _keypad_scan *****************
  7386 ;; Defined at:
  7387 ;;		line 51 in file "keypad.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      unsigned char 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2, status,0, pclath, cstack
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7401 ;;      Params:         0       0       0       0
  7402 ;;      Locals:         0       0       0       0
  7403 ;;      Temps:          0       0       0       0
  7404 ;;      Totals:         0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    3
  7408 ;; This function calls:
  7409 ;;		_mcp23017_read_reg
  7410 ;; This function is called by:
  7411 ;;		_keypad_read_key
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           
  7416                           ;psect for function _keypad_scan
  7417  0BC9                     _keypad_scan:	
  7418                           
  7419                           ;keypad.c: 53: return mcp23017_read_reg(MCP23017_REG_GPIOB);
  7420                           
  7421                           ;incstack = 0
  7422                           ; Regs used in _keypad_scan: [wreg+status,2+status,0+pclath+cstack]
  7423  0BC9  3013               	movlw	19
  7424  0BCA  318E  2679         	fcall	_mcp23017_read_reg
  7425  0BCC  0008               	return
  7426  0BCD                     __end_of_keypad_scan:	
  7427                           
  7428                           	psect	text62
  7429  0E79                     __ptext62:	
  7430 ;; *************** function _mcp23017_read_reg *****************
  7431 ;; Defined at:
  7432 ;;		line 69 in file "mcp23017.c"
  7433 ;; Parameters:    Size  Location     Type
  7434 ;;  reg_address     1    wreg     unsigned char 
  7435 ;; Auto vars:     Size  Location     Type
  7436 ;;  reg_address     1    4[COMMON] unsigned char 
  7437 ;;  value           1    5[COMMON] unsigned char 
  7438 ;; Return value:  Size  Location     Type
  7439 ;;                  1    wreg      unsigned char 
  7440 ;; Registers used:
  7441 ;;		wreg, status,2, status,0, pclath, cstack
  7442 ;; Tracked objects:
  7443 ;;		On entry : 0/0
  7444 ;;		On exit  : 0/0
  7445 ;;		Unchanged: 0/0
  7446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7447 ;;      Params:         0       0       0       0
  7448 ;;      Locals:         2       0       0       0
  7449 ;;      Temps:          1       0       0       0
  7450 ;;      Totals:         3       0       0       0
  7451 ;;Total ram usage:        3 bytes
  7452 ;; Hardware stack levels used:    1
  7453 ;; Hardware stack levels required when called:    2
  7454 ;; This function calls:
  7455 ;;		i1_i2c_read_data
  7456 ;;		i1_i2c_restart
  7457 ;;		i1_i2c_send_address
  7458 ;;		i1_i2c_send_data
  7459 ;;		i1_i2c_start
  7460 ;;		i1_i2c_stop
  7461 ;; This function is called by:
  7462 ;;		_keypad_scan
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           
  7467                           ;psect for function _mcp23017_read_reg
  7468  0E79                     _mcp23017_read_reg:	
  7469                           
  7470                           ;incstack = 0
  7471                           ; Regs used in _mcp23017_read_reg: [wreg+status,2+status,0+pclath+cstack]
  7472                           ;mcp23017_read_reg@reg_address stored from wreg
  7473  0E79  00F4               	movwf	mcp23017_read_reg@reg_address
  7474                           
  7475                           ;mcp23017.c: 70: uint8_t value;
  7476                           ;mcp23017.c: 73: i2c_start();
  7477  0E7A  318B  23E6  318E   	fcall	i1_i2c_start
  7478                           
  7479                           ;mcp23017.c: 74: i2c_send_address(g_slave_address_7b, 0);
  7480  0E7D  01F0               	clrf	i1i2c_send_address@mode
  7481  0E7E  0021               	movlb	1	; select bank1
  7482  0E7F  0849               	movf	_g_slave_address_7b^(0+128),w
  7483  0E80  318C  2480  318E   	fcall	i1_i2c_send_address
  7484                           
  7485                           ;mcp23017.c: 75: i2c_send_data(reg_address);
  7486  0E83  0874               	movf	mcp23017_read_reg@reg_address,w
  7487  0E84  318C  241E  318E   	fcall	i1_i2c_send_data
  7488                           
  7489                           ;mcp23017.c: 76: i2c_restart();
  7490  0E87  318B  23E1  318E   	fcall	i1_i2c_restart
  7491                           
  7492                           ;mcp23017.c: 77: i2c_send_address(g_slave_address_7b, 1);
  7493  0E8A  01F0               	clrf	i1i2c_send_address@mode
  7494  0E8B  0AF0               	incf	i1i2c_send_address@mode,f
  7495  0E8C  0021               	movlb	1	; select bank1
  7496  0E8D  0849               	movf	_g_slave_address_7b^(0+128),w
  7497  0E8E  318C  2480  318E   	fcall	i1_i2c_send_address
  7498                           
  7499                           ;mcp23017.c: 78: value = i2c_read_data();
  7500  0E91  318C  24C2  318E   	fcall	i1_i2c_read_data
  7501  0E94  00F3               	movwf	??_mcp23017_read_reg
  7502  0E95  0873               	movf	??_mcp23017_read_reg,w
  7503  0E96  00F5               	movwf	mcp23017_read_reg@value
  7504                           
  7505                           ;mcp23017.c: 79: i2c_stop();
  7506  0E97  318B  23EB         	fcall	i1_i2c_stop
  7507                           
  7508                           ;mcp23017.c: 81: return value;
  7509  0E99  0875               	movf	mcp23017_read_reg@value,w
  7510  0E9A  0008               	return
  7511  0E9B                     __end_of_mcp23017_read_reg:	
  7512                           
  7513                           	psect	text63
  7514  0BEB                     __ptext63:	
  7515 ;; *************** function i1_i2c_stop *****************
  7516 ;; Defined at:
  7517 ;;		line 92 in file "pic12f1840_i2c.c"
  7518 ;; Parameters:    Size  Location     Type
  7519 ;;		None
  7520 ;; Auto vars:     Size  Location     Type
  7521 ;;		None
  7522 ;; Return value:  Size  Location     Type
  7523 ;;		None               void
  7524 ;; Registers used:
  7525 ;;		wreg, status,2, status,0, pclath, cstack
  7526 ;; Tracked objects:
  7527 ;;		On entry : 0/0
  7528 ;;		On exit  : 0/0
  7529 ;;		Unchanged: 0/0
  7530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7531 ;;      Params:         0       0       0       0
  7532 ;;      Locals:         0       0       0       0
  7533 ;;      Temps:          0       0       0       0
  7534 ;;      Totals:         0       0       0       0
  7535 ;;Total ram usage:        0 bytes
  7536 ;; Hardware stack levels used:    1
  7537 ;; Hardware stack levels required when called:    1
  7538 ;; This function calls:
  7539 ;;		i1_i2c_wait
  7540 ;; This function is called by:
  7541 ;;		_mcp23017_read_reg
  7542 ;;		_ds1307_read_addr
  7543 ;;		_ds1307_write_addr
  7544 ;;		_ds1307_set_clock
  7545 ;;		i1_mcp23017_write_reg
  7546 ;;		i1_ds1307_get_clock
  7547 ;; This function uses a non-reentrant model
  7548 ;;
  7549                           
  7550                           
  7551                           ;psect for function i1_i2c_stop
  7552  0BEB                     i1_i2c_stop:	
  7553                           
  7554                           ;pic12f1840_i2c.c: 93: i2c_wait();
  7555                           
  7556                           ;incstack = 0
  7557                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  7558  0BEB  318C  2417         	fcall	i1_i2c_wait
  7559                           
  7560                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  7561  0BED  0024               	movlb	4	; select bank4
  7562  0BEE  1516               	bsf	22,2	;volatile
  7563  0BEF  0008               	return
  7564  0BF0                     __end_ofi1_i2c_stop:	
  7565                           
  7566                           	psect	text64
  7567  0BE6                     __ptext64:	
  7568 ;; *************** function i1_i2c_start *****************
  7569 ;; Defined at:
  7570 ;;		line 82 in file "pic12f1840_i2c.c"
  7571 ;; Parameters:    Size  Location     Type
  7572 ;;		None
  7573 ;; Auto vars:     Size  Location     Type
  7574 ;;		None
  7575 ;; Return value:  Size  Location     Type
  7576 ;;		None               void
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0, pclath, cstack
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7584 ;;      Params:         0       0       0       0
  7585 ;;      Locals:         0       0       0       0
  7586 ;;      Temps:          0       0       0       0
  7587 ;;      Totals:         0       0       0       0
  7588 ;;Total ram usage:        0 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; Hardware stack levels required when called:    1
  7591 ;; This function calls:
  7592 ;;		i1_i2c_wait
  7593 ;; This function is called by:
  7594 ;;		_mcp23017_read_reg
  7595 ;;		_ds1307_read_addr
  7596 ;;		_ds1307_write_addr
  7597 ;;		_ds1307_set_clock
  7598 ;;		i1_mcp23017_write_reg
  7599 ;;		i1_ds1307_get_clock
  7600 ;; This function uses a non-reentrant model
  7601 ;;
  7602                           
  7603                           
  7604                           ;psect for function i1_i2c_start
  7605  0BE6                     i1_i2c_start:	
  7606                           
  7607                           ;pic12f1840_i2c.c: 83: i2c_wait();
  7608                           
  7609                           ;incstack = 0
  7610                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7611  0BE6  318C  2417         	fcall	i1_i2c_wait
  7612                           
  7613                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  7614  0BE8  0024               	movlb	4	; select bank4
  7615  0BE9  1416               	bsf	22,0	;volatile
  7616  0BEA  0008               	return
  7617  0BEB                     __end_ofi1_i2c_start:	
  7618                           
  7619                           	psect	text65
  7620  0C1E                     __ptext65:	
  7621 ;; *************** function i1_i2c_send_data *****************
  7622 ;; Defined at:
  7623 ;;		line 115 in file "pic12f1840_i2c.c"
  7624 ;; Parameters:    Size  Location     Type
  7625 ;;  data            1    wreg     unsigned char 
  7626 ;; Auto vars:     Size  Location     Type
  7627 ;;  data            1    0[COMMON] unsigned char 
  7628 ;; Return value:  Size  Location     Type
  7629 ;;		None               void
  7630 ;; Registers used:
  7631 ;;		wreg, status,2, status,0, pclath, cstack
  7632 ;; Tracked objects:
  7633 ;;		On entry : 0/0
  7634 ;;		On exit  : 0/0
  7635 ;;		Unchanged: 0/0
  7636 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7637 ;;      Params:         0       0       0       0
  7638 ;;      Locals:         1       0       0       0
  7639 ;;      Temps:          0       0       0       0
  7640 ;;      Totals:         1       0       0       0
  7641 ;;Total ram usage:        1 bytes
  7642 ;; Hardware stack levels used:    1
  7643 ;; Hardware stack levels required when called:    1
  7644 ;; This function calls:
  7645 ;;		i1_i2c_wait
  7646 ;; This function is called by:
  7647 ;;		_mcp23017_read_reg
  7648 ;;		_ds1307_read_addr
  7649 ;;		_ds1307_write_addr
  7650 ;;		_ds1307_set_clock
  7651 ;;		i1_mcp23017_write_reg
  7652 ;;		i1_ds1307_get_clock
  7653 ;; This function uses a non-reentrant model
  7654 ;;
  7655                           
  7656                           
  7657                           ;psect for function i1_i2c_send_data
  7658  0C1E                     i1_i2c_send_data:	
  7659                           
  7660                           ;incstack = 0
  7661                           ; Regs used in i1_i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  7662                           ;i1i2c_send_data@data stored from wreg
  7663  0C1E  00F0               	movwf	i1i2c_send_data@data
  7664                           
  7665                           ;pic12f1840_i2c.c: 116: i2c_wait();
  7666  0C1F  318C  2417         	fcall	i1_i2c_wait
  7667                           
  7668                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  7669  0C21  0870               	movf	i1i2c_send_data@data,w
  7670  0C22  0024               	movlb	4	; select bank4
  7671  0C23  0091               	movwf	17	;volatile
  7672  0C24  0008               	return
  7673  0C25                     __end_ofi1_i2c_send_data:	
  7674                           
  7675                           	psect	text66
  7676  0C80                     __ptext66:	
  7677 ;; *************** function i1_i2c_send_address *****************
  7678 ;; Defined at:
  7679 ;;		line 108 in file "pic12f1840_i2c.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;  address         1    wreg     unsigned char 
  7682 ;;  mode            1    0[COMMON] unsigned char 
  7683 ;; Auto vars:     Size  Location     Type
  7684 ;;  address         1    2[COMMON] unsigned char 
  7685 ;; Return value:  Size  Location     Type
  7686 ;;		None               void
  7687 ;; Registers used:
  7688 ;;		wreg, status,2, status,0, pclath, cstack
  7689 ;; Tracked objects:
  7690 ;;		On entry : 0/0
  7691 ;;		On exit  : 0/0
  7692 ;;		Unchanged: 0/0
  7693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7694 ;;      Params:         1       0       0       0
  7695 ;;      Locals:         1       0       0       0
  7696 ;;      Temps:          1       0       0       0
  7697 ;;      Totals:         3       0       0       0
  7698 ;;Total ram usage:        3 bytes
  7699 ;; Hardware stack levels used:    1
  7700 ;; Hardware stack levels required when called:    1
  7701 ;; This function calls:
  7702 ;;		i1_i2c_wait
  7703 ;; This function is called by:
  7704 ;;		_mcp23017_read_reg
  7705 ;;		_ds1307_read_addr
  7706 ;;		_ds1307_write_addr
  7707 ;;		_ds1307_set_clock
  7708 ;;		i1_mcp23017_write_reg
  7709 ;;		i1_ds1307_get_clock
  7710 ;; This function uses a non-reentrant model
  7711 ;;
  7712                           
  7713                           
  7714                           ;psect for function i1_i2c_send_address
  7715  0C80                     i1_i2c_send_address:	
  7716                           
  7717                           ;incstack = 0
  7718                           ; Regs used in i1_i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  7719                           ;i1i2c_send_address@address stored from wreg
  7720  0C80  00F2               	movwf	i1i2c_send_address@address
  7721                           
  7722                           ;pic12f1840_i2c.c: 109: i2c_wait();
  7723  0C81  318C  2417         	fcall	i1_i2c_wait
  7724                           
  7725                           ;pic12f1840_i2c.c: 110: address <<= 1;
  7726  0C83  1003               	clrc
  7727  0C84  0DF2               	rlf	i1i2c_send_address@address,f
  7728                           
  7729                           ;pic12f1840_i2c.c: 111: address += mode;
  7730  0C85  0870               	movf	i1i2c_send_address@mode,w
  7731  0C86  00F1               	movwf	??i1_i2c_send_address
  7732  0C87  0871               	movf	??i1_i2c_send_address,w
  7733  0C88  07F2               	addwf	i1i2c_send_address@address,f
  7734                           
  7735                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  7736  0C89  0872               	movf	i1i2c_send_address@address,w
  7737  0C8A  0024               	movlb	4	; select bank4
  7738  0C8B  0091               	movwf	17	;volatile
  7739  0C8C  0008               	return
  7740  0C8D                     __end_ofi1_i2c_send_address:	
  7741                           
  7742                           	psect	text67
  7743  0BE1                     __ptext67:	
  7744 ;; *************** function i1_i2c_restart *****************
  7745 ;; Defined at:
  7746 ;;		line 87 in file "pic12f1840_i2c.c"
  7747 ;; Parameters:    Size  Location     Type
  7748 ;;		None
  7749 ;; Auto vars:     Size  Location     Type
  7750 ;;		None
  7751 ;; Return value:  Size  Location     Type
  7752 ;;		None               void
  7753 ;; Registers used:
  7754 ;;		wreg, status,2, status,0, pclath, cstack
  7755 ;; Tracked objects:
  7756 ;;		On entry : 0/0
  7757 ;;		On exit  : 0/0
  7758 ;;		Unchanged: 0/0
  7759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7760 ;;      Params:         0       0       0       0
  7761 ;;      Locals:         0       0       0       0
  7762 ;;      Temps:          0       0       0       0
  7763 ;;      Totals:         0       0       0       0
  7764 ;;Total ram usage:        0 bytes
  7765 ;; Hardware stack levels used:    1
  7766 ;; Hardware stack levels required when called:    1
  7767 ;; This function calls:
  7768 ;;		i1_i2c_wait
  7769 ;; This function is called by:
  7770 ;;		_mcp23017_read_reg
  7771 ;;		_ds1307_read_addr
  7772 ;;		i1_ds1307_get_clock
  7773 ;; This function uses a non-reentrant model
  7774 ;;
  7775                           
  7776                           
  7777                           ;psect for function i1_i2c_restart
  7778  0BE1                     i1_i2c_restart:	
  7779                           
  7780                           ;pic12f1840_i2c.c: 88: i2c_wait();
  7781                           
  7782                           ;incstack = 0
  7783                           ; Regs used in i1_i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  7784  0BE1  318C  2417         	fcall	i1_i2c_wait
  7785                           
  7786                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  7787  0BE3  0024               	movlb	4	; select bank4
  7788  0BE4  1496               	bsf	22,1	;volatile
  7789  0BE5  0008               	return
  7790  0BE6                     __end_ofi1_i2c_restart:	
  7791                           
  7792                           	psect	text68
  7793  0CC2                     __ptext68:	
  7794 ;; *************** function i1_i2c_read_data *****************
  7795 ;; Defined at:
  7796 ;;		line 120 in file "pic12f1840_i2c.c"
  7797 ;; Parameters:    Size  Location     Type
  7798 ;;		None
  7799 ;; Auto vars:     Size  Location     Type
  7800 ;;  i2c_read_dat    1    1[COMMON] unsigned char 
  7801 ;; Return value:  Size  Location     Type
  7802 ;;                  1    wreg      unsigned char 
  7803 ;; Registers used:
  7804 ;;		wreg, status,2, status,0, pclath, cstack
  7805 ;; Tracked objects:
  7806 ;;		On entry : 0/0
  7807 ;;		On exit  : 0/0
  7808 ;;		Unchanged: 0/0
  7809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7810 ;;      Params:         0       0       0       0
  7811 ;;      Locals:         1       0       0       0
  7812 ;;      Temps:          1       0       0       0
  7813 ;;      Totals:         2       0       0       0
  7814 ;;Total ram usage:        2 bytes
  7815 ;; Hardware stack levels used:    1
  7816 ;; Hardware stack levels required when called:    1
  7817 ;; This function calls:
  7818 ;;		i1_i2c_wait
  7819 ;; This function is called by:
  7820 ;;		_mcp23017_read_reg
  7821 ;;		_ds1307_read_addr
  7822 ;;		i1_ds1307_get_clock
  7823 ;; This function uses a non-reentrant model
  7824 ;;
  7825                           
  7826                           
  7827                           ;psect for function i1_i2c_read_data
  7828  0CC2                     i1_i2c_read_data:	
  7829                           
  7830                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  7831                           ;pic12f1840_i2c.c: 123: i2c_wait();
  7832                           
  7833                           ;incstack = 0
  7834                           ; Regs used in i1_i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  7835  0CC2  318C  2417  318C   	fcall	i1_i2c_wait
  7836                           
  7837                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  7838  0CC5  0024               	movlb	4	; select bank4
  7839  0CC6  1596               	bsf	22,3	;volatile
  7840                           
  7841                           ;pic12f1840_i2c.c: 125: i2c_wait();
  7842  0CC7  318C  2417         	fcall	i1_i2c_wait
  7843                           
  7844                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  7845  0CC9  0024               	movlb	4	; select bank4
  7846  0CCA  0811               	movf	17,w	;volatile
  7847  0CCB  00F0               	movwf	??i1_i2c_read_data
  7848  0CCC  0870               	movf	??i1_i2c_read_data,w
  7849  0CCD  00F1               	movwf	i1i2c_read_data@read_data
  7850                           
  7851                           ;pic12f1840_i2c.c: 128: return read_data;
  7852  0CCE  0871               	movf	i1i2c_read_data@read_data,w
  7853  0CCF  0008               	return
  7854  0CD0                     __end_ofi1_i2c_read_data:	
  7855                           
  7856                           	psect	text69
  7857  0C17                     __ptext69:	
  7858 ;; *************** function i1_i2c_wait *****************
  7859 ;; Defined at:
  7860 ;;		line 76 in file "pic12f1840_i2c.c"
  7861 ;; Parameters:    Size  Location     Type
  7862 ;;		None
  7863 ;; Auto vars:     Size  Location     Type
  7864 ;;		None
  7865 ;; Return value:  Size  Location     Type
  7866 ;;		None               void
  7867 ;; Registers used:
  7868 ;;		wreg, status,2
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7874 ;;      Params:         0       0       0       0
  7875 ;;      Locals:         0       0       0       0
  7876 ;;      Temps:          0       0       0       0
  7877 ;;      Totals:         0       0       0       0
  7878 ;;Total ram usage:        0 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; This function calls:
  7881 ;;		Nothing
  7882 ;; This function is called by:
  7883 ;;		i1_i2c_start
  7884 ;;		i1_i2c_restart
  7885 ;;		i1_i2c_stop
  7886 ;;		i1_i2c_send_ack
  7887 ;;		i1_i2c_send_address
  7888 ;;		i1_i2c_send_data
  7889 ;;		i1_i2c_read_data
  7890 ;; This function uses a non-reentrant model
  7891 ;;
  7892                           
  7893                           
  7894                           ;psect for function i1_i2c_wait
  7895  0C17                     i1_i2c_wait:	
  7896  0C17                     i1l2115:	
  7897                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  7898                           
  7899                           ;incstack = 0
  7900                           ; Regs used in i1_i2c_wait: [wreg+status,2]
  7901                           
  7902  0C17  0024               	movlb	4	; select bank4
  7903  0C18  0816               	movf	22,w	;volatile
  7904  0C19  391F               	andlw	31
  7905  0C1A  1903               	btfsc	3,2
  7906  0C1B  1914               	btfsc	20,2	;volatile
  7907  0C1C  2C17               	goto	i1l2115
  7908  0C1D  0008               	return
  7909  0C1E                     __end_ofi1_i2c_wait:	
  7910                           
  7911                           	psect	text70
  7912  03BC                     __ptext70:	
  7913 ;; *************** function _ds1307_time_formatted *****************
  7914 ;; Defined at:
  7915 ;;		line 375 in file "ds1307.c"
  7916 ;; Parameters:    Size  Location     Type
  7917 ;;  p_str_time      1    wreg     PTR unsigned char 
  7918 ;;		 -> tmr_isr@time(10), 
  7919 ;; Auto vars:     Size  Location     Type
  7920 ;;  p_str_time      1   27[BANK0 ] PTR unsigned char 
  7921 ;;		 -> tmr_isr@time(10), 
  7922 ;; Return value:  Size  Location     Type
  7923 ;;		None               void
  7924 ;; Registers used:
  7925 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7926 ;; Tracked objects:
  7927 ;;		On entry : 0/0
  7928 ;;		On exit  : 0/0
  7929 ;;		Unchanged: 0/0
  7930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7931 ;;      Params:         0       0       0       0
  7932 ;;      Locals:         0       1       0       0
  7933 ;;      Temps:          0       6       0       0
  7934 ;;      Totals:         0       7       0       0
  7935 ;;Total ram usage:        7 bytes
  7936 ;; Hardware stack levels used:    1
  7937 ;; Hardware stack levels required when called:    4
  7938 ;; This function calls:
  7939 ;;		_ds1307_get_hours
  7940 ;;		_ds1307_get_minutes
  7941 ;;		_ds1307_get_seconds
  7942 ;;		_ds1307_is_12hr_mode
  7943 ;;		_ds1307_is_pm
  7944 ;;		_sprintf
  7945 ;; This function is called by:
  7946 ;;		_tmr_isr
  7947 ;; This function uses a non-reentrant model
  7948 ;;
  7949                           
  7950                           
  7951                           ;psect for function _ds1307_time_formatted
  7952  03BC                     _ds1307_time_formatted:	
  7953                           
  7954                           ;incstack = 0
  7955                           ; Regs used in _ds1307_time_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7956                           ;ds1307_time_formatted@p_str_time stored from wreg
  7957  03BC  0020               	movlb	0	; select bank0
  7958  03BD  00BB               	movwf	ds1307_time_formatted@p_str_time
  7959                           
  7960                           ;ds1307.c: 376: if (ds1307_is_12hr_mode()) {
  7961  03BE  318B  23DC  3183   	fcall	_ds1307_is_12hr_mode
  7962  03C1  3A00               	xorlw	0
  7963  03C2  1903               	skipnz
  7964  03C3  2C02               	goto	i1l2975
  7965                           
  7966                           ;ds1307.c: 378: sprintf(p_str_time, "%.2u:%.2u:%.2u", ds1307_get_hours(), ds1307_get_min
      +                          utes(), ds1307_get_seconds());
  7967  03C4  3029               	movlw	low (STR_4| (0+32768))
  7968  03C5  0020               	movlb	0	; select bank0
  7969  03C6  00A0               	movwf	sprintf@f
  7970  03C7  3086               	movlw	high (STR_4| (0+32768))
  7971  03C8  00A1               	movwf	sprintf@f+1
  7972  03C9  318D  25AA  3183   	fcall	_ds1307_get_hours
  7973  03CC  0020               	movlb	0	; select bank0
  7974  03CD  00B5               	movwf	??_ds1307_time_formatted
  7975  03CE  01B6               	clrf	??_ds1307_time_formatted+1
  7976  03CF  0835               	movf	??_ds1307_time_formatted,w
  7977  03D0  00A2               	movwf	?_sprintf+2
  7978  03D1  0836               	movf	??_ds1307_time_formatted+1,w
  7979  03D2  00A3               	movwf	?_sprintf+3
  7980  03D3  318B  23D7  3183   	fcall	_ds1307_get_minutes
  7981  03D6  0020               	movlb	0	; select bank0
  7982  03D7  00B7               	movwf	??_ds1307_time_formatted+2
  7983  03D8  01B8               	clrf	??_ds1307_time_formatted+3
  7984  03D9  0837               	movf	??_ds1307_time_formatted+2,w
  7985  03DA  00A4               	movwf	?_sprintf+4
  7986  03DB  0838               	movf	??_ds1307_time_formatted+3,w
  7987  03DC  00A5               	movwf	?_sprintf+5
  7988  03DD  318C  2405  3183   	fcall	_ds1307_get_seconds
  7989  03E0  0020               	movlb	0	; select bank0
  7990  03E1  00B9               	movwf	??_ds1307_time_formatted+4
  7991  03E2  01BA               	clrf	??_ds1307_time_formatted+5
  7992  03E3  0839               	movf	??_ds1307_time_formatted+4,w
  7993  03E4  00A6               	movwf	?_sprintf+6
  7994  03E5  083A               	movf	??_ds1307_time_formatted+5,w
  7995  03E6  00A7               	movwf	?_sprintf+7
  7996  03E7  083B               	movf	ds1307_time_formatted@p_str_time,w
  7997  03E8  3182  221B  3183   	fcall	_sprintf
  7998                           
  7999                           ;ds1307.c: 379: if (ds1307_is_pm()) {
  8000  03EB  318E  2644  3183   	fcall	_ds1307_is_pm
  8001  03EE  3A00               	xorlw	0
  8002  03EF  1903               	skipnz
  8003  03F0  2BF3               	goto	i1l2971
  8004                           
  8005                           ;ds1307.c: 380: p_str_time[8] = 'P';
  8006  03F1  3050               	movlw	80
  8007  03F2  2BF4               	goto	L8
  8008  03F3                     i1l2971:	
  8009                           ;ds1307.c: 381: } else {
  8010                           
  8011                           
  8012                           ;ds1307.c: 382: p_str_time[8] = 'A';
  8013  03F3  3041               	movlw	65
  8014  03F4                     L8:	
  8015  03F4  0020               	movlb	0	; select bank0
  8016  03F5  00B5               	movwf	??_ds1307_time_formatted
  8017  03F6  083B               	movf	ds1307_time_formatted@p_str_time,w
  8018  03F7  3E08               	addlw	8
  8019  03F8  0086               	movwf	6
  8020  03F9  0187               	clrf	7
  8021  03FA  0835               	movf	??_ds1307_time_formatted,w
  8022  03FB  0081               	movwf	1
  8023                           
  8024                           ;ds1307.c: 383: }
  8025                           ;ds1307.c: 384: p_str_time[9] = (0);
  8026  03FC  083B               	movf	ds1307_time_formatted@p_str_time,w
  8027  03FD  3E09               	addlw	9
  8028  03FE  0086               	movwf	6
  8029  03FF  0187               	clrf	7
  8030  0400  0181               	clrf	1
  8031                           
  8032                           ;ds1307.c: 385: } else {
  8033  0401  0008               	return
  8034  0402                     i1l2975:	
  8035                           
  8036                           ;ds1307.c: 387: sprintf(p_str_time, "%.2u:%.2u:%.2u ", ds1307_get_hours(), ds1307_get_mi
      +                          nutes(), ds1307_get_seconds());
  8037  0402  300A               	movlw	low (STR_5| (0+32768))
  8038  0403  0020               	movlb	0	; select bank0
  8039  0404  00A0               	movwf	sprintf@f
  8040  0405  3086               	movlw	high (STR_5| (0+32768))
  8041  0406  00A1               	movwf	sprintf@f+1
  8042  0407  318D  25AA  3183   	fcall	_ds1307_get_hours
  8043  040A  0020               	movlb	0	; select bank0
  8044  040B  00B5               	movwf	??_ds1307_time_formatted
  8045  040C  01B6               	clrf	??_ds1307_time_formatted+1
  8046  040D  0835               	movf	??_ds1307_time_formatted,w
  8047  040E  00A2               	movwf	?_sprintf+2
  8048  040F  0836               	movf	??_ds1307_time_formatted+1,w
  8049  0410  00A3               	movwf	?_sprintf+3
  8050  0411  318B  23D7  3183   	fcall	_ds1307_get_minutes
  8051  0414  0020               	movlb	0	; select bank0
  8052  0415  00B7               	movwf	??_ds1307_time_formatted+2
  8053  0416  01B8               	clrf	??_ds1307_time_formatted+3
  8054  0417  0837               	movf	??_ds1307_time_formatted+2,w
  8055  0418  00A4               	movwf	?_sprintf+4
  8056  0419  0838               	movf	??_ds1307_time_formatted+3,w
  8057  041A  00A5               	movwf	?_sprintf+5
  8058  041B  318C  2405  3183   	fcall	_ds1307_get_seconds
  8059  041E  0020               	movlb	0	; select bank0
  8060  041F  00B9               	movwf	??_ds1307_time_formatted+4
  8061  0420  01BA               	clrf	??_ds1307_time_formatted+5
  8062  0421  0839               	movf	??_ds1307_time_formatted+4,w
  8063  0422  00A6               	movwf	?_sprintf+6
  8064  0423  083A               	movf	??_ds1307_time_formatted+5,w
  8065  0424  00A7               	movwf	?_sprintf+7
  8066  0425  083B               	movf	ds1307_time_formatted@p_str_time,w
  8067  0426  3182  221B         	fcall	_sprintf
  8068  0428  0008               	return
  8069  0429                     __end_of_ds1307_time_formatted:	
  8070                           
  8071                           	psect	text71
  8072  0E44                     __ptext71:	
  8073 ;; *************** function _ds1307_is_pm *****************
  8074 ;; Defined at:
  8075 ;;		line 281 in file "ds1307.c"
  8076 ;; Parameters:    Size  Location     Type
  8077 ;;		None
  8078 ;; Auto vars:     Size  Location     Type
  8079 ;;  is_pm           1   12[COMMON] unsigned char 
  8080 ;; Return value:  Size  Location     Type
  8081 ;;                  1    wreg      unsigned char 
  8082 ;; Registers used:
  8083 ;;		wreg, status,2, status,0, pclath, cstack
  8084 ;; Tracked objects:
  8085 ;;		On entry : 0/0
  8086 ;;		On exit  : 0/0
  8087 ;;		Unchanged: 0/0
  8088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8089 ;;      Params:         0       0       0       0
  8090 ;;      Locals:         1       0       0       0
  8091 ;;      Temps:          2       0       0       0
  8092 ;;      Totals:         3       0       0       0
  8093 ;;Total ram usage:        3 bytes
  8094 ;; Hardware stack levels used:    1
  8095 ;; Hardware stack levels required when called:    3
  8096 ;; This function calls:
  8097 ;;		_ds1307_get_hours
  8098 ;;		_ds1307_is_12hr_mode
  8099 ;; This function is called by:
  8100 ;;		_update_clock
  8101 ;;		_ds1307_switch_to_24hr
  8102 ;;		_ds1307_time_formatted
  8103 ;; This function uses a non-reentrant model
  8104 ;;
  8105                           
  8106                           
  8107                           ;psect for function _ds1307_is_pm
  8108  0E44                     _ds1307_is_pm:	
  8109                           
  8110                           ;ds1307.c: 282: bool is_pm;
  8111                           ;ds1307.c: 283: if (ds1307_is_12hr_mode()) {
  8112                           
  8113                           ;incstack = 0
  8114                           ; Regs used in _ds1307_is_pm: [wreg+status,2+status,0+pclath+cstack]
  8115  0E44  318B  23DC  318E   	fcall	_ds1307_is_12hr_mode
  8116  0E47  3A00               	xorlw	0
  8117  0E48  1903               	skipnz
  8118  0E49  2E51               	goto	i1l2363
  8119                           
  8120                           ;ds1307.c: 285: is_pm = ((g_reg_data[DS1307_REG_HOURS] & 0x20) == 0x20);
  8121  0E4A  3000               	movlw	0
  8122  0E4B  0021               	movlb	1	; select bank1
  8123  0E4C  1AB9               	btfsc	(_g_reg_data^(0+128)+2),5
  8124  0E4D  3001               	movlw	1
  8125  0E4E  00FA               	movwf	??_ds1307_is_pm
  8126  0E4F  087A               	movf	??_ds1307_is_pm,w
  8127  0E50  2E5B               	goto	L9
  8128  0E51                     i1l2363:	
  8129                           ;ds1307.c: 286: } else {
  8130                           
  8131                           
  8132                           ;ds1307.c: 289: is_pm = (ds1307_get_hours() > 11);
  8133  0E51  318D  25AA         	fcall	_ds1307_get_hours
  8134  0E53  00FA               	movwf	??_ds1307_is_pm
  8135  0E54  300C               	movlw	12
  8136  0E55  027A               	subwf	??_ds1307_is_pm,w
  8137  0E56  3000               	movlw	0
  8138  0E57  1803               	skipnc
  8139  0E58  3001               	movlw	1
  8140  0E59  00FB               	movwf	??_ds1307_is_pm+1
  8141  0E5A  087B               	movf	??_ds1307_is_pm+1,w
  8142  0E5B                     L9:	
  8143  0E5B  00FC               	movwf	ds1307_is_pm@is_pm
  8144                           
  8145                           ;ds1307.c: 290: }
  8146                           ;ds1307.c: 291: return is_pm;
  8147  0E5C  087C               	movf	ds1307_is_pm@is_pm,w
  8148  0E5D  0008               	return
  8149  0E5E                     __end_of_ds1307_is_pm:	
  8150                           
  8151                           	psect	text72
  8152  0DAA                     __ptext72:	
  8153 ;; *************** function _ds1307_get_hours *****************
  8154 ;; Defined at:
  8155 ;;		line 211 in file "ds1307.c"
  8156 ;; Parameters:    Size  Location     Type
  8157 ;;		None
  8158 ;; Auto vars:     Size  Location     Type
  8159 ;;  hours           1    9[COMMON] unsigned char 
  8160 ;; Return value:  Size  Location     Type
  8161 ;;                  1    wreg      unsigned char 
  8162 ;; Registers used:
  8163 ;;		wreg, status,2, status,0, pclath, cstack
  8164 ;; Tracked objects:
  8165 ;;		On entry : 0/0
  8166 ;;		On exit  : 0/0
  8167 ;;		Unchanged: 0/0
  8168 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8169 ;;      Params:         0       0       0       0
  8170 ;;      Locals:         1       0       0       0
  8171 ;;      Temps:          1       0       0       0
  8172 ;;      Totals:         2       0       0       0
  8173 ;;Total ram usage:        2 bytes
  8174 ;; Hardware stack levels used:    1
  8175 ;; Hardware stack levels required when called:    2
  8176 ;; This function calls:
  8177 ;;		_bcd_to_dec
  8178 ;;		_ds1307_is_12hr_mode
  8179 ;; This function is called by:
  8180 ;;		_update_clock
  8181 ;;		_ds1307_is_pm
  8182 ;;		_ds1307_switch_to_12hr
  8183 ;;		_ds1307_switch_to_24hr
  8184 ;;		_ds1307_time_formatted
  8185 ;; This function uses a non-reentrant model
  8186 ;;
  8187                           
  8188                           
  8189                           ;psect for function _ds1307_get_hours
  8190  0DAA                     _ds1307_get_hours:	
  8191                           
  8192                           ;ds1307.c: 212: uint8_t hours;
  8193                           ;ds1307.c: 213: if (ds1307_is_12hr_mode()) {
  8194                           
  8195                           ;incstack = 0
  8196                           ; Regs used in _ds1307_get_hours: [wreg+status,2+status,0+pclath+cstack]
  8197  0DAA  318B  23DC  318D   	fcall	_ds1307_is_12hr_mode
  8198  0DAD  3A00               	xorlw	0
  8199  0DAE  1903               	skipnz
  8200  0DAF  2DB4               	goto	i1l2293
  8201                           
  8202                           ;ds1307.c: 215: hours = g_reg_data[DS1307_REG_HOURS] & 0x1F;
  8203  0DB0  0021               	movlb	1	; select bank1
  8204  0DB1  0839               	movf	(_g_reg_data^(0+128)+2),w
  8205  0DB2  391F               	andlw	31
  8206  0DB3  2DB7               	goto	L10
  8207  0DB4                     i1l2293:	
  8208                           ;ds1307.c: 216: } else {
  8209                           
  8210                           
  8211                           ;ds1307.c: 218: hours = g_reg_data[DS1307_REG_HOURS] & 0x3F;
  8212  0DB4  0021               	movlb	1	; select bank1
  8213  0DB5  0839               	movf	(_g_reg_data^(0+128)+2),w
  8214  0DB6  393F               	andlw	63
  8215  0DB7                     L10:	
  8216  0DB7  00F8               	movwf	??_ds1307_get_hours
  8217  0DB8  0878               	movf	??_ds1307_get_hours,w
  8218  0DB9  00F9               	movwf	ds1307_get_hours@hours
  8219                           
  8220                           ;ds1307.c: 219: }
  8221                           ;ds1307.c: 220: return bcd_to_dec(hours);
  8222  0DBA  0879               	movf	ds1307_get_hours@hours,w
  8223  0DBB  318D  2584         	fcall	_bcd_to_dec
  8224  0DBD  0008               	return
  8225  0DBE                     __end_of_ds1307_get_hours:	
  8226                           
  8227                           	psect	text73
  8228  0BDC                     __ptext73:	
  8229 ;; *************** function _ds1307_is_12hr_mode *****************
  8230 ;; Defined at:
  8231 ;;		line 182 in file "ds1307.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;		None
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      unsigned char 
  8238 ;; Registers used:
  8239 ;;		wreg
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8245 ;;      Params:         0       0       0       0
  8246 ;;      Locals:         0       0       0       0
  8247 ;;      Temps:          0       0       0       0
  8248 ;;      Totals:         0       0       0       0
  8249 ;;Total ram usage:        0 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; This function calls:
  8252 ;;		Nothing
  8253 ;; This function is called by:
  8254 ;;		_update_clock
  8255 ;;		_ds1307_get_hours
  8256 ;;		_ds1307_set_hours
  8257 ;;		_ds1307_is_pm
  8258 ;;		_ds1307_set_pm_am
  8259 ;;		_ds1307_switch_to_12hr
  8260 ;;		_ds1307_switch_to_24hr
  8261 ;;		_ds1307_time_formatted
  8262 ;; This function uses a non-reentrant model
  8263 ;;
  8264                           
  8265                           
  8266                           ;psect for function _ds1307_is_12hr_mode
  8267  0BDC                     _ds1307_is_12hr_mode:	
  8268                           
  8269                           ;ds1307.c: 185: return ((g_reg_data[DS1307_REG_HOURS] & 0x40) == 0x40);
  8270                           
  8271                           ;incstack = 0
  8272                           ; Regs used in _ds1307_is_12hr_mode: [wreg]
  8273  0BDC  3000               	movlw	0
  8274  0BDD  0021               	movlb	1	; select bank1
  8275  0BDE  1B39               	btfsc	(_g_reg_data^(0+128)+2),6
  8276  0BDF  3001               	movlw	1
  8277  0BE0  0008               	return
  8278  0BE1                     __end_of_ds1307_is_12hr_mode:	
  8279                           
  8280                           	psect	text74
  8281  0C05                     __ptext74:	
  8282 ;; *************** function _ds1307_get_seconds *****************
  8283 ;; Defined at:
  8284 ;;		line 188 in file "ds1307.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;		None
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      unsigned char 
  8291 ;; Registers used:
  8292 ;;		wreg, status,2, status,0, pclath, cstack
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8298 ;;      Params:         0       0       0       0
  8299 ;;      Locals:         0       0       0       0
  8300 ;;      Temps:          0       0       0       0
  8301 ;;      Totals:         0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used:    1
  8304 ;; Hardware stack levels required when called:    2
  8305 ;; This function calls:
  8306 ;;		_bcd_to_dec
  8307 ;; This function is called by:
  8308 ;;		_update_clock
  8309 ;;		_ds1307_time_formatted
  8310 ;; This function uses a non-reentrant model
  8311 ;;
  8312                           
  8313                           
  8314                           ;psect for function _ds1307_get_seconds
  8315  0C05                     _ds1307_get_seconds:	
  8316                           
  8317                           ;ds1307.c: 189: return bcd_to_dec(g_reg_data[DS1307_REG_SECONDS] & 0x7F);
  8318                           
  8319                           ;incstack = 0
  8320                           ; Regs used in _ds1307_get_seconds: [wreg+status,2+status,0+pclath+cstack]
  8321  0C05  0021               	movlb	1	; select bank1
  8322  0C06  0837               	movf	_g_reg_data^(0+128),w
  8323  0C07  397F               	andlw	127
  8324  0C08  318D  2584         	fcall	_bcd_to_dec
  8325  0C0A  0008               	return
  8326  0C0B                     __end_of_ds1307_get_seconds:	
  8327                           
  8328                           	psect	text75
  8329  0BD7                     __ptext75:	
  8330 ;; *************** function _ds1307_get_minutes *****************
  8331 ;; Defined at:
  8332 ;;		line 200 in file "ds1307.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;		None
  8335 ;; Auto vars:     Size  Location     Type
  8336 ;;		None
  8337 ;; Return value:  Size  Location     Type
  8338 ;;                  1    wreg      unsigned char 
  8339 ;; Registers used:
  8340 ;;		wreg, status,2, status,0, pclath, cstack
  8341 ;; Tracked objects:
  8342 ;;		On entry : 0/0
  8343 ;;		On exit  : 0/0
  8344 ;;		Unchanged: 0/0
  8345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8346 ;;      Params:         0       0       0       0
  8347 ;;      Locals:         0       0       0       0
  8348 ;;      Temps:          0       0       0       0
  8349 ;;      Totals:         0       0       0       0
  8350 ;;Total ram usage:        0 bytes
  8351 ;; Hardware stack levels used:    1
  8352 ;; Hardware stack levels required when called:    2
  8353 ;; This function calls:
  8354 ;;		_bcd_to_dec
  8355 ;; This function is called by:
  8356 ;;		_update_clock
  8357 ;;		_ds1307_time_formatted
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           
  8362                           ;psect for function _ds1307_get_minutes
  8363  0BD7                     _ds1307_get_minutes:	
  8364                           
  8365                           ;ds1307.c: 201: return bcd_to_dec(g_reg_data[DS1307_REG_MINUTES]);
  8366                           
  8367                           ;incstack = 0
  8368                           ; Regs used in _ds1307_get_minutes: [wreg+status,2+status,0+pclath+cstack]
  8369  0BD7  0021               	movlb	1	; select bank1
  8370  0BD8  0838               	movf	(_g_reg_data^(0+128)+1),w
  8371  0BD9  318D  2584         	fcall	_bcd_to_dec
  8372  0BDB  0008               	return
  8373  0BDC                     __end_of_ds1307_get_minutes:	
  8374                           
  8375                           	psect	text76
  8376  05D7                     __ptext76:	
  8377 ;; *************** function _ds1307_date_formatted *****************
  8378 ;; Defined at:
  8379 ;;		line 391 in file "ds1307.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;  p_str_date      1    wreg     PTR unsigned char 
  8382 ;;		 -> tmr_isr@date(10), 
  8383 ;; Auto vars:     Size  Location     Type
  8384 ;;  p_str_date      1   27[BANK0 ] PTR unsigned char 
  8385 ;;		 -> tmr_isr@date(10), 
  8386 ;; Return value:  Size  Location     Type
  8387 ;;		None               void
  8388 ;; Registers used:
  8389 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8390 ;; Tracked objects:
  8391 ;;		On entry : 0/0
  8392 ;;		On exit  : 0/0
  8393 ;;		Unchanged: 0/0
  8394 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8395 ;;      Params:         0       0       0       0
  8396 ;;      Locals:         0       1       0       0
  8397 ;;      Temps:          0       6       0       0
  8398 ;;      Totals:         0       7       0       0
  8399 ;;Total ram usage:        7 bytes
  8400 ;; Hardware stack levels used:    1
  8401 ;; Hardware stack levels required when called:    3
  8402 ;; This function calls:
  8403 ;;		_ds1307_get_day_of_month
  8404 ;;		_ds1307_get_month
  8405 ;;		_ds1307_get_year
  8406 ;;		_sprintf
  8407 ;; This function is called by:
  8408 ;;		_tmr_isr
  8409 ;; This function uses a non-reentrant model
  8410 ;;
  8411                           
  8412                           
  8413                           ;psect for function _ds1307_date_formatted
  8414  05D7                     _ds1307_date_formatted:	
  8415                           
  8416                           ;incstack = 0
  8417                           ; Regs used in _ds1307_date_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8418                           ;ds1307_date_formatted@p_str_date stored from wreg
  8419  05D7  0020               	movlb	0	; select bank0
  8420  05D8  00BB               	movwf	ds1307_date_formatted@p_str_date
  8421                           
  8422                           ;ds1307.c: 393: sprintf(p_str_date, "%.2u/%.2u/%.2u", ds1307_get_month(), ds1307_get_day
      +                          _of_month(), ds1307_get_year());
  8423  05D9  301A               	movlw	low (STR_6| (0+32768))
  8424  05DA  00A0               	movwf	sprintf@f
  8425  05DB  3086               	movlw	high (STR_6| (0+32768))
  8426  05DC  00A1               	movwf	sprintf@f+1
  8427  05DD  318B  23CD  3185   	fcall	_ds1307_get_month
  8428  05E0  0020               	movlb	0	; select bank0
  8429  05E1  00B5               	movwf	??_ds1307_date_formatted
  8430  05E2  01B6               	clrf	??_ds1307_date_formatted+1
  8431  05E3  0835               	movf	??_ds1307_date_formatted,w
  8432  05E4  00A2               	movwf	?_sprintf+2
  8433  05E5  0836               	movf	??_ds1307_date_formatted+1,w
  8434  05E6  00A3               	movwf	?_sprintf+3
  8435  05E7  318B  23FF  3185   	fcall	_ds1307_get_day_of_month
  8436  05EA  0020               	movlb	0	; select bank0
  8437  05EB  00B7               	movwf	??_ds1307_date_formatted+2
  8438  05EC  01B8               	clrf	??_ds1307_date_formatted+3
  8439  05ED  0837               	movf	??_ds1307_date_formatted+2,w
  8440  05EE  00A4               	movwf	?_sprintf+4
  8441  05EF  0838               	movf	??_ds1307_date_formatted+3,w
  8442  05F0  00A5               	movwf	?_sprintf+5
  8443  05F1  318B  23D2  3185   	fcall	_ds1307_get_year
  8444  05F4  0020               	movlb	0	; select bank0
  8445  05F5  00B9               	movwf	??_ds1307_date_formatted+4
  8446  05F6  01BA               	clrf	??_ds1307_date_formatted+5
  8447  05F7  0839               	movf	??_ds1307_date_formatted+4,w
  8448  05F8  00A6               	movwf	?_sprintf+6
  8449  05F9  083A               	movf	??_ds1307_date_formatted+5,w
  8450  05FA  00A7               	movwf	?_sprintf+7
  8451  05FB  083B               	movf	ds1307_date_formatted@p_str_date,w
  8452  05FC  3182  221B         	fcall	_sprintf
  8453  05FE  0008               	return
  8454  05FF                     __end_of_ds1307_date_formatted:	
  8455                           
  8456                           	psect	text77
  8457  021B                     __ptext77:	
  8458 ;; *************** function _sprintf *****************
  8459 ;; Defined at:
  8460 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  sp              1    wreg     PTR unsigned char 
  8463 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  8464 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  8465 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(3), 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  8468 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  8469 ;;  _val            4   14[BANK0 ] struct .
  8470 ;;  c               1   20[BANK0 ] char 
  8471 ;;  prec            1   19[BANK0 ] char 
  8472 ;;  ap              1   13[BANK0 ] PTR void [1]
  8473 ;;		 -> ?_sprintf(2), 
  8474 ;;  flag            1   12[BANK0 ] unsigned char 
  8475 ;; Return value:  Size  Location     Type
  8476 ;;                  2    0[BANK0 ] int 
  8477 ;; Registers used:
  8478 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8479 ;; Tracked objects:
  8480 ;;		On entry : 0/0
  8481 ;;		On exit  : 0/0
  8482 ;;		Unchanged: 0/0
  8483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8484 ;;      Params:         0       8       0       0
  8485 ;;      Locals:         0       9       0       0
  8486 ;;      Temps:          0       4       0       0
  8487 ;;      Totals:         0      21       0       0
  8488 ;;Total ram usage:       21 bytes
  8489 ;; Hardware stack levels used:    1
  8490 ;; Hardware stack levels required when called:    1
  8491 ;; This function calls:
  8492 ;;		___bmul
  8493 ;;		___lwdiv
  8494 ;;		___lwmod
  8495 ;;		_isdigit
  8496 ;; This function is called by:
  8497 ;;		_tmr_isr
  8498 ;;		_ds1307_time_formatted
  8499 ;;		_ds1307_date_formatted
  8500 ;; This function uses a non-reentrant model
  8501 ;;
  8502                           
  8503                           
  8504                           ;psect for function _sprintf
  8505  021B                     _sprintf:	
  8506                           
  8507                           ;incstack = 0
  8508                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8509                           ;sprintf@sp stored from wreg
  8510  021B  0020               	movlb	0	; select bank0
  8511  021C  00B2               	movwf	sprintf@sp
  8512                           
  8513                           ;doprnt.c: 494: va_list ap;
  8514                           ;doprnt.c: 499: signed char c;
  8515                           ;doprnt.c: 506: signed char prec;
  8516                           ;doprnt.c: 508: unsigned char flag;
  8517                           ;doprnt.c: 527: union {
  8518                           ;doprnt.c: 528: unsigned int _val;
  8519                           ;doprnt.c: 529: struct {
  8520                           ;doprnt.c: 530: const char * _cp;
  8521                           ;doprnt.c: 531: unsigned _len;
  8522                           ;doprnt.c: 532: } _str;
  8523                           ;doprnt.c: 533: } _val;
  8524                           ;doprnt.c: 542: *ap = __va_start();
  8525  021D  3022               	movlw	(?_sprintf+2)& (0+255)
  8526  021E  00A8               	movwf	??_sprintf
  8527  021F  0828               	movf	??_sprintf,w
  8528  0220  00AD               	movwf	sprintf@ap
  8529  0221                     i1l2697:	
  8530                           ;doprnt.c: 545: while(c = *f++) {
  8531                           
  8532  0221  0821               	movf	sprintf@f+1,w
  8533  0222  00A9               	movwf	??_sprintf+1
  8534  0223  0820               	movf	sprintf@f,w
  8535  0224  00A8               	movwf	??_sprintf
  8536  0225  0AA0               	incf	sprintf@f,f
  8537  0226  1903               	skipnz
  8538  0227  0AA1               	incf	sprintf@f+1,f
  8539  0228  0828               	movf	??_sprintf,w
  8540  0229  0084               	movwf	4
  8541  022A  0829               	movf	??_sprintf+1,w
  8542  022B  0085               	movwf	5
  8543  022C  0800               	movf	0,w	;code access
  8544  022D  00AA               	movwf	??_sprintf+2
  8545  022E  082A               	movf	??_sprintf+2,w
  8546  022F  00B4               	movwf	sprintf@c
  8547  0230  08B4               	movf	sprintf@c,f
  8548  0231  1903               	btfsc	3,2
  8549  0232  2B25               	goto	i1l2699
  8550                           
  8551                           ;doprnt.c: 547: if(c != '%')
  8552  0233  0834               	movf	sprintf@c,w
  8553  0234  3A25               	xorlw	37
  8554  0235  1903               	skipnz
  8555  0236  2A43               	goto	i1l2635
  8556                           
  8557                           ;doprnt.c: 549: {
  8558                           ;doprnt.c: 550: ((*sp++ = (c)));
  8559  0237  0834               	movf	sprintf@c,w
  8560  0238  00A8               	movwf	??_sprintf
  8561  0239  0832               	movf	sprintf@sp,w
  8562  023A  0086               	movwf	6
  8563  023B  0187               	clrf	7
  8564  023C  0828               	movf	??_sprintf,w
  8565  023D  0081               	movwf	1
  8566  023E  3001               	movlw	1
  8567  023F  00A8               	movwf	??_sprintf
  8568  0240  0828               	movf	??_sprintf,w
  8569  0241  07B2               	addwf	sprintf@sp,f
  8570                           
  8571                           ;doprnt.c: 551: continue;
  8572  0242  2A21               	goto	i1l2697
  8573  0243                     i1l2635:	
  8574                           
  8575                           ;doprnt.c: 552: }
  8576                           ;doprnt.c: 557: flag = 0;
  8577  0243  01AC               	clrf	sprintf@flag
  8578                           
  8579                           ;doprnt.c: 620: if(*f == '.') {
  8580  0244  0820               	movf	sprintf@f,w
  8581  0245  0084               	movwf	4
  8582  0246  0821               	movf	sprintf@f+1,w
  8583  0247  0085               	movwf	5
  8584  0248  0800               	movf	0,w	;code access
  8585  0249  3A2E               	xorlw	46
  8586  024A  1D03               	skipz
  8587  024B  2A75               	goto	i1l2649
  8588                           
  8589                           ;doprnt.c: 622: f++;
  8590  024C  3001               	movlw	1
  8591  024D  07A0               	addwf	sprintf@f,f
  8592  024E  3000               	movlw	0
  8593  024F  3DA1               	addwfc	sprintf@f+1,f
  8594                           
  8595                           ;doprnt.c: 629: {
  8596                           ;doprnt.c: 630: prec = 0;
  8597  0250  01B3               	clrf	sprintf@prec
  8598  0251                     i1l2647:	
  8599                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  8600                           
  8601  0251  0820               	movf	sprintf@f,w
  8602  0252  0084               	movwf	4
  8603  0253  0821               	movf	sprintf@f+1,w
  8604  0254  0085               	movwf	5
  8605  0255  0800               	movf	0,w	;code access
  8606  0256  318C  24B4  3182   	fcall	_isdigit
  8607  0259  1C03               	btfss	3,0
  8608  025A  2A7D               	goto	i1l2655
  8609                           
  8610                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  8611  025B  0020               	movlb	0	; select bank0
  8612  025C  0820               	movf	sprintf@f,w
  8613  025D  0084               	movwf	4
  8614  025E  0821               	movf	sprintf@f+1,w
  8615  025F  0085               	movwf	5
  8616  0260  0800               	movf	0,w	;code access
  8617  0261  00A8               	movwf	??_sprintf
  8618  0262  300A               	movlw	10
  8619  0263  00A9               	movwf	??_sprintf+1
  8620  0264  0829               	movf	??_sprintf+1,w
  8621  0265  00F0               	movwf	___bmul@multiplicand
  8622  0266  0833               	movf	sprintf@prec,w
  8623  0267  3187  27EF  3182   	fcall	___bmul
  8624  026A  0020               	movlb	0	; select bank0
  8625  026B  0728               	addwf	??_sprintf,w
  8626  026C  3ED0               	addlw	-48
  8627  026D  00AA               	movwf	??_sprintf+2
  8628  026E  082A               	movf	??_sprintf+2,w
  8629  026F  00B3               	movwf	sprintf@prec
  8630  0270  3001               	movlw	1
  8631  0271  07A0               	addwf	sprintf@f,f
  8632  0272  3000               	movlw	0
  8633  0273  3DA1               	addwfc	sprintf@f+1,f
  8634  0274  2A51               	goto	i1l2647
  8635  0275                     i1l2649:	
  8636                           ;doprnt.c: 633: }
  8637                           ;doprnt.c: 634: } else {
  8638                           
  8639                           
  8640                           ;doprnt.c: 635: prec = 0;
  8641  0275  0020               	movlb	0	; select bank0
  8642  0276  01B3               	clrf	sprintf@prec
  8643                           
  8644                           ;doprnt.c: 639: }
  8645                           ;doprnt.c: 644: switch(c = *f++) {
  8646  0277  2A7D               	goto	i1l2655
  8647  0278                     i1l2651:	
  8648                           ;doprnt.c: 826: case 'u':
  8649                           
  8650                           ;doprnt.c: 822: continue;
  8651                           
  8652                           ;doprnt.c: 811: default:
  8653                           
  8654                           ;doprnt.c: 647: goto alldone;
  8655                           
  8656                           ;doprnt.c: 646: case 0:
  8657                           
  8658                           
  8659                           ;doprnt.c: 827: flag |= 0xC0;
  8660  0278  30C0               	movlw	192
  8661  0279  00A8               	movwf	??_sprintf
  8662  027A  0828               	movf	??_sprintf,w
  8663  027B  04AC               	iorwf	sprintf@flag,f
  8664                           
  8665                           ;doprnt.c: 831: }
  8666                           
  8667                           ;doprnt.c: 828: break;
  8668  027C  2A92               	goto	i1l2657
  8669  027D                     i1l2655:	
  8670  027D  0020               	movlb	0	; select bank0
  8671  027E  0821               	movf	sprintf@f+1,w
  8672  027F  00A9               	movwf	??_sprintf+1
  8673  0280  0820               	movf	sprintf@f,w
  8674  0281  00A8               	movwf	??_sprintf
  8675  0282  0AA0               	incf	sprintf@f,f
  8676  0283  1903               	skipnz
  8677  0284  0AA1               	incf	sprintf@f+1,f
  8678  0285  0828               	movf	??_sprintf,w
  8679  0286  0084               	movwf	4
  8680  0287  0829               	movf	??_sprintf+1,w
  8681  0288  0085               	movwf	5
  8682  0289  0800               	movf	0,w	;code access
  8683  028A  00B4               	movwf	sprintf@c
  8684                           
  8685                           ; Switch size 1, requested type "space"
  8686                           ; Number of cases is 2, Range of values is 0 to 117
  8687                           ; switch strategies available:
  8688                           ; Name         Instructions Cycles
  8689                           ; simple_byte            7     4 (average)
  8690                           ; direct_byte          242     6 (fixed)
  8691                           ; jumptable            260     6 (fixed)
  8692                           ;	Chosen strategy is simple_byte
  8693  028B  3A00               	xorlw	0	; case 0
  8694  028C  1903               	skipnz
  8695  028D  2B25               	goto	i1l2699
  8696  028E  3A75               	xorlw	117	; case 117
  8697  028F  1903               	skipnz
  8698  0290  2A78               	goto	i1l2651
  8699  0291  2A21               	goto	i1l2697
  8700  0292                     i1l2657:	
  8701                           
  8702                           ;doprnt.c: 1282: {
  8703                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8704  0292  082D               	movf	sprintf@ap,w
  8705  0293  0086               	movwf	6
  8706  0294  0187               	clrf	7
  8707  0295  3F40               	moviw [0]fsr1
  8708  0296  00AE               	movwf	sprintf@_val
  8709  0297  3F41               	moviw [1]fsr1
  8710  0298  00AF               	movwf	sprintf@_val+1
  8711  0299  3002               	movlw	2
  8712  029A  00A8               	movwf	??_sprintf
  8713  029B  0828               	movf	??_sprintf,w
  8714  029C  07AD               	addwf	sprintf@ap,f
  8715                           
  8716                           ;doprnt.c: 1296: }
  8717                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  8718  029D  08B3               	movf	sprintf@prec,f
  8719  029E  1D03               	skipz
  8720  029F  2AA8               	goto	i1l2667
  8721  02A0  082F               	movf	sprintf@_val+1,w
  8722  02A1  042E               	iorwf	sprintf@_val,w
  8723  02A2  1D03               	skipz
  8724  02A3  2AA8               	goto	i1l2667
  8725                           
  8726                           ;doprnt.c: 1300: prec++;
  8727  02A4  3001               	movlw	1
  8728  02A5  00A8               	movwf	??_sprintf
  8729  02A6  0828               	movf	??_sprintf,w
  8730  02A7  07B3               	addwf	sprintf@prec,f
  8731  02A8                     i1l2667:	
  8732                           
  8733                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8734  02A8  01B4               	clrf	sprintf@c
  8735  02A9  0AB4               	incf	sprintf@c,f
  8736  02AA  0834               	movf	sprintf@c,w
  8737  02AB  3A05               	xorlw	5
  8738  02AC  1903               	btfsc	3,2
  8739  02AD  2ACD               	goto	i1l2681
  8740  02AE                     i1l2673:	
  8741                           
  8742                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  8743  02AE  0834               	movf	sprintf@c,w
  8744  02AF  00A8               	movwf	??_sprintf
  8745  02B0  01A9               	clrf	??_sprintf+1
  8746  02B1  35A8               	lslf	??_sprintf,f
  8747  02B2  0DA9               	rlf	??_sprintf+1,f
  8748  02B3  3000               	movlw	low (_dpowers| (0+32768))
  8749  02B4  0728               	addwf	??_sprintf,w
  8750  02B5  0084               	movwf	4
  8751  02B6  3086               	movlw	high (_dpowers| (0+32768))
  8752  02B7  3D29               	addwfc	??_sprintf+1,w
  8753  02B8  0085               	movwf	5
  8754  02B9  3F00               	moviw [0]fsr0
  8755  02BA  00AA               	movwf	??_sprintf+2
  8756  02BB  3F01               	moviw [1]fsr0
  8757  02BC  00AB               	movwf	??_sprintf+3
  8758  02BD  082B               	movf	??_sprintf+3,w
  8759  02BE  022F               	subwf	sprintf@_val+1,w
  8760  02BF  1D03               	skipz
  8761  02C0  2AC3               	goto	u213_25
  8762  02C1  082A               	movf	??_sprintf+2,w
  8763  02C2  022E               	subwf	sprintf@_val,w
  8764  02C3                     u213_25:	
  8765  02C3  1C03               	btfss	3,0
  8766  02C4  2ACD               	goto	i1l2681
  8767                           
  8768                           ;doprnt.c: 1316: break;
  8769  02C5  3001               	movlw	1
  8770  02C6  00A8               	movwf	??_sprintf
  8771  02C7  0828               	movf	??_sprintf,w
  8772  02C8  07B4               	addwf	sprintf@c,f
  8773  02C9  0834               	movf	sprintf@c,w
  8774  02CA  3A05               	xorlw	5
  8775  02CB  1D03               	skipz
  8776  02CC  2AAE               	goto	i1l2673
  8777  02CD                     i1l2681:	
  8778                           
  8779                           ;doprnt.c: 1348: if(c < prec)
  8780  02CD  0834               	movf	sprintf@c,w
  8781  02CE  3A80               	xorlw	128
  8782  02CF  00A8               	movwf	??_sprintf
  8783  02D0  0833               	movf	sprintf@prec,w
  8784  02D1  3A80               	xorlw	128
  8785  02D2  02A8               	subwf	??_sprintf,f
  8786  02D3  1803               	skipnc
  8787  02D4  2ADA               	goto	i1l2685
  8788                           
  8789                           ;doprnt.c: 1349: c = prec;
  8790  02D5  0833               	movf	sprintf@prec,w
  8791  02D6  00A8               	movwf	??_sprintf
  8792  02D7  0828               	movf	??_sprintf,w
  8793  02D8  00B4               	movwf	sprintf@c
  8794  02D9  2AE6               	goto	i1l2695
  8795  02DA                     i1l2685:	
  8796                           
  8797                           ;doprnt.c: 1350: else if(prec < c)
  8798  02DA  0833               	movf	sprintf@prec,w
  8799  02DB  3A80               	xorlw	128
  8800  02DC  00A8               	movwf	??_sprintf
  8801  02DD  0834               	movf	sprintf@c,w
  8802  02DE  3A80               	xorlw	128
  8803  02DF  02A8               	subwf	??_sprintf,f
  8804  02E0  1803               	skipnc
  8805  02E1  2AE6               	goto	i1l2695
  8806                           
  8807                           ;doprnt.c: 1351: prec = c;
  8808  02E2  0834               	movf	sprintf@c,w
  8809  02E3  00A8               	movwf	??_sprintf
  8810  02E4  0828               	movf	??_sprintf,w
  8811  02E5  00B3               	movwf	sprintf@prec
  8812  02E6                     i1l2695:	
  8813                           ;doprnt.c: 1431: {
  8814                           ;doprnt.c: 1478: }
  8815                           ;doprnt.c: 1483: while(prec--) {
  8816                           
  8817  02E6  30FF               	movlw	-1
  8818  02E7  00A8               	movwf	??_sprintf
  8819  02E8  0828               	movf	??_sprintf,w
  8820  02E9  07B3               	addwf	sprintf@prec,f
  8821  02EA  0833               	movf	sprintf@prec,w
  8822  02EB  3AFF               	xorlw	255
  8823  02EC  1903               	btfsc	3,2
  8824  02ED  2A21               	goto	i1l2697
  8825                           
  8826                           ;doprnt.c: 1487: {
  8827                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  8828  02EE  300A               	movlw	10
  8829  02EF  00F8               	movwf	___lwmod@divisor
  8830  02F0  3000               	movlw	0
  8831  02F1  00F9               	movwf	___lwmod@divisor+1
  8832  02F2  0833               	movf	sprintf@prec,w
  8833  02F3  00A8               	movwf	??_sprintf
  8834  02F4  01A9               	clrf	??_sprintf+1
  8835  02F5  35A8               	lslf	??_sprintf,f
  8836  02F6  0DA9               	rlf	??_sprintf+1,f
  8837  02F7  3000               	movlw	low (_dpowers| (0+32768))
  8838  02F8  0728               	addwf	??_sprintf,w
  8839  02F9  0084               	movwf	4
  8840  02FA  3086               	movlw	high (_dpowers| (0+32768))
  8841  02FB  3D29               	addwfc	??_sprintf+1,w
  8842  02FC  0085               	movwf	5
  8843  02FD  3F00               	moviw [0]fsr0
  8844  02FE  00F0               	movwf	___lwdiv@divisor
  8845  02FF  3F01               	moviw [1]fsr0
  8846  0300  00F1               	movwf	___lwdiv@divisor+1
  8847  0301  082F               	movf	sprintf@_val+1,w
  8848  0302  01F3               	clrf	___lwdiv@dividend+1
  8849  0303  07F3               	addwf	___lwdiv@dividend+1,f
  8850  0304  082E               	movf	sprintf@_val,w
  8851  0305  01F2               	clrf	___lwdiv@dividend
  8852  0306  07F2               	addwf	___lwdiv@dividend,f
  8853  0307  3187  2755  3182   	fcall	___lwdiv
  8854  030A  0871               	movf	?___lwdiv+1,w
  8855  030B  01FB               	clrf	___lwmod@dividend+1
  8856  030C  07FB               	addwf	___lwmod@dividend+1,f
  8857  030D  0870               	movf	?___lwdiv,w
  8858  030E  01FA               	clrf	___lwmod@dividend
  8859  030F  07FA               	addwf	___lwmod@dividend,f
  8860  0310  3185  25A9  3182   	fcall	___lwmod
  8861  0313  0878               	movf	?___lwmod,w
  8862  0314  3E30               	addlw	48
  8863  0315  0020               	movlb	0	; select bank0
  8864  0316  00AA               	movwf	??_sprintf+2
  8865  0317  082A               	movf	??_sprintf+2,w
  8866  0318  00B4               	movwf	sprintf@c
  8867                           
  8868                           ;doprnt.c: 1532: }
  8869                           ;doprnt.c: 1533: ((*sp++ = (c)));
  8870  0319  0834               	movf	sprintf@c,w
  8871  031A  00A8               	movwf	??_sprintf
  8872  031B  0832               	movf	sprintf@sp,w
  8873  031C  0086               	movwf	6
  8874  031D  0187               	clrf	7
  8875  031E  0828               	movf	??_sprintf,w
  8876  031F  0081               	movwf	1
  8877  0320  3001               	movlw	1
  8878  0321  00A8               	movwf	??_sprintf
  8879  0322  0828               	movf	??_sprintf,w
  8880  0323  07B2               	addwf	sprintf@sp,f
  8881  0324  2AE6               	goto	i1l2695
  8882  0325                     i1l2699:	
  8883                           ;doprnt.c: 1534: }
  8884                           ;doprnt.c: 1542: }
  8885                           ;doprnt.c: 1544: alldone:
  8886                           
  8887                           
  8888                           ;doprnt.c: 1547: *sp = 0;
  8889  0325  0832               	movf	sprintf@sp,w
  8890  0326  0086               	movwf	6
  8891  0327  0187               	clrf	7
  8892  0328  0181               	clrf	1
  8893  0329  0008               	return
  8894  032A                     __end_of_sprintf:	
  8895                           ;doprnt.c: 1549: return 0;
  8896                           ;	Return value of _sprintf is never used
  8897                           
  8898                           
  8899                           	psect	text78
  8900  0CB4                     __ptext78:	
  8901 ;; *************** function _isdigit *****************
  8902 ;; Defined at:
  8903 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\isdigit.c"
  8904 ;; Parameters:    Size  Location     Type
  8905 ;;  c               1    wreg     unsigned char 
  8906 ;; Auto vars:     Size  Location     Type
  8907 ;;  c               1    1[COMMON] unsigned char 
  8908 ;; Return value:  Size  Location     Type
  8909 ;;		None               void
  8910 ;; Registers used:
  8911 ;;		wreg, status,2, status,0
  8912 ;; Tracked objects:
  8913 ;;		On entry : 0/0
  8914 ;;		On exit  : 0/0
  8915 ;;		Unchanged: 0/0
  8916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8917 ;;      Params:         0       0       0       0
  8918 ;;      Locals:         2       0       0       0
  8919 ;;      Temps:          0       0       0       0
  8920 ;;      Totals:         2       0       0       0
  8921 ;;Total ram usage:        2 bytes
  8922 ;; Hardware stack levels used:    1
  8923 ;; This function calls:
  8924 ;;		Nothing
  8925 ;; This function is called by:
  8926 ;;		_sprintf
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           
  8931                           ;psect for function _isdigit
  8932  0CB4                     _isdigit:	
  8933                           
  8934                           ;incstack = 0
  8935                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8936                           ;isdigit@c stored from wreg
  8937  0CB4  00F1               	movwf	isdigit@c
  8938  0CB5  01F0               	clrf	_isdigit$1061
  8939  0CB6  303A               	movlw	58
  8940  0CB7  0271               	subwf	isdigit@c,w
  8941  0CB8  1803               	skipnc
  8942  0CB9  2CC0               	goto	i1l2415
  8943  0CBA  3030               	movlw	48
  8944  0CBB  0271               	subwf	isdigit@c,w
  8945  0CBC  1C03               	skipc
  8946  0CBD  2CC0               	goto	i1l2415
  8947  0CBE  01F0               	clrf	_isdigit$1061
  8948  0CBF  0AF0               	incf	_isdigit$1061,f
  8949  0CC0                     i1l2415:	
  8950  0CC0  0C70               	rrf	_isdigit$1061,w
  8951  0CC1  0008               	return
  8952  0CC2                     __end_of_isdigit:	
  8953                           
  8954                           	psect	text79
  8955  05A9                     __ptext79:	
  8956 ;; *************** function ___lwmod *****************
  8957 ;; Defined at:
  8958 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwmod.c"
  8959 ;; Parameters:    Size  Location     Type
  8960 ;;  divisor         2    8[COMMON] unsigned int 
  8961 ;;  dividend        2   10[COMMON] unsigned int 
  8962 ;; Auto vars:     Size  Location     Type
  8963 ;;  counter         1   13[COMMON] unsigned char 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  2    8[COMMON] unsigned int 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8973 ;;      Params:         4       0       0       0
  8974 ;;      Locals:         1       0       0       0
  8975 ;;      Temps:          1       0       0       0
  8976 ;;      Totals:         6       0       0       0
  8977 ;;Total ram usage:        6 bytes
  8978 ;; Hardware stack levels used:    1
  8979 ;; This function calls:
  8980 ;;		Nothing
  8981 ;; This function is called by:
  8982 ;;		_sprintf
  8983 ;; This function uses a non-reentrant model
  8984 ;;
  8985                           
  8986                           
  8987                           ;psect for function ___lwmod
  8988  05A9                     ___lwmod:	
  8989                           
  8990                           ;incstack = 0
  8991                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8992  05A9  0879               	movf	___lwmod@divisor+1,w
  8993  05AA  0478               	iorwf	___lwmod@divisor,w
  8994  05AB  1903               	skipnz
  8995  05AC  2DD0               	goto	i1l2463
  8996  05AD  01FD               	clrf	___lwmod@counter
  8997  05AE  0AFD               	incf	___lwmod@counter,f
  8998  05AF                     i1l2453:	
  8999  05AF  1BF9               	btfsc	___lwmod@divisor+1,7
  9000  05B0  2DBB               	goto	i1l2455
  9001  05B1  3001               	movlw	1
  9002  05B2                     u176_25:	
  9003  05B2  35F8               	lslf	___lwmod@divisor,f
  9004  05B3  0DF9               	rlf	___lwmod@divisor+1,f
  9005  05B4  0B89               	decfsz	9,f
  9006  05B5  2DB2               	goto	u176_25
  9007  05B6  3001               	movlw	1
  9008  05B7  00FC               	movwf	??___lwmod
  9009  05B8  087C               	movf	??___lwmod,w
  9010  05B9  07FD               	addwf	___lwmod@counter,f
  9011  05BA  2DAF               	goto	i1l2453
  9012  05BB                     i1l2455:	
  9013  05BB  0879               	movf	___lwmod@divisor+1,w
  9014  05BC  027B               	subwf	___lwmod@dividend+1,w
  9015  05BD  1D03               	skipz
  9016  05BE  2DC1               	goto	u178_25
  9017  05BF  0878               	movf	___lwmod@divisor,w
  9018  05C0  027A               	subwf	___lwmod@dividend,w
  9019  05C1                     u178_25:	
  9020  05C1  1C03               	skipc
  9021  05C2  2DC7               	goto	i1l2459
  9022  05C3  0878               	movf	___lwmod@divisor,w
  9023  05C4  02FA               	subwf	___lwmod@dividend,f
  9024  05C5  0879               	movf	___lwmod@divisor+1,w
  9025  05C6  3BFB               	subwfb	___lwmod@dividend+1,f
  9026  05C7                     i1l2459:	
  9027  05C7  3001               	movlw	1
  9028  05C8                     u179_25:	
  9029  05C8  36F9               	lsrf	___lwmod@divisor+1,f
  9030  05C9  0CF8               	rrf	___lwmod@divisor,f
  9031  05CA  0B89               	decfsz	9,f
  9032  05CB  2DC8               	goto	u179_25
  9033  05CC  3001               	movlw	1
  9034  05CD  02FD               	subwf	___lwmod@counter,f
  9035  05CE  1D03               	btfss	3,2
  9036  05CF  2DBB               	goto	i1l2455
  9037  05D0                     i1l2463:	
  9038  05D0  087B               	movf	___lwmod@dividend+1,w
  9039  05D1  01F9               	clrf	?___lwmod+1
  9040  05D2  07F9               	addwf	?___lwmod+1,f
  9041  05D3  087A               	movf	___lwmod@dividend,w
  9042  05D4  01F8               	clrf	?___lwmod
  9043  05D5  07F8               	addwf	?___lwmod,f
  9044  05D6  0008               	return
  9045  05D7                     __end_of___lwmod:	
  9046                           
  9047                           	psect	text80
  9048  0755                     __ptext80:	
  9049 ;; *************** function ___lwdiv *****************
  9050 ;; Defined at:
  9051 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lwdiv.c"
  9052 ;; Parameters:    Size  Location     Type
  9053 ;;  divisor         2    0[COMMON] unsigned int 
  9054 ;;  dividend        2    2[COMMON] unsigned int 
  9055 ;; Auto vars:     Size  Location     Type
  9056 ;;  quotient        2    5[COMMON] unsigned int 
  9057 ;;  counter         1    7[COMMON] unsigned char 
  9058 ;; Return value:  Size  Location     Type
  9059 ;;                  2    0[COMMON] unsigned int 
  9060 ;; Registers used:
  9061 ;;		wreg, status,2, status,0
  9062 ;; Tracked objects:
  9063 ;;		On entry : 0/0
  9064 ;;		On exit  : 0/0
  9065 ;;		Unchanged: 0/0
  9066 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9067 ;;      Params:         4       0       0       0
  9068 ;;      Locals:         3       0       0       0
  9069 ;;      Temps:          1       0       0       0
  9070 ;;      Totals:         8       0       0       0
  9071 ;;Total ram usage:        8 bytes
  9072 ;; Hardware stack levels used:    1
  9073 ;; This function calls:
  9074 ;;		Nothing
  9075 ;; This function is called by:
  9076 ;;		_sprintf
  9077 ;; This function uses a non-reentrant model
  9078 ;;
  9079                           
  9080                           
  9081                           ;psect for function ___lwdiv
  9082  0755                     ___lwdiv:	
  9083                           
  9084                           ;incstack = 0
  9085                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9086  0755  01F5               	clrf	___lwdiv@quotient
  9087  0756  01F6               	clrf	___lwdiv@quotient+1
  9088  0757  0871               	movf	___lwdiv@divisor+1,w
  9089  0758  0470               	iorwf	___lwdiv@divisor,w
  9090  0759  1903               	skipnz
  9091  075A  2F84               	goto	i1l2441
  9092  075B  01F7               	clrf	___lwdiv@counter
  9093  075C  0AF7               	incf	___lwdiv@counter,f
  9094  075D                     i1l2429:	
  9095  075D  1BF1               	btfsc	___lwdiv@divisor+1,7
  9096  075E  2F69               	goto	i1l2431
  9097  075F  3001               	movlw	1
  9098  0760                     u169_25:	
  9099  0760  35F0               	lslf	___lwdiv@divisor,f
  9100  0761  0DF1               	rlf	___lwdiv@divisor+1,f
  9101  0762  0B89               	decfsz	9,f
  9102  0763  2F60               	goto	u169_25
  9103  0764  3001               	movlw	1
  9104  0765  00F4               	movwf	??___lwdiv
  9105  0766  0874               	movf	??___lwdiv,w
  9106  0767  07F7               	addwf	___lwdiv@counter,f
  9107  0768  2F5D               	goto	i1l2429
  9108  0769                     i1l2431:	
  9109  0769  3001               	movlw	1
  9110  076A                     u171_25:	
  9111  076A  35F5               	lslf	___lwdiv@quotient,f
  9112  076B  0DF6               	rlf	___lwdiv@quotient+1,f
  9113  076C  0B89               	decfsz	9,f
  9114  076D  2F6A               	goto	u171_25
  9115  076E  0871               	movf	___lwdiv@divisor+1,w
  9116  076F  0273               	subwf	___lwdiv@dividend+1,w
  9117  0770  1D03               	skipz
  9118  0771  2F74               	goto	u172_25
  9119  0772  0870               	movf	___lwdiv@divisor,w
  9120  0773  0272               	subwf	___lwdiv@dividend,w
  9121  0774                     u172_25:	
  9122  0774  1C03               	skipc
  9123  0775  2F7B               	goto	i1l2437
  9124  0776  0870               	movf	___lwdiv@divisor,w
  9125  0777  02F2               	subwf	___lwdiv@dividend,f
  9126  0778  0871               	movf	___lwdiv@divisor+1,w
  9127  0779  3BF3               	subwfb	___lwdiv@dividend+1,f
  9128  077A  1475               	bsf	___lwdiv@quotient,0
  9129  077B                     i1l2437:	
  9130  077B  3001               	movlw	1
  9131  077C                     u173_25:	
  9132  077C  36F1               	lsrf	___lwdiv@divisor+1,f
  9133  077D  0CF0               	rrf	___lwdiv@divisor,f
  9134  077E  0B89               	decfsz	9,f
  9135  077F  2F7C               	goto	u173_25
  9136  0780  3001               	movlw	1
  9137  0781  02F7               	subwf	___lwdiv@counter,f
  9138  0782  1D03               	btfss	3,2
  9139  0783  2F69               	goto	i1l2431
  9140  0784                     i1l2441:	
  9141  0784  0876               	movf	___lwdiv@quotient+1,w
  9142  0785  01F1               	clrf	?___lwdiv+1
  9143  0786  07F1               	addwf	?___lwdiv+1,f
  9144  0787  0875               	movf	___lwdiv@quotient,w
  9145  0788  01F0               	clrf	?___lwdiv
  9146  0789  07F0               	addwf	?___lwdiv,f
  9147  078A  0008               	return
  9148  078B                     __end_of___lwdiv:	
  9149                           
  9150                           	psect	text81
  9151  0BD2                     __ptext81:	
  9152 ;; *************** function _ds1307_get_year *****************
  9153 ;; Defined at:
  9154 ;;		line 270 in file "ds1307.c"
  9155 ;; Parameters:    Size  Location     Type
  9156 ;;		None
  9157 ;; Auto vars:     Size  Location     Type
  9158 ;;		None
  9159 ;; Return value:  Size  Location     Type
  9160 ;;                  1    wreg      unsigned char 
  9161 ;; Registers used:
  9162 ;;		wreg, status,2, status,0, pclath, cstack
  9163 ;; Tracked objects:
  9164 ;;		On entry : 0/0
  9165 ;;		On exit  : 0/0
  9166 ;;		Unchanged: 0/0
  9167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9168 ;;      Params:         0       0       0       0
  9169 ;;      Locals:         0       0       0       0
  9170 ;;      Temps:          0       0       0       0
  9171 ;;      Totals:         0       0       0       0
  9172 ;;Total ram usage:        0 bytes
  9173 ;; Hardware stack levels used:    1
  9174 ;; Hardware stack levels required when called:    2
  9175 ;; This function calls:
  9176 ;;		_bcd_to_dec
  9177 ;; This function is called by:
  9178 ;;		_update_clock
  9179 ;;		_ds1307_date_formatted
  9180 ;; This function uses a non-reentrant model
  9181 ;;
  9182                           
  9183                           
  9184                           ;psect for function _ds1307_get_year
  9185  0BD2                     _ds1307_get_year:	
  9186                           
  9187                           ;ds1307.c: 272: return bcd_to_dec(g_reg_data[DS1307_REG_YEAR]);
  9188                           
  9189                           ;incstack = 0
  9190                           ; Regs used in _ds1307_get_year: [wreg+status,2+status,0+pclath+cstack]
  9191  0BD2  0021               	movlb	1	; select bank1
  9192  0BD3  083D               	movf	(_g_reg_data^(0+128)+6),w
  9193  0BD4  318D  2584         	fcall	_bcd_to_dec
  9194  0BD6  0008               	return
  9195  0BD7                     __end_of_ds1307_get_year:	
  9196                           
  9197                           	psect	text82
  9198  0BCD                     __ptext82:	
  9199 ;; *************** function _ds1307_get_month *****************
  9200 ;; Defined at:
  9201 ;;		line 260 in file "ds1307.c"
  9202 ;; Parameters:    Size  Location     Type
  9203 ;;		None
  9204 ;; Auto vars:     Size  Location     Type
  9205 ;;		None
  9206 ;; Return value:  Size  Location     Type
  9207 ;;                  1    wreg      unsigned char 
  9208 ;; Registers used:
  9209 ;;		wreg, status,2, status,0, pclath, cstack
  9210 ;; Tracked objects:
  9211 ;;		On entry : 0/0
  9212 ;;		On exit  : 0/0
  9213 ;;		Unchanged: 0/0
  9214 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9215 ;;      Params:         0       0       0       0
  9216 ;;      Locals:         0       0       0       0
  9217 ;;      Temps:          0       0       0       0
  9218 ;;      Totals:         0       0       0       0
  9219 ;;Total ram usage:        0 bytes
  9220 ;; Hardware stack levels used:    1
  9221 ;; Hardware stack levels required when called:    2
  9222 ;; This function calls:
  9223 ;;		_bcd_to_dec
  9224 ;; This function is called by:
  9225 ;;		_update_clock
  9226 ;;		_ds1307_date_formatted
  9227 ;; This function uses a non-reentrant model
  9228 ;;
  9229                           
  9230                           
  9231                           ;psect for function _ds1307_get_month
  9232  0BCD                     _ds1307_get_month:	
  9233                           
  9234                           ;ds1307.c: 261: return bcd_to_dec(g_reg_data[DS1307_REG_MONTH]);
  9235                           
  9236                           ;incstack = 0
  9237                           ; Regs used in _ds1307_get_month: [wreg+status,2+status,0+pclath+cstack]
  9238  0BCD  0021               	movlb	1	; select bank1
  9239  0BCE  083C               	movf	(_g_reg_data^(0+128)+5),w
  9240  0BCF  318D  2584         	fcall	_bcd_to_dec
  9241  0BD1  0008               	return
  9242  0BD2                     __end_of_ds1307_get_month:	
  9243                           
  9244                           	psect	text83
  9245  0BFF                     __ptext83:	
  9246 ;; *************** function _ds1307_get_day_of_month *****************
  9247 ;; Defined at:
  9248 ;;		line 249 in file "ds1307.c"
  9249 ;; Parameters:    Size  Location     Type
  9250 ;;		None
  9251 ;; Auto vars:     Size  Location     Type
  9252 ;;		None
  9253 ;; Return value:  Size  Location     Type
  9254 ;;                  1    wreg      unsigned char 
  9255 ;; Registers used:
  9256 ;;		wreg, status,2, status,0, pclath, cstack
  9257 ;; Tracked objects:
  9258 ;;		On entry : 0/0
  9259 ;;		On exit  : 0/0
  9260 ;;		Unchanged: 0/0
  9261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9262 ;;      Params:         0       0       0       0
  9263 ;;      Locals:         0       0       0       0
  9264 ;;      Temps:          0       0       0       0
  9265 ;;      Totals:         0       0       0       0
  9266 ;;Total ram usage:        0 bytes
  9267 ;; Hardware stack levels used:    1
  9268 ;; Hardware stack levels required when called:    2
  9269 ;; This function calls:
  9270 ;;		_bcd_to_dec
  9271 ;; This function is called by:
  9272 ;;		_update_clock
  9273 ;;		_ds1307_date_formatted
  9274 ;; This function uses a non-reentrant model
  9275 ;;
  9276                           
  9277                           
  9278                           ;psect for function _ds1307_get_day_of_month
  9279  0BFF                     _ds1307_get_day_of_month:	
  9280                           
  9281                           ;ds1307.c: 251: return bcd_to_dec(g_reg_data[DS1307_REG_DAY_OM] & 0x3F);
  9282                           
  9283                           ;incstack = 0
  9284                           ; Regs used in _ds1307_get_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  9285  0BFF  0021               	movlb	1	; select bank1
  9286  0C00  083B               	movf	(_g_reg_data^(0+128)+4),w
  9287  0C01  393F               	andlw	63
  9288  0C02  318D  2584         	fcall	_bcd_to_dec
  9289  0C04  0008               	return
  9290  0C05                     __end_of_ds1307_get_day_of_month:	
  9291                           
  9292                           	psect	text84
  9293  0D84                     __ptext84:	
  9294 ;; *************** function _bcd_to_dec *****************
  9295 ;; Defined at:
  9296 ;;		line 73 in file "ds1307.c"
  9297 ;; Parameters:    Size  Location     Type
  9298 ;;  bcd             1    wreg     unsigned char 
  9299 ;; Auto vars:     Size  Location     Type
  9300 ;;  bcd             1    7[COMMON] unsigned char 
  9301 ;; Return value:  Size  Location     Type
  9302 ;;                  1    wreg      unsigned char 
  9303 ;; Registers used:
  9304 ;;		wreg, status,2, status,0, pclath, cstack
  9305 ;; Tracked objects:
  9306 ;;		On entry : 0/0
  9307 ;;		On exit  : 0/0
  9308 ;;		Unchanged: 0/0
  9309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9310 ;;      Params:         0       0       0       0
  9311 ;;      Locals:         1       0       0       0
  9312 ;;      Temps:          3       0       0       0
  9313 ;;      Totals:         4       0       0       0
  9314 ;;Total ram usage:        4 bytes
  9315 ;; Hardware stack levels used:    1
  9316 ;; Hardware stack levels required when called:    1
  9317 ;; This function calls:
  9318 ;;		___bmul
  9319 ;; This function is called by:
  9320 ;;		_ds1307_get_seconds
  9321 ;;		_ds1307_get_minutes
  9322 ;;		_ds1307_get_hours
  9323 ;;		_ds1307_get_day_of_month
  9324 ;;		_ds1307_get_month
  9325 ;;		_ds1307_get_year
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           
  9330                           ;psect for function _bcd_to_dec
  9331  0D84                     _bcd_to_dec:	
  9332                           
  9333                           ;incstack = 0
  9334                           ; Regs used in _bcd_to_dec: [wreg+status,2+status,0+pclath+cstack]
  9335                           ;bcd_to_dec@bcd stored from wreg
  9336  0D84  00F7               	movwf	bcd_to_dec@bcd
  9337                           
  9338                           ;ds1307.c: 77: return (((bcd >> 4)*10) + (bcd & 0x0F));
  9339  0D85  300F               	movlw	15
  9340  0D86  0577               	andwf	bcd_to_dec@bcd,w
  9341  0D87  00F4               	movwf	??_bcd_to_dec
  9342  0D88  300A               	movlw	10
  9343  0D89  00F5               	movwf	??_bcd_to_dec+1
  9344  0D8A  0875               	movf	??_bcd_to_dec+1,w
  9345  0D8B  00F0               	movwf	___bmul@multiplicand
  9346  0D8C  0877               	movf	bcd_to_dec@bcd,w
  9347  0D8D  00F6               	movwf	??_bcd_to_dec+2
  9348  0D8E  3004               	movlw	4
  9349  0D8F                     u135_25:	
  9350  0D8F  36F6               	lsrf	??_bcd_to_dec+2,f
  9351  0D90  0B89               	decfsz	9,f
  9352  0D91  2D8F               	goto	u135_25
  9353  0D92  0876               	movf	??_bcd_to_dec+2,w
  9354  0D93  3187  27EF         	fcall	___bmul
  9355  0D95  0774               	addwf	??_bcd_to_dec,w
  9356  0D96  0008               	return
  9357  0D97                     __end_of_bcd_to_dec:	
  9358                           
  9359                           	psect	text85
  9360  07EF                     __ptext85:	
  9361 ;; *************** function ___bmul *****************
  9362 ;; Defined at:
  9363 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul8.c"
  9364 ;; Parameters:    Size  Location     Type
  9365 ;;  multiplier      1    wreg     unsigned char 
  9366 ;;  multiplicand    1    0[COMMON] unsigned char 
  9367 ;; Auto vars:     Size  Location     Type
  9368 ;;  multiplier      1    3[COMMON] unsigned char 
  9369 ;;  product         1    2[COMMON] unsigned char 
  9370 ;; Return value:  Size  Location     Type
  9371 ;;                  1    wreg      unsigned char 
  9372 ;; Registers used:
  9373 ;;		wreg, status,2, status,0
  9374 ;; Tracked objects:
  9375 ;;		On entry : 0/0
  9376 ;;		On exit  : 0/0
  9377 ;;		Unchanged: 0/0
  9378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9379 ;;      Params:         1       0       0       0
  9380 ;;      Locals:         2       0       0       0
  9381 ;;      Temps:          1       0       0       0
  9382 ;;      Totals:         4       0       0       0
  9383 ;;Total ram usage:        4 bytes
  9384 ;; Hardware stack levels used:    1
  9385 ;; This function calls:
  9386 ;;		Nothing
  9387 ;; This function is called by:
  9388 ;;		_bcd_to_dec
  9389 ;;		_sprintf
  9390 ;; This function uses a non-reentrant model
  9391 ;;
  9392                           
  9393                           
  9394                           ;psect for function ___bmul
  9395  07EF                     ___bmul:	
  9396                           
  9397                           ;incstack = 0
  9398                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9399                           ;___bmul@multiplier stored from wreg
  9400  07EF  00F3               	movwf	___bmul@multiplier
  9401  07F0  01F2               	clrf	___bmul@product
  9402  07F1                     i1l2145:	
  9403  07F1  1C73               	btfss	___bmul@multiplier,0
  9404  07F2  2FF7               	goto	i1l2149
  9405  07F3  0870               	movf	___bmul@multiplicand,w
  9406  07F4  00F1               	movwf	??___bmul
  9407  07F5  0871               	movf	??___bmul,w
  9408  07F6  07F2               	addwf	___bmul@product,f
  9409  07F7                     i1l2149:	
  9410  07F7  1003               	clrc
  9411  07F8  0DF0               	rlf	___bmul@multiplicand,f
  9412  07F9  1003               	clrc
  9413  07FA  0CF3               	rrf	___bmul@multiplier,f
  9414  07FB  08F3               	movf	___bmul@multiplier,f
  9415  07FC  1D03               	skipz
  9416  07FD  2FF1               	goto	i1l2145
  9417  07FE  0872               	movf	___bmul@product,w
  9418  07FF  0008               	return
  9419  0800                     __end_of___bmul:	
  9420  007E                     btemp	set	126	;btemp
  9421  007E                     pic14e$flags	set	126
  9422  007E                     wtemp	set	126
  9423  007E                     wtemp0	set	126
  9424  0080                     wtemp1	set	128
  9425  0082                     wtemp2	set	130
  9426  0084                     wtemp3	set	132
  9427  0086                     wtemp4	set	134
  9428  0088                     wtemp5	set	136
  9429  007F                     wtemp6	set	127
  9430  007E                     ttemp	set	126
  9431  007E                     ttemp0	set	126
  9432  0081                     ttemp1	set	129
  9433  0084                     ttemp2	set	132
  9434  0087                     ttemp3	set	135
  9435  007F                     ttemp4	set	127
  9436  007E                     ltemp	set	126
  9437  007E                     ltemp0	set	126
  9438  0082                     ltemp1	set	130
  9439  0086                     ltemp2	set	134
  9440  0080                     ltemp3	set	128


Data Sizes:
    Strings     63
    Constant    10
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      58
    BANK1            80     23      42
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), tmr_isr@date(BANK0[10]), tmr_isr@time(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S866$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), STR_2(CODE[7]), STR_1(CODE[7]), tmr_isr@date(BANK0[10]), 
		 -> tmr_isr@time(BANK0[10]), 

    ds1307_date_formatted@p_str_date	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@date(BANK0[10]), 

    ds1307_time_formatted@p_str_time	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@time(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr_isr in COMMON

    _tmr_isr->_lcd_goto
    _tmr_isr->_lcd_write
    i1_lcd_backlight->i1_mcp23017_ioa_send_byte
    _update_clock->_ds1307_switch_to_12hr
    _update_clock->_ds1307_switch_to_24hr
    i1_ds1307_get_clock->i1_i2c_send_address
    _ds1307_switch_to_24hr->_ds1307_is_pm
    _ds1307_switch_to_24hr->_ds1307_set_hours
    _ds1307_switch_to_12hr->_ds1307_set_hours
    _ds1307_set_hours->_dec_to_bcd
    _ds1307_set_year->_dec_to_bcd
    _ds1307_set_seconds->_dec_to_bcd
    _ds1307_set_month->_dec_to_bcd
    _ds1307_set_minutes->_dec_to_bcd
    _ds1307_set_day_of_month->_dec_to_bcd
    _dec_to_bcd->___awdiv
    _ds1307_set_clock->_ds1307_start_clock
    _ds1307_set_clock->_ds1307_stop_clock
    _ds1307_stop_clock->_ds1307_read_addr
    _ds1307_start_clock->_ds1307_read_addr
    _ds1307_write_addr->i1_i2c_send_address
    _ds1307_read_addr->i1_i2c_send_address
    _lcd_write->_lcd_data
    _lcd_data->i1__send_byte
    _lcd_goto->i1_lcd_command
    i1_lcd_command->i1__send_byte
    i1__send_byte->i1__send_nibble
    i1__send_nibble->i1_mcp23017_ioa_send_byte
    i1_mcp23017_ioa_send_byte->i1_mcp23017_write_reg
    i1_mcp23017_write_reg->i1_i2c_send_address
    _keypad_scan->_mcp23017_read_reg
    _mcp23017_read_reg->i1_i2c_send_address
    _ds1307_is_pm->_ds1307_get_hours
    _ds1307_get_hours->_bcd_to_dec
    _ds1307_get_seconds->_bcd_to_dec
    _ds1307_get_minutes->_bcd_to_dec
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ds1307_get_year->_bcd_to_dec
    _ds1307_get_month->_bcd_to_dec
    _ds1307_get_day_of_month->_bcd_to_dec
    _bcd_to_dec->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr_isr in BANK0

    _tmr_isr->_ds1307_date_formatted
    _tmr_isr->_ds1307_time_formatted
    _update_clock->_ds1307_switch_to_12hr
    _update_clock->_ds1307_switch_to_24hr
    _ds1307_set_hours->_dec_to_bcd
    _ds1307_set_year->_dec_to_bcd
    _ds1307_set_seconds->_dec_to_bcd
    _ds1307_set_month->_dec_to_bcd
    _ds1307_set_minutes->_dec_to_bcd
    _ds1307_set_day_of_month->_dec_to_bcd
    _ds1307_time_formatted->_sprintf
    _ds1307_date_formatted->_sprintf

Critical Paths under _main in BANK1

    _main->_i2c_init
    _mcp23017_init->_mcp23017_set_slave_addr
    _lcd_initialize->_lcd_flags_set
    _lcd_flags_set->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__send_nibble
    _lcd_backlight->_mcp23017_ioa_send_byte
    __set_4bit_interface->__send_nibble
    __send_nibble->_mcp23017_ioa_send_byte
    _mcp23017_ioa_send_byte->_mcp23017_write_reg
    _keypad_init->_mcp23017_write_reg
    _mcp23017_write_reg->_i2c_send_address
    _init->_write_t1
    _i2c_init->___lldiv
    _ds1307_init->_ds1307_get_clock
    _ds1307_get_clock->_i2c_send_address

Critical Paths under _tmr_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13531
                                             22 BANK1      1     1      0
                        _ds1307_init
                           _i2c_init
                               _init
                        _keypad_init
                     _lcd_initialize
                      _mcp23017_init
 ---------------------------------------------------------------------------------
 (1) _mcp23017_init                                        1     1      0      44
                                              2 BANK1      1     1      0
            _mcp23017_set_slave_addr
 ---------------------------------------------------------------------------------
 (2) _mcp23017_set_slave_addr                              2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       3     3      0   10742
                                             18 BANK1      3     3      0
                __set_4bit_interface
                      _lcd_backlight
                        _lcd_command
                      _lcd_flags_set
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _lcd_flags_set                                        5     3      2    3510
                                             13 BANK1      5     3      2
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          2     2      0    2432
                                             11 BANK1      2     2      0
                         __send_byte
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) __send_byte                                           2     2      0    1238
                                              9 BANK1      2     2      0
                       __send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        1     1      0    1194
                                              6 BANK1      1     1      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (2) __set_4bit_interface                                  1     1      0    2366
                                              9 BANK1      1     1      0
                       __send_nibble
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (5) __send_nibble                                         3     3      0    1194
                                              6 BANK1      3     3      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) _mcp23017_ioa_send_byte                               1     1      0    1172
                                              5 BANK1      1     1      0
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          1     1      0    1172
                                              5 BANK1      1     1      0
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _mcp23017_write_reg                                   2     1      1    1172
                                              3 BANK1      2     1      1
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _init                                                 5     2      3     318
                                              2 BANK1      5     2      3
                           _write_t1
 ---------------------------------------------------------------------------------
 (2) _write_t1                                             2     0      2     146
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     398
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     290
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _ds1307_init                                          0     0      0     857
                   _ds1307_get_clock
 ---------------------------------------------------------------------------------
 (2) _ds1307_get_clock                                     2     2      0     857
                                              3 BANK1      2     2      0
                      _i2c_read_data
                        _i2c_restart
                       _i2c_send_ack
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_data                                        1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_address                                     3     2      1     722
                                              0 BANK1      3     2      1
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_ack                                         1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read_data                                        2     2      0      23
                                              0 BANK1      2     2      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tmr_isr                                            25    25      0   28689
                                             28 BANK0     25    25      0
              _ds1307_date_formatted
              _ds1307_time_formatted
                    _keypad_read_key
                           _lcd_goto
                          _lcd_write
                            _sprintf
                       _update_clock
                 i1_ds1307_get_clock
                    i1_lcd_backlight
                         i1_write_t1
 ---------------------------------------------------------------------------------
 (11) i1_write_t1                                          2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) i1_lcd_backlight                                     1     1      0     394
                                              6 COMMON     1     1      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _update_clock                                        6     6      0   16822
                                              9 BANK0      6     6      0
                         _adjust_val
            _ds1307_get_day_of_month
                   _ds1307_get_hours
                 _ds1307_get_minutes
                   _ds1307_get_month
                 _ds1307_get_seconds
                    _ds1307_get_year
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_clock
            _ds1307_set_day_of_month
                   _ds1307_set_hours
                 _ds1307_set_minutes
                   _ds1307_set_month
                   _ds1307_set_pm_am
                 _ds1307_set_seconds
                    _ds1307_set_year
                  _ds1307_stop_clock
              _ds1307_switch_to_12hr
              _ds1307_switch_to_24hr
                 i1_ds1307_get_clock
 ---------------------------------------------------------------------------------
 (11) i1_ds1307_get_clock                                  2     2      0     415
                                              3 COMMON     2     2      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_24hr                               3     3      0    1764
                                             13 COMMON     1     1      0
                                              7 BANK0      2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_12hr                               3     3      0    1475
                                             13 COMMON     1     1      0
                                              7 BANK0      2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
                   _ds1307_set_pm_am
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_pm_am                                    2     2      0      22
                                              0 COMMON     2     2      0
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hr_mode                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hours                                    3     3      0    1006
                                             10 COMMON     3     3      0
                         _dec_to_bcd
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_year                                     2     2      0     940
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_seconds                                  3     3      0     940
                                             10 COMMON     3     3      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_month                                    2     2      0     962
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_minutes                                  2     2      0     940
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_day_of_month                             2     2      0     962
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (14) _dec_to_bcd                                          8     8      0     896
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             9     5      4     428
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_clock                                    2     2      0    2404
                                              8 COMMON     2     2      0
                 _ds1307_start_clock
                  _ds1307_stop_clock
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_stop_clock                                   2     2      0    1017
                                              6 COMMON     2     2      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_start_clock                                  2     2      0    1017
                                              6 COMMON     2     2      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_write_addr                                   2     1      1     602
                                              3 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (13) _ds1307_read_addr                                    3     3      0     392
                                              3 COMMON     3     3      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c_send_ack                                      1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) _adjust_val                                          5     2      3    1376
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _lcd_write                                           5     3      2    1242
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (12) _lcd_data                                            2     2      0     832
                                             11 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _lcd_goto                                            4     3      1    1224
                                             13 COMMON     1     0      1
                                              0 BANK0      3     3      0
                      i1_lcd_command
 ---------------------------------------------------------------------------------
 (12) i1_lcd_command                                       2     2      0     832
                                             11 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (13) i1__send_byte                                        2     2      0     438
                                              9 COMMON     2     2      0
                     i1__send_nibble
 ---------------------------------------------------------------------------------
 (14) i1__send_nibble                                      3     3      0     394
                                              6 COMMON     3     3      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (12) i1_mcp23017_ioa_send_byte                            1     1      0     372
                                              5 COMMON     1     1      0
               i1_mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (13) i1_mcp23017_write_reg                                2     1      1     372
                                              3 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (11) _keypad_read_key                                     2     2      0     505
                                              6 COMMON     2     2      0
                        _keypad_scan
 ---------------------------------------------------------------------------------
 (12) _keypad_scan                                         0     0      0     370
                  _mcp23017_read_reg
 ---------------------------------------------------------------------------------
 (13) _mcp23017_read_reg                                   3     3      0     370
                                              3 COMMON     3     3      0
                    i1_i2c_read_data
                      i1_i2c_restart
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (14) i1_i2c_stop                                          0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_start                                         0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_data                                     1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_address                                  3     2      1     280
                                              0 COMMON     3     2      1
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_restart                                       0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_read_data                                     2     2      0      23
                                              0 COMMON     2     2      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (15) i1_i2c_wait                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ds1307_time_formatted                               7     7      0    3185
                                             21 BANK0      7     7      0
                   _ds1307_get_hours
                 _ds1307_get_minutes
                 _ds1307_get_seconds
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) _ds1307_is_pm                                        3     3      0     312
                                             10 COMMON     3     3      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_get_hours                                    2     2      0     288
                                              8 COMMON     2     2      0
                         _bcd_to_dec
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_is_12hr_mode                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_seconds                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_minutes                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (11) _ds1307_date_formatted                               7     7      0    2761
                                             21 BANK0      7     7      0
            _ds1307_get_day_of_month
                   _ds1307_get_month
                    _ds1307_get_year
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            21    13      8    1909
                                              0 BANK0     21    13      8
                             ___bmul
                            ___lwdiv
                            ___lwmod
            _ds1307_get_day_of_month (ARG)
                   _ds1307_get_hours (ARG)
                 _ds1307_get_minutes (ARG)
                   _ds1307_get_month (ARG)
                 _ds1307_get_seconds (ARG)
                    _ds1307_get_year (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_year                                     0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_month                                    0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_day_of_month                             0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (15) _bcd_to_dec                                          4     4      0     264
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (16) ___bmul                                              4     3      1     220
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ds1307_init
     _ds1307_get_clock
       _i2c_read_data
         _i2c_wait
       _i2c_restart
         _i2c_wait
       _i2c_send_ack
         _i2c_wait
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _i2c_init
     ___lldiv
   _init
     _write_t1
   _keypad_init
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _lcd_initialize
     __set_4bit_interface
       __send_nibble
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_backlight
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_command
       __send_byte
         __send_nibble
           _mcp23017_ioa_send_byte
             _mcp23017_write_reg
               _i2c_send_address
                 _i2c_wait
               _i2c_send_data
                 _i2c_wait
               _i2c_start
                 _i2c_wait
               _i2c_stop
                 _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_flags_set
       _lcd_command
         __send_byte
           __send_nibble
             _mcp23017_ioa_send_byte
               _mcp23017_write_reg
                 _i2c_send_address
                   _i2c_wait
                 _i2c_send_data
                   _i2c_wait
                 _i2c_start
                   _i2c_wait
                 _i2c_stop
                   _i2c_wait
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _mcp23017_init
     _mcp23017_set_slave_addr

 _tmr_isr (ROOT)
   _ds1307_date_formatted
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _ds1307_time_formatted
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _keypad_read_key
     _keypad_scan
       _mcp23017_read_reg
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   _lcd_goto
     i1_lcd_command
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _lcd_write
     _lcd_data
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ds1307_get_day_of_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours (ARG)
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_year (ARG)
       _bcd_to_dec
         ___bmul
     _isdigit (ARG)
   _update_clock
     _adjust_val
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _ds1307_set_clock
       _ds1307_start_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       _ds1307_stop_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
     _ds1307_set_day_of_month
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_hours
       _dec_to_bcd
         ___awdiv
         ___awmod
       _ds1307_is_12hr_mode
     _ds1307_set_minutes
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_month
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_pm_am
       _ds1307_is_12hr_mode
     _ds1307_set_seconds
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_year
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_stop_clock
       _ds1307_read_addr
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_ack
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
       _ds1307_write_addr
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
     _ds1307_switch_to_12hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___awdiv
           ___awmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
       _ds1307_set_pm_am
         _ds1307_is_12hr_mode
     _ds1307_switch_to_24hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_is_pm
         _ds1307_get_hours
           _bcd_to_dec
             ___bmul
           _ds1307_is_12hr_mode
         _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___awdiv
           ___awmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
     i1_ds1307_get_clock
       i1_i2c_read_data
         i1_i2c_wait
       i1_i2c_restart
         i1_i2c_wait
       i1_i2c_send_ack
         i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
   i1_ds1307_get_clock
     i1_i2c_read_data
       i1_i2c_wait
     i1_i2c_restart
       i1_i2c_wait
     i1_i2c_send_ack
       i1_i2c_wait
     i1_i2c_send_address
       i1_i2c_wait
     i1_i2c_send_data
       i1_i2c_wait
     i1_i2c_start
       i1_i2c_wait
     i1_i2c_stop
       i1_i2c_wait
   i1_lcd_backlight
     i1_mcp23017_ioa_send_byte
       i1_mcp23017_write_reg
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   i1_write_t1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      72       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     35      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     17      2A       8       52.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      72      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Fri Nov 21 14:49:36 2014

  __size_of_mcp23017_ioa_send_byte 0009                       _update_clock 00E6  
 __size_of_ds1307_set_day_of_month 0010                       lcd_data@data 007C  
                   ___bmul@product 0072                        __CFG_CP$OFF 0000  
                      _SSPSTATbits 0214                                 l21 0517  
                  i1_lcd_backlight 0C45                       ___awdiv@sign 0076  
                              l500 0695                                l174 0FA6  
                     __CFG_CPD$OFF 0000                       ___awmod@sign 0076  
                      lcd_goto@col 007D                       __CFG_BORV$LO 0000  
                              wreg 0009                        lcd_goto@row 0021  
                ??_ds1307_get_year 0078                       __CFG_LVP$OFF 0000  
                             l2089 0C25                               l2517 0709  
                             l2509 06F1                               l2731 069C  
                             l2733 069E                               l2725 0693  
                             l2743 06C3                               l2727 0698  
                             l2745 06CB                               l2729 069A  
                             l2737 06A3                               l2771 0473  
                             l2739 06B7                               l2843 0353  
                             l2757 043A                               l2837 0346  
                             l2767 0468                               l2759 0448  
                             STR_1 0638                               STR_2 063F  
                             STR_3 0646                               STR_4 0629  
                             STR_5 060A                               STR_6 061A  
                             u2215 043D                               u2305 0512  
                             u2235 0449                               u2245 045D  
                             u2255 0469                               u2295 04E5  
                             u1575 0D65                               u2607 0D81  
                             u2617 0D4B                               u2627 0FEB  
                             u2637 0FFA                               u2577 032F  
                             u2587 03A8                               u2597 03B6  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
         ?_mcp23017_set_slave_addr 0070           __size_of_keypad_read_key 0022  
                    _i2c_read_data 0CD0                  ?_i2c_send_address 00A0  
                             _g_bl 0055                    ??_lcd_backlight 00A6  
                             _main 0F7C                               _init 078B  
            __size_ofi1__send_byte 0010                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                     lcd_goto@addr 0022                      __CFG_BOREN$ON 0000  
                             ltemp 007E                 ??_i2c_send_address 00A1  
                             start 00D4                               ttemp 007E  
                             wtemp 007E                      __CFG_IESO$OFF 0000  
             i2c_send_address@mode 00A0         ??i1_mcp23017_ioa_send_byte 0075  
                ??_ds1307_set_year 007A                  ?_ds1307_get_clock 0070  
                    ?_i2c_send_ack 0070                  ___bmul@multiplier 0073  
                ?_ds1307_get_hours 0070                      ??_i2c_restart 00A0  
                ?_ds1307_get_month 0070                      _i2c_send_data 0C4E  
               ??_ds1307_get_clock 00A3                 ??_ds1307_get_hours 0078  
               ??_ds1307_get_month 0078         __size_of_mcp23017_read_reg 0022  
     __size_of_ds1307_is_12hr_mode 0005                         i1_write_t1 0C2C  
                            ?_main 0070                              ?_init 00A2  
                  __end_of___awdiv 04CF                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0690                    __end_of___lldiv 047C  
                  ___awdiv@divisor 0070                    __end_of___lwdiv 078B  
                  ??_lcd_flags_set 00AF                              i1l404 052D  
                  __end_of___lwmod 05D7                              i1l197 0118  
                ?_ds1307_read_addr 0070                    ___awdiv@counter 0075  
                            _TMR1H 0017                update_clock@up_down 002D  
                            _TMR1L 0016                      __CFG_PWRTE$ON 0000  
               ??_ds1307_read_addr 0073             _mcp23017_ioa_send_byte 0C57  
    __size_ofi1_mcp23017_write_reg 0015                       i1__send_byte 0CEE  
             __end_of__send_nibble 1000                __set_4bit_interface 0D3E  
                  __end_of_dpowers 060A                       ?_keypad_init 0070  
                     ?_keypad_scan 0070                    __end_of_isdigit 0CC2  
                      ?i1_i2c_wait 0070                        ?i1_i2c_stop 0070  
          ??_ds1307_switch_to_12hr 007D            ??_ds1307_switch_to_24hr 007D  
      __size_ofi1_i2c_send_address 000D                     ?_i2c_read_data 0070  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                ?_ds1307_set_clock 0070                  ?_ds1307_set_pm_am 0070  
                ?_ds1307_set_hours 0070                    __end_of_tmr_isr 00D4  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                  ?_ds1307_set_month 0070  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                  __end_of_sprintf 032A                 ??_ds1307_set_clock 0078  
               ??_ds1307_set_pm_am 0070                 ??_ds1307_set_hours 007A  
               ??_ds1307_set_month 007A        __size_ofi1_ds1307_get_clock 003E  
                    ??_ds1307_init 00A5                     ??_i2c_send_ack 00A0  
                     lcd_write@str 0020            __end_ofi1_lcd_backlight 0C4E  
                  update_clock@val 002E            mcp23017_write_reg@value 00A3  
                   ?_i2c_send_data 0070                     __CFG_MCLRE$OFF 0000  
              ds1307_set_year@year 007B                    __initialization 00D6  
             ?__set_4bit_interface 0070                       __end_of_main 0FA7  
                     __end_of_init 07BD                    _g_slave_addr_7b 00C8  
                 __end_of_i2c_init 051A                   __end_of_i2c_wait 0C2C  
                 __end_of_i2c_stop 0BFF                    i1write_t1@value 0070  
              __end_of_i2c_restart 0BF5                             ??_main 00B6  
                           ??_init 00A5          i1mcp23017_write_reg@value 0073  
               _g_slave_address_7b 00C9            mcp23017_init@address_3b 00A2  
       __end_of_ds1307_set_hr_mode 0DAA                     __CFG_PLLEN$OFF 0000  
           __size_ofi1_lcd_command 0010         __end_of_ds1307_set_minutes 0C9A  
       __end_of_ds1307_set_seconds 0D60                   ___awdiv@dividend 0072  
                           i1l2115 0C17                             i1l2211 04A5  
                           i1l3005 0F2B                             i1l2221 04C0  
                           i1l2145 07F1                             i1l2225 04C8  
                           i1l2217 04B7                             i1l2209 0499  
                           i1l2241 065A                             i1l3041 001E  
                           i1l2251 066C                             i1l3043 0023  
                           i1l2149 07F7                             i1l2237 0653  
                           i1l3053 0038                             i1l3061 005A  
                           i1l2431 0769                             i1l2415 0CC0  
                           i1l2263 0689                             i1l2255 0678  
                           i1l3055 003D                             i1l3047 002D  
                           i1l3039 0019                             i1l2441 0784  
                           i1l2193 0486                             i1l2249 0660  
                           i1l3049 0030                             i1l2363 0E51  
                           i1l2259 0681                             i1l3059 0047  
                           i1l2437 077B                             i1l2429 075D  
                           i1l2453 05AF                             i1l2293 0DB4  
                           i1l2455 05BB                             i1l2463 05D0  
                           i1l2199 0491                             i1l2375 0E3D  
                           i1l3095 00CF                             i1l2625 0575  
                           i1l2385 0FC2                             i1l2459 05C7  
                           i1l2651 0278                             i1l2635 0243  
                           i1l2491 0ED3                             i1l2619 0565  
                           i1l2485 0EC7                             i1l2397 0DA3  
                           i1l2573 07DA                             i1l2901 0122  
                           i1l2655 027D                             i1l2647 0251  
                           i1l2495 0EDB                             i1l2591 052F  
                           i1l2911 0136                             i1l2681 02CD  
                           i1l2673 02AE                             i1l2657 0292  
                           i1l2649 0275                             i1l2497 0EDD  
                           i1l2921 017C                             i1l2913 0138  
                           i1l2667 02A8                             i1l2595 0534  
                           i1l2579 07E6                             i1l2923 0199  
                           i1l2907 012E                             i1l2685 02DA  
                           i1l2933 01FC                             i1l2925 01B7  
                           i1l2917 0142                             i1l2695 02E6  
                           i1l2599 053D                             i1l2791 0747  
                           i1l2783 0731                             i1l2927 01D5  
                           i1l2919 015F                             i1l2697 0221  
                           i1l2929 01F2                             i1l2937 0200  
                           i1l2699 0325                             i1l2971 03F3  
                           i1l2955 0EB6                             i1l2947 0EA8  
                           i1l2939 0218                             i1l2883 00EF  
                           i1l2957 0EBA                             i1l2981 0F06  
                           i1l2975 0402                             i1l2959 0EBB  
                           i1l2983 0F07                             i1l2895 0110  
                           i1l2985 0F09                             i1l2993 0F12  
                           i1l2987 0F0B                             i1l2995 0F20  
                           u213_25 02C3                             i1l2989 0F10  
                           u141_25 04A6                             u142_25 04B0  
                           u135_25 0D8F                             u143_25 04B8  
                           u151_25 0672                             u152_25 0679  
                           u171_25 076A                             u139_25 049C  
                           u172_25 0774                             u156_25 05A2  
                           u173_25 077C                             u181_25 0CF2  
                           u149_25 0663                             u176_25 05B2  
                           u264_27 0D1B            ??_ds1307_time_formatted 0035  
                           u169_25 0760                             u265_27 0D0B  
                           u178_25 05C1                             u266_27 0F68  
                           u179_25 05C8                             u267_27 0F76  
                           _SSPADD 0212                             _SSPBUF 0211  
            ds1307_get_hours@hours 0079                 __size_of_i2c_start 0005  
                    ?_ds1307_is_pm 0070                      dec_to_bcd@dec 0079  
                  i1_i2c_read_data 0CC2            _ds1307_set_day_of_month 0D1E  
                 __end_of_lcd_data 0D1E              ??__set_4bit_interface 00A9  
                ??_keypad_read_key 0076                   __end_of_lcd_goto 0F2A  
             __size_of_lcd_command 0012                             ___bmul 07EF  
                        ??___awdiv 0074                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___lldiv 00A8  
                        ??___lwdiv 0074                          ??___lwmod 007C  
         ?_ds1307_get_day_of_month 0070                        ?i1_write_t1 0070  
                i1i2c_send_ack@ack 0070                __end_of_ds1307_init 0BC9  
              __size_ofi1_i2c_wait 0007                __size_ofi1_i2c_stop 0005  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  i1_i2c_send_data 0C1E            __size_ofi1__send_nibble 002B  
                  ___awmod@counter 0075                       ?i1_i2c_start 0070  
      __size_of_mcp23017_write_reg 0018                   _g_last_valid_key 0058  
                        ??_isdigit 0070                          ??_tmr_isr 003C  
                 ??_lcd_initialize 00B2                    ??_i2c_read_data 00A0  
                        ??_sprintf 0028                i1__send_nibble@data 0078  
                 __end_of_write_t1 0C80         __end_of_ds1307_start_clock 0DFD  
          __end_of__initialization 00E2         ds1307_switch_to_12hr@pm_am 0027  
               _ds1307_get_minutes 0BD7                 _ds1307_get_seconds 0C05  
                   ??_ds1307_is_pm 007A                    ??_i2c_send_data 00A0  
                   init@load_value 00A2                      i1_lcd_command 0CFE  
                 ?i1_lcd_backlight 0070                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070             __size_of_mcp23017_init 0006  
                      _i2c_restart 0BF0                ?_ds1307_get_minutes 0070  
              ?_ds1307_get_seconds 0070         ds1307_switch_to_24hr@pm_am 0027  
                  _ds1307_get_year 0BD2                 lcd_flags_set@flags 00AD  
                       _bcd_to_dec 0D84                 lcd_flags_set@index 00B1  
               lcd_flags_set@value 00AE                  __end_of_i2c_start 0BFA  
                _ds1307_stop_clock 0DFD              __size_of__send_nibble 002D  
               ?_ds1307_stop_clock 0070               __end_of_i2c_send_ack 0CB4  
             ??_ds1307_get_minutes 0078               ??_ds1307_get_seconds 0078  
                i1__send_byte@data 007A                 __size_of_lcd_write 0027  
                _ds1307_write_addr 0DBE                    _ds1307_set_year 0C9A  
                       _dec_to_bcd 057B                _ds1307_is_12hr_mode 0BDC  
                       __pbssBANK0 0055                         __pbssBANK1 00B7  
              ??_ds1307_stop_clock 0076                 ?_ds1307_write_addr 0073  
             __size_of_keypad_init 001B            __end_ofi1_i2c_read_data 0CD0  
             __size_of_keypad_scan 0004               i1lcd_command@command 007C  
                        ?_i2c_init 00AE                __size_ofi1_write_t1 0008  
                        ?_i2c_wait 0070                          ?_i2c_stop 0070  
                       _adjust_val 0EBD          ??_ds1307_set_day_of_month 007A  
                   ?i1_lcd_command 0070              _ds1307_date_formatted 05D7  
                       _g_counter1 0057    __end_of_ds1307_get_day_of_month 0C05  
              ??_ds1307_write_addr 0074                        _ds1307_init 0BC6  
                       __pmaintext 0F7C            __end_ofi1_i2c_send_data 0C25  
                       __send_byte 0D60               ds1307_read_addr@addr 0074  
                       _g_reg_data 00B7              __end_ofi1_i2c_restart 0BE6  
                          ?___bmul 0070                         _g_reg_ctrl 00C7  
                     __send_nibble 0FD3                         __pintentry 0004  
             ?_ds1307_is_12hr_mode 0070   __size_of_mcp23017_set_slave_addr 0008  
        __size_of_i2c_send_address 000F          __end_of_ds1307_stop_clock 0E13  
          ?_mcp23017_ioa_send_byte 0070                            _LCDPort 00C6  
        __size_of_ds1307_get_clock 0043          __size_of_ds1307_get_hours 0014  
        __size_of_ds1307_get_month 0005          __end_of_ds1307_write_addr 0DD2  
                    _mcp23017_init 0C0B                            _SSPCON1 0215  
                          _SSPCON2 0216                          ?_lcd_data 0070  
                     ??i1_i2c_wait 0070                          ?_lcd_goto 007D  
                     ??i1_i2c_stop 0070                         ??_i2c_init 00B2  
                       ??_i2c_wait 00A0     __size_of_ds1307_switch_to_12hr 0031  
                       ??_i2c_stop 00A0     __size_of_ds1307_switch_to_24hr 0032  
    __end_of_ds1307_switch_to_12hr 054B      __end_of_ds1307_switch_to_24hr 07EF  
        __size_of_ds1307_read_addr 0024              __end_of_lcd_backlight 0C69  
     __end_ofi1_mcp23017_write_reg 0DE7            __end_of_ds1307_get_year 0BD7  
            ds1307_stop_clock@tsec 0077                    __size_of___bmul 0011  
                          ___awdiv 047C                            ___awmod 0649  
            ??_ds1307_is_12hr_mode 0070                  __end_of_lcd_write 0F51  
                          ___lldiv 0429                            ___lwdiv 0755  
                          ___lwmod 05A9            __size_ofi1_i2c_send_ack 000B  
         lcd_flags_set@instruction 00B0          __size_of_ds1307_set_clock 0030  
                   i1__send_nibble 0F51          __size_of_ds1307_set_pm_am 0019  
        __size_of_ds1307_set_hours 002C     __end_of_mcp23017_ioa_send_byte 0C60  
        __size_of_ds1307_set_month 0010                 __end_ofi1_i2c_wait 0C1E  
               __end_ofi1_i2c_stop 0BF0                        ?_bcd_to_dec 0070  
                          __ptext1 0C0B                            __ptext2 0C34  
                          __ptext3 032A                            __ptext4 0690  
                          __ptext5 0D72                            __ptext6 0D60  
                          __ptext7 0C60                            __ptext8 0D3E  
                          __ptext9 0FD3                          ?_write_t1 00A0  
            ds1307_set_pm_am@pm_am 0071                          _T1CONbits 0018  
          __end_of_ds1307_set_year 0CA7                            _dpowers 0600  
             __end_of_ds1307_is_pm 0E5E                            _isdigit 0CB4  
__size_ofi1_mcp23017_ioa_send_byte 0009               __size_ofi1_i2c_start 0005  
                 ___awmod@dividend 0072          ?i1_mcp23017_ioa_send_byte 0070  
            __end_of_lcd_flags_set 06D4                     ?_mcp23017_init 0070  
            ds1307_set_hours@hours 007C         __end_ofi1_i2c_send_address 0C8D  
                          _tmr_isr 0004                         ??_lcd_data 007B  
                          _sprintf 021B                            clrloop0 0C12  
                      ?_dec_to_bcd 0070                         ??_lcd_goto 0020  
             end_of_initialization 00E2                    _keypad_read_key 0E9B  
                 ?i1_i2c_read_data 0070         __end_ofi1_ds1307_get_clock 0755  
                      ?_adjust_val 0070                 _ds1307_set_hr_mode 0D97  
                  ??i1_lcd_command 007B     __size_of_ds1307_time_formatted 006D  
           ?_ds1307_date_formatted 0070      __end_of_ds1307_time_formatted 0429  
               _ds1307_set_minutes 0C8D                 _ds1307_set_seconds 0D4E  
                  ___lldiv@divisor 00A0                    ___lldiv@counter 00AD  
            ds1307_set_minutes@min 007B              ds1307_set_seconds@sec 007C  
    mcp23017_write_reg@reg_address 00A4                ?_ds1307_set_hr_mode 0070  
                      ?__send_byte 0070                   ?i1_i2c_send_data 0070  
           __end_ofi1__send_nibble 0F7C                ?_ds1307_set_minutes 0070  
              ?_ds1307_set_seconds 0070                    adjust_val@value 0074  
                     __pstringtext 0600                       ??i1_write_t1 0072  
       __size_of_ds1307_stop_clock 0016            i2c_send_address@address 00A2  
                   _g_reload_value 00C4              __size_of_i2c_send_ack 000D  
            ds1307_set_month@month 007B                         ??_write_t1 00A2  
                 __CFG_FOSC$INTOSC 0000         __size_of_ds1307_write_addr 0014  
                        _TRISAbits 008C               ??_ds1307_set_hr_mode 0070  
 __size_of_ds1307_get_day_of_month 0006          i1i2c_send_address@address 0072  
             ??_ds1307_set_minutes 007A               ??_ds1307_set_seconds 007A  
                i2c_send_data@data 00A0        __end_of__set_4bit_interface 0D4E  
               __end_ofi1_write_t1 0C34                __size_of_bcd_to_dec 0013  
                    ??_lcd_command 00AB                    lcd_initialize@i 00B4  
                       lcd_write@i 007D                       _i2c_send_ack 0CA7  
                 ?_ds1307_get_year 0070                      ?_update_clock 0070  
                     ?_i2c_restart 0070    ds1307_date_formatted@p_str_date 003B  
          _mcp23017_set_slave_addr 0C34                    ?i1__send_nibble 0070  
               _ds1307_start_clock 0DE7                     __end_of___bmul 0800  
       __end_of_mcp23017_write_reg 0E2B                __size_of_dec_to_bcd 002E  
                 _i2c_send_address 0CDF  mcp23017_set_slave_addr@address_3b 00A1  
              __size_of_adjust_val 0022                    ??_mcp23017_init 00A2  
              ?_ds1307_start_clock 0070                   ?_ds1307_set_year 0070  
                 _ds1307_get_clock 06D4            __end_of_keypad_read_key 0EBD  
              start_initialization 00D6                  ds1307_get_clock@r 00A4  
                 _ds1307_get_hours 0DAA                   _ds1307_get_month 0BCD  
                   update_clock@pm 002C                          _i2c_start 0BF5  
             i1_mcp23017_write_reg 0DD2                __size_of__send_byte 0012  
            __end_of_i2c_read_data 0CDF       mcp23017_read_reg@reg_address 0074  
               lcd_command@command 00AC                   _ds1307_read_addr 0EDF  
                      tmr_isr@date 003F                        tmr_isr@time 0049  
             ??_ds1307_start_clock 0076                  __size_of_i2c_init 004B  
                __size_of_i2c_wait 0007                  __size_of_i2c_stop 0005  
                     ?_ds1307_init 0070                     ??_update_clock 0029  
            __end_of_i2c_send_data 0C57                           ??___bmul 0071  
                   i1_i2c_send_ack 0C69                __end_of_lcd_command 0D84  
  ds1307_time_formatted@p_str_time 003B                   _ds1307_set_clock 054B  
            __size_of_ds1307_is_pm 001A                   _ds1307_set_pm_am 0E2B  
                 _ds1307_set_hours 0FA7                   _ds1307_set_month 0D2E  
  i1mcp23017_write_reg@reg_address 0074           __size_ofi1_lcd_backlight 0009  
                  i2c_send_ack@ack 00A0             ds1307_start_clock@tsec 0077  
                        ___latbits 0001                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0              ?i1_mcp23017_write_reg 0073  
                    ?i1__send_byte 0070                         ?_i2c_start 0070  
              __end_of__stringdata 0649                      ??_keypad_init 00A5  
                    ??_keypad_scan 0076        __size_of_ds1307_get_minutes 0005  
      __size_of_ds1307_get_seconds 0006                       _isdigit$1061 0070  
             i1lcd_backlight@state 0076                  __size_of_lcd_data 0010  
                __size_of_lcd_goto 0027                  ds1307_is_pm@is_pm 007C  
                      sprintf@_val 002E                        sprintf@flag 002C  
                      sprintf@prec 0033                          _g_clk_pos 0056  
                     _ds1307_is_pm 0E44          ??_mcp23017_set_slave_addr 00A0  
                    init@prescaler 00A4            __size_of_lcd_initialize 0092  
                 ___lwdiv@dividend 0072             __end_ofi1_i2c_send_ack 0C74  
                        _g_old_key 0059   __end_ofi1_mcp23017_ioa_send_byte 0C45  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 00A0                           ?___lwdiv 0070  
                         ?___lwmod 0078                       ??_bcd_to_dec 0074  
         i1i2c_read_data@read_data 0071                          _lcd_write 0F2A  
                         ?_isdigit 0070                  __size_of_write_t1 000C  
                 ?_keypad_read_key 0070                     ??i1__send_byte 0079  
          _ds1307_get_day_of_month 0BFF                   ___lwdiv@quotient 0075  
                         ?_tmr_isr 0070                       ??_dec_to_bcd 0020  
                         ?_sprintf 0020             __size_ofi1_i2c_restart 0005  
         ?_ds1307_set_day_of_month 0070            ??_ds1307_date_formatted 0035  
                  __send_byte@data 00AA                       ??_adjust_val 0073  
              __end_of_keypad_init 0E79                __end_of_keypad_scan 0BCD  
                        clear_ram0 0C11                           _PIE1bits 0091  
      __end_of_ds1307_is_12hr_mode 0BE1                 __end_of_bcd_to_dec 0D97  
                      _lcd_command 0D72              _ds1307_switch_to_12hr 051A  
            _ds1307_switch_to_24hr 07BD                 i1_i2c_send_address 0C80  
           ds1307_set_hr_mode@mode 0071                           _PIR1bits 0011  
                     ??__send_byte 00A9                    ?i1_i2c_send_ack 0070  
                         _SSP1CON2 0216                 i1_ds1307_get_clock 0717  
             __size_of_i2c_restart 0005                ?i1_i2c_send_address 0070  
               __end_of_dec_to_bcd 05A9                      ??i1_i2c_start 0070  
                      __stringdata 060A                         ?_lcd_write 0020  
               keypad_read_key@key 0077                ?i1_ds1307_get_clock 0070  
               __end_of_adjust_val 0EDF    __end_of_mcp23017_set_slave_addr 0C3C  
           ??i1_mcp23017_write_reg 0074             __size_of_lcd_backlight 0009  
                ds1307_set_clock@r 0079                  ??i1_lcd_backlight 0076  
             __end_of_update_clock 021B                        ??_i2c_start 00A0  
         ds1307_switch_to_12hr@hrs 0028           ds1307_switch_to_24hr@hrs 0028  
               __end_of__send_byte 0D72               ??i1_i2c_send_address 0071  
       ds1307_read_addr@read_value 0075           __end_of_i2c_send_address 0CEE  
                         _i2c_init 04CF                           _i2c_wait 0C25  
                         _i2c_stop 0BFA               ??i1_ds1307_get_clock 0073  
                 ??i1__send_nibble 0076              __end_ofi1_lcd_command 0D0E  
                       tmr_isr@pos 0053           __end_of_ds1307_get_clock 0717  
         __end_of_ds1307_get_hours 0DBE           __end_of_ds1307_get_month 0BD2  
            _ds1307_time_formatted 03BC             __size_of_lcd_flags_set 0044  
         __size_ofi1_i2c_read_data 000E               __size_of_ds1307_init 0003  
                    i1_i2c_restart 0BE1                   __size_of___awdiv 0053  
                 __size_of___awmod 0047                   __size_of___lldiv 0053  
                 __size_of___lwdiv 0036                   __size_of___lwmod 002E  
                 i2c_init@clock_hz 00AE           i1_mcp23017_ioa_send_byte 0C3C  
         __end_of_ds1307_read_addr 0F03                         _ANSELAbits 018C  
         __size_ofi1_i2c_send_data 0007          ??_ds1307_get_day_of_month 0078  
                    bcd_to_dec@bcd 0077    __end_of_ds1307_set_day_of_month 0D2E  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0070  
      __size_of_ds1307_set_hr_mode 0013                __end_ofi1_i2c_start 0BEB  
                  ___lwdiv@counter 0077                           __ptext10 0C57  
               _mcp23017_write_reg 0E13                           __ptext11 0E5E  
                         __ptext20 0BF5                           __ptext12 0E13  
                         __ptext21 0C4E                           __ptext13 078B  
                         __ptext30 00E6                           __ptext22 0CDF  
                         __ptext14 0C74                           __ptext31 0717  
                         __ptext23 0CA7                           __ptext15 04CF  
                         __ptext40 0C8D                           __ptext32 07BD  
                         __ptext24 0BF0                           __ptext16 0429  
                         __ptext41 0D1E                           __ptext33 051A  
                         __ptext25 0CD0                           __ptext17 0BC6  
                         __ptext50 0C69                           __ptext42 057B  
                         __ptext34 0E2B                           __ptext26 0C25  
                         __ptext18 06D4                           __ptext51 0EBD  
                         __ptext43 0649                           __ptext35 0D97  
                         __ptext19 0BFA                           __ptext60 0E9B  
                         __ptext52 0F2A                           __ptext44 047C  
                         __ptext36 0FA7                           __ptext28 0C2C  
                         __ptext61 0BC9                           __ptext53 0D0E  
                         __ptext45 054B                           __ptext37 0C9A  
                         __ptext29 0C45                           __ptext70 03BC  
                         __ptext62 0E79                           __ptext54 0F03  
                         __ptext46 0DFD                           __ptext38 0D4E  
                         __ptext71 0E44                           __ptext63 0BEB  
                         __ptext55 0CFE                           __ptext47 0DE7  
                         __ptext39 0D2E                           __ptext80 0755  
                         __ptext72 0DAA                           __ptext64 0BE6  
                         __ptext56 0CEE                           __ptext48 0DBE  
                         __ptext81 0BD2                           __ptext73 0BDC  
                         __ptext65 0C1E                           __ptext57 0F51  
                         __ptext49 0EDF                           __ptext82 0BCD  
                         __ptext74 0C05                           __ptext66 0C80  
                         __ptext58 0C3C                           __ptext83 0BFF  
                         __ptext75 0BD7                           __ptext67 0BE1  
                         __ptext59 0DD2                           __ptext84 0D84  
                         __ptext76 05D7                           __ptext68 0CC2  
                         __ptext85 07EF                           __ptext77 021B  
                         __ptext69 0C17                           __ptext78 0CB4  
                         __ptext79 05A9                       _SSP1CON2bits 0216  
                         _lcd_data 0D0E                        _keypad_init 0E5E  
                      _keypad_scan 0BC9        __size_of_ds1307_set_minutes 000D  
      __size_of_ds1307_set_seconds 0012                           _lcd_goto 0F03  
                 __size_of_tmr_isr 00D0                   __size_of_sprintf 010F  
         __end_of_ds1307_set_clock 057B           __end_of_ds1307_set_pm_am 0E44  
         __end_of_ds1307_set_hours 0FD3           __end_of_ds1307_set_month 0D3E  
              ?_mcp23017_write_reg 00A3                      __size_of_main 002B  
                    __size_of_init 0032             ?_ds1307_switch_to_12hr 0070  
           ?_ds1307_switch_to_24hr 0070                     _lcd_initialize 032A  
                    _lcd_backlight 0C60           ??_mcp23017_ioa_send_byte 00A5  
             __end_ofi1__send_byte 0CFE         ds1307_set_day_of_month@dom 007B  
                   ?i1_i2c_restart 0070       __size_of__set_4bit_interface 0010  
                    ?__send_nibble 0070                  __send_nibble@data 00A8  
              i1i2c_send_data@data 0070               ??_mcp23017_write_reg 00A4  
                _mcp23017_read_reg 0E79                        ??_lcd_write 0022  
                         _write_t1 0C74           __size_of_ds1307_get_year 0005  
           ds1307_write_addr@value 0073                 ?_mcp23017_read_reg 0070  
                       _INTCONbits 000B                  adjust_val@lim_dwn 0070  
            __end_of_mcp23017_init 0C11                      _lcd_flags_set 0690  
                         isdigit@c 0071                        pic14e$flags 007E  
                adjust_val@up_down 0072                 lcd_backlight@state 00A6  
              ??_mcp23017_read_reg 0073                           intlevel1 0000  
                        sprintf@ap 002D           __size_of_ds1307_set_year 000D  
                        sprintf@sp 0032                   ___lwmod@dividend 007A  
           __end_of_lcd_initialize 03BC                   ___lldiv@dividend 00A4  
                __CFG_CLKOUTEN$OFF 0000        __size_of_ds1307_start_clock 0016  
           ?_ds1307_time_formatted 0070                     ?_lcd_backlight 0070  
              i1ds1307_get_clock@r 0074                         _OSCCONbits 0099  
                   ??__send_nibble 00A6              ds1307_write_addr@addr 0074  
        __end_of_mcp23017_read_reg 0E9B                   adjust_val@lim_up 0071  
           __size_of_i2c_read_data 000F                        i1_i2c_start 0BE6  
            __size_of_update_clock 0135                  ??i1_i2c_read_data 0070  
                         sprintf@c 0034                           sprintf@f 0020  
                 ___lldiv@quotient 00A9                    ___lwmod@divisor 0078  
                   _display_config 00BE         __end_of_ds1307_get_minutes 0BDC  
       __end_of_ds1307_get_seconds 0C0B             mcp23017_read_reg@value 0075  
                  ___lwmod@counter 007D                     ?_lcd_flags_set 00AD  
           i2c_read_data@read_data 00A1             __size_of_i2c_send_data 0009  
                ??i1_i2c_send_data 0070                         i1_i2c_wait 0C17  
                       i1_i2c_stop 0BEB     __size_of_ds1307_date_formatted 0028  
    __end_of_ds1307_date_formatted 05FF                   ??i1_i2c_send_ack 0070  
                  ?_lcd_initialize 0070             i1i2c_send_address@mode 0070  
                     ?_lcd_command 0070                    ??i1_i2c_restart 0070  
                    write_t1@value 00A0  

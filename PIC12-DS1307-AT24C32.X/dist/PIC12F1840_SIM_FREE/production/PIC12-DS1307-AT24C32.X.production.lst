

Microchip Technology PIC LITE Macro Assembler V1.32 build 58300 
                                                                                               Sat Aug 16 14:04:45 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2
    33                           	psect	text21,local,class=CODE,merge=1,delta=2
    34                           	psect	text22,local,class=CODE,merge=1,delta=2
    35                           	psect	text23,local,class=CODE,merge=1,delta=2
    36                           	psect	text24,local,class=CODE,merge=1,delta=2
    37                           	psect	text25,local,class=CODE,merge=1,delta=2
    38                           	psect	text26,local,class=CODE,merge=1,delta=2
    39                           	psect	intentry,global,class=CODE,delta=2
    40                           	psect	text28,local,class=CODE,merge=1,delta=2
    41                           	psect	text29,local,class=CODE,merge=1,delta=2
    42                           	psect	text30,local,class=CODE,merge=1,delta=2
    43                           	psect	text31,local,class=CODE,merge=1,delta=2
    44                           	psect	text32,local,class=CODE,merge=1,delta=2
    45                           	psect	text33,local,class=CODE,merge=1,delta=2
    46                           	psect	text34,local,class=CODE,merge=1,delta=2
    47                           	psect	text35,local,class=CODE,merge=1,delta=2
    48                           	psect	text36,local,class=CODE,merge=1,delta=2
    49                           	psect	text37,local,class=CODE,merge=1,delta=2
    50                           	psect	text38,local,class=CODE,merge=1,delta=2
    51                           	psect	text39,local,class=CODE,merge=1,delta=2
    52                           	psect	text40,local,class=CODE,merge=1,delta=2
    53                           	psect	text41,local,class=CODE,merge=1,delta=2
    54                           	psect	text42,local,class=CODE,merge=1,delta=2
    55                           	psect	text43,local,class=CODE,merge=1,delta=2
    56                           	psect	text44,local,class=CODE,merge=1,delta=2
    57                           	psect	text45,local,class=CODE,merge=1,delta=2
    58                           	psect	text46,local,class=CODE,merge=1,delta=2
    59                           	psect	text47,local,class=CODE,merge=1,delta=2
    60                           	psect	text48,local,class=CODE,merge=1,delta=2
    61                           	psect	text49,local,class=CODE,merge=1,delta=2
    62                           	psect	text50,local,class=CODE,merge=1,delta=2
    63                           	psect	text51,local,class=CODE,merge=1,delta=2
    64                           	psect	text52,local,class=CODE,merge=1,delta=2
    65                           	psect	text53,local,class=CODE,merge=1,delta=2
    66                           	psect	text54,local,class=CODE,merge=1,delta=2
    67                           	psect	text55,local,class=CODE,merge=1,delta=2
    68                           	psect	text56,local,class=CODE,merge=1,delta=2
    69                           	psect	text57,local,class=CODE,merge=1,delta=2
    70                           	psect	text58,local,class=CODE,merge=1,delta=2
    71                           	psect	text59,local,class=CODE,merge=1,delta=2
    72                           	psect	text60,local,class=CODE,merge=1,delta=2
    73                           	psect	text61,local,class=CODE,merge=1,delta=2
    74                           	psect	text62,local,class=CODE,merge=1,delta=2
    75                           	psect	text63,local,class=CODE,merge=1,delta=2
    76                           	psect	text64,local,class=CODE,merge=1,delta=2
    77                           	psect	text65,local,class=CODE,merge=1,delta=2
    78                           	psect	text66,local,class=CODE,merge=1,delta=2
    79                           	psect	text67,local,class=CODE,merge=1,delta=2
    80                           	psect	text68,local,class=CODE,merge=1,delta=2
    81                           	psect	text69,local,class=CODE,merge=1,delta=2
    82                           	psect	text70,local,class=CODE,merge=1,delta=2
    83                           	psect	text71,local,class=CODE,merge=1,delta=2
    84                           	psect	text72,local,class=CODE,merge=1,delta=2
    85                           	psect	text73,local,class=CODE,merge=1,delta=2
    86                           	psect	text74,local,class=CODE,merge=1,delta=2
    87                           	psect	text75,local,class=CODE,merge=1,delta=2
    88                           	psect	text76,local,class=CODE,merge=1,delta=2
    89                           	psect	text77,local,class=CODE,merge=1,delta=2
    90                           	psect	text78,local,class=CODE,merge=1,delta=2
    91                           	psect	text79,local,class=CODE,merge=1,delta=2
    92                           	psect	text80,local,class=CODE,merge=1,delta=2
    93                           	psect	text81,local,class=CODE,merge=1,delta=2
    94                           	psect	text82,local,class=CODE,merge=1,delta=2
    95                           	psect	text83,local,class=CODE,merge=1,delta=2
    96                           	psect	text84,local,class=CODE,merge=1,delta=2
    97                           	psect	text85,local,class=CODE,merge=1,delta=2
    98                           	dabs	1,0x7E,2
    99  0000                     	;# 
   100  0001                     	;# 
   101  0002                     	;# 
   102  0003                     	;# 
   103  0004                     	;# 
   104  0005                     	;# 
   105  0006                     	;# 
   106  0007                     	;# 
   107  0008                     	;# 
   108  0009                     	;# 
   109  000A                     	;# 
   110  000B                     	;# 
   111  000C                     	;# 
   112  0011                     	;# 
   113  0012                     	;# 
   114  0015                     	;# 
   115  0016                     	;# 
   116  0016                     	;# 
   117  0017                     	;# 
   118  0018                     	;# 
   119  0019                     	;# 
   120  001A                     	;# 
   121  001B                     	;# 
   122  001C                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  008C                     	;# 
   126  0091                     	;# 
   127  0092                     	;# 
   128  0095                     	;# 
   129  0096                     	;# 
   130  0097                     	;# 
   131  0098                     	;# 
   132  0099                     	;# 
   133  009A                     	;# 
   134  009B                     	;# 
   135  009B                     	;# 
   136  009C                     	;# 
   137  009D                     	;# 
   138  009E                     	;# 
   139  010C                     	;# 
   140  0111                     	;# 
   141  0112                     	;# 
   142  0115                     	;# 
   143  0116                     	;# 
   144  0117                     	;# 
   145  0118                     	;# 
   146  0119                     	;# 
   147  011A                     	;# 
   148  011B                     	;# 
   149  011D                     	;# 
   150  011D                     	;# 
   151  018C                     	;# 
   152  0191                     	;# 
   153  0191                     	;# 
   154  0192                     	;# 
   155  0193                     	;# 
   156  0193                     	;# 
   157  0193                     	;# 
   158  0194                     	;# 
   159  0195                     	;# 
   160  0196                     	;# 
   161  0197                     	;# 
   162  0199                     	;# 
   163  019A                     	;# 
   164  019B                     	;# 
   165  019B                     	;# 
   166  019B                     	;# 
   167  019B                     	;# 
   168  019C                     	;# 
   169  019C                     	;# 
   170  019D                     	;# 
   171  019E                     	;# 
   172  019F                     	;# 
   173  020C                     	;# 
   174  0211                     	;# 
   175  0211                     	;# 
   176  0212                     	;# 
   177  0212                     	;# 
   178  0213                     	;# 
   179  0213                     	;# 
   180  0214                     	;# 
   181  0214                     	;# 
   182  0215                     	;# 
   183  0215                     	;# 
   184  0215                     	;# 
   185  0216                     	;# 
   186  0216                     	;# 
   187  0217                     	;# 
   188  0217                     	;# 
   189  0291                     	;# 
   190  0291                     	;# 
   191  0292                     	;# 
   192  0293                     	;# 
   193  0294                     	;# 
   194  0295                     	;# 
   195  0295                     	;# 
   196  0296                     	;# 
   197  0391                     	;# 
   198  0392                     	;# 
   199  0393                     	;# 
   200  039A                     	;# 
   201  039C                     	;# 
   202  039D                     	;# 
   203  039E                     	;# 
   204  039F                     	;# 
   205  0FE4                     	;# 
   206  0FE5                     	;# 
   207  0FE6                     	;# 
   208  0FE7                     	;# 
   209  0FE8                     	;# 
   210  0FE9                     	;# 
   211  0FEA                     	;# 
   212  0FEB                     	;# 
   213  0FED                     	;# 
   214  0FEE                     	;# 
   215  0FEF                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0015                     	;# 
   232  0016                     	;# 
   233  0016                     	;# 
   234  0017                     	;# 
   235  0018                     	;# 
   236  0019                     	;# 
   237  001A                     	;# 
   238  001B                     	;# 
   239  001C                     	;# 
   240  001E                     	;# 
   241  001F                     	;# 
   242  008C                     	;# 
   243  0091                     	;# 
   244  0092                     	;# 
   245  0095                     	;# 
   246  0096                     	;# 
   247  0097                     	;# 
   248  0098                     	;# 
   249  0099                     	;# 
   250  009A                     	;# 
   251  009B                     	;# 
   252  009B                     	;# 
   253  009C                     	;# 
   254  009D                     	;# 
   255  009E                     	;# 
   256  010C                     	;# 
   257  0111                     	;# 
   258  0112                     	;# 
   259  0115                     	;# 
   260  0116                     	;# 
   261  0117                     	;# 
   262  0118                     	;# 
   263  0119                     	;# 
   264  011A                     	;# 
   265  011B                     	;# 
   266  011D                     	;# 
   267  011D                     	;# 
   268  018C                     	;# 
   269  0191                     	;# 
   270  0191                     	;# 
   271  0192                     	;# 
   272  0193                     	;# 
   273  0193                     	;# 
   274  0193                     	;# 
   275  0194                     	;# 
   276  0195                     	;# 
   277  0196                     	;# 
   278  0197                     	;# 
   279  0199                     	;# 
   280  019A                     	;# 
   281  019B                     	;# 
   282  019B                     	;# 
   283  019B                     	;# 
   284  019B                     	;# 
   285  019C                     	;# 
   286  019C                     	;# 
   287  019D                     	;# 
   288  019E                     	;# 
   289  019F                     	;# 
   290  020C                     	;# 
   291  0211                     	;# 
   292  0211                     	;# 
   293  0212                     	;# 
   294  0212                     	;# 
   295  0213                     	;# 
   296  0213                     	;# 
   297  0214                     	;# 
   298  0214                     	;# 
   299  0215                     	;# 
   300  0215                     	;# 
   301  0215                     	;# 
   302  0216                     	;# 
   303  0216                     	;# 
   304  0217                     	;# 
   305  0217                     	;# 
   306  0291                     	;# 
   307  0291                     	;# 
   308  0292                     	;# 
   309  0293                     	;# 
   310  0294                     	;# 
   311  0295                     	;# 
   312  0295                     	;# 
   313  0296                     	;# 
   314  0391                     	;# 
   315  0392                     	;# 
   316  0393                     	;# 
   317  039A                     	;# 
   318  039C                     	;# 
   319  039D                     	;# 
   320  039E                     	;# 
   321  039F                     	;# 
   322  0FE4                     	;# 
   323  0FE5                     	;# 
   324  0FE6                     	;# 
   325  0FE7                     	;# 
   326  0FE8                     	;# 
   327  0FE9                     	;# 
   328  0FEA                     	;# 
   329  0FEB                     	;# 
   330  0FED                     	;# 
   331  0FEE                     	;# 
   332  0FEF                     	;# 
   333  0000                     	;# 
   334  0001                     	;# 
   335  0002                     	;# 
   336  0003                     	;# 
   337  0004                     	;# 
   338  0005                     	;# 
   339  0006                     	;# 
   340  0007                     	;# 
   341  0008                     	;# 
   342  0009                     	;# 
   343  000A                     	;# 
   344  000B                     	;# 
   345  000C                     	;# 
   346  0011                     	;# 
   347  0012                     	;# 
   348  0015                     	;# 
   349  0016                     	;# 
   350  0016                     	;# 
   351  0017                     	;# 
   352  0018                     	;# 
   353  0019                     	;# 
   354  001A                     	;# 
   355  001B                     	;# 
   356  001C                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  008C                     	;# 
   360  0091                     	;# 
   361  0092                     	;# 
   362  0095                     	;# 
   363  0096                     	;# 
   364  0097                     	;# 
   365  0098                     	;# 
   366  0099                     	;# 
   367  009A                     	;# 
   368  009B                     	;# 
   369  009B                     	;# 
   370  009C                     	;# 
   371  009D                     	;# 
   372  009E                     	;# 
   373  010C                     	;# 
   374  0111                     	;# 
   375  0112                     	;# 
   376  0115                     	;# 
   377  0116                     	;# 
   378  0117                     	;# 
   379  0118                     	;# 
   380  0119                     	;# 
   381  011A                     	;# 
   382  011B                     	;# 
   383  011D                     	;# 
   384  011D                     	;# 
   385  018C                     	;# 
   386  0191                     	;# 
   387  0191                     	;# 
   388  0192                     	;# 
   389  0193                     	;# 
   390  0193                     	;# 
   391  0193                     	;# 
   392  0194                     	;# 
   393  0195                     	;# 
   394  0196                     	;# 
   395  0197                     	;# 
   396  0199                     	;# 
   397  019A                     	;# 
   398  019B                     	;# 
   399  019B                     	;# 
   400  019B                     	;# 
   401  019B                     	;# 
   402  019C                     	;# 
   403  019C                     	;# 
   404  019D                     	;# 
   405  019E                     	;# 
   406  019F                     	;# 
   407  020C                     	;# 
   408  0211                     	;# 
   409  0211                     	;# 
   410  0212                     	;# 
   411  0212                     	;# 
   412  0213                     	;# 
   413  0213                     	;# 
   414  0214                     	;# 
   415  0214                     	;# 
   416  0215                     	;# 
   417  0215                     	;# 
   418  0215                     	;# 
   419  0216                     	;# 
   420  0216                     	;# 
   421  0217                     	;# 
   422  0217                     	;# 
   423  0291                     	;# 
   424  0291                     	;# 
   425  0292                     	;# 
   426  0293                     	;# 
   427  0294                     	;# 
   428  0295                     	;# 
   429  0295                     	;# 
   430  0296                     	;# 
   431  0391                     	;# 
   432  0392                     	;# 
   433  0393                     	;# 
   434  039A                     	;# 
   435  039C                     	;# 
   436  039D                     	;# 
   437  039E                     	;# 
   438  039F                     	;# 
   439  0FE4                     	;# 
   440  0FE5                     	;# 
   441  0FE6                     	;# 
   442  0FE7                     	;# 
   443  0FE8                     	;# 
   444  0FE9                     	;# 
   445  0FEA                     	;# 
   446  0FEB                     	;# 
   447  0FED                     	;# 
   448  0FEE                     	;# 
   449  0FEF                     	;# 
   450  0000                     	;# 
   451  0001                     	;# 
   452  0002                     	;# 
   453  0003                     	;# 
   454  0004                     	;# 
   455  0005                     	;# 
   456  0006                     	;# 
   457  0007                     	;# 
   458  0008                     	;# 
   459  0009                     	;# 
   460  000A                     	;# 
   461  000B                     	;# 
   462  000C                     	;# 
   463  0011                     	;# 
   464  0012                     	;# 
   465  0015                     	;# 
   466  0016                     	;# 
   467  0016                     	;# 
   468  0017                     	;# 
   469  0018                     	;# 
   470  0019                     	;# 
   471  001A                     	;# 
   472  001B                     	;# 
   473  001C                     	;# 
   474  001E                     	;# 
   475  001F                     	;# 
   476  008C                     	;# 
   477  0091                     	;# 
   478  0092                     	;# 
   479  0095                     	;# 
   480  0096                     	;# 
   481  0097                     	;# 
   482  0098                     	;# 
   483  0099                     	;# 
   484  009A                     	;# 
   485  009B                     	;# 
   486  009B                     	;# 
   487  009C                     	;# 
   488  009D                     	;# 
   489  009E                     	;# 
   490  010C                     	;# 
   491  0111                     	;# 
   492  0112                     	;# 
   493  0115                     	;# 
   494  0116                     	;# 
   495  0117                     	;# 
   496  0118                     	;# 
   497  0119                     	;# 
   498  011A                     	;# 
   499  011B                     	;# 
   500  011D                     	;# 
   501  011D                     	;# 
   502  018C                     	;# 
   503  0191                     	;# 
   504  0191                     	;# 
   505  0192                     	;# 
   506  0193                     	;# 
   507  0193                     	;# 
   508  0193                     	;# 
   509  0194                     	;# 
   510  0195                     	;# 
   511  0196                     	;# 
   512  0197                     	;# 
   513  0199                     	;# 
   514  019A                     	;# 
   515  019B                     	;# 
   516  019B                     	;# 
   517  019B                     	;# 
   518  019B                     	;# 
   519  019C                     	;# 
   520  019C                     	;# 
   521  019D                     	;# 
   522  019E                     	;# 
   523  019F                     	;# 
   524  020C                     	;# 
   525  0211                     	;# 
   526  0211                     	;# 
   527  0212                     	;# 
   528  0212                     	;# 
   529  0213                     	;# 
   530  0213                     	;# 
   531  0214                     	;# 
   532  0214                     	;# 
   533  0215                     	;# 
   534  0215                     	;# 
   535  0215                     	;# 
   536  0216                     	;# 
   537  0216                     	;# 
   538  0217                     	;# 
   539  0217                     	;# 
   540  0291                     	;# 
   541  0291                     	;# 
   542  0292                     	;# 
   543  0293                     	;# 
   544  0294                     	;# 
   545  0295                     	;# 
   546  0295                     	;# 
   547  0296                     	;# 
   548  0391                     	;# 
   549  0392                     	;# 
   550  0393                     	;# 
   551  039A                     	;# 
   552  039C                     	;# 
   553  039D                     	;# 
   554  039E                     	;# 
   555  039F                     	;# 
   556  0FE4                     	;# 
   557  0FE5                     	;# 
   558  0FE6                     	;# 
   559  0FE7                     	;# 
   560  0FE8                     	;# 
   561  0FE9                     	;# 
   562  0FEA                     	;# 
   563  0FEB                     	;# 
   564  0FED                     	;# 
   565  0FEE                     	;# 
   566  0FEF                     	;# 
   567  0000                     	;# 
   568  0001                     	;# 
   569  0002                     	;# 
   570  0003                     	;# 
   571  0004                     	;# 
   572  0005                     	;# 
   573  0006                     	;# 
   574  0007                     	;# 
   575  0008                     	;# 
   576  0009                     	;# 
   577  000A                     	;# 
   578  000B                     	;# 
   579  000C                     	;# 
   580  0011                     	;# 
   581  0012                     	;# 
   582  0015                     	;# 
   583  0016                     	;# 
   584  0016                     	;# 
   585  0017                     	;# 
   586  0018                     	;# 
   587  0019                     	;# 
   588  001A                     	;# 
   589  001B                     	;# 
   590  001C                     	;# 
   591  001E                     	;# 
   592  001F                     	;# 
   593  008C                     	;# 
   594  0091                     	;# 
   595  0092                     	;# 
   596  0095                     	;# 
   597  0096                     	;# 
   598  0097                     	;# 
   599  0098                     	;# 
   600  0099                     	;# 
   601  009A                     	;# 
   602  009B                     	;# 
   603  009B                     	;# 
   604  009C                     	;# 
   605  009D                     	;# 
   606  009E                     	;# 
   607  010C                     	;# 
   608  0111                     	;# 
   609  0112                     	;# 
   610  0115                     	;# 
   611  0116                     	;# 
   612  0117                     	;# 
   613  0118                     	;# 
   614  0119                     	;# 
   615  011A                     	;# 
   616  011B                     	;# 
   617  011D                     	;# 
   618  011D                     	;# 
   619  018C                     	;# 
   620  0191                     	;# 
   621  0191                     	;# 
   622  0192                     	;# 
   623  0193                     	;# 
   624  0193                     	;# 
   625  0193                     	;# 
   626  0194                     	;# 
   627  0195                     	;# 
   628  0196                     	;# 
   629  0197                     	;# 
   630  0199                     	;# 
   631  019A                     	;# 
   632  019B                     	;# 
   633  019B                     	;# 
   634  019B                     	;# 
   635  019B                     	;# 
   636  019C                     	;# 
   637  019C                     	;# 
   638  019D                     	;# 
   639  019E                     	;# 
   640  019F                     	;# 
   641  020C                     	;# 
   642  0211                     	;# 
   643  0211                     	;# 
   644  0212                     	;# 
   645  0212                     	;# 
   646  0213                     	;# 
   647  0213                     	;# 
   648  0214                     	;# 
   649  0214                     	;# 
   650  0215                     	;# 
   651  0215                     	;# 
   652  0215                     	;# 
   653  0216                     	;# 
   654  0216                     	;# 
   655  0217                     	;# 
   656  0217                     	;# 
   657  0291                     	;# 
   658  0291                     	;# 
   659  0292                     	;# 
   660  0293                     	;# 
   661  0294                     	;# 
   662  0295                     	;# 
   663  0295                     	;# 
   664  0296                     	;# 
   665  0391                     	;# 
   666  0392                     	;# 
   667  0393                     	;# 
   668  039A                     	;# 
   669  039C                     	;# 
   670  039D                     	;# 
   671  039E                     	;# 
   672  039F                     	;# 
   673  0FE4                     	;# 
   674  0FE5                     	;# 
   675  0FE6                     	;# 
   676  0FE7                     	;# 
   677  0FE8                     	;# 
   678  0FE9                     	;# 
   679  0FEA                     	;# 
   680  0FEB                     	;# 
   681  0FED                     	;# 
   682  0FEE                     	;# 
   683  0FEF                     	;# 
   684                           
   685                           	psect	stringtext
   686  0600                     __pstringtext:	
   687  0600                     _dpowers:	
   688  0600  3401               	retlw	1
   689  0601  3400               	retlw	0
   690  0602  340A               	retlw	10
   691  0603  3400               	retlw	0
   692  0604  3464               	retlw	100
   693  0605  3400               	retlw	0
   694  0606  34E8               	retlw	232
   695  0607  3403               	retlw	3
   696  0608  3410               	retlw	16
   697  0609  3427               	retlw	39
   698  060A                     __end_of_dpowers:	
   699  000B                     _INTCONbits	set	11
   700  0011                     _PIR1bits	set	17
   701  0018                     _T1CONbits	set	24
   702  0017                     _TMR1H	set	23
   703  0016                     _TMR1L	set	22
   704  0099                     _OSCCONbits	set	153
   705  0091                     _PIE1bits	set	145
   706  008C                     _TRISAbits	set	140
   707  018C                     _ANSELAbits	set	396
   708  0216                     _SSP1CON2	set	534
   709  0216                     _SSP1CON2bits	set	534
   710  0212                     _SSPADD	set	530
   711  0211                     _SSPBUF	set	529
   712  0215                     _SSPCON1	set	533
   713  0216                     _SSPCON2	set	534
   714  0214                     _SSPSTATbits	set	532
   715  060A                     __stringdata:	
   716  060A                     STR_5:	
   717  060A  3425               	retlw	37	;'%'
   718  060B  342E               	retlw	46	;'.'
   719  060C  3432               	retlw	50	;'2'
   720  060D  3475               	retlw	117	;'u'
   721  060E  343A               	retlw	58	;':'
   722  060F  3425               	retlw	37	;'%'
   723  0610  342E               	retlw	46	;'.'
   724  0611  3432               	retlw	50	;'2'
   725  0612  3475               	retlw	117	;'u'
   726  0613  343A               	retlw	58	;':'
   727  0614  3425               	retlw	37	;'%'
   728  0615  342E               	retlw	46	;'.'
   729  0616  3432               	retlw	50	;'2'
   730  0617  3475               	retlw	117	;'u'
   731  0618  3420               	retlw	32	;' '
   732  0619  3400               	retlw	0
   733  061A                     STR_6:	
   734  061A  3425               	retlw	37	;'%'
   735  061B  342E               	retlw	46	;'.'
   736  061C  3432               	retlw	50	;'2'
   737  061D  3475               	retlw	117	;'u'
   738  061E  342F               	retlw	47	;'/'
   739  061F  3425               	retlw	37	;'%'
   740  0620  342E               	retlw	46	;'.'
   741  0621  3432               	retlw	50	;'2'
   742  0622  3475               	retlw	117	;'u'
   743  0623  342F               	retlw	47	;'/'
   744  0624  3425               	retlw	37	;'%'
   745  0625  342E               	retlw	46	;'.'
   746  0626  3432               	retlw	50	;'2'
   747  0627  3475               	retlw	117	;'u'
   748  0628  3400               	retlw	0
   749  0629                     STR_4:	
   750  0629  3425               	retlw	37	;'%'
   751  062A  342E               	retlw	46	;'.'
   752  062B  3432               	retlw	50	;'2'
   753  062C  3475               	retlw	117	;'u'
   754  062D  343A               	retlw	58	;':'
   755  062E  3425               	retlw	37	;'%'
   756  062F  342E               	retlw	46	;'.'
   757  0630  3432               	retlw	50	;'2'
   758  0631  3475               	retlw	117	;'u'
   759  0632  343A               	retlw	58	;':'
   760  0633  3425               	retlw	37	;'%'
   761  0634  342E               	retlw	46	;'.'
   762  0635  3432               	retlw	50	;'2'
   763  0636  3475               	retlw	117	;'u'
   764  0637  3400               	retlw	0
   765  0638                     STR_1:	
   766  0638  3454               	retlw	84	;'T'
   767  0639  3469               	retlw	105	;'i'
   768  063A  346D               	retlw	109	;'m'
   769  063B  3465               	retlw	101	;'e'
   770  063C  343A               	retlw	58	;':'
   771  063D  3420               	retlw	32	;' '
   772  063E  3400               	retlw	0
   773  063F                     STR_2:	
   774  063F  3444               	retlw	68	;'D'
   775  0640  3461               	retlw	97	;'a'
   776  0641  3474               	retlw	116	;'t'
   777  0642  3465               	retlw	101	;'e'
   778  0643  343A               	retlw	58	;':'
   779  0644  3420               	retlw	32	;' '
   780  0645  3400               	retlw	0
   781  0646                     STR_3:	
   782  0646  3425               	retlw	37	;'%'
   783  0647  3475               	retlw	117	;'u'
   784  0648  3400               	retlw	0
   785  0649                     __end_of__stringdata:	
   786                           
   787                           ; #config settings
   788  0000                     
   789                           	psect	cinit
   790  00D6                     start_initialization:	
   791  00D6                     __initialization:	
   792                           
   793                           ; Clear objects allocated to BANK0
   794  00D6  01D5               	clrf	__pbssBANK0& (0+127)
   795  00D7  01D6               	clrf	(__pbssBANK0+1)& (0+127)
   796  00D8  01D7               	clrf	(__pbssBANK0+2)& (0+127)
   797  00D9  01D8               	clrf	(__pbssBANK0+3)& (0+127)
   798  00DA  01D9               	clrf	(__pbssBANK0+4)& (0+127)
   799                           
   800                           ; Clear objects allocated to BANK1
   801  00DB  30B7               	movlw	low __pbssBANK1
   802  00DC  0084               	movwf	4
   803  00DD  3000               	movlw	high __pbssBANK1
   804  00DE  0085               	movwf	5
   805  00DF  3013               	movlw	19
   806  00E0  318C  2412         	fcall	clear_ram0
   807  00E2                     end_of_initialization:	
   808                           ;End of C runtime variable initialization code
   809                           
   810  00E2                     __end_of__initialization:	
   811  00E2  107E               	bcf	pic14e$flags,0	;clear compiler interrupt flag
   812  00E3  0020               	movlb	0
   813  00E4  318F  2F7C         	ljmp	_main	;jump to C main() function
   814                           
   815                           	psect	bssBANK0
   816  0055                     __pbssBANK0:	
   817  0055                     _g_bl:	
   818  0055                     	ds	1
   819  0056                     _g_clk_pos:	
   820  0056                     	ds	1
   821  0057                     _g_counter1:	
   822  0057                     	ds	1
   823  0058                     _g_last_valid_key:	
   824  0058                     	ds	1
   825  0059                     _g_old_key:	
   826  0059                     	ds	1
   827                           
   828                           	psect	bssBANK1
   829  00B7                     __pbssBANK1:	
   830  00B7                     _g_reg_data:	
   831  00B7                     	ds	7
   832  00BE                     _display_config:	
   833  00BE                     	ds	6
   834  00C4                     _g_reload_value:	
   835  00C4                     	ds	2
   836  00C6                     _LCDPort:	
   837  00C6                     	ds	1
   838  00C7                     _g_reg_ctrl:	
   839  00C7                     	ds	1
   840  00C8                     _g_slave_addr_7b:	
   841  00C8                     	ds	1
   842  00C9                     _g_slave_address_7b:	
   843  00C9                     	ds	1
   844                           
   845                           	psect	clrtext
   846  0C12                     clear_ram0:	
   847                           ;	Called with FSR0 containing the base address, and
   848                           ;	WREG with the size to clear
   849                           
   850  0C12  0064               	clrwdt	;clear the watchdog before getting into this loop
   851  0C13                     clrloop0:	
   852  0C13  0180               	clrf	0	;clear RAM location pointed to by FSR
   853  0C14  3101               	addfsr 0,1
   854  0C15  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   855  0C16  2C13               	goto	clrloop0	;have we reached the end yet?
   856  0C17  3400               	retlw	0	;all done for this memory range, return
   857                           
   858                           	psect	cstackBANK1
   859  00A0                     __pcstackBANK1:	
   860  00A0                     ??_mcp23017_set_slave_addr:	
   861  00A0                     ?_write_t1:	
   862                           ; 0 bytes @ 0x0
   863                           
   864  00A0                     ??_i2c_wait:	
   865                           ; 0 bytes @ 0x0
   866                           
   867  00A0                     ??_i2c_start:	
   868                           ; 0 bytes @ 0x0
   869                           
   870  00A0                     ??_i2c_restart:	
   871                           ; 0 bytes @ 0x0
   872                           
   873  00A0                     ??_i2c_stop:	
   874                           ; 0 bytes @ 0x0
   875                           
   876  00A0                     ??_i2c_send_ack:	
   877                           ; 0 bytes @ 0x0
   878                           
   879  00A0                     ?_i2c_send_address:	
   880                           ; 0 bytes @ 0x0
   881                           
   882  00A0                     ??_i2c_send_data:	
   883                           ; 0 bytes @ 0x0
   884                           
   885  00A0                     ??_i2c_read_data:	
   886                           ; 0 bytes @ 0x0
   887                           
   888  00A0                     ?___lldiv:	
   889                           ; 0 bytes @ 0x0
   890                           
   891  00A0                     i2c_send_ack@ack:	
   892                           ; 4 bytes @ 0x0
   893                           
   894  00A0                     i2c_send_address@mode:	
   895                           ; 1 bytes @ 0x0
   896                           
   897  00A0                     i2c_send_data@data:	
   898                           ; 1 bytes @ 0x0
   899                           
   900  00A0                     write_t1@value:	
   901                           ; 1 bytes @ 0x0
   902                           
   903  00A0                     ___lldiv@divisor:	
   904                           ; 2 bytes @ 0x0
   905                           
   906                           
   907                           ; 4 bytes @ 0x0
   908  00A0                     	ds	1
   909  00A1                     ??_i2c_send_address:	
   910  00A1                     i2c_read_data@read_data:	
   911                           ; 0 bytes @ 0x1
   912                           
   913  00A1                     mcp23017_set_slave_addr@address_3b:	
   914                           ; 1 bytes @ 0x1
   915                           
   916                           
   917                           ; 1 bytes @ 0x1
   918  00A1                     	ds	1
   919  00A2                     ?_init:	
   920  00A2                     ??_write_t1:	
   921                           ; 0 bytes @ 0x2
   922                           
   923  00A2                     ??_mcp23017_init:	
   924                           ; 0 bytes @ 0x2
   925                           
   926  00A2                     i2c_send_address@address:	
   927                           ; 0 bytes @ 0x2
   928                           
   929  00A2                     mcp23017_init@address_3b:	
   930                           ; 1 bytes @ 0x2
   931                           
   932  00A2                     init@load_value:	
   933                           ; 1 bytes @ 0x2
   934                           
   935                           
   936                           ; 2 bytes @ 0x2
   937  00A2                     	ds	1
   938  00A3                     ??_ds1307_get_clock:	
   939  00A3                     ?_mcp23017_write_reg:	
   940                           ; 0 bytes @ 0x3
   941                           
   942  00A3                     mcp23017_write_reg@value:	
   943                           ; 0 bytes @ 0x3
   944                           
   945                           
   946                           ; 1 bytes @ 0x3
   947  00A3                     	ds	1
   948  00A4                     ??_mcp23017_write_reg:	
   949  00A4                     mcp23017_write_reg@reg_address:	
   950                           ; 0 bytes @ 0x4
   951                           
   952  00A4                     init@prescaler:	
   953                           ; 1 bytes @ 0x4
   954                           
   955  00A4                     ds1307_get_clock@r:	
   956                           ; 1 bytes @ 0x4
   957                           
   958  00A4                     ___lldiv@dividend:	
   959                           ; 1 bytes @ 0x4
   960                           
   961                           
   962                           ; 4 bytes @ 0x4
   963  00A4                     	ds	1
   964  00A5                     ??_keypad_init:	
   965  00A5                     ??_ds1307_init:	
   966                           ; 0 bytes @ 0x5
   967                           
   968  00A5                     ??_init:	
   969                           ; 0 bytes @ 0x5
   970                           
   971  00A5                     ??_mcp23017_ioa_send_byte:	
   972                           ; 0 bytes @ 0x5
   973                           
   974                           
   975                           ; 0 bytes @ 0x5
   976  00A5                     	ds	1
   977  00A6                     ??_lcd_backlight:	
   978  00A6                     ??__send_nibble:	
   979                           ; 0 bytes @ 0x6
   980                           
   981  00A6                     lcd_backlight@state:	
   982                           ; 0 bytes @ 0x6
   983                           
   984                           
   985                           ; 1 bytes @ 0x6
   986  00A6                     	ds	2
   987  00A8                     ??___lldiv:	
   988  00A8                     __send_nibble@data:	
   989                           ; 0 bytes @ 0x8
   990                           
   991                           
   992                           ; 1 bytes @ 0x8
   993  00A8                     	ds	1
   994  00A9                     ??__send_byte:	
   995  00A9                     ??__set_4bit_interface:	
   996                           ; 0 bytes @ 0x9
   997                           
   998  00A9                     ___lldiv@quotient:	
   999                           ; 0 bytes @ 0x9
  1000                           
  1001                           
  1002                           ; 4 bytes @ 0x9
  1003  00A9                     	ds	1
  1004  00AA                     __send_byte@data:	
  1005                           
  1006                           ; 1 bytes @ 0xA
  1007  00AA                     	ds	1
  1008  00AB                     ??_lcd_command:	
  1009                           
  1010                           ; 0 bytes @ 0xB
  1011  00AB                     	ds	1
  1012  00AC                     lcd_command@command:	
  1013                           
  1014                           ; 1 bytes @ 0xC
  1015  00AC                     	ds	1
  1016  00AD                     ?_lcd_flags_set:	
  1017  00AD                     lcd_flags_set@flags:	
  1018                           ; 0 bytes @ 0xD
  1019                           
  1020  00AD                     ___lldiv@counter:	
  1021                           ; 1 bytes @ 0xD
  1022                           
  1023                           
  1024                           ; 1 bytes @ 0xD
  1025  00AD                     	ds	1
  1026  00AE                     ?_i2c_init:	
  1027  00AE                     lcd_flags_set@value:	
  1028                           ; 0 bytes @ 0xE
  1029                           
  1030  00AE                     i2c_init@clock_hz:	
  1031                           ; 1 bytes @ 0xE
  1032                           
  1033                           
  1034                           ; 4 bytes @ 0xE
  1035  00AE                     	ds	1
  1036  00AF                     ??_lcd_flags_set:	
  1037                           
  1038                           ; 0 bytes @ 0xF
  1039  00AF                     	ds	1
  1040  00B0                     lcd_flags_set@instruction:	
  1041                           
  1042                           ; 1 bytes @ 0x10
  1043  00B0                     	ds	1
  1044  00B1                     lcd_flags_set@index:	
  1045                           
  1046                           ; 1 bytes @ 0x11
  1047  00B1                     	ds	1
  1048  00B2                     ??_lcd_initialize:	
  1049  00B2                     ??_i2c_init:	
  1050                           ; 0 bytes @ 0x12
  1051                           
  1052                           
  1053                           ; 0 bytes @ 0x12
  1054  00B2                     	ds	2
  1055  00B4                     lcd_initialize@i:	
  1056                           
  1057                           ; 1 bytes @ 0x14
  1058  00B4                     	ds	2
  1059  00B6                     ??_main:	
  1060                           
  1061                           ; 0 bytes @ 0x16
  1062  00B6                     	ds	1
  1063                           
  1064                           	psect	cstackCOMMON
  1065  0070                     __pcstackCOMMON:	
  1066  0070                     ?_mcp23017_set_slave_addr:	
  1067  0070                     ?_keypad_init:	
  1068                           ; 0 bytes @ 0x0
  1069                           
  1070  0070                     ?_ds1307_init:	
  1071                           ; 0 bytes @ 0x0
  1072                           
  1073  0070                     ?_lcd_initialize:	
  1074                           ; 0 bytes @ 0x0
  1075                           
  1076  0070                     ?_ds1307_stop_clock:	
  1077                           ; 0 bytes @ 0x0
  1078                           
  1079  0070                     ?_ds1307_get_clock:	
  1080                           ; 0 bytes @ 0x0
  1081                           
  1082  0070                     ??_ds1307_is_12hr_mode:	
  1083                           ; 0 bytes @ 0x0
  1084                           
  1085  0070                     ?_ds1307_set_pm_am:	
  1086                           ; 0 bytes @ 0x0
  1087                           
  1088  0070                     ??_ds1307_set_pm_am:	
  1089                           ; 0 bytes @ 0x0
  1090                           
  1091  0070                     ?_ds1307_set_hours:	
  1092                           ; 0 bytes @ 0x0
  1093                           
  1094  0070                     ?_ds1307_set_minutes:	
  1095                           ; 0 bytes @ 0x0
  1096                           
  1097  0070                     ?_ds1307_set_seconds:	
  1098                           ; 0 bytes @ 0x0
  1099                           
  1100  0070                     ?_ds1307_set_month:	
  1101                           ; 0 bytes @ 0x0
  1102                           
  1103  0070                     ?_ds1307_set_day_of_month:	
  1104                           ; 0 bytes @ 0x0
  1105                           
  1106  0070                     ?_ds1307_set_year:	
  1107                           ; 0 bytes @ 0x0
  1108                           
  1109  0070                     ?_ds1307_switch_to_24hr:	
  1110                           ; 0 bytes @ 0x0
  1111                           
  1112  0070                     ?_ds1307_switch_to_12hr:	
  1113                           ; 0 bytes @ 0x0
  1114                           
  1115  0070                     ?_ds1307_set_clock:	
  1116                           ; 0 bytes @ 0x0
  1117                           
  1118  0070                     ?_ds1307_time_formatted:	
  1119                           ; 0 bytes @ 0x0
  1120                           
  1121  0070                     ?_ds1307_date_formatted:	
  1122                           ; 0 bytes @ 0x0
  1123                           
  1124  0070                     ?_lcd_backlight:	
  1125                           ; 0 bytes @ 0x0
  1126                           
  1127  0070                     ?_lcd_data:	
  1128                           ; 0 bytes @ 0x0
  1129                           
  1130  0070                     ?_lcd_command:	
  1131                           ; 0 bytes @ 0x0
  1132                           
  1133  0070                     ?_isdigit:	
  1134                           ; 0 bytes @ 0x0
  1135                           
  1136  0070                     ??_isdigit:	
  1137                           ; 1 bit 
  1138                           
  1139  0070                     ?_i2c_wait:	
  1140                           ; 0 bytes @ 0x0
  1141                           
  1142  0070                     ?_i2c_start:	
  1143                           ; 0 bytes @ 0x0
  1144                           
  1145  0070                     ?_i2c_restart:	
  1146                           ; 0 bytes @ 0x0
  1147                           
  1148  0070                     ?_i2c_stop:	
  1149                           ; 0 bytes @ 0x0
  1150                           
  1151  0070                     ?_i2c_send_ack:	
  1152                           ; 0 bytes @ 0x0
  1153                           
  1154  0070                     ?_i2c_send_data:	
  1155                           ; 0 bytes @ 0x0
  1156                           
  1157  0070                     ?_mcp23017_init:	
  1158                           ; 0 bytes @ 0x0
  1159                           
  1160  0070                     ?_main:	
  1161                           ; 0 bytes @ 0x0
  1162                           
  1163  0070                     ?_update_clock:	
  1164                           ; 0 bytes @ 0x0
  1165                           
  1166  0070                     ?_tmr_isr:	
  1167                           ; 0 bytes @ 0x0
  1168                           
  1169  0070                     ?_ds1307_start_clock:	
  1170                           ; 0 bytes @ 0x0
  1171                           
  1172  0070                     ?_ds1307_set_hr_mode:	
  1173                           ; 0 bytes @ 0x0
  1174                           
  1175  0070                     ??_ds1307_set_hr_mode:	
  1176                           ; 0 bytes @ 0x0
  1177                           
  1178  0070                     ?_mcp23017_ioa_send_byte:	
  1179                           ; 0 bytes @ 0x0
  1180                           
  1181  0070                     ?__send_nibble:	
  1182                           ; 0 bytes @ 0x0
  1183                           
  1184  0070                     ?__send_byte:	
  1185                           ; 0 bytes @ 0x0
  1186                           
  1187  0070                     ?__set_4bit_interface:	
  1188                           ; 0 bytes @ 0x0
  1189                           
  1190  0070                     ?i1_i2c_wait:	
  1191                           ; 0 bytes @ 0x0
  1192                           
  1193  0070                     ??i1_i2c_wait:	
  1194                           ; 0 bytes @ 0x0
  1195                           
  1196  0070                     ?i1_i2c_start:	
  1197                           ; 0 bytes @ 0x0
  1198                           
  1199  0070                     ??i1_i2c_start:	
  1200                           ; 0 bytes @ 0x0
  1201                           
  1202  0070                     ?i1_i2c_restart:	
  1203                           ; 0 bytes @ 0x0
  1204                           
  1205  0070                     ??i1_i2c_restart:	
  1206                           ; 0 bytes @ 0x0
  1207                           
  1208  0070                     ?i1_i2c_stop:	
  1209                           ; 0 bytes @ 0x0
  1210                           
  1211  0070                     ??i1_i2c_stop:	
  1212                           ; 0 bytes @ 0x0
  1213                           
  1214  0070                     ?i1_i2c_send_ack:	
  1215                           ; 0 bytes @ 0x0
  1216                           
  1217  0070                     ??i1_i2c_send_ack:	
  1218                           ; 0 bytes @ 0x0
  1219                           
  1220  0070                     ?i1_i2c_send_address:	
  1221                           ; 0 bytes @ 0x0
  1222                           
  1223  0070                     ?i1_i2c_send_data:	
  1224                           ; 0 bytes @ 0x0
  1225                           
  1226  0070                     ??i1_i2c_send_data:	
  1227                           ; 0 bytes @ 0x0
  1228                           
  1229  0070                     ??i1_i2c_read_data:	
  1230                           ; 0 bytes @ 0x0
  1231                           
  1232  0070                     ?i1_write_t1:	
  1233                           ; 0 bytes @ 0x0
  1234                           
  1235  0070                     ?i1_ds1307_get_clock:	
  1236                           ; 0 bytes @ 0x0
  1237                           
  1238  0070                     ?i1_mcp23017_ioa_send_byte:	
  1239                           ; 0 bytes @ 0x0
  1240                           
  1241  0070                     ?i1__send_nibble:	
  1242                           ; 0 bytes @ 0x0
  1243                           
  1244  0070                     ?i1__send_byte:	
  1245                           ; 0 bytes @ 0x0
  1246                           
  1247  0070                     ?i1_lcd_command:	
  1248                           ; 0 bytes @ 0x0
  1249                           
  1250  0070                     ?i1_lcd_backlight:	
  1251                           ; 0 bytes @ 0x0
  1252                           
  1253  0070                     ?_ds1307_is_12hr_mode:	
  1254                           ; 0 bytes @ 0x0
  1255                           
  1256  0070                     ?_ds1307_get_hours:	
  1257                           ; 1 bytes @ 0x0
  1258                           
  1259  0070                     ?_ds1307_is_pm:	
  1260                           ; 1 bytes @ 0x0
  1261                           
  1262  0070                     ?_ds1307_get_minutes:	
  1263                           ; 1 bytes @ 0x0
  1264                           
  1265  0070                     ?_ds1307_get_seconds:	
  1266                           ; 1 bytes @ 0x0
  1267                           
  1268  0070                     ?_ds1307_get_month:	
  1269                           ; 1 bytes @ 0x0
  1270                           
  1271  0070                     ?_ds1307_get_day_of_month:	
  1272                           ; 1 bytes @ 0x0
  1273                           
  1274  0070                     ?_ds1307_get_year:	
  1275                           ; 1 bytes @ 0x0
  1276                           
  1277  0070                     ?_keypad_read_key:	
  1278                           ; 1 bytes @ 0x0
  1279                           
  1280  0070                     ?_i2c_read_data:	
  1281                           ; 1 bytes @ 0x0
  1282                           
  1283  0070                     ?_mcp23017_read_reg:	
  1284                           ; 1 bytes @ 0x0
  1285                           
  1286  0070                     ?_adjust_val:	
  1287                           ; 1 bytes @ 0x0
  1288                           
  1289  0070                     ?_dec_to_bcd:	
  1290                           ; 1 bytes @ 0x0
  1291                           
  1292  0070                     ?_bcd_to_dec:	
  1293                           ; 1 bytes @ 0x0
  1294                           
  1295  0070                     ?_ds1307_read_addr:	
  1296                           ; 1 bytes @ 0x0
  1297                           
  1298  0070                     ?_keypad_scan:	
  1299                           ; 1 bytes @ 0x0
  1300                           
  1301  0070                     ?___bmul:	
  1302                           ; 1 bytes @ 0x0
  1303                           
  1304  0070                     ?i1_i2c_read_data:	
  1305                           ; 1 bytes @ 0x0
  1306                           
  1307  0070                     ?___awdiv:	
  1308                           ; 1 bytes @ 0x0
  1309                           
  1310  0070                     ?___awmod:	
  1311                           ; 2 bytes @ 0x0
  1312                           
  1313  0070                     ?___lwdiv:	
  1314                           ; 2 bytes @ 0x0
  1315                           
  1316  0070                     adjust_val@lim_dwn:	
  1317                           ; 2 bytes @ 0x0
  1318                           
  1319  0070                     ___bmul@multiplicand:	
  1320                           ; 1 bytes @ 0x0
  1321                           
  1322  0070                     _isdigit$1061:	
  1323                           ; 1 bytes @ 0x0
  1324                           
  1325  0070                     i1i2c_send_ack@ack:	
  1326                           ; 1 bytes @ 0x0
  1327                           
  1328  0070                     i1i2c_send_address@mode:	
  1329                           ; 1 bytes @ 0x0
  1330                           
  1331  0070                     i1i2c_send_data@data:	
  1332                           ; 1 bytes @ 0x0
  1333                           
  1334  0070                     ___awdiv@divisor:	
  1335                           ; 1 bytes @ 0x0
  1336                           
  1337  0070                     ___awmod@divisor:	
  1338                           ; 2 bytes @ 0x0
  1339                           
  1340  0070                     ___lwdiv@divisor:	
  1341                           ; 2 bytes @ 0x0
  1342                           
  1343  0070                     i1write_t1@value:	
  1344                           ; 2 bytes @ 0x0
  1345                           
  1346                           
  1347                           ; 2 bytes @ 0x0
  1348  0070                     	ds	1
  1349  0071                     ??___bmul:	
  1350  0071                     ??i1_i2c_send_address:	
  1351                           ; 0 bytes @ 0x1
  1352                           
  1353  0071                     adjust_val@lim_up:	
  1354                           ; 0 bytes @ 0x1
  1355                           
  1356  0071                     ds1307_set_pm_am@pm_am:	
  1357                           ; 1 bytes @ 0x1
  1358                           
  1359  0071                     ds1307_set_hr_mode@mode:	
  1360                           ; 1 bytes @ 0x1
  1361                           
  1362  0071                     isdigit@c:	
  1363                           ; 1 bytes @ 0x1
  1364                           
  1365  0071                     i1i2c_read_data@read_data:	
  1366                           ; 1 bytes @ 0x1
  1367                           
  1368                           
  1369                           ; 1 bytes @ 0x1
  1370  0071                     	ds	1
  1371  0072                     ??i1_write_t1:	
  1372  0072                     adjust_val@up_down:	
  1373                           ; 0 bytes @ 0x2
  1374                           
  1375  0072                     ___bmul@product:	
  1376                           ; 1 bytes @ 0x2
  1377                           
  1378  0072                     i1i2c_send_address@address:	
  1379                           ; 1 bytes @ 0x2
  1380                           
  1381  0072                     ___awdiv@dividend:	
  1382                           ; 1 bytes @ 0x2
  1383                           
  1384  0072                     ___awmod@dividend:	
  1385                           ; 2 bytes @ 0x2
  1386                           
  1387  0072                     ___lwdiv@dividend:	
  1388                           ; 2 bytes @ 0x2
  1389                           
  1390                           
  1391                           ; 2 bytes @ 0x2
  1392  0072                     	ds	1
  1393  0073                     ??_mcp23017_read_reg:	
  1394  0073                     ??_adjust_val:	
  1395                           ; 0 bytes @ 0x3
  1396                           
  1397  0073                     ??_ds1307_read_addr:	
  1398                           ; 0 bytes @ 0x3
  1399                           
  1400  0073                     ?_ds1307_write_addr:	
  1401                           ; 0 bytes @ 0x3
  1402                           
  1403  0073                     ?i1_mcp23017_write_reg:	
  1404                           ; 0 bytes @ 0x3
  1405                           
  1406  0073                     ??i1_ds1307_get_clock:	
  1407                           ; 0 bytes @ 0x3
  1408                           
  1409  0073                     ds1307_write_addr@value:	
  1410                           ; 0 bytes @ 0x3
  1411                           
  1412  0073                     ___bmul@multiplier:	
  1413                           ; 1 bytes @ 0x3
  1414                           
  1415  0073                     i1mcp23017_write_reg@value:	
  1416                           ; 1 bytes @ 0x3
  1417                           
  1418                           
  1419                           ; 1 bytes @ 0x3
  1420  0073                     	ds	1
  1421  0074                     ??_bcd_to_dec:	
  1422  0074                     ??_ds1307_write_addr:	
  1423                           ; 0 bytes @ 0x4
  1424                           
  1425  0074                     ??___awdiv:	
  1426                           ; 0 bytes @ 0x4
  1427                           
  1428  0074                     ??___awmod:	
  1429                           ; 0 bytes @ 0x4
  1430                           
  1431  0074                     ??___lwdiv:	
  1432                           ; 0 bytes @ 0x4
  1433                           
  1434  0074                     ??i1_mcp23017_write_reg:	
  1435                           ; 0 bytes @ 0x4
  1436                           
  1437  0074                     mcp23017_read_reg@reg_address:	
  1438                           ; 0 bytes @ 0x4
  1439                           
  1440  0074                     adjust_val@value:	
  1441                           ; 1 bytes @ 0x4
  1442                           
  1443  0074                     ds1307_read_addr@addr:	
  1444                           ; 1 bytes @ 0x4
  1445                           
  1446  0074                     ds1307_write_addr@addr:	
  1447                           ; 1 bytes @ 0x4
  1448                           
  1449  0074                     i1mcp23017_write_reg@reg_address:	
  1450                           ; 1 bytes @ 0x4
  1451                           
  1452  0074                     i1ds1307_get_clock@r:	
  1453                           ; 1 bytes @ 0x4
  1454                           
  1455                           
  1456                           ; 1 bytes @ 0x4
  1457  0074                     	ds	1
  1458  0075                     ??i1_mcp23017_ioa_send_byte:	
  1459  0075                     mcp23017_read_reg@value:	
  1460                           ; 0 bytes @ 0x5
  1461                           
  1462  0075                     ds1307_read_addr@read_value:	
  1463                           ; 1 bytes @ 0x5
  1464                           
  1465  0075                     ___awdiv@counter:	
  1466                           ; 1 bytes @ 0x5
  1467                           
  1468  0075                     ___awmod@counter:	
  1469                           ; 1 bytes @ 0x5
  1470                           
  1471  0075                     ___lwdiv@quotient:	
  1472                           ; 1 bytes @ 0x5
  1473                           
  1474                           
  1475                           ; 2 bytes @ 0x5
  1476  0075                     	ds	1
  1477  0076                     ??_ds1307_stop_clock:	
  1478  0076                     ??_keypad_read_key:	
  1479                           ; 0 bytes @ 0x6
  1480                           
  1481  0076                     ??_ds1307_start_clock:	
  1482                           ; 0 bytes @ 0x6
  1483                           
  1484  0076                     ??_keypad_scan:	
  1485                           ; 0 bytes @ 0x6
  1486                           
  1487  0076                     ??i1__send_nibble:	
  1488                           ; 0 bytes @ 0x6
  1489                           
  1490  0076                     ??i1_lcd_backlight:	
  1491                           ; 0 bytes @ 0x6
  1492                           
  1493  0076                     ___awdiv@sign:	
  1494                           ; 0 bytes @ 0x6
  1495                           
  1496  0076                     ___awmod@sign:	
  1497                           ; 1 bytes @ 0x6
  1498                           
  1499  0076                     i1lcd_backlight@state:	
  1500                           ; 1 bytes @ 0x6
  1501                           
  1502                           
  1503                           ; 1 bytes @ 0x6
  1504  0076                     	ds	1
  1505  0077                     bcd_to_dec@bcd:	
  1506  0077                     ds1307_stop_clock@tsec:	
  1507                           ; 1 bytes @ 0x7
  1508                           
  1509  0077                     ds1307_start_clock@tsec:	
  1510                           ; 1 bytes @ 0x7
  1511                           
  1512  0077                     keypad_read_key@key:	
  1513                           ; 1 bytes @ 0x7
  1514                           
  1515  0077                     ___lwdiv@counter:	
  1516                           ; 1 bytes @ 0x7
  1517                           
  1518  0077                     ___awdiv@quotient:	
  1519                           ; 1 bytes @ 0x7
  1520                           
  1521                           
  1522                           ; 2 bytes @ 0x7
  1523  0077                     	ds	1
  1524  0078                     ??_ds1307_get_hours:	
  1525  0078                     ??_ds1307_get_minutes:	
  1526                           ; 0 bytes @ 0x8
  1527                           
  1528  0078                     ??_ds1307_get_seconds:	
  1529                           ; 0 bytes @ 0x8
  1530                           
  1531  0078                     ??_ds1307_get_month:	
  1532                           ; 0 bytes @ 0x8
  1533                           
  1534  0078                     ??_ds1307_get_day_of_month:	
  1535                           ; 0 bytes @ 0x8
  1536                           
  1537  0078                     ??_ds1307_get_year:	
  1538                           ; 0 bytes @ 0x8
  1539                           
  1540  0078                     ??_ds1307_set_clock:	
  1541                           ; 0 bytes @ 0x8
  1542                           
  1543  0078                     ?___lwmod:	
  1544                           ; 0 bytes @ 0x8
  1545                           
  1546  0078                     i1__send_nibble@data:	
  1547                           ; 2 bytes @ 0x8
  1548                           
  1549  0078                     ___lwmod@divisor:	
  1550                           ; 1 bytes @ 0x8
  1551                           
  1552                           
  1553                           ; 2 bytes @ 0x8
  1554  0078                     	ds	1
  1555  0079                     ??i1__send_byte:	
  1556  0079                     dec_to_bcd@dec:	
  1557                           ; 0 bytes @ 0x9
  1558                           
  1559  0079                     ds1307_set_clock@r:	
  1560                           ; 1 bytes @ 0x9
  1561                           
  1562  0079                     ds1307_get_hours@hours:	
  1563                           ; 1 bytes @ 0x9
  1564                           
  1565                           
  1566                           ; 1 bytes @ 0x9
  1567  0079                     	ds	1
  1568  007A                     ??_ds1307_is_pm:	
  1569  007A                     ??_ds1307_set_hours:	
  1570                           ; 0 bytes @ 0xA
  1571                           
  1572  007A                     ??_ds1307_set_minutes:	
  1573                           ; 0 bytes @ 0xA
  1574                           
  1575  007A                     ??_ds1307_set_seconds:	
  1576                           ; 0 bytes @ 0xA
  1577                           
  1578  007A                     ??_ds1307_set_month:	
  1579                           ; 0 bytes @ 0xA
  1580                           
  1581  007A                     ??_ds1307_set_day_of_month:	
  1582                           ; 0 bytes @ 0xA
  1583                           
  1584  007A                     ??_ds1307_set_year:	
  1585                           ; 0 bytes @ 0xA
  1586                           
  1587  007A                     i1__send_byte@data:	
  1588                           ; 0 bytes @ 0xA
  1589                           
  1590  007A                     ___lwmod@dividend:	
  1591                           ; 1 bytes @ 0xA
  1592                           
  1593                           
  1594                           ; 2 bytes @ 0xA
  1595  007A                     	ds	1
  1596  007B                     ??_lcd_data:	
  1597  007B                     ??i1_lcd_command:	
  1598                           ; 0 bytes @ 0xB
  1599                           
  1600  007B                     ds1307_set_minutes@min:	
  1601                           ; 0 bytes @ 0xB
  1602                           
  1603  007B                     ds1307_set_day_of_month@dom:	
  1604                           ; 1 bytes @ 0xB
  1605                           
  1606  007B                     ds1307_set_month@month:	
  1607                           ; 1 bytes @ 0xB
  1608                           
  1609  007B                     ds1307_set_year@year:	
  1610                           ; 1 bytes @ 0xB
  1611                           
  1612                           
  1613                           ; 1 bytes @ 0xB
  1614  007B                     	ds	1
  1615  007C                     ??___lwmod:	
  1616  007C                     ds1307_set_seconds@sec:	
  1617                           ; 0 bytes @ 0xC
  1618                           
  1619  007C                     ds1307_set_hours@hours:	
  1620                           ; 1 bytes @ 0xC
  1621                           
  1622  007C                     ds1307_is_pm@is_pm:	
  1623                           ; 1 bytes @ 0xC
  1624                           
  1625  007C                     lcd_data@data:	
  1626                           ; 1 bytes @ 0xC
  1627                           
  1628  007C                     i1lcd_command@command:	
  1629                           ; 1 bytes @ 0xC
  1630                           
  1631                           
  1632                           ; 1 bytes @ 0xC
  1633  007C                     	ds	1
  1634  007D                     ??_ds1307_switch_to_24hr:	
  1635  007D                     ??_ds1307_switch_to_12hr:	
  1636                           ; 0 bytes @ 0xD
  1637                           
  1638  007D                     ?_lcd_goto:	
  1639                           ; 0 bytes @ 0xD
  1640                           
  1641  007D                     lcd_write@i:	
  1642                           ; 0 bytes @ 0xD
  1643                           
  1644  007D                     lcd_goto@col:	
  1645                           ; 1 bytes @ 0xD
  1646                           
  1647  007D                     ___lwmod@counter:	
  1648                           ; 1 bytes @ 0xD
  1649                           
  1650                           
  1651                           ; 1 bytes @ 0xD
  1652  007D                     	ds	1
  1653                           
  1654                           	psect	cstackBANK0
  1655  0020                     __pcstackBANK0:	
  1656  0020                     ??_lcd_goto:	
  1657  0020                     ?_lcd_write:	
  1658                           ; 0 bytes @ 0x0
  1659                           
  1660  0020                     ??_dec_to_bcd:	
  1661                           ; 0 bytes @ 0x0
  1662                           
  1663  0020                     ?_sprintf:	
  1664                           ; 0 bytes @ 0x0
  1665                           
  1666  0020                     lcd_write@str:	
  1667                           ; 2 bytes @ 0x0
  1668                           
  1669  0020                     sprintf@f:	
  1670                           ; 2 bytes @ 0x0
  1671                           
  1672                           
  1673                           ; 2 bytes @ 0x0
  1674  0020                     	ds	1
  1675  0021                     lcd_goto@row:	
  1676                           
  1677                           ; 1 bytes @ 0x1
  1678  0021                     	ds	1
  1679  0022                     ??_lcd_write:	
  1680  0022                     lcd_goto@addr:	
  1681                           ; 0 bytes @ 0x2
  1682                           
  1683                           
  1684                           ; 1 bytes @ 0x2
  1685  0022                     	ds	5
  1686  0027                     ds1307_switch_to_12hr@pm_am:	
  1687  0027                     ds1307_switch_to_24hr@pm_am:	
  1688                           ; 1 bytes @ 0x7
  1689                           
  1690                           
  1691                           ; 1 bytes @ 0x7
  1692  0027                     	ds	1
  1693  0028                     ??_sprintf:	
  1694  0028                     ds1307_switch_to_12hr@hrs:	
  1695                           ; 0 bytes @ 0x8
  1696                           
  1697  0028                     ds1307_switch_to_24hr@hrs:	
  1698                           ; 1 bytes @ 0x8
  1699                           
  1700                           
  1701                           ; 1 bytes @ 0x8
  1702  0028                     	ds	1
  1703  0029                     ??_update_clock:	
  1704                           
  1705                           ; 0 bytes @ 0x9
  1706  0029                     	ds	3
  1707  002C                     update_clock@pm:	
  1708  002C                     sprintf@flag:	
  1709                           ; 1 bytes @ 0xC
  1710                           
  1711                           
  1712                           ; 1 bytes @ 0xC
  1713  002C                     	ds	1
  1714  002D                     update_clock@up_down:	
  1715  002D                     sprintf@ap:	
  1716                           ; 1 bytes @ 0xD
  1717                           
  1718                           
  1719                           ; 1 bytes @ 0xD
  1720  002D                     	ds	1
  1721  002E                     update_clock@val:	
  1722  002E                     sprintf@_val:	
  1723                           ; 1 bytes @ 0xE
  1724                           
  1725                           
  1726                           ; 4 bytes @ 0xE
  1727  002E                     	ds	4
  1728  0032                     sprintf@sp:	
  1729                           
  1730                           ; 1 bytes @ 0x12
  1731  0032                     	ds	1
  1732  0033                     sprintf@prec:	
  1733                           
  1734                           ; 1 bytes @ 0x13
  1735  0033                     	ds	1
  1736  0034                     sprintf@c:	
  1737                           
  1738                           ; 1 bytes @ 0x14
  1739  0034                     	ds	1
  1740  0035                     ??_ds1307_time_formatted:	
  1741  0035                     ??_ds1307_date_formatted:	
  1742                           ; 0 bytes @ 0x15
  1743                           
  1744                           
  1745                           ; 0 bytes @ 0x15
  1746  0035                     	ds	6
  1747  003B                     ds1307_time_formatted@p_str_time:	
  1748  003B                     ds1307_date_formatted@p_str_date:	
  1749                           ; 1 bytes @ 0x1B
  1750                           
  1751                           
  1752                           ; 1 bytes @ 0x1B
  1753  003B                     	ds	1
  1754  003C                     ??_tmr_isr:	
  1755                           
  1756                           ; 0 bytes @ 0x1C
  1757  003C                     	ds	3
  1758  003F                     tmr_isr@date:	
  1759                           
  1760                           ; 10 bytes @ 0x1F
  1761  003F                     	ds	10
  1762  0049                     tmr_isr@time:	
  1763                           
  1764                           ; 10 bytes @ 0x29
  1765  0049                     	ds	10
  1766  0053                     tmr_isr@pos:	
  1767                           
  1768                           ; 2 bytes @ 0x33
  1769  0053                     	ds	2
  1770                           
  1771                           	psect	maintext
  1772  0F7C                     __pmaintext:	
  1773 ;;
  1774 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1775 ;;
  1776 ;; *************** function _main *****************
  1777 ;; Defined at:
  1778 ;;		line 80 in file "main.c"
  1779 ;; Parameters:    Size  Location     Type
  1780 ;;		None
  1781 ;; Auto vars:     Size  Location     Type
  1782 ;;		None
  1783 ;; Return value:  Size  Location     Type
  1784 ;;		None               void
  1785 ;; Registers used:
  1786 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1787 ;; Tracked objects:
  1788 ;;		On entry : 17F/0
  1789 ;;		On exit  : 0/0
  1790 ;;		Unchanged: 0/0
  1791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1792 ;;      Params:         0       0       0       0
  1793 ;;      Locals:         0       0       0       0
  1794 ;;      Temps:          0       0       1       0
  1795 ;;      Totals:         0       0       1       0
  1796 ;;Total ram usage:        1 bytes
  1797 ;; Hardware stack levels required when called:   18
  1798 ;; This function calls:
  1799 ;;		_ds1307_init
  1800 ;;		_i2c_init
  1801 ;;		_init
  1802 ;;		_keypad_init
  1803 ;;		_lcd_initialize
  1804 ;;		_mcp23017_init
  1805 ;; This function is called by:
  1806 ;;		Startup code after reset
  1807 ;; This function uses a non-reentrant model
  1808 ;;
  1809                           
  1810                           
  1811                           ;psect for function _main
  1812  0F7C                     _main:	
  1813                           
  1814                           ;main.c: 81: OSCCONbits.IRCF = 0b1110; OSCCONbits.SPLLEN = 1;
  1815                           
  1816                           ;incstack = 0
  1817 ;; hardware stack exceeded
  1818                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1819  0F7C  0021               	movlb	1	; select bank1
  1820  0F7D  0819               	movf	25,w	;volatile
  1821  0F7E  3987               	andlw	-121
  1822  0F7F  3870               	iorlw	112
  1823  0F80  0099               	movwf	25	;volatile
  1824  0F81  1799               	bsf	25,7	;volatile
  1825                           
  1826                           ;main.c: 83: i2c_init(100000);
  1827  0F82  3000               	movlw	0
  1828  0F83  00B1               	movwf	(i2c_init@clock_hz+3)^(0+128)
  1829  0F84  3001               	movlw	1
  1830  0F85  00B0               	movwf	(i2c_init@clock_hz+2)^(0+128)
  1831  0F86  3086               	movlw	134
  1832  0F87  00AF               	movwf	(i2c_init@clock_hz+1)^(0+128)
  1833  0F88  30A0               	movlw	160
  1834  0F89  00AE               	movwf	i2c_init@clock_hz^(0+128)
  1835  0F8A  3184  24CF  318F   	fcall	_i2c_init
  1836                           
  1837                           ;main.c: 84: mcp23017_init(0b000);
  1838  0F8D  3000               	movlw	0
  1839  0F8E  318C  240C  318F   	fcall	_mcp23017_init
  1840                           
  1841                           ;main.c: 85: keypad_init();
  1842  0F91  318E  265E  318F   	fcall	_keypad_init
  1843                           
  1844                           ;main.c: 87: ds1307_init();
  1845  0F94  318B  23C7  318F   	fcall	_ds1307_init
  1846                           
  1847                           ;main.c: 88: lcd_initialize();
  1848  0F97  3183  232A  318F   	fcall	_lcd_initialize
  1849                           
  1850                           ;main.c: 89: init(50000, 3);
  1851  0F9A  3050               	movlw	80
  1852  0F9B  0021               	movlb	1	; select bank1
  1853  0F9C  00A2               	movwf	init@load_value^(0+128)
  1854  0F9D  30C3               	movlw	195
  1855  0F9E  00A3               	movwf	(init@load_value^(0+128)+1)
  1856  0F9F  3003               	movlw	3
  1857  0FA0  00B6               	movwf	??_main^(0+128)
  1858  0FA1  0836               	movf	??_main^(0+128),w
  1859  0FA2  00A4               	movwf	init@prescaler^(0+128)
  1860  0FA3  3187  27BD  318F   	fcall	_init
  1861  0FA6                     l174:	
  1862                           ;main.c: 91: for (;;) {
  1863                           
  1864                           
  1865                           ;main.c: 92: ;
  1866                           ;main.c: 93: }
  1867  0FA6  2FA6               	goto	l174
  1868  0FA7                     __end_of_main:	
  1869                           
  1870                           	psect	text1
  1871  0C0C                     __ptext1:	
  1872 ;; *************** function _mcp23017_init *****************
  1873 ;; Defined at:
  1874 ;;		line 50 in file "mcp23017.c"
  1875 ;; Parameters:    Size  Location     Type
  1876 ;;  address_3b      1    wreg     unsigned char 
  1877 ;; Auto vars:     Size  Location     Type
  1878 ;;  address_3b      1    2[BANK1 ] unsigned char 
  1879 ;; Return value:  Size  Location     Type
  1880 ;;		None               void
  1881 ;; Registers used:
  1882 ;;		wreg, status,2, status,0, pclath, cstack
  1883 ;; Tracked objects:
  1884 ;;		On entry : 0/0
  1885 ;;		On exit  : 0/0
  1886 ;;		Unchanged: 0/0
  1887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1888 ;;      Params:         0       0       0       0
  1889 ;;      Locals:         0       0       1       0
  1890 ;;      Temps:          0       0       0       0
  1891 ;;      Totals:         0       0       1       0
  1892 ;;Total ram usage:        1 bytes
  1893 ;; Hardware stack levels used:    1
  1894 ;; Hardware stack levels required when called:   10
  1895 ;; This function calls:
  1896 ;;		_mcp23017_set_slave_addr
  1897 ;; This function is called by:
  1898 ;;		_main
  1899 ;; This function uses a non-reentrant model
  1900 ;;
  1901                           
  1902                           
  1903                           ;psect for function _mcp23017_init
  1904  0C0C                     _mcp23017_init:	
  1905                           
  1906                           ;incstack = 0
  1907                           ; Regs used in _mcp23017_init: [wreg+status,2+status,0+pclath+cstack]
  1908                           ;mcp23017_init@address_3b stored from wreg
  1909  0C0C  0021               	movlb	1	; select bank1
  1910  0C0D  00A2               	movwf	mcp23017_init@address_3b^(0+128)
  1911                           
  1912                           ;mcp23017.c: 52: mcp23017_set_slave_addr(address_3b);
  1913  0C0E  0822               	movf	mcp23017_init@address_3b^(0+128),w
  1914  0C0F  318C  2435         	fcall	_mcp23017_set_slave_addr
  1915  0C11  0008               	return
  1916  0C12                     __end_of_mcp23017_init:	
  1917                           
  1918                           	psect	text2
  1919  0C35                     __ptext2:	
  1920 ;; *************** function _mcp23017_set_slave_addr *****************
  1921 ;; Defined at:
  1922 ;;		line 55 in file "mcp23017.c"
  1923 ;; Parameters:    Size  Location     Type
  1924 ;;  address_3b      1    wreg     unsigned char 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  address_3b      1    1[BANK1 ] unsigned char 
  1927 ;; Return value:  Size  Location     Type
  1928 ;;		None               void
  1929 ;; Registers used:
  1930 ;;		wreg, status,2
  1931 ;; Tracked objects:
  1932 ;;		On entry : 0/0
  1933 ;;		On exit  : 0/0
  1934 ;;		Unchanged: 0/0
  1935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1936 ;;      Params:         0       0       0       0
  1937 ;;      Locals:         0       0       1       0
  1938 ;;      Temps:          0       0       1       0
  1939 ;;      Totals:         0       0       2       0
  1940 ;;Total ram usage:        2 bytes
  1941 ;; Hardware stack levels used:    1
  1942 ;; Hardware stack levels required when called:    9
  1943 ;; This function calls:
  1944 ;;		Nothing
  1945 ;; This function is called by:
  1946 ;;		_mcp23017_init
  1947 ;; This function uses a non-reentrant model
  1948 ;;
  1949                           
  1950                           
  1951                           ;psect for function _mcp23017_set_slave_addr
  1952  0C35                     _mcp23017_set_slave_addr:	
  1953                           
  1954                           ;incstack = 0
  1955                           ; Regs used in _mcp23017_set_slave_addr: [wreg+status,2]
  1956                           ;mcp23017_set_slave_addr@address_3b stored from wreg
  1957  0C35  0021               	movlb	1	; select bank1
  1958  0C36  00A1               	movwf	mcp23017_set_slave_addr@address_3b^(0+128)
  1959                           
  1960                           ;mcp23017.c: 57: g_slave_address_7b = (0b0100 << 3) | address_3b;
  1961  0C37  0821               	movf	mcp23017_set_slave_addr@address_3b^(0+128),w
  1962  0C38  3820               	iorlw	32
  1963  0C39  00A0               	movwf	??_mcp23017_set_slave_addr^(0+128)
  1964  0C3A  0820               	movf	??_mcp23017_set_slave_addr^(0+128),w
  1965  0C3B  00C9               	movwf	_g_slave_address_7b^(0+128)
  1966  0C3C  0008               	return
  1967  0C3D                     __end_of_mcp23017_set_slave_addr:	
  1968                           
  1969                           	psect	text3
  1970  032A                     __ptext3:	
  1971 ;; *************** function _lcd_initialize *****************
  1972 ;; Defined at:
  1973 ;;		line 144 in file "HD44780-IOE.c"
  1974 ;; Parameters:    Size  Location     Type
  1975 ;;		None
  1976 ;; Auto vars:     Size  Location     Type
  1977 ;;  i               1   20[BANK1 ] unsigned char 
  1978 ;; Return value:  Size  Location     Type
  1979 ;;		None               void
  1980 ;; Registers used:
  1981 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1982 ;; Tracked objects:
  1983 ;;		On entry : 0/0
  1984 ;;		On exit  : 0/0
  1985 ;;		Unchanged: 0/0
  1986 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1987 ;;      Params:         0       0       0       0
  1988 ;;      Locals:         0       0       1       0
  1989 ;;      Temps:          0       0       2       0
  1990 ;;      Totals:         0       0       3       0
  1991 ;;Total ram usage:        3 bytes
  1992 ;; Hardware stack levels used:    1
  1993 ;; Hardware stack levels required when called:   17
  1994 ;; This function calls:
  1995 ;;		__set_4bit_interface
  1996 ;;		_lcd_backlight
  1997 ;;		_lcd_command
  1998 ;;		_lcd_flags_set
  1999 ;;		_mcp23017_write_reg
  2000 ;; This function is called by:
  2001 ;;		_main
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function _lcd_initialize
  2007  032A                     _lcd_initialize:	
  2008                           
  2009                           ;HD44780-IOE.c: 145: unsigned char i;
  2010                           ;HD44780-IOE.c: 148: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
  2011                           
  2012                           ;incstack = 0
  2013 ;; hardware stack exceeded
  2014                           ; Regs used in _lcd_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2015  032A  3068               	movlw	104
  2016  032B  0021               	movlb	1	; select bank1
  2017  032C  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2018  032D  30E4               	movlw	228
  2019  032E  00B2               	movwf	??_lcd_initialize^(0+128)
  2020  032F                     u2577:	
  2021  032F  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2022  0330  2B2F               	goto	u2577
  2023  0331  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2024  0332  2B2F               	goto	u2577
  2025  0333  0000               	nop
  2026                           
  2027                           ;HD44780-IOE.c: 151: mcp23017_write_reg(MCP23017_REG_IODIRA, 0x00);
  2028  0334  0021               	movlb	1	; select bank1
  2029  0335  01A3               	clrf	mcp23017_write_reg@value^(0+128)
  2030  0336  3000               	movlw	0
  2031  0337  318E  2613  3183   	fcall	_mcp23017_write_reg
  2032                           
  2033                           ;HD44780-IOE.c: 152: mcp23017_write_reg(MCP23017_REG_GPIOA, 0x00);
  2034  033A  0021               	movlb	1	; select bank1
  2035  033B  01A3               	clrf	mcp23017_write_reg@value^(0+128)
  2036  033C  3012               	movlw	18
  2037  033D  318E  2613  3183   	fcall	_mcp23017_write_reg
  2038                           
  2039                           ;HD44780-IOE.c: 155: for (i = 0; i < 6; i++) {
  2040  0340  0021               	movlb	1	; select bank1
  2041  0341  01B4               	clrf	lcd_initialize@i^(0+128)
  2042  0342  3006               	movlw	6
  2043  0343  0234               	subwf	lcd_initialize@i^(0+128),w
  2044  0344  1803               	btfsc	3,0
  2045  0345  2B53               	goto	l2843
  2046  0346                     l2837:	
  2047                           
  2048                           ;HD44780-IOE.c: 156: display_config[i] = 0x00;
  2049  0346  0834               	movf	lcd_initialize@i^(0+128),w
  2050  0347  3EBE               	addlw	_display_config& (0+255)
  2051  0348  0086               	movwf	6
  2052  0349  0187               	clrf	7
  2053  034A  0181               	clrf	1
  2054  034B  3001               	movlw	1
  2055  034C  00B2               	movwf	??_lcd_initialize^(0+128)
  2056  034D  0832               	movf	??_lcd_initialize^(0+128),w
  2057  034E  07B4               	addwf	lcd_initialize@i^(0+128),f
  2058  034F  3006               	movlw	6
  2059  0350  0234               	subwf	lcd_initialize@i^(0+128),w
  2060  0351  1C03               	skipc
  2061  0352  2B46               	goto	l2837
  2062  0353                     l2843:	
  2063                           
  2064                           ;HD44780-IOE.c: 157: }
  2065                           ;HD44780-IOE.c: 159: _set_4bit_interface();
  2066  0353  318D  253F  3183   	fcall	__set_4bit_interface
  2067                           
  2068                           ;HD44780-IOE.c: 162: lcd_flags_set(0x20, 0x10 | 0x04, 0);
  2069  0356  3014               	movlw	20
  2070  0357  0021               	movlb	1	; select bank1
  2071  0358  00B2               	movwf	??_lcd_initialize^(0+128)
  2072  0359  0832               	movf	??_lcd_initialize^(0+128),w
  2073  035A  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2074  035B  01AE               	clrf	lcd_flags_set@value^(0+128)
  2075  035C  3020               	movlw	32
  2076  035D  3186  2690  3183   	fcall	_lcd_flags_set
  2077                           
  2078                           ;HD44780-IOE.c: 163: lcd_flags_set(0x20, 0x08, 1);
  2079  0360  3008               	movlw	8
  2080  0361  0021               	movlb	1	; select bank1
  2081  0362  00B2               	movwf	??_lcd_initialize^(0+128)
  2082  0363  0832               	movf	??_lcd_initialize^(0+128),w
  2083  0364  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2084  0365  01AE               	clrf	lcd_flags_set@value^(0+128)
  2085  0366  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2086  0367  3020               	movlw	32
  2087  0368  3186  2690  3183   	fcall	_lcd_flags_set
  2088                           
  2089                           ;HD44780-IOE.c: 165: lcd_backlight(1);
  2090  036B  3001               	movlw	1
  2091  036C  318C  2461  3183   	fcall	_lcd_backlight
  2092                           
  2093                           ;HD44780-IOE.c: 166: lcd_flags_set(0x08, 0x04, 1);
  2094  036F  3004               	movlw	4
  2095  0370  0021               	movlb	1	; select bank1
  2096  0371  00B2               	movwf	??_lcd_initialize^(0+128)
  2097  0372  0832               	movf	??_lcd_initialize^(0+128),w
  2098  0373  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2099  0374  01AE               	clrf	lcd_flags_set@value^(0+128)
  2100  0375  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2101  0376  3008               	movlw	8
  2102  0377  3186  2690  3183   	fcall	_lcd_flags_set
  2103                           
  2104                           ;HD44780-IOE.c: 167: lcd_flags_set(0x08, 0x02, 0);
  2105  037A  3002               	movlw	2
  2106  037B  0021               	movlb	1	; select bank1
  2107  037C  00B2               	movwf	??_lcd_initialize^(0+128)
  2108  037D  0832               	movf	??_lcd_initialize^(0+128),w
  2109  037E  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2110  037F  01AE               	clrf	lcd_flags_set@value^(0+128)
  2111  0380  3008               	movlw	8
  2112  0381  3186  2690  3183   	fcall	_lcd_flags_set
  2113                           
  2114                           ;HD44780-IOE.c: 168: lcd_flags_set(0x08, 0x01, 0);
  2115  0384  0021               	movlb	1	; select bank1
  2116  0385  01AD               	clrf	lcd_flags_set@flags^(0+128)
  2117  0386  0AAD               	incf	lcd_flags_set@flags^(0+128),f
  2118  0387  01AE               	clrf	lcd_flags_set@value^(0+128)
  2119  0388  3008               	movlw	8
  2120  0389  3186  2690  3183   	fcall	_lcd_flags_set
  2121                           
  2122                           ;HD44780-IOE.c: 170: lcd_flags_set(0x04, 0x02, 1);
  2123  038C  3002               	movlw	2
  2124  038D  0021               	movlb	1	; select bank1
  2125  038E  00B2               	movwf	??_lcd_initialize^(0+128)
  2126  038F  0832               	movf	??_lcd_initialize^(0+128),w
  2127  0390  00AD               	movwf	lcd_flags_set@flags^(0+128)
  2128  0391  01AE               	clrf	lcd_flags_set@value^(0+128)
  2129  0392  0AAE               	incf	lcd_flags_set@value^(0+128),f
  2130  0393  3004               	movlw	4
  2131  0394  3186  2690  3183   	fcall	_lcd_flags_set
  2132                           
  2133                           ;HD44780-IOE.c: 171: lcd_flags_set(0x04, 0x01, 0);
  2134  0397  0021               	movlb	1	; select bank1
  2135  0398  01AD               	clrf	lcd_flags_set@flags^(0+128)
  2136  0399  0AAD               	incf	lcd_flags_set@flags^(0+128),f
  2137  039A  01AE               	clrf	lcd_flags_set@value^(0+128)
  2138  039B  3004               	movlw	4
  2139  039C  3186  2690  3183   	fcall	_lcd_flags_set
  2140                           
  2141                           ;HD44780-IOE.c: 173: lcd_command(0x01); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  2142  039F  3001               	movlw	1
  2143  03A0  3187  27EE  3183   	fcall	_lcd_command
  2144  03A3  3015               	movlw	21
  2145  03A4  0021               	movlb	1	; select bank1
  2146  03A5  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2147  03A6  30C6               	movlw	198
  2148  03A7  00B2               	movwf	??_lcd_initialize^(0+128)
  2149  03A8                     u2587:	
  2150  03A8  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2151  03A9  2BA8               	goto	u2587
  2152  03AA  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2153  03AB  2BA8               	goto	u2587
  2154  03AC  0000               	nop
  2155                           
  2156                           ;HD44780-IOE.c: 174: lcd_command(0x02); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  2157  03AD  3002               	movlw	2
  2158  03AE  3187  27EE  3183   	fcall	_lcd_command
  2159  03B1  3015               	movlw	21
  2160  03B2  0021               	movlb	1	; select bank1
  2161  03B3  00B3               	movwf	(??_lcd_initialize^(0+128)+1)
  2162  03B4  30C6               	movlw	198
  2163  03B5  00B2               	movwf	??_lcd_initialize^(0+128)
  2164  03B6                     u2597:	
  2165  03B6  0BB2               	decfsz	??_lcd_initialize^(0+128),f
  2166  03B7  2BB6               	goto	u2597
  2167  03B8  0BB3               	decfsz	(??_lcd_initialize^(0+128)+1),f
  2168  03B9  2BB6               	goto	u2597
  2169  03BA  0000               	nop
  2170  03BB  0008               	return
  2171  03BC                     __end_of_lcd_initialize:	
  2172                           
  2173                           	psect	text4
  2174  0690                     __ptext4:	
  2175 ;; *************** function _lcd_flags_set *****************
  2176 ;; Defined at:
  2177 ;;		line 193 in file "HD44780-IOE.c"
  2178 ;; Parameters:    Size  Location     Type
  2179 ;;  instruction     1    wreg     unsigned char 
  2180 ;;  flags           1   13[BANK1 ] unsigned char 
  2181 ;;  value           1   14[BANK1 ] unsigned char 
  2182 ;; Auto vars:     Size  Location     Type
  2183 ;;  instruction     1   16[BANK1 ] unsigned char 
  2184 ;;  index           1   17[BANK1 ] unsigned char 
  2185 ;; Return value:  Size  Location     Type
  2186 ;;		None               void
  2187 ;; Registers used:
  2188 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2189 ;; Tracked objects:
  2190 ;;		On entry : 0/0
  2191 ;;		On exit  : 0/0
  2192 ;;		Unchanged: 0/0
  2193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2194 ;;      Params:         0       0       2       0
  2195 ;;      Locals:         0       0       2       0
  2196 ;;      Temps:          0       0       1       0
  2197 ;;      Totals:         0       0       5       0
  2198 ;;Total ram usage:        5 bytes
  2199 ;; Hardware stack levels used:    1
  2200 ;; Hardware stack levels required when called:   16
  2201 ;; This function calls:
  2202 ;;		_lcd_command
  2203 ;; This function is called by:
  2204 ;;		_lcd_initialize
  2205 ;; This function uses a non-reentrant model
  2206 ;;
  2207                           
  2208                           
  2209                           ;psect for function _lcd_flags_set
  2210  0690                     _lcd_flags_set:	
  2211                           
  2212                           ;incstack = 0
  2213 ;; hardware stack exceeded
  2214                           ; Regs used in _lcd_flags_set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  2215                           ;lcd_flags_set@instruction stored from wreg
  2216  0690  0021               	movlb	1	; select bank1
  2217  0691  00B0               	movwf	lcd_flags_set@instruction^(0+128)
  2218                           
  2219                           ;HD44780-IOE.c: 196: unsigned char index;
  2220                           ;HD44780-IOE.c: 198: switch (instruction) {
  2221  0692  2EA3               	goto	l2737
  2222  0693                     l2725:	
  2223                           ;HD44780-IOE.c: 199: case 0x04:
  2224                           
  2225                           
  2226                           ;HD44780-IOE.c: 200: index = 0;
  2227  0693  01B1               	clrf	lcd_flags_set@index^(0+128)
  2228                           
  2229                           ;HD44780-IOE.c: 201: break;
  2230  0694  2EB7               	goto	l2739
  2231  0695                     l500:	
  2232                           ;HD44780-IOE.c: 202: case 0x08:
  2233                           
  2234                           
  2235                           ;HD44780-IOE.c: 203: index = 1;
  2236  0695  01B1               	clrf	lcd_flags_set@index^(0+128)
  2237  0696  0AB1               	incf	lcd_flags_set@index^(0+128),f
  2238                           
  2239                           ;HD44780-IOE.c: 204: break;
  2240  0697  2EB7               	goto	l2739
  2241  0698                     l2727:	
  2242                           ;HD44780-IOE.c: 205: case 0x10:
  2243                           
  2244                           
  2245                           ;HD44780-IOE.c: 206: index = 2;
  2246  0698  3002               	movlw	2
  2247  0699  2E9F               	goto	L3
  2248  069A                     l2729:	
  2249                           ;HD44780-IOE.c: 208: case 0x20:
  2250                           
  2251                           ;HD44780-IOE.c: 207: break;
  2252                           
  2253                           
  2254                           ;HD44780-IOE.c: 209: index = 3;
  2255  069A  3003               	movlw	3
  2256  069B  2E9F               	goto	L3
  2257  069C                     l2731:	
  2258                           ;HD44780-IOE.c: 211: case 0x40:
  2259                           
  2260                           ;HD44780-IOE.c: 210: break;
  2261                           
  2262                           
  2263                           ;HD44780-IOE.c: 212: index = 4;
  2264  069C  3004               	movlw	4
  2265  069D  2E9F               	goto	L3
  2266  069E                     l2733:	
  2267                           ;HD44780-IOE.c: 214: case 0x80:
  2268                           
  2269                           ;HD44780-IOE.c: 213: break;
  2270                           
  2271                           
  2272                           ;HD44780-IOE.c: 215: index = 5;
  2273  069E  3005               	movlw	5
  2274  069F                     L3:	
  2275  069F  00AF               	movwf	??_lcd_flags_set^(0+128)
  2276  06A0  082F               	movf	??_lcd_flags_set^(0+128),w
  2277  06A1  00B1               	movwf	lcd_flags_set@index^(0+128)
  2278                           
  2279                           ;HD44780-IOE.c: 217: }
  2280                           
  2281                           ;HD44780-IOE.c: 216: break;
  2282  06A2  2EB7               	goto	l2739
  2283  06A3                     l2737:	
  2284  06A3  0830               	movf	lcd_flags_set@instruction^(0+128),w
  2285                           
  2286                           ; Switch size 1, requested type "space"
  2287                           ; Number of cases is 6, Range of values is 4 to 128
  2288                           ; switch strategies available:
  2289                           ; Name         Instructions Cycles
  2290                           ; simple_byte           19    10 (average)
  2291                           ; direct_byte          259     9 (fixed)
  2292                           ; jumptable            263     9 (fixed)
  2293                           ;	Chosen strategy is simple_byte
  2294  06A4  3A04               	xorlw	4	; case 4
  2295  06A5  1903               	skipnz
  2296  06A6  2E93               	goto	l2725
  2297  06A7  3A0C               	xorlw	12	; case 8
  2298  06A8  1903               	skipnz
  2299  06A9  2E95               	goto	l500
  2300  06AA  3A18               	xorlw	24	; case 16
  2301  06AB  1903               	skipnz
  2302  06AC  2E98               	goto	l2727
  2303  06AD  3A30               	xorlw	48	; case 32
  2304  06AE  1903               	skipnz
  2305  06AF  2E9A               	goto	l2729
  2306  06B0  3A60               	xorlw	96	; case 64
  2307  06B1  1903               	skipnz
  2308  06B2  2E9C               	goto	l2731
  2309  06B3  3AC0               	xorlw	192	; case 128
  2310  06B4  1903               	skipnz
  2311  06B5  2E9E               	goto	l2733
  2312  06B6  2EB7               	goto	l2739
  2313  06B7                     l2739:	
  2314                           
  2315                           ;HD44780-IOE.c: 219: if (value == 0)
  2316  06B7  08AE               	movf	lcd_flags_set@value^(0+128),f
  2317  06B8  1D03               	skipz
  2318  06B9  2EC3               	goto	l2743
  2319                           
  2320                           ;HD44780-IOE.c: 220: display_config[index] &= ~flags;
  2321  06BA  092D               	comf	lcd_flags_set@flags^(0+128),w
  2322  06BB  00AF               	movwf	??_lcd_flags_set^(0+128)
  2323  06BC  0831               	movf	lcd_flags_set@index^(0+128),w
  2324  06BD  3EBE               	addlw	_display_config& (0+255)
  2325  06BE  0086               	movwf	6
  2326  06BF  0187               	clrf	7
  2327  06C0  082F               	movf	??_lcd_flags_set^(0+128),w
  2328  06C1  0581               	andwf	1,f
  2329  06C2  2ECB               	goto	l2745
  2330  06C3                     l2743:	
  2331                           
  2332                           ;HD44780-IOE.c: 221: else
  2333                           ;HD44780-IOE.c: 222: display_config[index] |= flags;
  2334  06C3  082D               	movf	lcd_flags_set@flags^(0+128),w
  2335  06C4  00AF               	movwf	??_lcd_flags_set^(0+128)
  2336  06C5  0831               	movf	lcd_flags_set@index^(0+128),w
  2337  06C6  3EBE               	addlw	_display_config& (0+255)
  2338  06C7  0086               	movwf	6
  2339  06C8  0187               	clrf	7
  2340  06C9  082F               	movf	??_lcd_flags_set^(0+128),w
  2341  06CA  0481               	iorwf	1,f
  2342  06CB                     l2745:	
  2343                           
  2344                           ;HD44780-IOE.c: 224: lcd_command(instruction | display_config[index]);
  2345  06CB  0831               	movf	lcd_flags_set@index^(0+128),w
  2346  06CC  3EBE               	addlw	_display_config& (0+255)
  2347  06CD  0086               	movwf	6
  2348  06CE  0187               	clrf	7
  2349  06CF  0801               	movf	1,w
  2350  06D0  0430               	iorwf	lcd_flags_set@instruction^(0+128),w
  2351  06D1  3187  27EE         	fcall	_lcd_command
  2352  06D3  0008               	return
  2353  06D4                     __end_of_lcd_flags_set:	
  2354                           
  2355                           	psect	text5
  2356  07EE                     __ptext5:	
  2357 ;; *************** function _lcd_command *****************
  2358 ;; Defined at:
  2359 ;;		line 177 in file "HD44780-IOE.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  command         1    wreg     unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  command         1   12[BANK1 ] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       0       0       0
  2374 ;;      Locals:         0       0       1       0
  2375 ;;      Temps:          0       0       1       0
  2376 ;;      Totals:         0       0       2       0
  2377 ;;Total ram usage:        2 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   15
  2380 ;; This function calls:
  2381 ;;		__send_byte
  2382 ;;		_mcp23017_ioa_send_byte
  2383 ;; This function is called by:
  2384 ;;		_lcd_initialize
  2385 ;;		_lcd_flags_set
  2386 ;;		_lcd_add_character
  2387 ;; This function uses a non-reentrant model
  2388 ;;
  2389                           
  2390                           
  2391                           ;psect for function _lcd_command
  2392  07EE                     _lcd_command:	
  2393                           
  2394                           ;incstack = 0
  2395 ;; hardware stack exceeded
  2396                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  2397                           ;lcd_command@command stored from wreg
  2398  07EE  0021               	movlb	1	; select bank1
  2399  07EF  00AC               	movwf	lcd_command@command^(0+128)
  2400                           
  2401                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  2402  07F0  1246               	bcf	_LCDPort^(0+128),4
  2403                           
  2404                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  2405  07F1  318C  2458  3187   	fcall	_mcp23017_ioa_send_byte
  2406                           
  2407                           ;HD44780-IOE.c: 180: __nop();
  2408  07F4  0000               	nop
  2409                           
  2410                           ;HD44780-IOE.c: 181: _send_byte(command);
  2411  07F5  0021               	movlb	1	; select bank1
  2412  07F6  082C               	movf	lcd_command@command^(0+128),w
  2413  07F7  318D  2572  3187   	fcall	__send_byte
  2414                           
  2415                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  2416  07FA  3085               	movlw	133
  2417  07FB  0021               	movlb	1	; select bank1
  2418  07FC  00AB               	movwf	??_lcd_command^(0+128)
  2419  07FD                     u2607:	
  2420  07FD  0BAB               	decfsz	??_lcd_command^(0+128),f
  2421  07FE  2FFD               	goto	u2607
  2422  07FF  0008               	return
  2423  0800                     __end_of_lcd_command:	
  2424                           
  2425                           	psect	text6
  2426  0D72                     __ptext6:	
  2427 ;; *************** function __send_byte *****************
  2428 ;; Defined at:
  2429 ;;		line 81 in file "HD44780-IOE.c"
  2430 ;; Parameters:    Size  Location     Type
  2431 ;;  data            1    wreg     unsigned char 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  data            1   10[BANK1 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0, pclath, cstack
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2443 ;;      Params:         0       0       0       0
  2444 ;;      Locals:         0       0       1       0
  2445 ;;      Temps:          0       0       1       0
  2446 ;;      Totals:         0       0       2       0
  2447 ;;Total ram usage:        2 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:   14
  2450 ;; This function calls:
  2451 ;;		__send_nibble
  2452 ;; This function is called by:
  2453 ;;		_lcd_command
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function __send_byte
  2459  0D72                     __send_byte:	
  2460                           
  2461                           ;incstack = 0
  2462 ;; hardware stack exceeded
  2463                           ; Regs used in __send_byte: [wreg+status,2+status,0+pclath+cstack]
  2464                           ;__send_byte@data stored from wreg
  2465  0D72  0021               	movlb	1	; select bank1
  2466  0D73  00AA               	movwf	__send_byte@data^(0+128)
  2467                           
  2468                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  2469  0D74  082A               	movf	__send_byte@data^(0+128),w
  2470  0D75  00A9               	movwf	??__send_byte^(0+128)
  2471  0D76  3004               	movlw	4
  2472  0D77                     u1575:	
  2473  0D77  36A9               	lsrf	??__send_byte^(0+128),f
  2474  0D78  0B89               	decfsz	9,f
  2475  0D79  2D77               	goto	u1575
  2476  0D7A  0829               	movf	??__send_byte^(0+128),w
  2477  0D7B  318F  27D3  318D   	fcall	__send_nibble
  2478                           
  2479                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  2480  0D7E  0021               	movlb	1	; select bank1
  2481  0D7F  082A               	movf	__send_byte@data^(0+128),w
  2482  0D80  390F               	andlw	15
  2483  0D81  318F  27D3         	fcall	__send_nibble
  2484  0D83  0008               	return
  2485  0D84                     __end_of__send_byte:	
  2486                           
  2487                           	psect	text7
  2488  0C61                     __ptext7:	
  2489 ;; *************** function _lcd_backlight *****************
  2490 ;; Defined at:
  2491 ;;		line 227 in file "HD44780-IOE.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  state           1    wreg     unsigned char 
  2494 ;; Auto vars:     Size  Location     Type
  2495 ;;  state           1    6[BANK1 ] unsigned char 
  2496 ;; Return value:  Size  Location     Type
  2497 ;;		None               void
  2498 ;; Registers used:
  2499 ;;		wreg, status,2, status,0, pclath, cstack
  2500 ;; Tracked objects:
  2501 ;;		On entry : 0/0
  2502 ;;		On exit  : 0/0
  2503 ;;		Unchanged: 0/0
  2504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2505 ;;      Params:         0       0       0       0
  2506 ;;      Locals:         0       0       1       0
  2507 ;;      Temps:          0       0       0       0
  2508 ;;      Totals:         0       0       1       0
  2509 ;;Total ram usage:        1 bytes
  2510 ;; Hardware stack levels used:    1
  2511 ;; Hardware stack levels required when called:   13
  2512 ;; This function calls:
  2513 ;;		_mcp23017_ioa_send_byte
  2514 ;; This function is called by:
  2515 ;;		_lcd_initialize
  2516 ;; This function uses a non-reentrant model
  2517 ;;
  2518                           
  2519                           
  2520                           ;psect for function _lcd_backlight
  2521  0C61                     _lcd_backlight:	
  2522                           
  2523                           ;incstack = 0
  2524                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  2525                           ;lcd_backlight@state stored from wreg
  2526  0C61  0021               	movlb	1	; select bank1
  2527  0C62  00A6               	movwf	lcd_backlight@state^(0+128)
  2528                           
  2529                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  2530  0C63  0826               	movf	lcd_backlight@state^(0+128),w
  2531  0C64  1346               	bcf	_LCDPort^(0+128),6
  2532  0C65  1D03               	skipz
  2533  0C66  1746               	bsf	_LCDPort^(0+128),6
  2534                           
  2535                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  2536  0C67  318C  2458         	fcall	_mcp23017_ioa_send_byte
  2537  0C69  0008               	return
  2538  0C6A                     __end_of_lcd_backlight:	
  2539                           
  2540                           	psect	text8
  2541  0D3F                     __ptext8:	
  2542 ;; *************** function __set_4bit_interface *****************
  2543 ;; Defined at:
  2544 ;;		line 86 in file "HD44780-IOE.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;		None               void
  2551 ;; Registers used:
  2552 ;;		wreg, status,2, status,0, pclath, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2558 ;;      Params:         0       0       0       0
  2559 ;;      Locals:         0       0       0       0
  2560 ;;      Temps:          0       0       1       0
  2561 ;;      Totals:         0       0       1       0
  2562 ;;Total ram usage:        1 bytes
  2563 ;; Hardware stack levels used:    1
  2564 ;; Hardware stack levels required when called:   14
  2565 ;; This function calls:
  2566 ;;		__send_nibble
  2567 ;;		_mcp23017_ioa_send_byte
  2568 ;; This function is called by:
  2569 ;;		_lcd_initialize
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           
  2574                           ;psect for function __set_4bit_interface
  2575  0D3F                     __set_4bit_interface:	
  2576                           
  2577                           ;HD44780-IOE.c: 87: LCDPort.A4 = 0;
  2578                           
  2579                           ;incstack = 0
  2580                           ; Regs used in __set_4bit_interface: [wreg+status,2+status,0+pclath+cstack]
  2581  0D3F  0021               	movlb	1	; select bank1
  2582  0D40  1246               	bcf	_LCDPort^(0+128),4
  2583                           
  2584                           ;HD44780-IOE.c: 88: mcp23017_ioa_send_byte();
  2585  0D41  318C  2458  318D   	fcall	_mcp23017_ioa_send_byte
  2586                           
  2587                           ;HD44780-IOE.c: 89: __nop();
  2588  0D44  0000               	nop
  2589                           
  2590                           ;HD44780-IOE.c: 90: _send_nibble(0b0010);
  2591  0D45  3002               	movlw	2
  2592  0D46  318F  27D3  318D   	fcall	__send_nibble
  2593                           
  2594                           ;HD44780-IOE.c: 91: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  2595  0D49  3085               	movlw	133
  2596  0D4A  0021               	movlb	1	; select bank1
  2597  0D4B  00A9               	movwf	??__set_4bit_interface^(0+128)
  2598  0D4C                     u2617:	
  2599  0D4C  0BA9               	decfsz	??__set_4bit_interface^(0+128),f
  2600  0D4D  2D4C               	goto	u2617
  2601  0D4E  0008               	return
  2602  0D4F                     __end_of__set_4bit_interface:	
  2603                           
  2604                           	psect	text9
  2605  0FD3                     __ptext9:	
  2606 ;; *************** function __send_nibble *****************
  2607 ;; Defined at:
  2608 ;;		line 65 in file "HD44780-IOE.c"
  2609 ;; Parameters:    Size  Location     Type
  2610 ;;  data            1    wreg     unsigned char 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  data            1    8[BANK1 ] unsigned char 
  2613 ;; Return value:  Size  Location     Type
  2614 ;;		None               void
  2615 ;; Registers used:
  2616 ;;		wreg, status,2, status,0, pclath, cstack
  2617 ;; Tracked objects:
  2618 ;;		On entry : 0/0
  2619 ;;		On exit  : 0/0
  2620 ;;		Unchanged: 0/0
  2621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2622 ;;      Params:         0       0       0       0
  2623 ;;      Locals:         0       0       1       0
  2624 ;;      Temps:          0       0       2       0
  2625 ;;      Totals:         0       0       3       0
  2626 ;;Total ram usage:        3 bytes
  2627 ;; Hardware stack levels used:    1
  2628 ;; Hardware stack levels required when called:   13
  2629 ;; This function calls:
  2630 ;;		_mcp23017_ioa_send_byte
  2631 ;; This function is called by:
  2632 ;;		__send_byte
  2633 ;;		__set_4bit_interface
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function __send_nibble
  2639  0FD3                     __send_nibble:	
  2640                           
  2641                           ;incstack = 0
  2642 ;; hardware stack exceeded
  2643                           ; Regs used in __send_nibble: [wreg+status,2+status,0+pclath+cstack]
  2644                           ;__send_nibble@data stored from wreg
  2645  0FD3  0021               	movlb	1	; select bank1
  2646  0FD4  00A8               	movwf	__send_nibble@data^(0+128)
  2647                           
  2648                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  2649  0FD5  30F0               	movlw	240
  2650  0FD6  00A6               	movwf	??__send_nibble^(0+128)
  2651  0FD7  0826               	movf	??__send_nibble^(0+128),w
  2652  0FD8  05C6               	andwf	_LCDPort^(0+128),f
  2653                           
  2654                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  2655  0FD9  0828               	movf	__send_nibble@data^(0+128),w
  2656  0FDA  390F               	andlw	15
  2657  0FDB  00A6               	movwf	??__send_nibble^(0+128)
  2658  0FDC  0826               	movf	??__send_nibble^(0+128),w
  2659  0FDD  04C6               	iorwf	_LCDPort^(0+128),f
  2660                           
  2661                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  2662  0FDE  318C  2458  318F   	fcall	_mcp23017_ioa_send_byte
  2663                           
  2664                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  2665  0FE1  0021               	movlb	1	; select bank1
  2666  0FE2  16C6               	bsf	_LCDPort^(0+128),5
  2667                           
  2668                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  2669  0FE3  318C  2458  318F   	fcall	_mcp23017_ioa_send_byte
  2670                           
  2671                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  2672  0FE6  3003               	movlw	3
  2673  0FE7  0021               	movlb	1	; select bank1
  2674  0FE8  00A7               	movwf	(??__send_nibble^(0+128)+1)
  2675  0FE9  3097               	movlw	151
  2676  0FEA  00A6               	movwf	??__send_nibble^(0+128)
  2677  0FEB                     u2627:	
  2678  0FEB  0BA6               	decfsz	??__send_nibble^(0+128),f
  2679  0FEC  2FEB               	goto	u2627
  2680  0FED  0BA7               	decfsz	(??__send_nibble^(0+128)+1),f
  2681  0FEE  2FEB               	goto	u2627
  2682  0FEF  3200               	nop2
  2683                           
  2684                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  2685  0FF0  0021               	movlb	1	; select bank1
  2686  0FF1  12C6               	bcf	_LCDPort^(0+128),5
  2687                           
  2688                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  2689  0FF2  318C  2458  318F   	fcall	_mcp23017_ioa_send_byte
  2690                           
  2691                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  2692  0FF5  3003               	movlw	3
  2693  0FF6  0021               	movlb	1	; select bank1
  2694  0FF7  00A7               	movwf	(??__send_nibble^(0+128)+1)
  2695  0FF8  3097               	movlw	151
  2696  0FF9  00A6               	movwf	??__send_nibble^(0+128)
  2697  0FFA                     u2637:	
  2698  0FFA  0BA6               	decfsz	??__send_nibble^(0+128),f
  2699  0FFB  2FFA               	goto	u2637
  2700  0FFC  0BA7               	decfsz	(??__send_nibble^(0+128)+1),f
  2701  0FFD  2FFA               	goto	u2637
  2702  0FFE  3200               	nop2
  2703  0FFF  0008               	return
  2704  1000                     __end_of__send_nibble:	
  2705                           
  2706                           	psect	text10
  2707  0C58                     __ptext10:	
  2708 ;; *************** function _mcp23017_ioa_send_byte *****************
  2709 ;; Defined at:
  2710 ;;		line 59 in file "HD44780-IOE.c"
  2711 ;; Parameters:    Size  Location     Type
  2712 ;;		None
  2713 ;; Auto vars:     Size  Location     Type
  2714 ;;		None
  2715 ;; Return value:  Size  Location     Type
  2716 ;;		None               void
  2717 ;; Registers used:
  2718 ;;		wreg, status,2, status,0, pclath, cstack
  2719 ;; Tracked objects:
  2720 ;;		On entry : 0/0
  2721 ;;		On exit  : 0/0
  2722 ;;		Unchanged: 0/0
  2723 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2724 ;;      Params:         0       0       0       0
  2725 ;;      Locals:         0       0       0       0
  2726 ;;      Temps:          0       0       1       0
  2727 ;;      Totals:         0       0       1       0
  2728 ;;Total ram usage:        1 bytes
  2729 ;; Hardware stack levels used:    1
  2730 ;; Hardware stack levels required when called:   12
  2731 ;; This function calls:
  2732 ;;		_mcp23017_write_reg
  2733 ;; This function is called by:
  2734 ;;		__send_nibble
  2735 ;;		__set_4bit_interface
  2736 ;;		_lcd_command
  2737 ;;		_lcd_backlight
  2738 ;; This function uses a non-reentrant model
  2739 ;;
  2740                           
  2741                           
  2742                           ;psect for function _mcp23017_ioa_send_byte
  2743  0C58                     _mcp23017_ioa_send_byte:	
  2744                           
  2745                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  2746                           
  2747                           ;incstack = 0
  2748                           ; Regs used in _mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  2749  0C58  0021               	movlb	1	; select bank1
  2750  0C59  0846               	movf	_LCDPort^(0+128),w
  2751  0C5A  00A5               	movwf	??_mcp23017_ioa_send_byte^(0+128)
  2752  0C5B  0825               	movf	??_mcp23017_ioa_send_byte^(0+128),w
  2753  0C5C  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2754  0C5D  3012               	movlw	18
  2755  0C5E  318E  2613         	fcall	_mcp23017_write_reg
  2756  0C60  0008               	return
  2757  0C61                     __end_of_mcp23017_ioa_send_byte:	
  2758                           
  2759                           	psect	text11
  2760  0E5E                     __ptext11:	
  2761 ;; *************** function _keypad_init *****************
  2762 ;; Defined at:
  2763 ;;		line 57 in file "keypad.c"
  2764 ;; Parameters:    Size  Location     Type
  2765 ;;		None
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;		None
  2768 ;; Return value:  Size  Location     Type
  2769 ;;		None               void
  2770 ;; Registers used:
  2771 ;;		wreg, status,2, status,0, pclath, cstack
  2772 ;; Tracked objects:
  2773 ;;		On entry : 0/0
  2774 ;;		On exit  : 0/0
  2775 ;;		Unchanged: 0/0
  2776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2777 ;;      Params:         0       0       0       0
  2778 ;;      Locals:         0       0       0       0
  2779 ;;      Temps:          0       0       1       0
  2780 ;;      Totals:         0       0       1       0
  2781 ;;Total ram usage:        1 bytes
  2782 ;; Hardware stack levels used:    1
  2783 ;; Hardware stack levels required when called:   12
  2784 ;; This function calls:
  2785 ;;		_mcp23017_write_reg
  2786 ;; This function is called by:
  2787 ;;		_main
  2788 ;; This function uses a non-reentrant model
  2789 ;;
  2790                           
  2791                           
  2792                           ;psect for function _keypad_init
  2793  0E5E                     _keypad_init:	
  2794                           
  2795                           ;keypad.c: 58: mcp23017_write_reg(MCP23017_REG_IODIRB, 0xFF);
  2796                           
  2797                           ;incstack = 0
  2798                           ; Regs used in _keypad_init: [wreg+status,2+status,0+pclath+cstack]
  2799  0E5E  30FF               	movlw	255
  2800  0E5F  0021               	movlb	1	; select bank1
  2801  0E60  00A5               	movwf	??_keypad_init^(0+128)
  2802  0E61  0825               	movf	??_keypad_init^(0+128),w
  2803  0E62  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2804  0E63  3001               	movlw	1
  2805  0E64  318E  2613  318E   	fcall	_mcp23017_write_reg
  2806                           
  2807                           ;keypad.c: 59: mcp23017_write_reg(MCP23017_REG_GPPUB,0xFF);
  2808  0E67  30FF               	movlw	255
  2809  0E68  0021               	movlb	1	; select bank1
  2810  0E69  00A5               	movwf	??_keypad_init^(0+128)
  2811  0E6A  0825               	movf	??_keypad_init^(0+128),w
  2812  0E6B  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2813  0E6C  300D               	movlw	13
  2814  0E6D  318E  2613  318E   	fcall	_mcp23017_write_reg
  2815                           
  2816                           ;keypad.c: 60: mcp23017_write_reg(MCP23017_REG_IPOLB,0xFF);
  2817  0E70  30FF               	movlw	255
  2818  0E71  0021               	movlb	1	; select bank1
  2819  0E72  00A5               	movwf	??_keypad_init^(0+128)
  2820  0E73  0825               	movf	??_keypad_init^(0+128),w
  2821  0E74  00A3               	movwf	mcp23017_write_reg@value^(0+128)
  2822  0E75  3003               	movlw	3
  2823  0E76  318E  2613         	fcall	_mcp23017_write_reg
  2824  0E78  0008               	return
  2825  0E79                     __end_of_keypad_init:	
  2826                           
  2827                           	psect	text12
  2828  0E13                     __ptext12:	
  2829 ;; *************** function _mcp23017_write_reg *****************
  2830 ;; Defined at:
  2831 ;;		line 60 in file "mcp23017.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;  reg_address     1    wreg     unsigned char 
  2834 ;;  value           1    3[BANK1 ] unsigned char 
  2835 ;; Auto vars:     Size  Location     Type
  2836 ;;  reg_address     1    4[BANK1 ] unsigned char 
  2837 ;; Return value:  Size  Location     Type
  2838 ;;		None               void
  2839 ;; Registers used:
  2840 ;;		wreg, status,2, status,0, pclath, cstack
  2841 ;; Tracked objects:
  2842 ;;		On entry : 0/0
  2843 ;;		On exit  : 0/0
  2844 ;;		Unchanged: 0/0
  2845 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2846 ;;      Params:         0       0       1       0
  2847 ;;      Locals:         0       0       1       0
  2848 ;;      Temps:          0       0       0       0
  2849 ;;      Totals:         0       0       2       0
  2850 ;;Total ram usage:        2 bytes
  2851 ;; Hardware stack levels used:    1
  2852 ;; Hardware stack levels required when called:   11
  2853 ;; This function calls:
  2854 ;;		_i2c_send_address
  2855 ;;		_i2c_send_data
  2856 ;;		_i2c_start
  2857 ;;		_i2c_stop
  2858 ;; This function is called by:
  2859 ;;		_mcp23017_ioa_send_byte
  2860 ;;		_lcd_initialize
  2861 ;;		_keypad_init
  2862 ;; This function uses a non-reentrant model
  2863 ;;
  2864                           
  2865                           
  2866                           ;psect for function _mcp23017_write_reg
  2867  0E13                     _mcp23017_write_reg:	
  2868                           
  2869                           ;incstack = 0
  2870                           ; Regs used in _mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  2871                           ;mcp23017_write_reg@reg_address stored from wreg
  2872  0E13  0021               	movlb	1	; select bank1
  2873  0E14  00A4               	movwf	mcp23017_write_reg@reg_address^(0+128)
  2874                           
  2875                           ;mcp23017.c: 62: i2c_start();
  2876  0E15  318B  23F6  318E   	fcall	_i2c_start
  2877                           
  2878                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  2879  0E18  0021               	movlb	1	; select bank1
  2880  0E19  01A0               	clrf	i2c_send_address@mode^(0+128)
  2881  0E1A  0849               	movf	_g_slave_address_7b^(0+128),w
  2882  0E1B  318C  24E0  318E   	fcall	_i2c_send_address
  2883                           
  2884                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  2885  0E1E  0021               	movlb	1	; select bank1
  2886  0E1F  0824               	movf	mcp23017_write_reg@reg_address^(0+128),w
  2887  0E20  318C  244F  318E   	fcall	_i2c_send_data
  2888                           
  2889                           ;mcp23017.c: 65: i2c_send_data(value);
  2890  0E23  0021               	movlb	1	; select bank1
  2891  0E24  0823               	movf	mcp23017_write_reg@value^(0+128),w
  2892  0E25  318C  244F  318E   	fcall	_i2c_send_data
  2893                           
  2894                           ;mcp23017.c: 66: i2c_stop();
  2895  0E28  318B  23FB         	fcall	_i2c_stop
  2896  0E2A  0008               	return
  2897  0E2B                     __end_of_mcp23017_write_reg:	
  2898                           
  2899                           	psect	text13
  2900  07BD                     __ptext13:	
  2901 ;; *************** function _init *****************
  2902 ;; Defined at:
  2903 ;;		line 96 in file "main.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  load_value      2    2[BANK1 ] unsigned int 
  2906 ;;  prescaler       1    4[BANK1 ] unsigned char 
  2907 ;; Auto vars:     Size  Location     Type
  2908 ;;		None
  2909 ;; Return value:  Size  Location     Type
  2910 ;;		None               void
  2911 ;; Registers used:
  2912 ;;		wreg, status,2, status,0, pclath, cstack
  2913 ;; Tracked objects:
  2914 ;;		On entry : 0/0
  2915 ;;		On exit  : 0/0
  2916 ;;		Unchanged: 0/0
  2917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2918 ;;      Params:         0       0       3       0
  2919 ;;      Locals:         0       0       0       0
  2920 ;;      Temps:          0       0       2       0
  2921 ;;      Totals:         0       0       5       0
  2922 ;;Total ram usage:        5 bytes
  2923 ;; Hardware stack levels used:    1
  2924 ;; Hardware stack levels required when called:   10
  2925 ;; This function calls:
  2926 ;;		_write_t1
  2927 ;; This function is called by:
  2928 ;;		_main
  2929 ;; This function uses a non-reentrant model
  2930 ;;
  2931                           
  2932                           
  2933                           ;psect for function _init
  2934  07BD                     _init:	
  2935                           
  2936                           ;main.c: 98: INTCONbits.GIE = 0;
  2937                           
  2938                           ;incstack = 0
  2939                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2940  07BD  138B               	bcf	11,7	;volatile
  2941                           
  2942                           ;main.c: 99: PIR1bits.TMR1IF = 0;
  2943  07BE  0020               	movlb	0	; select bank0
  2944  07BF  1011               	bcf	17,0	;volatile
  2945                           
  2946                           ;main.c: 100: PIE1bits.TMR1IE = 1;
  2947  07C0  0021               	movlb	1	; select bank1
  2948  07C1  1411               	bsf	17,0	;volatile
  2949                           
  2950                           ;main.c: 101: INTCONbits.PEIE = 1;
  2951  07C2  170B               	bsf	11,6	;volatile
  2952                           
  2953                           ;main.c: 102: INTCONbits.GIE = 1;
  2954  07C3  178B               	bsf	11,7	;volatile
  2955                           
  2956                           ;main.c: 105: T1CONbits.TMR1ON = 0;
  2957  07C4  0020               	movlb	0	; select bank0
  2958  07C5  1018               	bcf	24,0	;volatile
  2959                           
  2960                           ;main.c: 106: T1CONbits.TMR1CS = 00;
  2961  07C6  303F               	movlw	-193
  2962  07C7  0598               	andwf	24,f	;volatile
  2963                           
  2964                           ;main.c: 107: T1CONbits.T1CKPS = prescaler;
  2965  07C8  0021               	movlb	1	; select bank1
  2966  07C9  0824               	movf	init@prescaler^(0+128),w
  2967  07CA  00A5               	movwf	??_init^(0+128)
  2968  07CB  0EA5               	swapf	??_init^(0+128),f
  2969  07CC  0020               	movlb	0	; select bank0
  2970  07CD  0818               	movf	24,w	;volatile
  2971  07CE  0021               	movlb	1	; select bank1
  2972  07CF  0625               	xorwf	??_init^(0+128),w
  2973  07D0  39CF               	andlw	-49
  2974  07D1  0625               	xorwf	??_init^(0+128),w
  2975  07D2  0020               	movlb	0	; select bank0
  2976  07D3  0098               	movwf	24	;volatile
  2977                           
  2978                           ;main.c: 108: g_reload_value = 65536 - load_value;
  2979  07D4  0021               	movlb	1	; select bank1
  2980  07D5  0922               	comf	init@load_value^(0+128),w
  2981  07D6  00A5               	movwf	??_init^(0+128)
  2982  07D7  0923               	comf	(init@load_value+1)^(0+128),w
  2983  07D8  00A6               	movwf	(??_init^(0+128)+1)
  2984  07D9  0AA5               	incf	??_init^(0+128),f
  2985  07DA  1903               	skipnz
  2986  07DB  0AA6               	incf	(??_init^(0+128)+1),f
  2987  07DC  0825               	movf	??_init^(0+128),w
  2988  07DD  00C4               	movwf	_g_reload_value^(0+128)
  2989  07DE  0826               	movf	(??_init+1)^(0+128),w
  2990  07DF  00C5               	movwf	(_g_reload_value+1)^(0+128)
  2991                           
  2992                           ;main.c: 109: write_t1(g_reload_value);
  2993  07E0  0845               	movf	(_g_reload_value+1)^(0+128),w
  2994  07E1  01A1               	clrf	(write_t1@value+1)^(0+128)
  2995  07E2  07A1               	addwf	(write_t1@value+1)^(0+128),f
  2996  07E3  0844               	movf	_g_reload_value^(0+128),w
  2997  07E4  01A0               	clrf	write_t1@value^(0+128)
  2998  07E5  07A0               	addwf	write_t1@value^(0+128),f
  2999  07E6  318C  2475         	fcall	_write_t1
  3000                           
  3001                           ;main.c: 110: T1CONbits.TMR1ON = 1;
  3002  07E8  0020               	movlb	0	; select bank0
  3003  07E9  1418               	bsf	24,0	;volatile
  3004                           
  3005                           ;main.c: 112: g_bl = 0;
  3006  07EA  01D5               	clrf	_g_bl
  3007                           
  3008                           ;main.c: 113: g_clk_pos = CLK_POS_HR;
  3009  07EB  01D6               	clrf	_g_clk_pos
  3010  07EC  0AD6               	incf	_g_clk_pos,f
  3011  07ED  0008               	return
  3012  07EE                     __end_of_init:	
  3013                           
  3014                           	psect	text14
  3015  0C75                     __ptext14:	
  3016 ;; *************** function _write_t1 *****************
  3017 ;; Defined at:
  3018 ;;		line 116 in file "main.c"
  3019 ;; Parameters:    Size  Location     Type
  3020 ;;  value           2    0[BANK1 ] unsigned int 
  3021 ;; Auto vars:     Size  Location     Type
  3022 ;;		None
  3023 ;; Return value:  Size  Location     Type
  3024 ;;		None               void
  3025 ;; Registers used:
  3026 ;;		wreg, status,2
  3027 ;; Tracked objects:
  3028 ;;		On entry : 0/0
  3029 ;;		On exit  : 0/0
  3030 ;;		Unchanged: 0/0
  3031 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3032 ;;      Params:         0       0       2       0
  3033 ;;      Locals:         0       0       0       0
  3034 ;;      Temps:          0       0       0       0
  3035 ;;      Totals:         0       0       2       0
  3036 ;;Total ram usage:        2 bytes
  3037 ;; Hardware stack levels used:    1
  3038 ;; Hardware stack levels required when called:    9
  3039 ;; This function calls:
  3040 ;;		Nothing
  3041 ;; This function is called by:
  3042 ;;		_init
  3043 ;; This function uses a non-reentrant model
  3044 ;;
  3045                           
  3046                           
  3047                           ;psect for function _write_t1
  3048  0C75                     _write_t1:	
  3049                           
  3050                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  3051                           
  3052                           ;incstack = 0
  3053                           ; Regs used in _write_t1: [wreg+status,2]
  3054  0C75  0020               	movlb	0	; select bank0
  3055  0C76  1018               	bcf	24,0	;volatile
  3056                           
  3057                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  3058  0C77  0021               	movlb	1	; select bank1
  3059  0C78  0821               	movf	(write_t1@value+1)^(0+128),w
  3060  0C79  0020               	movlb	0	; select bank0
  3061  0C7A  0097               	movwf	23	;volatile
  3062                           
  3063                           ;main.c: 121: TMR1L = (uint8_t) value;
  3064  0C7B  0021               	movlb	1	; select bank1
  3065  0C7C  0820               	movf	write_t1@value^(0+128),w
  3066  0C7D  0020               	movlb	0	; select bank0
  3067  0C7E  0096               	movwf	22	;volatile
  3068                           
  3069                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  3070  0C7F  1418               	bsf	24,0	;volatile
  3071  0C80  0008               	return
  3072  0C81                     __end_of_write_t1:	
  3073                           
  3074                           	psect	text15
  3075  04CF                     __ptext15:	
  3076 ;; *************** function _i2c_init *****************
  3077 ;; Defined at:
  3078 ;;		line 51 in file "pic12f1840_i2c.c"
  3079 ;; Parameters:    Size  Location     Type
  3080 ;;  clock_hz        4   14[BANK1 ] unsigned long 
  3081 ;; Auto vars:     Size  Location     Type
  3082 ;;		None
  3083 ;; Return value:  Size  Location     Type
  3084 ;;		None               void
  3085 ;; Registers used:
  3086 ;;		wreg, status,2, status,0, pclath, cstack
  3087 ;; Tracked objects:
  3088 ;;		On entry : 0/0
  3089 ;;		On exit  : 0/0
  3090 ;;		Unchanged: 0/0
  3091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3092 ;;      Params:         0       0       4       0
  3093 ;;      Locals:         0       0       0       0
  3094 ;;      Temps:          0       0       4       0
  3095 ;;      Totals:         0       0       8       0
  3096 ;;Total ram usage:        8 bytes
  3097 ;; Hardware stack levels used:    1
  3098 ;; Hardware stack levels required when called:   10
  3099 ;; This function calls:
  3100 ;;		___lldiv
  3101 ;; This function is called by:
  3102 ;;		_main
  3103 ;; This function uses a non-reentrant model
  3104 ;;
  3105                           
  3106                           
  3107                           ;psect for function _i2c_init
  3108  04CF                     _i2c_init:	
  3109                           
  3110                           ;pic12f1840_i2c.c: 53: ANSELAbits.ANSA1 = 0; TRISAbits.TRISA1 = 1;
  3111                           
  3112                           ;incstack = 0
  3113                           ; Regs used in _i2c_init: [wreg+status,2+status,0+pclath+cstack]
  3114  04CF  0023               	movlb	3	; select bank3
  3115  04D0  108C               	bcf	12,1	;volatile
  3116  04D1  0021               	movlb	1	; select bank1
  3117  04D2  148C               	bsf	12,1	;volatile
  3118                           
  3119                           ;pic12f1840_i2c.c: 54: ANSELAbits.ANSA2 = 0; TRISAbits.TRISA2 = 1;
  3120  04D3  0023               	movlb	3	; select bank3
  3121  04D4  110C               	bcf	12,2	;volatile
  3122  04D5  0021               	movlb	1	; select bank1
  3123  04D6  150C               	bsf	12,2	;volatile
  3124                           
  3125                           ;pic12f1840_i2c.c: 57: SSPCON1 = 0b00101000;
  3126  04D7  3028               	movlw	40
  3127  04D8  0024               	movlb	4	; select bank4
  3128  04D9  0095               	movwf	21	;volatile
  3129                           
  3130                           ;pic12f1840_i2c.c: 58: SSPCON2 = 0x00;
  3131  04DA  0196               	clrf	22	;volatile
  3132                           
  3133                           ;pic12f1840_i2c.c: 64: SSPADD = (uint8_t) ((32000000UL) / (4 * clock_hz)) - 1;
  3134  04DB  0021               	movlb	1	; select bank1
  3135  04DC  082E               	movf	i2c_init@clock_hz^(0+128),w
  3136  04DD  00B2               	movwf	??_i2c_init^(0+128)
  3137  04DE  082F               	movf	(i2c_init@clock_hz+1)^(0+128),w
  3138  04DF  00B3               	movwf	(??_i2c_init^(0+128)+1)
  3139  04E0  0830               	movf	(i2c_init@clock_hz+2)^(0+128),w
  3140  04E1  00B4               	movwf	(??_i2c_init^(0+128)+2)
  3141  04E2  0831               	movf	(i2c_init@clock_hz+3)^(0+128),w
  3142  04E3  00B5               	movwf	(??_i2c_init^(0+128)+3)
  3143  04E4  3002               	movlw	2
  3144  04E5                     u2295:	
  3145  04E5  35B2               	lslf	??_i2c_init^(0+128),f
  3146  04E6  0DB3               	rlf	(??_i2c_init^(0+128)+1),f
  3147  04E7  0DB4               	rlf	(??_i2c_init^(0+128)+2),f
  3148  04E8  0DB5               	rlf	(??_i2c_init^(0+128)+3),f
  3149  04E9  0B89               	decfsz	9,f
  3150  04EA  2CE5               	goto	u2295
  3151  04EB  0835               	movf	(??_i2c_init+3)^(0+128),w
  3152  04EC  00A3               	movwf	(___lldiv@divisor+3)^(0+128)
  3153  04ED  0834               	movf	(??_i2c_init+2)^(0+128),w
  3154  04EE  00A2               	movwf	(___lldiv@divisor+2)^(0+128)
  3155  04EF  0833               	movf	(??_i2c_init+1)^(0+128),w
  3156  04F0  00A1               	movwf	(___lldiv@divisor+1)^(0+128)
  3157  04F1  0832               	movf	??_i2c_init^(0+128),w
  3158  04F2  00A0               	movwf	___lldiv@divisor^(0+128)
  3159  04F3  3001               	movlw	1
  3160  04F4  00A7               	movwf	(___lldiv@dividend+3)^(0+128)
  3161  04F5  30E8               	movlw	232
  3162  04F6  00A6               	movwf	(___lldiv@dividend+2)^(0+128)
  3163  04F7  3048               	movlw	72
  3164  04F8  00A5               	movwf	(___lldiv@dividend+1)^(0+128)
  3165  04F9  3000               	movlw	0
  3166  04FA  00A4               	movwf	___lldiv@dividend^(0+128)
  3167  04FB  3184  2429  3184   	fcall	___lldiv
  3168  04FE  0021               	movlb	1	; select bank1
  3169  04FF  0820               	movf	?___lldiv^(0+128),w
  3170  0500  3EFF               	addlw	255
  3171  0501  0024               	movlb	4	; select bank4
  3172  0502  0092               	movwf	18	;volatile
  3173                           
  3174                           ;pic12f1840_i2c.c: 69: if (clock_hz == 400000) {
  3175  0503  3000               	movlw	0
  3176  0504  0021               	movlb	1	; select bank1
  3177  0505  0631               	xorwf	(i2c_init@clock_hz+3)^(0+128),w
  3178  0506  1D03               	skipz
  3179  0507  2D12               	goto	u2305
  3180  0508  3006               	movlw	6
  3181  0509  0630               	xorwf	(i2c_init@clock_hz+2)^(0+128),w
  3182  050A  1D03               	skipz
  3183  050B  2D12               	goto	u2305
  3184  050C  301A               	movlw	26
  3185  050D  062F               	xorwf	(i2c_init@clock_hz+1)^(0+128),w
  3186  050E  1D03               	skipz
  3187  050F  2D12               	goto	u2305
  3188  0510  3080               	movlw	128
  3189  0511  062E               	xorwf	i2c_init@clock_hz^(0+128),w
  3190  0512                     u2305:	
  3191  0512  1D03               	skipz
  3192  0513  2D17               	goto	l21
  3193                           
  3194                           ;pic12f1840_i2c.c: 70: SSPSTATbits.SMP = 0;
  3195  0514  0024               	movlb	4	; select bank4
  3196  0515  1394               	bcf	20,7	;volatile
  3197                           
  3198                           ;pic12f1840_i2c.c: 71: } else {
  3199  0516  0008               	return
  3200  0517                     l21:	
  3201                           
  3202                           ;pic12f1840_i2c.c: 72: SSPSTATbits.SMP = 1;
  3203  0517  0024               	movlb	4	; select bank4
  3204  0518  1794               	bsf	20,7	;volatile
  3205  0519  0008               	return
  3206  051A                     __end_of_i2c_init:	
  3207                           
  3208                           	psect	text16
  3209  0429                     __ptext16:	
  3210 ;; *************** function ___lldiv *****************
  3211 ;; Defined at:
  3212 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lldiv.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;  divisor         4    0[BANK1 ] unsigned long 
  3215 ;;  dividend        4    4[BANK1 ] unsigned long 
  3216 ;; Auto vars:     Size  Location     Type
  3217 ;;  quotient        4    9[BANK1 ] unsigned long 
  3218 ;;  counter         1   13[BANK1 ] unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  4    0[BANK1 ] unsigned long 
  3221 ;; Registers used:
  3222 ;;		wreg, status,2, status,0
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3228 ;;      Params:         0       0       8       0
  3229 ;;      Locals:         0       0       5       0
  3230 ;;      Temps:          0       0       1       0
  3231 ;;      Totals:         0       0      14       0
  3232 ;;Total ram usage:       14 bytes
  3233 ;; Hardware stack levels used:    1
  3234 ;; Hardware stack levels required when called:    9
  3235 ;; This function calls:
  3236 ;;		Nothing
  3237 ;; This function is called by:
  3238 ;;		_i2c_init
  3239 ;; This function uses a non-reentrant model
  3240 ;;
  3241                           
  3242                           
  3243                           ;psect for function ___lldiv
  3244  0429                     ___lldiv:	
  3245                           
  3246                           ;incstack = 0
  3247                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3248  0429  3000               	movlw	0
  3249  042A  0021               	movlb	1	; select bank1
  3250  042B  00AC               	movwf	(___lldiv@quotient+3)^(0+128)
  3251  042C  3000               	movlw	0
  3252  042D  00AB               	movwf	(___lldiv@quotient+2)^(0+128)
  3253  042E  3000               	movlw	0
  3254  042F  00AA               	movwf	(___lldiv@quotient+1)^(0+128)
  3255  0430  3000               	movlw	0
  3256  0431  00A9               	movwf	___lldiv@quotient^(0+128)
  3257  0432  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3258  0433  0422               	iorwf	(___lldiv@divisor+2)^(0+128),w
  3259  0434  0421               	iorwf	(___lldiv@divisor+1)^(0+128),w
  3260  0435  0420               	iorwf	___lldiv@divisor^(0+128),w
  3261  0436  1903               	skipnz
  3262  0437  2C73               	goto	l2771
  3263  0438  01AD               	clrf	___lldiv@counter^(0+128)
  3264  0439  0AAD               	incf	___lldiv@counter^(0+128),f
  3265  043A                     l2757:	
  3266  043A  1BA3               	btfsc	(___lldiv@divisor+3)^(0+128),7
  3267  043B  2C48               	goto	l2759
  3268  043C  3001               	movlw	1
  3269  043D                     u2215:	
  3270  043D  35A0               	lslf	___lldiv@divisor^(0+128),f
  3271  043E  0DA1               	rlf	(___lldiv@divisor+1)^(0+128),f
  3272  043F  0DA2               	rlf	(___lldiv@divisor+2)^(0+128),f
  3273  0440  0DA3               	rlf	(___lldiv@divisor+3)^(0+128),f
  3274  0441  0B89               	decfsz	9,f
  3275  0442  2C3D               	goto	u2215
  3276  0443  3001               	movlw	1
  3277  0444  00A8               	movwf	??___lldiv^(0+128)
  3278  0445  0828               	movf	??___lldiv^(0+128),w
  3279  0446  07AD               	addwf	___lldiv@counter^(0+128),f
  3280  0447  2C3A               	goto	l2757
  3281  0448                     l2759:	
  3282  0448  3001               	movlw	1
  3283  0449                     u2235:	
  3284  0449  35A9               	lslf	___lldiv@quotient^(0+128),f
  3285  044A  0DAA               	rlf	(___lldiv@quotient+1)^(0+128),f
  3286  044B  0DAB               	rlf	(___lldiv@quotient+2)^(0+128),f
  3287  044C  0DAC               	rlf	(___lldiv@quotient+3)^(0+128),f
  3288  044D  0B89               	decfsz	9,f
  3289  044E  2C49               	goto	u2235
  3290  044F  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3291  0450  0227               	subwf	(___lldiv@dividend+3)^(0+128),w
  3292  0451  1D03               	skipz
  3293  0452  2C5D               	goto	u2245
  3294  0453  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3295  0454  0226               	subwf	(___lldiv@dividend+2)^(0+128),w
  3296  0455  1D03               	skipz
  3297  0456  2C5D               	goto	u2245
  3298  0457  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3299  0458  0225               	subwf	(___lldiv@dividend+1)^(0+128),w
  3300  0459  1D03               	skipz
  3301  045A  2C5D               	goto	u2245
  3302  045B  0820               	movf	___lldiv@divisor^(0+128),w
  3303  045C  0224               	subwf	___lldiv@dividend^(0+128),w
  3304  045D                     u2245:	
  3305  045D  1C03               	skipc
  3306  045E  2C68               	goto	l2767
  3307  045F  0820               	movf	___lldiv@divisor^(0+128),w
  3308  0460  02A4               	subwf	___lldiv@dividend^(0+128),f
  3309  0461  0821               	movf	(___lldiv@divisor+1)^(0+128),w
  3310  0462  3BA5               	subwfb	(___lldiv@dividend+1)^(0+128),f
  3311  0463  0822               	movf	(___lldiv@divisor+2)^(0+128),w
  3312  0464  3BA6               	subwfb	(___lldiv@dividend+2)^(0+128),f
  3313  0465  0823               	movf	(___lldiv@divisor+3)^(0+128),w
  3314  0466  3BA7               	subwfb	(___lldiv@dividend+3)^(0+128),f
  3315  0467  1429               	bsf	___lldiv@quotient^(0+128),0
  3316  0468                     l2767:	
  3317  0468  3001               	movlw	1
  3318  0469                     u2255:	
  3319  0469  36A3               	lsrf	(___lldiv@divisor+3)^(0+128),f
  3320  046A  0CA2               	rrf	(___lldiv@divisor+2)^(0+128),f
  3321  046B  0CA1               	rrf	(___lldiv@divisor+1)^(0+128),f
  3322  046C  0CA0               	rrf	___lldiv@divisor^(0+128),f
  3323  046D  0B89               	decfsz	9,f
  3324  046E  2C69               	goto	u2255
  3325  046F  3001               	movlw	1
  3326  0470  02AD               	subwf	___lldiv@counter^(0+128),f
  3327  0471  1D03               	btfss	3,2
  3328  0472  2C48               	goto	l2759
  3329  0473                     l2771:	
  3330  0473  082C               	movf	(___lldiv@quotient+3)^(0+128),w
  3331  0474  00A3               	movwf	(?___lldiv+3)^(0+128)
  3332  0475  082B               	movf	(___lldiv@quotient+2)^(0+128),w
  3333  0476  00A2               	movwf	(?___lldiv+2)^(0+128)
  3334  0477  082A               	movf	(___lldiv@quotient+1)^(0+128),w
  3335  0478  00A1               	movwf	(?___lldiv+1)^(0+128)
  3336  0479  0829               	movf	___lldiv@quotient^(0+128),w
  3337  047A  00A0               	movwf	?___lldiv^(0+128)
  3338  047B  0008               	return
  3339  047C                     __end_of___lldiv:	
  3340                           
  3341                           	psect	text17
  3342  0BC7                     __ptext17:	
  3343 ;; *************** function _ds1307_init *****************
  3344 ;; Defined at:
  3345 ;;		line 81 in file "ds1307.c"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;		None               void
  3352 ;; Registers used:
  3353 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3359 ;;      Params:         0       0       0       0
  3360 ;;      Locals:         0       0       0       0
  3361 ;;      Temps:          0       0       0       0
  3362 ;;      Totals:         0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:   12
  3366 ;; This function calls:
  3367 ;;		_ds1307_get_clock
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           
  3374                           ;psect for function _ds1307_init
  3375  0BC7                     _ds1307_init:	
  3376                           
  3377                           ;ds1307.c: 83: ds1307_get_clock();
  3378                           
  3379                           ;incstack = 0
  3380                           ; Regs used in _ds1307_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3381  0BC7  3186  26D4         	fcall	_ds1307_get_clock
  3382  0BC9  0008               	return
  3383  0BCA                     __end_of_ds1307_init:	
  3384                           
  3385                           	psect	text18
  3386  06D4                     __ptext18:	
  3387 ;; *************** function _ds1307_get_clock *****************
  3388 ;; Defined at:
  3389 ;;		line 140 in file "ds1307.c"
  3390 ;; Parameters:    Size  Location     Type
  3391 ;;		None
  3392 ;; Auto vars:     Size  Location     Type
  3393 ;;  r               1    4[BANK1 ] unsigned char 
  3394 ;; Return value:  Size  Location     Type
  3395 ;;		None               void
  3396 ;; Registers used:
  3397 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3398 ;; Tracked objects:
  3399 ;;		On entry : 0/0
  3400 ;;		On exit  : 0/0
  3401 ;;		Unchanged: 0/0
  3402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3403 ;;      Params:         0       0       0       0
  3404 ;;      Locals:         0       0       1       0
  3405 ;;      Temps:          0       0       1       0
  3406 ;;      Totals:         0       0       2       0
  3407 ;;Total ram usage:        2 bytes
  3408 ;; Hardware stack levels used:    1
  3409 ;; Hardware stack levels required when called:   11
  3410 ;; This function calls:
  3411 ;;		_i2c_read_data
  3412 ;;		_i2c_restart
  3413 ;;		_i2c_send_ack
  3414 ;;		_i2c_send_address
  3415 ;;		_i2c_send_data
  3416 ;;		_i2c_start
  3417 ;;		_i2c_stop
  3418 ;; This function is called by:
  3419 ;;		_ds1307_init
  3420 ;; This function uses a non-reentrant model
  3421 ;;
  3422                           
  3423                           
  3424                           ;psect for function _ds1307_get_clock
  3425  06D4                     _ds1307_get_clock:	
  3426                           
  3427                           ;ds1307.c: 143: i2c_start();
  3428                           
  3429                           ;incstack = 0
  3430                           ; Regs used in _ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  3431  06D4  318B  23F6  3186   	fcall	_i2c_start
  3432                           
  3433                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  3434  06D7  0021               	movlb	1	; select bank1
  3435  06D8  01A0               	clrf	i2c_send_address@mode^(0+128)
  3436  06D9  3068               	movlw	104
  3437  06DA  318C  24E0  3186   	fcall	_i2c_send_address
  3438                           
  3439                           ;ds1307.c: 145: i2c_send_data(0x00);
  3440  06DD  3000               	movlw	0
  3441  06DE  318C  244F  3186   	fcall	_i2c_send_data
  3442                           
  3443                           ;ds1307.c: 146: i2c_restart();
  3444  06E1  318B  23F1  3186   	fcall	_i2c_restart
  3445                           
  3446                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  3447  06E4  0021               	movlb	1	; select bank1
  3448  06E5  01A0               	clrf	i2c_send_address@mode^(0+128)
  3449  06E6  0AA0               	incf	i2c_send_address@mode^(0+128),f
  3450  06E7  3068               	movlw	104
  3451  06E8  318C  24E0  3186   	fcall	_i2c_send_address
  3452                           
  3453                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  3454  06EB  0021               	movlb	1	; select bank1
  3455  06EC  01A4               	clrf	ds1307_get_clock@r^(0+128)
  3456  06ED  3007               	movlw	7
  3457  06EE  0224               	subwf	ds1307_get_clock@r^(0+128),w
  3458  06EF  1803               	btfsc	3,0
  3459  06F0  2F09               	goto	l2517
  3460  06F1                     l2509:	
  3461                           
  3462                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  3463  06F1  318C  24D1  3186   	fcall	_i2c_read_data
  3464  06F4  0021               	movlb	1	; select bank1
  3465  06F5  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3466  06F6  0824               	movf	ds1307_get_clock@r^(0+128),w
  3467  06F7  3EB7               	addlw	_g_reg_data& (0+255)
  3468  06F8  0086               	movwf	6
  3469  06F9  0187               	clrf	7
  3470  06FA  0823               	movf	??_ds1307_get_clock^(0+128),w
  3471  06FB  0081               	movwf	1
  3472                           
  3473                           ;ds1307.c: 151: i2c_send_ack(0);
  3474  06FC  3000               	movlw	0
  3475  06FD  318C  24A8  3186   	fcall	_i2c_send_ack
  3476  0700  3001               	movlw	1
  3477  0701  0021               	movlb	1	; select bank1
  3478  0702  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3479  0703  0823               	movf	??_ds1307_get_clock^(0+128),w
  3480  0704  07A4               	addwf	ds1307_get_clock@r^(0+128),f
  3481  0705  3007               	movlw	7
  3482  0706  0224               	subwf	ds1307_get_clock@r^(0+128),w
  3483  0707  1C03               	skipc
  3484  0708  2EF1               	goto	l2509
  3485  0709                     l2517:	
  3486                           
  3487                           ;ds1307.c: 152: }
  3488                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  3489  0709  318C  24D1  3186   	fcall	_i2c_read_data
  3490  070C  0021               	movlb	1	; select bank1
  3491  070D  00A3               	movwf	??_ds1307_get_clock^(0+128)
  3492  070E  0823               	movf	??_ds1307_get_clock^(0+128),w
  3493  070F  00C7               	movwf	_g_reg_ctrl^(0+128)
  3494                           
  3495                           ;ds1307.c: 154: i2c_send_ack(1);
  3496  0710  3001               	movlw	1
  3497  0711  318C  24A8  3186   	fcall	_i2c_send_ack
  3498                           
  3499                           ;ds1307.c: 155: i2c_stop();
  3500  0714  318B  23FB         	fcall	_i2c_stop
  3501  0716  0008               	return
  3502  0717                     __end_of_ds1307_get_clock:	
  3503                           
  3504                           	psect	text19
  3505  0BFB                     __ptext19:	
  3506 ;; *************** function _i2c_stop *****************
  3507 ;; Defined at:
  3508 ;;		line 92 in file "pic12f1840_i2c.c"
  3509 ;; Parameters:    Size  Location     Type
  3510 ;;		None
  3511 ;; Auto vars:     Size  Location     Type
  3512 ;;		None
  3513 ;; Return value:  Size  Location     Type
  3514 ;;		None               void
  3515 ;; Registers used:
  3516 ;;		wreg, status,2, status,0, pclath, cstack
  3517 ;; Tracked objects:
  3518 ;;		On entry : 0/0
  3519 ;;		On exit  : 0/0
  3520 ;;		Unchanged: 0/0
  3521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3522 ;;      Params:         0       0       0       0
  3523 ;;      Locals:         0       0       0       0
  3524 ;;      Temps:          0       0       0       0
  3525 ;;      Totals:         0       0       0       0
  3526 ;;Total ram usage:        0 bytes
  3527 ;; Hardware stack levels used:    1
  3528 ;; Hardware stack levels required when called:   10
  3529 ;; This function calls:
  3530 ;;		_i2c_wait
  3531 ;; This function is called by:
  3532 ;;		_mcp23017_write_reg
  3533 ;;		_ds1307_get_clock
  3534 ;;		_at24c32_write_byte
  3535 ;;		_at24c32_is_write_busy
  3536 ;;		_at24c32_read_byte
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           
  3541                           ;psect for function _i2c_stop
  3542  0BFB                     _i2c_stop:	
  3543                           
  3544                           ;pic12f1840_i2c.c: 93: i2c_wait();
  3545                           
  3546                           ;incstack = 0
  3547                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  3548  0BFB  318C  2426         	fcall	_i2c_wait
  3549                           
  3550                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  3551  0BFD  0024               	movlb	4	; select bank4
  3552  0BFE  1516               	bsf	22,2	;volatile
  3553  0BFF  0008               	return
  3554  0C00                     __end_of_i2c_stop:	
  3555                           
  3556                           	psect	text20
  3557  0BF6                     __ptext20:	
  3558 ;; *************** function _i2c_start *****************
  3559 ;; Defined at:
  3560 ;;		line 82 in file "pic12f1840_i2c.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;		None
  3563 ;; Auto vars:     Size  Location     Type
  3564 ;;		None
  3565 ;; Return value:  Size  Location     Type
  3566 ;;		None               void
  3567 ;; Registers used:
  3568 ;;		wreg, status,2, status,0, pclath, cstack
  3569 ;; Tracked objects:
  3570 ;;		On entry : 0/0
  3571 ;;		On exit  : 0/0
  3572 ;;		Unchanged: 0/0
  3573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3574 ;;      Params:         0       0       0       0
  3575 ;;      Locals:         0       0       0       0
  3576 ;;      Temps:          0       0       0       0
  3577 ;;      Totals:         0       0       0       0
  3578 ;;Total ram usage:        0 bytes
  3579 ;; Hardware stack levels used:    1
  3580 ;; Hardware stack levels required when called:   10
  3581 ;; This function calls:
  3582 ;;		_i2c_wait
  3583 ;; This function is called by:
  3584 ;;		_mcp23017_write_reg
  3585 ;;		_ds1307_get_clock
  3586 ;;		_at24c32_write_byte
  3587 ;;		_at24c32_is_write_busy
  3588 ;;		_at24c32_read_byte
  3589 ;; This function uses a non-reentrant model
  3590 ;;
  3591                           
  3592                           
  3593                           ;psect for function _i2c_start
  3594  0BF6                     _i2c_start:	
  3595                           
  3596                           ;pic12f1840_i2c.c: 83: i2c_wait();
  3597                           
  3598                           ;incstack = 0
  3599                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  3600  0BF6  318C  2426         	fcall	_i2c_wait
  3601                           
  3602                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  3603  0BF8  0024               	movlb	4	; select bank4
  3604  0BF9  1416               	bsf	22,0	;volatile
  3605  0BFA  0008               	return
  3606  0BFB                     __end_of_i2c_start:	
  3607                           
  3608                           	psect	text21
  3609  0C4F                     __ptext21:	
  3610 ;; *************** function _i2c_send_data *****************
  3611 ;; Defined at:
  3612 ;;		line 115 in file "pic12f1840_i2c.c"
  3613 ;; Parameters:    Size  Location     Type
  3614 ;;  data            1    wreg     unsigned char 
  3615 ;; Auto vars:     Size  Location     Type
  3616 ;;  data            1    0[BANK1 ] unsigned char 
  3617 ;; Return value:  Size  Location     Type
  3618 ;;		None               void
  3619 ;; Registers used:
  3620 ;;		wreg, status,2, status,0, pclath, cstack
  3621 ;; Tracked objects:
  3622 ;;		On entry : 0/0
  3623 ;;		On exit  : 0/0
  3624 ;;		Unchanged: 0/0
  3625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3626 ;;      Params:         0       0       0       0
  3627 ;;      Locals:         0       0       1       0
  3628 ;;      Temps:          0       0       0       0
  3629 ;;      Totals:         0       0       1       0
  3630 ;;Total ram usage:        1 bytes
  3631 ;; Hardware stack levels used:    1
  3632 ;; Hardware stack levels required when called:   10
  3633 ;; This function calls:
  3634 ;;		_i2c_wait
  3635 ;; This function is called by:
  3636 ;;		_mcp23017_write_reg
  3637 ;;		_ds1307_get_clock
  3638 ;;		_at24c32_write_byte
  3639 ;;		_at24c32_read_byte
  3640 ;; This function uses a non-reentrant model
  3641 ;;
  3642                           
  3643                           
  3644                           ;psect for function _i2c_send_data
  3645  0C4F                     _i2c_send_data:	
  3646                           
  3647                           ;incstack = 0
  3648                           ; Regs used in _i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  3649                           ;i2c_send_data@data stored from wreg
  3650  0C4F  0021               	movlb	1	; select bank1
  3651  0C50  00A0               	movwf	i2c_send_data@data^(0+128)
  3652                           
  3653                           ;pic12f1840_i2c.c: 116: i2c_wait();
  3654  0C51  318C  2426         	fcall	_i2c_wait
  3655                           
  3656                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  3657  0C53  0021               	movlb	1	; select bank1
  3658  0C54  0820               	movf	i2c_send_data@data^(0+128),w
  3659  0C55  0024               	movlb	4	; select bank4
  3660  0C56  0091               	movwf	17	;volatile
  3661  0C57  0008               	return
  3662  0C58                     __end_of_i2c_send_data:	
  3663                           
  3664                           	psect	text22
  3665  0CE0                     __ptext22:	
  3666 ;; *************** function _i2c_send_address *****************
  3667 ;; Defined at:
  3668 ;;		line 108 in file "pic12f1840_i2c.c"
  3669 ;; Parameters:    Size  Location     Type
  3670 ;;  address         1    wreg     unsigned char 
  3671 ;;  mode            1    0[BANK1 ] unsigned char 
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;  address         1    2[BANK1 ] unsigned char 
  3674 ;; Return value:  Size  Location     Type
  3675 ;;		None               void
  3676 ;; Registers used:
  3677 ;;		wreg, status,2, status,0, pclath, cstack
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3683 ;;      Params:         0       0       1       0
  3684 ;;      Locals:         0       0       1       0
  3685 ;;      Temps:          0       0       1       0
  3686 ;;      Totals:         0       0       3       0
  3687 ;;Total ram usage:        3 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:   10
  3690 ;; This function calls:
  3691 ;;		_i2c_wait
  3692 ;; This function is called by:
  3693 ;;		_mcp23017_write_reg
  3694 ;;		_ds1307_get_clock
  3695 ;;		_at24c32_write_byte
  3696 ;;		_at24c32_is_write_busy
  3697 ;;		_at24c32_read_byte
  3698 ;; This function uses a non-reentrant model
  3699 ;;
  3700                           
  3701                           
  3702                           ;psect for function _i2c_send_address
  3703  0CE0                     _i2c_send_address:	
  3704                           
  3705                           ;incstack = 0
  3706                           ; Regs used in _i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  3707                           ;i2c_send_address@address stored from wreg
  3708  0CE0  0021               	movlb	1	; select bank1
  3709  0CE1  00A2               	movwf	i2c_send_address@address^(0+128)
  3710                           
  3711                           ;pic12f1840_i2c.c: 109: i2c_wait();
  3712  0CE2  318C  2426         	fcall	_i2c_wait
  3713                           
  3714                           ;pic12f1840_i2c.c: 110: address <<= 1;
  3715  0CE4  1003               	clrc
  3716  0CE5  0021               	movlb	1	; select bank1
  3717  0CE6  0DA2               	rlf	i2c_send_address@address^(0+128),f
  3718                           
  3719                           ;pic12f1840_i2c.c: 111: address += mode;
  3720  0CE7  0820               	movf	i2c_send_address@mode^(0+128),w
  3721  0CE8  00A1               	movwf	??_i2c_send_address^(0+128)
  3722  0CE9  0821               	movf	??_i2c_send_address^(0+128),w
  3723  0CEA  07A2               	addwf	i2c_send_address@address^(0+128),f
  3724                           
  3725                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  3726  0CEB  0822               	movf	i2c_send_address@address^(0+128),w
  3727  0CEC  0024               	movlb	4	; select bank4
  3728  0CED  0091               	movwf	17	;volatile
  3729  0CEE  0008               	return
  3730  0CEF                     __end_of_i2c_send_address:	
  3731                           
  3732                           	psect	text23
  3733  0CA8                     __ptext23:	
  3734 ;; *************** function _i2c_send_ack *****************
  3735 ;; Defined at:
  3736 ;;		line 97 in file "pic12f1840_i2c.c"
  3737 ;; Parameters:    Size  Location     Type
  3738 ;;  ack             1    wreg     unsigned char 
  3739 ;; Auto vars:     Size  Location     Type
  3740 ;;  ack             1    0[BANK1 ] unsigned char 
  3741 ;; Return value:  Size  Location     Type
  3742 ;;		None               void
  3743 ;; Registers used:
  3744 ;;		wreg, status,2, status,0, pclath, cstack
  3745 ;; Tracked objects:
  3746 ;;		On entry : 0/0
  3747 ;;		On exit  : 0/0
  3748 ;;		Unchanged: 0/0
  3749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3750 ;;      Params:         0       0       0       0
  3751 ;;      Locals:         0       0       1       0
  3752 ;;      Temps:          0       0       0       0
  3753 ;;      Totals:         0       0       1       0
  3754 ;;Total ram usage:        1 bytes
  3755 ;; Hardware stack levels used:    1
  3756 ;; Hardware stack levels required when called:   10
  3757 ;; This function calls:
  3758 ;;		_i2c_wait
  3759 ;; This function is called by:
  3760 ;;		_ds1307_get_clock
  3761 ;;		_at24c32_read_byte
  3762 ;; This function uses a non-reentrant model
  3763 ;;
  3764                           
  3765                           
  3766                           ;psect for function _i2c_send_ack
  3767  0CA8                     _i2c_send_ack:	
  3768                           
  3769                           ;incstack = 0
  3770                           ; Regs used in _i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  3771                           ;i2c_send_ack@ack stored from wreg
  3772  0CA8  0021               	movlb	1	; select bank1
  3773  0CA9  00A0               	movwf	i2c_send_ack@ack^(0+128)
  3774                           
  3775                           ;pic12f1840_i2c.c: 98: i2c_wait();
  3776  0CAA  318C  2426         	fcall	_i2c_wait
  3777                           
  3778                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  3779  0CAC  0021               	movlb	1	; select bank1
  3780  0CAD  0820               	movf	i2c_send_ack@ack^(0+128),w
  3781  0CAE  0024               	movlb	4	; select bank4
  3782  0CAF  1D03               	skipz
  3783  0CB0  1696               	bsf	22,5	;volatile
  3784  0CB1  1903               	skipnz
  3785  0CB2  1296               	bcf	22,5	;volatile
  3786                           
  3787                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  3788  0CB3  1616               	bsf	22,4	;volatile
  3789  0CB4  0008               	return
  3790  0CB5                     __end_of_i2c_send_ack:	
  3791                           
  3792                           	psect	text24
  3793  0BF1                     __ptext24:	
  3794 ;; *************** function _i2c_restart *****************
  3795 ;; Defined at:
  3796 ;;		line 87 in file "pic12f1840_i2c.c"
  3797 ;; Parameters:    Size  Location     Type
  3798 ;;		None
  3799 ;; Auto vars:     Size  Location     Type
  3800 ;;		None
  3801 ;; Return value:  Size  Location     Type
  3802 ;;		None               void
  3803 ;; Registers used:
  3804 ;;		wreg, status,2, status,0, pclath, cstack
  3805 ;; Tracked objects:
  3806 ;;		On entry : 0/0
  3807 ;;		On exit  : 0/0
  3808 ;;		Unchanged: 0/0
  3809 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3810 ;;      Params:         0       0       0       0
  3811 ;;      Locals:         0       0       0       0
  3812 ;;      Temps:          0       0       0       0
  3813 ;;      Totals:         0       0       0       0
  3814 ;;Total ram usage:        0 bytes
  3815 ;; Hardware stack levels used:    1
  3816 ;; Hardware stack levels required when called:   10
  3817 ;; This function calls:
  3818 ;;		_i2c_wait
  3819 ;; This function is called by:
  3820 ;;		_ds1307_get_clock
  3821 ;;		_at24c32_read_byte
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825                           
  3826                           ;psect for function _i2c_restart
  3827  0BF1                     _i2c_restart:	
  3828                           
  3829                           ;pic12f1840_i2c.c: 88: i2c_wait();
  3830                           
  3831                           ;incstack = 0
  3832                           ; Regs used in _i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  3833  0BF1  318C  2426         	fcall	_i2c_wait
  3834                           
  3835                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  3836  0BF3  0024               	movlb	4	; select bank4
  3837  0BF4  1496               	bsf	22,1	;volatile
  3838  0BF5  0008               	return
  3839  0BF6                     __end_of_i2c_restart:	
  3840                           
  3841                           	psect	text25
  3842  0CD1                     __ptext25:	
  3843 ;; *************** function _i2c_read_data *****************
  3844 ;; Defined at:
  3845 ;;		line 120 in file "pic12f1840_i2c.c"
  3846 ;; Parameters:    Size  Location     Type
  3847 ;;		None
  3848 ;; Auto vars:     Size  Location     Type
  3849 ;;  read_data       1    1[BANK1 ] unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      unsigned char 
  3852 ;; Registers used:
  3853 ;;		wreg, status,2, status,0, pclath, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3859 ;;      Params:         0       0       0       0
  3860 ;;      Locals:         0       0       1       0
  3861 ;;      Temps:          0       0       1       0
  3862 ;;      Totals:         0       0       2       0
  3863 ;;Total ram usage:        2 bytes
  3864 ;; Hardware stack levels used:    1
  3865 ;; Hardware stack levels required when called:   10
  3866 ;; This function calls:
  3867 ;;		_i2c_wait
  3868 ;; This function is called by:
  3869 ;;		_ds1307_get_clock
  3870 ;;		_at24c32_read_byte
  3871 ;; This function uses a non-reentrant model
  3872 ;;
  3873                           
  3874                           
  3875                           ;psect for function _i2c_read_data
  3876  0CD1                     _i2c_read_data:	
  3877                           
  3878                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  3879                           ;pic12f1840_i2c.c: 123: i2c_wait();
  3880                           
  3881                           ;incstack = 0
  3882                           ; Regs used in _i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  3883  0CD1  318C  2426  318C   	fcall	_i2c_wait
  3884                           
  3885                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  3886  0CD4  0024               	movlb	4	; select bank4
  3887  0CD5  1596               	bsf	22,3	;volatile
  3888                           
  3889                           ;pic12f1840_i2c.c: 125: i2c_wait();
  3890  0CD6  318C  2426         	fcall	_i2c_wait
  3891                           
  3892                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  3893  0CD8  0024               	movlb	4	; select bank4
  3894  0CD9  0811               	movf	17,w	;volatile
  3895  0CDA  0021               	movlb	1	; select bank1
  3896  0CDB  00A0               	movwf	??_i2c_read_data^(0+128)
  3897  0CDC  0820               	movf	??_i2c_read_data^(0+128),w
  3898  0CDD  00A1               	movwf	i2c_read_data@read_data^(0+128)
  3899                           
  3900                           ;pic12f1840_i2c.c: 128: return read_data;
  3901  0CDE  0821               	movf	i2c_read_data@read_data^(0+128),w
  3902  0CDF  0008               	return
  3903  0CE0                     __end_of_i2c_read_data:	
  3904                           
  3905                           	psect	text26
  3906  0C26                     __ptext26:	
  3907 ;; *************** function _i2c_wait *****************
  3908 ;; Defined at:
  3909 ;;		line 76 in file "pic12f1840_i2c.c"
  3910 ;; Parameters:    Size  Location     Type
  3911 ;;		None
  3912 ;; Auto vars:     Size  Location     Type
  3913 ;;		None
  3914 ;; Return value:  Size  Location     Type
  3915 ;;		None               void
  3916 ;; Registers used:
  3917 ;;		wreg, status,2
  3918 ;; Tracked objects:
  3919 ;;		On entry : 0/0
  3920 ;;		On exit  : 0/0
  3921 ;;		Unchanged: 0/0
  3922 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3923 ;;      Params:         0       0       0       0
  3924 ;;      Locals:         0       0       0       0
  3925 ;;      Temps:          0       0       0       0
  3926 ;;      Totals:         0       0       0       0
  3927 ;;Total ram usage:        0 bytes
  3928 ;; Hardware stack levels used:    1
  3929 ;; Hardware stack levels required when called:    9
  3930 ;; This function calls:
  3931 ;;		Nothing
  3932 ;; This function is called by:
  3933 ;;		_i2c_start
  3934 ;;		_i2c_restart
  3935 ;;		_i2c_stop
  3936 ;;		_i2c_send_ack
  3937 ;;		_i2c_send_address
  3938 ;;		_i2c_send_data
  3939 ;;		_i2c_read_data
  3940 ;;		_i2c_read_ack
  3941 ;; This function uses a non-reentrant model
  3942 ;;
  3943                           
  3944                           
  3945                           ;psect for function _i2c_wait
  3946  0C26                     _i2c_wait:	
  3947  0C26                     l2089:	
  3948                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  3949                           
  3950                           ;incstack = 0
  3951                           ; Regs used in _i2c_wait: [wreg+status,2]
  3952                           
  3953  0C26  0024               	movlb	4	; select bank4
  3954  0C27  0816               	movf	22,w	;volatile
  3955  0C28  391F               	andlw	31
  3956  0C29  1903               	btfsc	3,2
  3957  0C2A  1914               	btfsc	20,2	;volatile
  3958  0C2B  2C26               	goto	l2089
  3959  0C2C  0008               	return
  3960  0C2D                     __end_of_i2c_wait:	
  3961                           
  3962                           	psect	intentry
  3963  0004                     __pintentry:	
  3964 ;; *************** function _tmr_isr *****************
  3965 ;; Defined at:
  3966 ;;		line 208 in file "main.c"
  3967 ;; Parameters:    Size  Location     Type
  3968 ;;		None
  3969 ;; Auto vars:     Size  Location     Type
  3970 ;;  time           10   41[BANK0 ] unsigned char [10]
  3971 ;;  date           10   31[BANK0 ] unsigned char [10]
  3972 ;;  pos             2   51[BANK0 ] unsigned char [2]
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 0/0
  3979 ;;		On exit  : 0/0
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3982 ;;      Params:         0       0       0       0
  3983 ;;      Locals:         0      22       0       0
  3984 ;;      Temps:          0       3       0       0
  3985 ;;      Totals:         0      25       0       0
  3986 ;;Total ram usage:       25 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    8
  3989 ;; This function calls:
  3990 ;;		_ds1307_date_formatted
  3991 ;;		_ds1307_time_formatted
  3992 ;;		_keypad_read_key
  3993 ;;		_lcd_goto
  3994 ;;		_lcd_write
  3995 ;;		_sprintf
  3996 ;;		_update_clock
  3997 ;;		i1_ds1307_get_clock
  3998 ;;		i1_lcd_backlight
  3999 ;;		i1_write_t1
  4000 ;; This function is called by:
  4001 ;;		Interrupt level 1
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005  0004                     _tmr_isr:	
  4006                           
  4007                           ;incstack = 0
  4008 ;; hardware stack exceeded
  4009                           ; Regs used in _tmr_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4010  0004  147E               	bsf	126,0	;set compiler interrupt flag
  4011  0005  3180               	pagesel	$
  4012  0006  0020               	movlb	0	; select bank0
  4013  0007  087F               	movf	127,w
  4014  0008  00BE               	movwf	??_tmr_isr+2
  4015                           
  4016                           ;main.c: 209: write_t1(g_reload_value);
  4017  0009  0021               	movlb	1	; select bank1
  4018  000A  0845               	movf	(_g_reload_value+1)^(0+128),w
  4019  000B  01F1               	clrf	i1write_t1@value+1
  4020  000C  07F1               	addwf	i1write_t1@value+1,f
  4021  000D  0844               	movf	_g_reload_value^(0+128),w
  4022  000E  01F0               	clrf	i1write_t1@value
  4023  000F  07F0               	addwf	i1write_t1@value,f
  4024  0010  318C  242D  3180   	fcall	i1_write_t1
  4025                           
  4026                           ;main.c: 210: g_counter1++;
  4027  0013  3001               	movlw	1
  4028  0014  0020               	movlb	0	; select bank0
  4029  0015  00BC               	movwf	??_tmr_isr
  4030  0016  083C               	movf	??_tmr_isr,w
  4031  0017  07D7               	addwf	_g_counter1,f
  4032                           
  4033                           ;main.c: 213: switch (keypad_read_key()) {
  4034  0018  2847               	goto	i1l3059
  4035  0019                     i1l3039:	
  4036                           ;main.c: 214: case 0x01:
  4037                           
  4038                           
  4039                           ;main.c: 215: update_clock(1);
  4040  0019  3001               	movlw	1
  4041  001A  3180  20E6  3180   	fcall	_update_clock
  4042                           
  4043                           ;main.c: 216: break;
  4044  001D  285A               	goto	i1l3061
  4045  001E                     i1l3041:	
  4046                           ;main.c: 217: case 0x02:
  4047                           
  4048                           
  4049                           ;main.c: 218: update_clock(0);
  4050  001E  3000               	movlw	0
  4051  001F  3180  20E6  3180   	fcall	_update_clock
  4052                           
  4053                           ;main.c: 219: break;
  4054  0022  285A               	goto	i1l3061
  4055  0023                     i1l3043:	
  4056                           ;main.c: 220: case 0x04:
  4057                           
  4058                           
  4059                           ;main.c: 221: if (g_clk_pos == CLK_POS_HR) {
  4060  0023  0020               	movlb	0	; select bank0
  4061  0024  0856               	movf	_g_clk_pos,w
  4062  0025  3A01               	xorlw	1
  4063  0026  1D03               	skipz
  4064  0027  282D               	goto	i1l3047
  4065                           
  4066                           ;main.c: 222: g_clk_pos = CLK_POS_HR_MOD;
  4067  0028  3007               	movlw	7
  4068  0029  00BC               	movwf	??_tmr_isr
  4069  002A  083C               	movf	??_tmr_isr,w
  4070  002B  00D6               	movwf	_g_clk_pos
  4071                           
  4072                           ;main.c: 223: } else {
  4073  002C  285A               	goto	i1l3061
  4074  002D                     i1l3047:	
  4075                           
  4076                           ;main.c: 224: g_clk_pos--;
  4077  002D  3001               	movlw	1
  4078  002E  02D6               	subwf	_g_clk_pos,f
  4079                           
  4080                           ;main.c: 225: }
  4081                           ;main.c: 226: break;
  4082  002F  285A               	goto	i1l3061
  4083  0030                     i1l3049:	
  4084                           ;main.c: 227: case 0x08:
  4085                           
  4086                           
  4087                           ;main.c: 228: if (g_clk_pos == CLK_POS_HR_MOD) {
  4088  0030  0020               	movlb	0	; select bank0
  4089  0031  0856               	movf	_g_clk_pos,w
  4090  0032  3A07               	xorlw	7
  4091  0033  1D03               	skipz
  4092  0034  2838               	goto	i1l3053
  4093                           
  4094                           ;main.c: 229: g_clk_pos = CLK_POS_HR;
  4095  0035  01D6               	clrf	_g_clk_pos
  4096  0036  0AD6               	incf	_g_clk_pos,f
  4097                           
  4098                           ;main.c: 230: } else {
  4099  0037  285A               	goto	i1l3061
  4100  0038                     i1l3053:	
  4101                           
  4102                           ;main.c: 231: g_clk_pos++;
  4103  0038  3001               	movlw	1
  4104  0039  00BC               	movwf	??_tmr_isr
  4105  003A  083C               	movf	??_tmr_isr,w
  4106  003B  07D6               	addwf	_g_clk_pos,f
  4107                           
  4108                           ;main.c: 232: }
  4109                           ;main.c: 233: break;
  4110  003C  285A               	goto	i1l3061
  4111  003D                     i1l3055:	
  4112                           ;main.c: 234: case 0x10:
  4113                           
  4114                           
  4115                           ;main.c: 235: g_bl = !g_bl;
  4116  003D  0020               	movlb	0	; select bank0
  4117  003E  0855               	movf	_g_bl,w
  4118  003F  3A00               	xorlw	0
  4119  0040  3000               	movlw	0
  4120  0041  1903               	skipnz
  4121  0042  3001               	movlw	1
  4122  0043  00BC               	movwf	??_tmr_isr
  4123  0044  083C               	movf	??_tmr_isr,w
  4124  0045  00D5               	movwf	_g_bl
  4125                           
  4126                           ;main.c: 237: }
  4127                           
  4128                           ;main.c: 236: break;
  4129  0046  285A               	goto	i1l3061
  4130  0047                     i1l3059:	
  4131  0047  318E  269B  3180   	fcall	_keypad_read_key
  4132                           
  4133                           ; Switch size 1, requested type "space"
  4134                           ; Number of cases is 5, Range of values is 1 to 16
  4135                           ; switch strategies available:
  4136                           ; Name         Instructions Cycles
  4137                           ; simple_byte           16     9 (average)
  4138                           ; direct_byte           41     9 (fixed)
  4139                           ; jumptable            263     9 (fixed)
  4140                           ;	Chosen strategy is simple_byte
  4141  004A  3A01               	xorlw	1	; case 1
  4142  004B  1903               	skipnz
  4143  004C  2819               	goto	i1l3039
  4144  004D  3A03               	xorlw	3	; case 2
  4145  004E  1903               	skipnz
  4146  004F  281E               	goto	i1l3041
  4147  0050  3A06               	xorlw	6	; case 4
  4148  0051  1903               	skipnz
  4149  0052  2823               	goto	i1l3043
  4150  0053  3A0C               	xorlw	12	; case 8
  4151  0054  1903               	skipnz
  4152  0055  2830               	goto	i1l3049
  4153  0056  3A18               	xorlw	24	; case 16
  4154  0057  1903               	skipnz
  4155  0058  283D               	goto	i1l3055
  4156  0059  285A               	goto	i1l3061
  4157  005A                     i1l3061:	
  4158                           
  4159                           ;main.c: 240: if (g_counter1 == 10) {
  4160  005A  0020               	movlb	0	; select bank0
  4161  005B  0857               	movf	_g_counter1,w
  4162  005C  3A0A               	xorlw	10
  4163  005D  1D03               	skipz
  4164  005E  28CF               	goto	i1l3095
  4165                           
  4166                           ;main.c: 241: uint8_t time[10], date[10], pos[2];
  4167                           ;main.c: 243: ds1307_get_clock();
  4168  005F  3187  2717  3180   	fcall	i1_ds1307_get_clock
  4169                           
  4170                           ;main.c: 244: ds1307_time_formatted(time);
  4171  0062  3049               	movlw	tmr_isr@time& (0+255)
  4172  0063  3183  23BC  3180   	fcall	_ds1307_time_formatted
  4173                           
  4174                           ;main.c: 245: ds1307_date_formatted(date);
  4175  0066  303F               	movlw	tmr_isr@date& (0+255)
  4176  0067  3185  25D7  3180   	fcall	_ds1307_date_formatted
  4177                           
  4178                           ;main.c: 246: lcd_goto(1, 1);
  4179  006A  01FD               	clrf	lcd_goto@col
  4180  006B  0AFD               	incf	lcd_goto@col,f
  4181  006C  3001               	movlw	1
  4182  006D  318F  2703  3180   	fcall	_lcd_goto
  4183                           
  4184                           ;main.c: 247: lcd_write((uint8_t *) "Time: ");
  4185  0070  3038               	movlw	low (STR_1| (0+32768))
  4186  0071  0020               	movlb	0	; select bank0
  4187  0072  00A0               	movwf	lcd_write@str
  4188  0073  3086               	movlw	high (STR_1| (0+32768))
  4189  0074  00A1               	movwf	lcd_write@str+1
  4190  0075  318F  272A  3180   	fcall	_lcd_write
  4191                           
  4192                           ;main.c: 248: lcd_goto(1, 7);
  4193  0078  3007               	movlw	7
  4194  0079  0020               	movlb	0	; select bank0
  4195  007A  00BC               	movwf	??_tmr_isr
  4196  007B  083C               	movf	??_tmr_isr,w
  4197  007C  00FD               	movwf	lcd_goto@col
  4198  007D  3001               	movlw	1
  4199  007E  318F  2703  3180   	fcall	_lcd_goto
  4200                           
  4201                           ;main.c: 249: lcd_write(time);
  4202  0081  3049               	movlw	low tmr_isr@time
  4203  0082  0020               	movlb	0	; select bank0
  4204  0083  00A0               	movwf	lcd_write@str
  4205  0084  3000               	movlw	high tmr_isr@time
  4206  0085  00A1               	movwf	lcd_write@str+1
  4207  0086  318F  272A  3180   	fcall	_lcd_write
  4208                           
  4209                           ;main.c: 250: lcd_goto(2, 1);
  4210  0089  01FD               	clrf	lcd_goto@col
  4211  008A  0AFD               	incf	lcd_goto@col,f
  4212  008B  3002               	movlw	2
  4213  008C  318F  2703  3180   	fcall	_lcd_goto
  4214                           
  4215                           ;main.c: 251: lcd_write((uint8_t *) "Date: ");
  4216  008F  303F               	movlw	low (STR_2| (0+32768))
  4217  0090  0020               	movlb	0	; select bank0
  4218  0091  00A0               	movwf	lcd_write@str
  4219  0092  3086               	movlw	high (STR_2| (0+32768))
  4220  0093  00A1               	movwf	lcd_write@str+1
  4221  0094  318F  272A  3180   	fcall	_lcd_write
  4222                           
  4223                           ;main.c: 252: lcd_goto(2, 7);
  4224  0097  3007               	movlw	7
  4225  0098  0020               	movlb	0	; select bank0
  4226  0099  00BC               	movwf	??_tmr_isr
  4227  009A  083C               	movf	??_tmr_isr,w
  4228  009B  00FD               	movwf	lcd_goto@col
  4229  009C  3002               	movlw	2
  4230  009D  318F  2703  3180   	fcall	_lcd_goto
  4231                           
  4232                           ;main.c: 253: lcd_write(date);
  4233  00A0  303F               	movlw	low tmr_isr@date
  4234  00A1  0020               	movlb	0	; select bank0
  4235  00A2  00A0               	movwf	lcd_write@str
  4236  00A3  3000               	movlw	high tmr_isr@date
  4237  00A4  00A1               	movwf	lcd_write@str+1
  4238  00A5  318F  272A  3180   	fcall	_lcd_write
  4239                           
  4240                           ;main.c: 254: lcd_goto(2, 16);
  4241  00A8  3010               	movlw	16
  4242  00A9  0020               	movlb	0	; select bank0
  4243  00AA  00BC               	movwf	??_tmr_isr
  4244  00AB  083C               	movf	??_tmr_isr,w
  4245  00AC  00FD               	movwf	lcd_goto@col
  4246  00AD  3002               	movlw	2
  4247  00AE  318F  2703  3180   	fcall	_lcd_goto
  4248                           
  4249                           ;main.c: 255: sprintf(pos, "%u", g_clk_pos);
  4250  00B1  3046               	movlw	low (STR_3| (0+32768))
  4251  00B2  0020               	movlb	0	; select bank0
  4252  00B3  00A0               	movwf	sprintf@f
  4253  00B4  3086               	movlw	high (STR_3| (0+32768))
  4254  00B5  00A1               	movwf	sprintf@f+1
  4255  00B6  0856               	movf	_g_clk_pos,w
  4256  00B7  00BC               	movwf	??_tmr_isr
  4257  00B8  01BD               	clrf	??_tmr_isr+1
  4258  00B9  083C               	movf	??_tmr_isr,w
  4259  00BA  00A2               	movwf	?_sprintf+2
  4260  00BB  083D               	movf	??_tmr_isr+1,w
  4261  00BC  00A3               	movwf	?_sprintf+3
  4262  00BD  3053               	movlw	tmr_isr@pos& (0+255)
  4263  00BE  3182  221B  3180   	fcall	_sprintf
  4264                           
  4265                           ;main.c: 256: lcd_write(pos);
  4266  00C1  3053               	movlw	low tmr_isr@pos
  4267  00C2  0020               	movlb	0	; select bank0
  4268  00C3  00A0               	movwf	lcd_write@str
  4269  00C4  3000               	movlw	high tmr_isr@pos
  4270  00C5  00A1               	movwf	lcd_write@str+1
  4271  00C6  318F  272A  3180   	fcall	_lcd_write
  4272                           
  4273                           ;main.c: 258: lcd_backlight(g_bl);
  4274  00C9  0020               	movlb	0	; select bank0
  4275  00CA  0855               	movf	_g_bl,w
  4276  00CB  318C  2446         	fcall	i1_lcd_backlight
  4277                           
  4278                           ;main.c: 259: g_counter1 = 0;
  4279  00CD  0020               	movlb	0	; select bank0
  4280  00CE  01D7               	clrf	_g_counter1
  4281  00CF                     i1l3095:	
  4282                           
  4283                           ;main.c: 260: }
  4284                           ;main.c: 262: PIR1bits.TMR1IF = 0;
  4285  00CF  1011               	bcf	17,0	;volatile
  4286  00D0  083E               	movf	??_tmr_isr+2,w
  4287  00D1  00FF               	movwf	127
  4288  00D2  107E               	bcf	126,0	;clear compiler interrupt flag
  4289  00D3  0009               	retfie
  4290  00D4                     __end_of_tmr_isr:	
  4291                           
  4292                           	psect	text28
  4293  0C2D                     __ptext28:	
  4294 ;; *************** function i1_write_t1 *****************
  4295 ;; Defined at:
  4296 ;;		line 116 in file "main.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;  value           2    0[COMMON] unsigned int 
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;		None               void
  4303 ;; Registers used:
  4304 ;;		wreg, status,2
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4310 ;;      Params:         2       0       0       0
  4311 ;;      Locals:         0       0       0       0
  4312 ;;      Temps:          0       0       0       0
  4313 ;;      Totals:         2       0       0       0
  4314 ;;Total ram usage:        2 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; This function calls:
  4317 ;;		Nothing
  4318 ;; This function is called by:
  4319 ;;		_tmr_isr
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           
  4324                           ;psect for function i1_write_t1
  4325  0C2D                     i1_write_t1:	
  4326                           
  4327                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  4328                           
  4329                           ;incstack = 0
  4330                           ; Regs used in i1_write_t1: [wreg+status,2]
  4331  0C2D  0020               	movlb	0	; select bank0
  4332  0C2E  1018               	bcf	24,0	;volatile
  4333                           
  4334                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  4335  0C2F  0871               	movf	i1write_t1@value+1,w
  4336  0C30  0097               	movwf	23	;volatile
  4337                           
  4338                           ;main.c: 121: TMR1L = (uint8_t) value;
  4339  0C31  0870               	movf	i1write_t1@value,w
  4340  0C32  0096               	movwf	22	;volatile
  4341                           
  4342                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  4343  0C33  1418               	bsf	24,0	;volatile
  4344  0C34  0008               	return
  4345  0C35                     __end_ofi1_write_t1:	
  4346                           
  4347                           	psect	text29
  4348  0C46                     __ptext29:	
  4349 ;; *************** function i1_lcd_backlight *****************
  4350 ;; Defined at:
  4351 ;;		line 227 in file "HD44780-IOE.c"
  4352 ;; Parameters:    Size  Location     Type
  4353 ;;  state           1    wreg     unsigned char 
  4354 ;; Auto vars:     Size  Location     Type
  4355 ;;  state           1    6[COMMON] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;		None               void
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0, pclath, cstack
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4365 ;;      Params:         0       0       0       0
  4366 ;;      Locals:         1       0       0       0
  4367 ;;      Temps:          0       0       0       0
  4368 ;;      Totals:         1       0       0       0
  4369 ;;Total ram usage:        1 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; Hardware stack levels required when called:    4
  4372 ;; This function calls:
  4373 ;;		i1_mcp23017_ioa_send_byte
  4374 ;; This function is called by:
  4375 ;;		_tmr_isr
  4376 ;; This function uses a non-reentrant model
  4377 ;;
  4378                           
  4379                           
  4380                           ;psect for function i1_lcd_backlight
  4381  0C46                     i1_lcd_backlight:	
  4382                           
  4383                           ;incstack = 0
  4384                           ; Regs used in i1_lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  4385                           ;i1lcd_backlight@state stored from wreg
  4386  0C46  00F6               	movwf	i1lcd_backlight@state
  4387                           
  4388                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  4389  0C47  0876               	movf	i1lcd_backlight@state,w
  4390  0C48  0021               	movlb	1	; select bank1
  4391  0C49  1346               	bcf	_LCDPort^(0+128),6
  4392  0C4A  1D03               	skipz
  4393  0C4B  1746               	bsf	_LCDPort^(0+128),6
  4394                           
  4395                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  4396  0C4C  318C  243D         	fcall	i1_mcp23017_ioa_send_byte
  4397  0C4E  0008               	return
  4398  0C4F                     __end_ofi1_lcd_backlight:	
  4399                           
  4400                           	psect	text30
  4401  00E6                     __ptext30:	
  4402 ;; *************** function _update_clock *****************
  4403 ;; Defined at:
  4404 ;;		line 139 in file "main.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;  up_down         1    wreg     unsigned char 
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  up_down         1   13[BANK0 ] unsigned char 
  4409 ;;  val             1   14[BANK0 ] unsigned char 
  4410 ;;  pm              1   12[BANK0 ] unsigned char 
  4411 ;; Return value:  Size  Location     Type
  4412 ;;		None               void
  4413 ;; Registers used:
  4414 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4420 ;;      Params:         0       0       0       0
  4421 ;;      Locals:         0       3       0       0
  4422 ;;      Temps:          0       3       0       0
  4423 ;;      Totals:         0       6       0       0
  4424 ;;Total ram usage:        6 bytes
  4425 ;; Hardware stack levels used:    1
  4426 ;; Hardware stack levels required when called:    5
  4427 ;; This function calls:
  4428 ;;		_adjust_val
  4429 ;;		_ds1307_get_day_of_month
  4430 ;;		_ds1307_get_hours
  4431 ;;		_ds1307_get_minutes
  4432 ;;		_ds1307_get_month
  4433 ;;		_ds1307_get_seconds
  4434 ;;		_ds1307_get_year
  4435 ;;		_ds1307_is_12hr_mode
  4436 ;;		_ds1307_is_pm
  4437 ;;		_ds1307_set_clock
  4438 ;;		_ds1307_set_day_of_month
  4439 ;;		_ds1307_set_hours
  4440 ;;		_ds1307_set_minutes
  4441 ;;		_ds1307_set_month
  4442 ;;		_ds1307_set_pm_am
  4443 ;;		_ds1307_set_seconds
  4444 ;;		_ds1307_set_year
  4445 ;;		_ds1307_stop_clock
  4446 ;;		_ds1307_switch_to_12hr
  4447 ;;		_ds1307_switch_to_24hr
  4448 ;;		i1_ds1307_get_clock
  4449 ;; This function is called by:
  4450 ;;		_tmr_isr
  4451 ;; This function uses a non-reentrant model
  4452 ;;
  4453                           
  4454                           
  4455                           ;psect for function _update_clock
  4456  00E6                     _update_clock:	
  4457                           
  4458                           ;incstack = 0
  4459                           ; Regs used in _update_clock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4460                           ;update_clock@up_down stored from wreg
  4461  00E6  0020               	movlb	0	; select bank0
  4462  00E7  00AD               	movwf	update_clock@up_down
  4463                           
  4464                           ;main.c: 140: uint8_t val;
  4465                           ;main.c: 141: bool pm;
  4466                           ;main.c: 143: ds1307_stop_clock();
  4467  00E8  318D  25FD  3180   	fcall	_ds1307_stop_clock
  4468                           
  4469                           ;main.c: 144: ds1307_get_clock();
  4470  00EB  3187  2717  3180   	fcall	i1_ds1307_get_clock
  4471                           
  4472                           ;main.c: 145: switch (g_clk_pos) {
  4473  00EE  2A00               	goto	i1l2937
  4474  00EF                     i1l2883:	
  4475                           ;main.c: 146: case CLK_POS_HR:
  4476                           
  4477                           
  4478                           ;main.c: 148: if (ds1307_is_12hr_mode()) {
  4479  00EF  318B  23DD  3180   	fcall	_ds1307_is_12hr_mode
  4480  00F2  3A00               	xorlw	0
  4481  00F3  1903               	skipnz
  4482  00F4  2942               	goto	i1l2917
  4483                           
  4484                           ;main.c: 149: val = ds1307_get_hours();
  4485  00F5  318D  25AA  3180   	fcall	_ds1307_get_hours
  4486  00F8  0020               	movlb	0	; select bank0
  4487  00F9  00A9               	movwf	??_update_clock
  4488  00FA  0829               	movf	??_update_clock,w
  4489  00FB  00AE               	movwf	update_clock@val
  4490                           
  4491                           ;main.c: 150: pm = ds1307_is_pm();
  4492  00FC  318E  2644  3180   	fcall	_ds1307_is_pm
  4493  00FF  0020               	movlb	0	; select bank0
  4494  0100  00A9               	movwf	??_update_clock
  4495  0101  0829               	movf	??_update_clock,w
  4496  0102  00AC               	movwf	update_clock@pm
  4497                           
  4498                           ;main.c: 151: if (((val == 12) && (!up_down)) || ((val == 11) && up_down)) {
  4499  0103  082E               	movf	update_clock@val,w
  4500  0104  3A0C               	xorlw	12
  4501  0105  1903               	btfsc	3,2
  4502  0106  082D               	movf	update_clock@up_down,w
  4503  0107  1903               	btfsc	3,2
  4504  0108  2910               	goto	i1l2895
  4505  0109  082E               	movf	update_clock@val,w
  4506  010A  3A0B               	xorlw	11
  4507  010B  1D03               	skipz
  4508  010C  2918               	goto	i1l197
  4509  010D  082D               	movf	update_clock@up_down,w
  4510  010E  1903               	btfsc	3,2
  4511  010F  2918               	goto	i1l197
  4512  0110                     i1l2895:	
  4513                           
  4514                           ;main.c: 152: pm = !pm;
  4515  0110  082C               	movf	update_clock@pm,w
  4516  0111  3A00               	xorlw	0
  4517  0112  3000               	movlw	0
  4518  0113  1903               	skipnz
  4519  0114  3001               	movlw	1
  4520  0115  00A9               	movwf	??_update_clock
  4521  0116  0829               	movf	??_update_clock,w
  4522  0117  00AC               	movwf	update_clock@pm
  4523  0118                     i1l197:	
  4524                           
  4525                           ;main.c: 153: }
  4526                           ;main.c: 154: if ((val == 12) && (up_down)) {
  4527  0118  082E               	movf	update_clock@val,w
  4528  0119  3A0C               	xorlw	12
  4529  011A  1D03               	skipz
  4530  011B  2922               	goto	i1l2901
  4531  011C  082D               	movf	update_clock@up_down,w
  4532  011D  1903               	btfsc	3,2
  4533  011E  2922               	goto	i1l2901
  4534                           
  4535                           ;main.c: 155: val = 1;
  4536  011F  01AE               	clrf	update_clock@val
  4537  0120  0AAE               	incf	update_clock@val,f
  4538                           
  4539                           ;main.c: 156: } else if ((val == 1) && (!up_down)) {
  4540  0121  2938               	goto	i1l2913
  4541  0122                     i1l2901:	
  4542  0122  082E               	movf	update_clock@val,w
  4543  0123  3A01               	xorlw	1
  4544  0124  1D03               	skipz
  4545  0125  292E               	goto	i1l2907
  4546  0126  08AD               	movf	update_clock@up_down,f
  4547  0127  1D03               	skipz
  4548  0128  292E               	goto	i1l2907
  4549                           
  4550                           ;main.c: 157: val = 12;
  4551  0129  300C               	movlw	12
  4552  012A  00A9               	movwf	??_update_clock
  4553  012B  0829               	movf	??_update_clock,w
  4554  012C  00AE               	movwf	update_clock@val
  4555                           
  4556                           ;main.c: 158: } else if (up_down) {
  4557  012D  2938               	goto	i1l2913
  4558  012E                     i1l2907:	
  4559  012E  082D               	movf	update_clock@up_down,w
  4560  012F  1903               	btfsc	3,2
  4561  0130  2936               	goto	i1l2911
  4562                           
  4563                           ;main.c: 159: val++;
  4564  0131  3001               	movlw	1
  4565  0132  00A9               	movwf	??_update_clock
  4566  0133  0829               	movf	??_update_clock,w
  4567  0134  07AE               	addwf	update_clock@val,f
  4568                           
  4569                           ;main.c: 160: } else {
  4570  0135  2938               	goto	i1l2913
  4571  0136                     i1l2911:	
  4572                           
  4573                           ;main.c: 161: val--;
  4574  0136  3001               	movlw	1
  4575  0137  02AE               	subwf	update_clock@val,f
  4576  0138                     i1l2913:	
  4577                           
  4578                           ;main.c: 162: }
  4579                           ;main.c: 163: ds1307_set_pm_am(pm);
  4580  0138  082C               	movf	update_clock@pm,w
  4581  0139  318E  262B  3180   	fcall	_ds1307_set_pm_am
  4582                           
  4583                           ;main.c: 164: ds1307_set_hours(val);
  4584  013C  0020               	movlb	0	; select bank0
  4585  013D  082E               	movf	update_clock@val,w
  4586  013E  318F  27A7  3180   	fcall	_ds1307_set_hours
  4587                           
  4588                           ;main.c: 165: } else {
  4589  0141  2A18               	goto	i1l2939
  4590  0142                     i1l2917:	
  4591                           
  4592                           ;main.c: 166: val = ds1307_get_hours();
  4593  0142  318D  25AA  3180   	fcall	_ds1307_get_hours
  4594  0145  0020               	movlb	0	; select bank0
  4595  0146  00A9               	movwf	??_update_clock
  4596  0147  0829               	movf	??_update_clock,w
  4597  0148  00AE               	movwf	update_clock@val
  4598                           
  4599                           ;main.c: 167: val = adjust_val(val, 0, 23, up_down);
  4600  0149  01F0               	clrf	adjust_val@lim_dwn
  4601  014A  3017               	movlw	23
  4602  014B  00A9               	movwf	??_update_clock
  4603  014C  0829               	movf	??_update_clock,w
  4604  014D  00F1               	movwf	adjust_val@lim_up
  4605  014E  082D               	movf	update_clock@up_down,w
  4606  014F  00AA               	movwf	??_update_clock+1
  4607  0150  082A               	movf	??_update_clock+1,w
  4608  0151  00F2               	movwf	adjust_val@up_down
  4609  0152  082E               	movf	update_clock@val,w
  4610  0153  318E  26BD  3180   	fcall	_adjust_val
  4611  0156  0020               	movlb	0	; select bank0
  4612  0157  00AB               	movwf	??_update_clock+2
  4613  0158  082B               	movf	??_update_clock+2,w
  4614  0159  00AE               	movwf	update_clock@val
  4615                           
  4616                           ;main.c: 168: ds1307_set_hours(val);
  4617  015A  082E               	movf	update_clock@val,w
  4618  015B  318F  27A7  3180   	fcall	_ds1307_set_hours
  4619                           
  4620                           ;main.c: 169: }
  4621                           ;main.c: 170: break;
  4622  015E  2A18               	goto	i1l2939
  4623  015F                     i1l2919:	
  4624                           ;main.c: 171: case CLK_POS_MIN:
  4625                           
  4626                           
  4627                           ;main.c: 172: val = ds1307_get_minutes();
  4628  015F  318B  23D8  3180   	fcall	_ds1307_get_minutes
  4629  0162  0020               	movlb	0	; select bank0
  4630  0163  00A9               	movwf	??_update_clock
  4631  0164  0829               	movf	??_update_clock,w
  4632  0165  00AE               	movwf	update_clock@val
  4633                           
  4634                           ;main.c: 173: val = adjust_val(val, 0, 59, up_down);
  4635  0166  01F0               	clrf	adjust_val@lim_dwn
  4636  0167  303B               	movlw	59
  4637  0168  00A9               	movwf	??_update_clock
  4638  0169  0829               	movf	??_update_clock,w
  4639  016A  00F1               	movwf	adjust_val@lim_up
  4640  016B  082D               	movf	update_clock@up_down,w
  4641  016C  00AA               	movwf	??_update_clock+1
  4642  016D  082A               	movf	??_update_clock+1,w
  4643  016E  00F2               	movwf	adjust_val@up_down
  4644  016F  082E               	movf	update_clock@val,w
  4645  0170  318E  26BD  3180   	fcall	_adjust_val
  4646  0173  0020               	movlb	0	; select bank0
  4647  0174  00AB               	movwf	??_update_clock+2
  4648  0175  082B               	movf	??_update_clock+2,w
  4649  0176  00AE               	movwf	update_clock@val
  4650                           
  4651                           ;main.c: 174: ds1307_set_minutes(val);
  4652  0177  082E               	movf	update_clock@val,w
  4653  0178  318C  248E  3180   	fcall	_ds1307_set_minutes
  4654                           
  4655                           ;main.c: 175: break;
  4656  017B  2A18               	goto	i1l2939
  4657  017C                     i1l2921:	
  4658                           ;main.c: 176: case CLK_POS_SEC:
  4659                           
  4660                           
  4661                           ;main.c: 177: val = ds1307_get_seconds();
  4662  017C  318C  2406  3180   	fcall	_ds1307_get_seconds
  4663  017F  0020               	movlb	0	; select bank0
  4664  0180  00A9               	movwf	??_update_clock
  4665  0181  0829               	movf	??_update_clock,w
  4666  0182  00AE               	movwf	update_clock@val
  4667                           
  4668                           ;main.c: 178: val = adjust_val(val, 0, 59, up_down);
  4669  0183  01F0               	clrf	adjust_val@lim_dwn
  4670  0184  303B               	movlw	59
  4671  0185  00A9               	movwf	??_update_clock
  4672  0186  0829               	movf	??_update_clock,w
  4673  0187  00F1               	movwf	adjust_val@lim_up
  4674  0188  082D               	movf	update_clock@up_down,w
  4675  0189  00AA               	movwf	??_update_clock+1
  4676  018A  082A               	movf	??_update_clock+1,w
  4677  018B  00F2               	movwf	adjust_val@up_down
  4678  018C  082E               	movf	update_clock@val,w
  4679  018D  318E  26BD  3180   	fcall	_adjust_val
  4680  0190  0020               	movlb	0	; select bank0
  4681  0191  00AB               	movwf	??_update_clock+2
  4682  0192  082B               	movf	??_update_clock+2,w
  4683  0193  00AE               	movwf	update_clock@val
  4684                           
  4685                           ;main.c: 179: ds1307_set_seconds(val);
  4686  0194  082E               	movf	update_clock@val,w
  4687  0195  318D  2560  3180   	fcall	_ds1307_set_seconds
  4688                           
  4689                           ;main.c: 180: break;
  4690  0198  2A18               	goto	i1l2939
  4691  0199                     i1l2923:	
  4692                           ;main.c: 181: case CLK_POS_MON:
  4693                           
  4694                           
  4695                           ;main.c: 182: val = ds1307_get_month();
  4696  0199  318B  23CE  3180   	fcall	_ds1307_get_month
  4697  019C  0020               	movlb	0	; select bank0
  4698  019D  00A9               	movwf	??_update_clock
  4699  019E  0829               	movf	??_update_clock,w
  4700  019F  00AE               	movwf	update_clock@val
  4701                           
  4702                           ;main.c: 183: val = adjust_val(val, 1, 12, up_down);
  4703  01A0  01F0               	clrf	adjust_val@lim_dwn
  4704  01A1  0AF0               	incf	adjust_val@lim_dwn,f
  4705  01A2  300C               	movlw	12
  4706  01A3  00A9               	movwf	??_update_clock
  4707  01A4  0829               	movf	??_update_clock,w
  4708  01A5  00F1               	movwf	adjust_val@lim_up
  4709  01A6  082D               	movf	update_clock@up_down,w
  4710  01A7  00AA               	movwf	??_update_clock+1
  4711  01A8  082A               	movf	??_update_clock+1,w
  4712  01A9  00F2               	movwf	adjust_val@up_down
  4713  01AA  082E               	movf	update_clock@val,w
  4714  01AB  318E  26BD  3180   	fcall	_adjust_val
  4715  01AE  0020               	movlb	0	; select bank0
  4716  01AF  00AB               	movwf	??_update_clock+2
  4717  01B0  082B               	movf	??_update_clock+2,w
  4718  01B1  00AE               	movwf	update_clock@val
  4719                           
  4720                           ;main.c: 184: ds1307_set_month(val);
  4721  01B2  082E               	movf	update_clock@val,w
  4722  01B3  318D  252F  3180   	fcall	_ds1307_set_month
  4723                           
  4724                           ;main.c: 185: break;
  4725  01B6  2A18               	goto	i1l2939
  4726  01B7                     i1l2925:	
  4727                           ;main.c: 186: case CLK_POS_DAY:
  4728                           
  4729                           
  4730                           ;main.c: 187: val = ds1307_get_day_of_month();
  4731  01B7  318C  2400  3180   	fcall	_ds1307_get_day_of_month
  4732  01BA  0020               	movlb	0	; select bank0
  4733  01BB  00A9               	movwf	??_update_clock
  4734  01BC  0829               	movf	??_update_clock,w
  4735  01BD  00AE               	movwf	update_clock@val
  4736                           
  4737                           ;main.c: 188: val = adjust_val(val, 1, 31, up_down);
  4738  01BE  01F0               	clrf	adjust_val@lim_dwn
  4739  01BF  0AF0               	incf	adjust_val@lim_dwn,f
  4740  01C0  301F               	movlw	31
  4741  01C1  00A9               	movwf	??_update_clock
  4742  01C2  0829               	movf	??_update_clock,w
  4743  01C3  00F1               	movwf	adjust_val@lim_up
  4744  01C4  082D               	movf	update_clock@up_down,w
  4745  01C5  00AA               	movwf	??_update_clock+1
  4746  01C6  082A               	movf	??_update_clock+1,w
  4747  01C7  00F2               	movwf	adjust_val@up_down
  4748  01C8  082E               	movf	update_clock@val,w
  4749  01C9  318E  26BD  3180   	fcall	_adjust_val
  4750  01CC  0020               	movlb	0	; select bank0
  4751  01CD  00AB               	movwf	??_update_clock+2
  4752  01CE  082B               	movf	??_update_clock+2,w
  4753  01CF  00AE               	movwf	update_clock@val
  4754                           
  4755                           ;main.c: 189: ds1307_set_day_of_month(val);
  4756  01D0  082E               	movf	update_clock@val,w
  4757  01D1  318D  251F  3180   	fcall	_ds1307_set_day_of_month
  4758                           
  4759                           ;main.c: 190: break;
  4760  01D4  2A18               	goto	i1l2939
  4761  01D5                     i1l2927:	
  4762                           ;main.c: 191: case CLK_POS_YR:
  4763                           
  4764                           
  4765                           ;main.c: 192: val = ds1307_get_year();
  4766  01D5  318B  23D3  3180   	fcall	_ds1307_get_year
  4767  01D8  0020               	movlb	0	; select bank0
  4768  01D9  00A9               	movwf	??_update_clock
  4769  01DA  0829               	movf	??_update_clock,w
  4770  01DB  00AE               	movwf	update_clock@val
  4771                           
  4772                           ;main.c: 193: val = adjust_val(val, 0, 99, up_down);
  4773  01DC  01F0               	clrf	adjust_val@lim_dwn
  4774  01DD  3063               	movlw	99
  4775  01DE  00A9               	movwf	??_update_clock
  4776  01DF  0829               	movf	??_update_clock,w
  4777  01E0  00F1               	movwf	adjust_val@lim_up
  4778  01E1  082D               	movf	update_clock@up_down,w
  4779  01E2  00AA               	movwf	??_update_clock+1
  4780  01E3  082A               	movf	??_update_clock+1,w
  4781  01E4  00F2               	movwf	adjust_val@up_down
  4782  01E5  082E               	movf	update_clock@val,w
  4783  01E6  318E  26BD  3180   	fcall	_adjust_val
  4784  01E9  0020               	movlb	0	; select bank0
  4785  01EA  00AB               	movwf	??_update_clock+2
  4786  01EB  082B               	movf	??_update_clock+2,w
  4787  01EC  00AE               	movwf	update_clock@val
  4788                           
  4789                           ;main.c: 194: ds1307_set_year(val);
  4790  01ED  082E               	movf	update_clock@val,w
  4791  01EE  318C  249B  3180   	fcall	_ds1307_set_year
  4792                           
  4793                           ;main.c: 195: break;
  4794  01F1  2A18               	goto	i1l2939
  4795  01F2                     i1l2929:	
  4796                           ;main.c: 196: case CLK_POS_HR_MOD:
  4797                           
  4798                           
  4799                           ;main.c: 197: if (ds1307_is_12hr_mode() == 1) {
  4800  01F2  318B  23DD  3180   	fcall	_ds1307_is_12hr_mode
  4801  01F5  3A01               	xorlw	1
  4802  01F6  1D03               	skipz
  4803  01F7  29FC               	goto	i1l2933
  4804                           
  4805                           ;main.c: 198: ds1307_switch_to_24hr();
  4806  01F8  3187  278B  3180   	fcall	_ds1307_switch_to_24hr
  4807                           
  4808                           ;main.c: 199: } else {
  4809  01FB  2A18               	goto	i1l2939
  4810  01FC                     i1l2933:	
  4811                           
  4812                           ;main.c: 200: ds1307_switch_to_12hr();
  4813  01FC  3185  251A  3180   	fcall	_ds1307_switch_to_12hr
  4814                           
  4815                           ;main.c: 203: }
  4816                           
  4817                           ;main.c: 201: }
  4818                           ;main.c: 202: break;
  4819  01FF  2A18               	goto	i1l2939
  4820  0200                     i1l2937:	
  4821  0200  0020               	movlb	0	; select bank0
  4822  0201  0856               	movf	_g_clk_pos,w
  4823                           
  4824                           ; Switch size 1, requested type "space"
  4825                           ; Number of cases is 7, Range of values is 1 to 7
  4826                           ; switch strategies available:
  4827                           ; Name         Instructions Cycles
  4828                           ; simple_byte           22    12 (average)
  4829                           ; direct_byte           23     9 (fixed)
  4830                           ; jumptable            263     9 (fixed)
  4831                           ;	Chosen strategy is simple_byte
  4832  0202  3A01               	xorlw	1	; case 1
  4833  0203  1903               	skipnz
  4834  0204  28EF               	goto	i1l2883
  4835  0205  3A03               	xorlw	3	; case 2
  4836  0206  1903               	skipnz
  4837  0207  295F               	goto	i1l2919
  4838  0208  3A01               	xorlw	1	; case 3
  4839  0209  1903               	skipnz
  4840  020A  297C               	goto	i1l2921
  4841  020B  3A07               	xorlw	7	; case 4
  4842  020C  1903               	skipnz
  4843  020D  2999               	goto	i1l2923
  4844  020E  3A01               	xorlw	1	; case 5
  4845  020F  1903               	skipnz
  4846  0210  29B7               	goto	i1l2925
  4847  0211  3A03               	xorlw	3	; case 6
  4848  0212  1903               	skipnz
  4849  0213  29D5               	goto	i1l2927
  4850  0214  3A01               	xorlw	1	; case 7
  4851  0215  1903               	skipnz
  4852  0216  29F2               	goto	i1l2929
  4853  0217  2A18               	goto	i1l2939
  4854  0218                     i1l2939:	
  4855                           
  4856                           ;main.c: 204: ds1307_set_clock();
  4857  0218  3185  254B         	fcall	_ds1307_set_clock
  4858  021A  0008               	return
  4859  021B                     __end_of_update_clock:	
  4860                           
  4861                           	psect	text31
  4862  0717                     __ptext31:	
  4863 ;; *************** function i1_ds1307_get_clock *****************
  4864 ;; Defined at:
  4865 ;;		line 140 in file "ds1307.c"
  4866 ;; Parameters:    Size  Location     Type
  4867 ;;		None
  4868 ;; Auto vars:     Size  Location     Type
  4869 ;;  ds1307_get_c    1    4[COMMON] unsigned char 
  4870 ;; Return value:  Size  Location     Type
  4871 ;;		None               void
  4872 ;; Registers used:
  4873 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4874 ;; Tracked objects:
  4875 ;;		On entry : 0/0
  4876 ;;		On exit  : 0/0
  4877 ;;		Unchanged: 0/0
  4878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4879 ;;      Params:         0       0       0       0
  4880 ;;      Locals:         1       0       0       0
  4881 ;;      Temps:          1       0       0       0
  4882 ;;      Totals:         2       0       0       0
  4883 ;;Total ram usage:        2 bytes
  4884 ;; Hardware stack levels used:    1
  4885 ;; Hardware stack levels required when called:    2
  4886 ;; This function calls:
  4887 ;;		i1_i2c_read_data
  4888 ;;		i1_i2c_restart
  4889 ;;		i1_i2c_send_ack
  4890 ;;		i1_i2c_send_address
  4891 ;;		i1_i2c_send_data
  4892 ;;		i1_i2c_start
  4893 ;;		i1_i2c_stop
  4894 ;; This function is called by:
  4895 ;;		_update_clock
  4896 ;;		_tmr_isr
  4897 ;; This function uses a non-reentrant model
  4898 ;;
  4899                           
  4900                           
  4901                           ;psect for function i1_ds1307_get_clock
  4902  0717                     i1_ds1307_get_clock:	
  4903                           
  4904                           ;ds1307.c: 143: i2c_start();
  4905                           
  4906                           ;incstack = 0
  4907                           ; Regs used in i1_ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  4908  0717  318B  23E7  3187   	fcall	i1_i2c_start
  4909                           
  4910                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  4911  071A  01F0               	clrf	i1i2c_send_address@mode
  4912  071B  3068               	movlw	104
  4913  071C  318C  2481  3187   	fcall	i1_i2c_send_address
  4914                           
  4915                           ;ds1307.c: 145: i2c_send_data(0x00);
  4916  071F  3000               	movlw	0
  4917  0720  318C  241F  3187   	fcall	i1_i2c_send_data
  4918                           
  4919                           ;ds1307.c: 146: i2c_restart();
  4920  0723  318B  23E2  3187   	fcall	i1_i2c_restart
  4921                           
  4922                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  4923  0726  01F0               	clrf	i1i2c_send_address@mode
  4924  0727  0AF0               	incf	i1i2c_send_address@mode,f
  4925  0728  3068               	movlw	104
  4926  0729  318C  2481  3187   	fcall	i1_i2c_send_address
  4927                           
  4928                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  4929  072C  01F4               	clrf	i1ds1307_get_clock@r
  4930  072D  3007               	movlw	7
  4931  072E  0274               	subwf	i1ds1307_get_clock@r,w
  4932  072F  1803               	btfsc	3,0
  4933  0730  2F47               	goto	i1l2791
  4934  0731                     i1l2783:	
  4935                           
  4936                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  4937  0731  318C  24C3  3187   	fcall	i1_i2c_read_data
  4938  0734  00F3               	movwf	??i1_ds1307_get_clock
  4939  0735  0874               	movf	i1ds1307_get_clock@r,w
  4940  0736  3EB7               	addlw	_g_reg_data& (0+255)
  4941  0737  0086               	movwf	6
  4942  0738  0187               	clrf	7
  4943  0739  0873               	movf	??i1_ds1307_get_clock,w
  4944  073A  0081               	movwf	1
  4945                           
  4946                           ;ds1307.c: 151: i2c_send_ack(0);
  4947  073B  3000               	movlw	0
  4948  073C  318C  246A  3187   	fcall	i1_i2c_send_ack
  4949  073F  3001               	movlw	1
  4950  0740  00F3               	movwf	??i1_ds1307_get_clock
  4951  0741  0873               	movf	??i1_ds1307_get_clock,w
  4952  0742  07F4               	addwf	i1ds1307_get_clock@r,f
  4953  0743  3007               	movlw	7
  4954  0744  0274               	subwf	i1ds1307_get_clock@r,w
  4955  0745  1C03               	skipc
  4956  0746  2F31               	goto	i1l2783
  4957  0747                     i1l2791:	
  4958                           
  4959                           ;ds1307.c: 152: }
  4960                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  4961  0747  318C  24C3  3187   	fcall	i1_i2c_read_data
  4962  074A  00F3               	movwf	??i1_ds1307_get_clock
  4963  074B  0873               	movf	??i1_ds1307_get_clock,w
  4964  074C  0021               	movlb	1	; select bank1
  4965  074D  00C7               	movwf	_g_reg_ctrl^(0+128)
  4966                           
  4967                           ;ds1307.c: 154: i2c_send_ack(1);
  4968  074E  3001               	movlw	1
  4969  074F  318C  246A  3187   	fcall	i1_i2c_send_ack
  4970                           
  4971                           ;ds1307.c: 155: i2c_stop();
  4972  0752  318B  23EC         	fcall	i1_i2c_stop
  4973  0754  0008               	return
  4974  0755                     __end_ofi1_ds1307_get_clock:	
  4975                           
  4976                           	psect	text32
  4977  078B                     __ptext32:	
  4978 ;; *************** function _ds1307_switch_to_24hr *****************
  4979 ;; Defined at:
  4980 ;;		line 341 in file "ds1307.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;		None
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  hrs             1    8[BANK0 ] unsigned char 
  4985 ;;  pm_am           1    7[BANK0 ] unsigned char 
  4986 ;; Return value:  Size  Location     Type
  4987 ;;		None               void
  4988 ;; Registers used:
  4989 ;;		wreg, status,2, status,0, pclath, cstack
  4990 ;; Tracked objects:
  4991 ;;		On entry : 0/0
  4992 ;;		On exit  : 0/0
  4993 ;;		Unchanged: 0/0
  4994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4995 ;;      Params:         0       0       0       0
  4996 ;;      Locals:         0       2       0       0
  4997 ;;      Temps:          1       0       0       0
  4998 ;;      Totals:         1       2       0       0
  4999 ;;Total ram usage:        3 bytes
  5000 ;; Hardware stack levels used:    1
  5001 ;; Hardware stack levels required when called:    4
  5002 ;; This function calls:
  5003 ;;		_ds1307_get_hours
  5004 ;;		_ds1307_is_12hr_mode
  5005 ;;		_ds1307_is_pm
  5006 ;;		_ds1307_set_hours
  5007 ;;		_ds1307_set_hr_mode
  5008 ;; This function is called by:
  5009 ;;		_update_clock
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           
  5013                           
  5014                           ;psect for function _ds1307_switch_to_24hr
  5015  078B                     _ds1307_switch_to_24hr:	
  5016                           
  5017                           ;ds1307.c: 342: if (ds1307_is_12hr_mode() == 1) {
  5018                           
  5019                           ;incstack = 0
  5020                           ; Regs used in _ds1307_switch_to_24hr: [wreg+status,2+status,0+pclath+cstack]
  5021  078B  318B  23DD  3187   	fcall	_ds1307_is_12hr_mode
  5022  078E  3A01               	xorlw	1
  5023  078F  1D03               	skipz
  5024  0790  0008               	return
  5025                           
  5026                           ;ds1307.c: 343: uint8_t hrs;
  5027                           ;ds1307.c: 344: bool pm_am;
  5028                           ;ds1307.c: 345: pm_am = ds1307_is_pm();
  5029  0791  318E  2644  3187   	fcall	_ds1307_is_pm
  5030  0794  00FD               	movwf	??_ds1307_switch_to_24hr
  5031  0795  087D               	movf	??_ds1307_switch_to_24hr,w
  5032  0796  0020               	movlb	0	; select bank0
  5033  0797  00A7               	movwf	ds1307_switch_to_24hr@pm_am
  5034                           
  5035                           ;ds1307.c: 346: hrs = ds1307_get_hours();
  5036  0798  318D  25AA  3187   	fcall	_ds1307_get_hours
  5037  079B  00FD               	movwf	??_ds1307_switch_to_24hr
  5038  079C  087D               	movf	??_ds1307_switch_to_24hr,w
  5039  079D  0020               	movlb	0	; select bank0
  5040  079E  00A8               	movwf	ds1307_switch_to_24hr@hrs
  5041                           
  5042                           ;ds1307.c: 347: if ((!pm_am) && (hrs == 12)) {
  5043  079F  08A7               	movf	ds1307_switch_to_24hr@pm_am,f
  5044  07A0  1D03               	skipz
  5045  07A1  2FA8               	goto	i1l2573
  5046  07A2  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5047  07A3  3A0C               	xorlw	12
  5048  07A4  1D03               	skipz
  5049  07A5  2FA8               	goto	i1l2573
  5050                           
  5051                           ;ds1307.c: 349: hrs = 0;
  5052  07A6  01A8               	clrf	ds1307_switch_to_24hr@hrs
  5053                           
  5054                           ;ds1307.c: 350: } else if (pm_am && (hrs < 12)) {
  5055  07A7  2FB4               	goto	i1l2579
  5056  07A8                     i1l2573:	
  5057  07A8  0827               	movf	ds1307_switch_to_24hr@pm_am,w
  5058  07A9  1903               	btfsc	3,2
  5059  07AA  2FB4               	goto	i1l2579
  5060  07AB  300C               	movlw	12
  5061  07AC  0228               	subwf	ds1307_switch_to_24hr@hrs,w
  5062  07AD  1803               	skipnc
  5063  07AE  2FB4               	goto	i1l2579
  5064                           
  5065                           ;ds1307.c: 352: hrs = hrs + 12;
  5066  07AF  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5067  07B0  3E0C               	addlw	12
  5068  07B1  00FD               	movwf	??_ds1307_switch_to_24hr
  5069  07B2  087D               	movf	??_ds1307_switch_to_24hr,w
  5070  07B3  00A8               	movwf	ds1307_switch_to_24hr@hrs
  5071  07B4                     i1l2579:	
  5072                           
  5073                           ;ds1307.c: 353: }
  5074                           ;ds1307.c: 355: ds1307_set_hr_mode(0x00);
  5075  07B4  3000               	movlw	0
  5076  07B5  318D  2597  3187   	fcall	_ds1307_set_hr_mode
  5077                           
  5078                           ;ds1307.c: 356: ds1307_set_hours(hrs);
  5079  07B8  0020               	movlb	0	; select bank0
  5080  07B9  0828               	movf	ds1307_switch_to_24hr@hrs,w
  5081  07BA  318F  27A7         	fcall	_ds1307_set_hours
  5082  07BC  0008               	return
  5083  07BD                     __end_of_ds1307_switch_to_24hr:	
  5084                           
  5085                           	psect	text33
  5086  051A                     __ptext33:	
  5087 ;; *************** function _ds1307_switch_to_12hr *****************
  5088 ;; Defined at:
  5089 ;;		line 316 in file "ds1307.c"
  5090 ;; Parameters:    Size  Location     Type
  5091 ;;		None
  5092 ;; Auto vars:     Size  Location     Type
  5093 ;;  hrs             1    8[BANK0 ] unsigned char 
  5094 ;;  pm_am           1    7[BANK0 ] unsigned char 
  5095 ;; Return value:  Size  Location     Type
  5096 ;;		None               void
  5097 ;; Registers used:
  5098 ;;		wreg, status,2, status,0, pclath, cstack
  5099 ;; Tracked objects:
  5100 ;;		On entry : 0/0
  5101 ;;		On exit  : 0/0
  5102 ;;		Unchanged: 0/0
  5103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5104 ;;      Params:         0       0       0       0
  5105 ;;      Locals:         0       2       0       0
  5106 ;;      Temps:          1       0       0       0
  5107 ;;      Totals:         1       2       0       0
  5108 ;;Total ram usage:        3 bytes
  5109 ;; Hardware stack levels used:    1
  5110 ;; Hardware stack levels required when called:    3
  5111 ;; This function calls:
  5112 ;;		_ds1307_get_hours
  5113 ;;		_ds1307_is_12hr_mode
  5114 ;;		_ds1307_set_hours
  5115 ;;		_ds1307_set_hr_mode
  5116 ;;		_ds1307_set_pm_am
  5117 ;; This function is called by:
  5118 ;;		_update_clock
  5119 ;; This function uses a non-reentrant model
  5120 ;;
  5121                           
  5122                           
  5123                           ;psect for function _ds1307_switch_to_12hr
  5124  051A                     _ds1307_switch_to_12hr:	
  5125                           
  5126                           ;ds1307.c: 317: if (ds1307_is_12hr_mode() == 0) {
  5127                           
  5128                           ;incstack = 0
  5129                           ; Regs used in _ds1307_switch_to_12hr: [wreg+status,2+status,0+pclath+cstack]
  5130  051A  318B  23DD  3185   	fcall	_ds1307_is_12hr_mode
  5131  051D  3800               	iorlw	0
  5132  051E  1D03               	skipz
  5133  051F  0008               	return
  5134                           
  5135                           ;ds1307.c: 318: uint8_t hrs;
  5136                           ;ds1307.c: 319: bool pm_am;
  5137                           ;ds1307.c: 320: hrs = ds1307_get_hours();
  5138  0520  318D  25AA  3185   	fcall	_ds1307_get_hours
  5139  0523  00FD               	movwf	??_ds1307_switch_to_12hr
  5140  0524  087D               	movf	??_ds1307_switch_to_12hr,w
  5141  0525  0020               	movlb	0	; select bank0
  5142  0526  00A8               	movwf	ds1307_switch_to_12hr@hrs
  5143                           
  5144                           ;ds1307.c: 321: if (hrs < 12) {
  5145  0527  300C               	movlw	12
  5146  0528  0228               	subwf	ds1307_switch_to_12hr@hrs,w
  5147  0529  1803               	skipnc
  5148  052A  2D2D               	goto	i1l404
  5149                           
  5150                           ;ds1307.c: 322: pm_am = 0x00;
  5151  052B  01A7               	clrf	ds1307_switch_to_12hr@pm_am
  5152                           
  5153                           ;ds1307.c: 323: } else {
  5154  052C  2D2F               	goto	i1l2591
  5155  052D                     i1l404:	
  5156                           
  5157                           ;ds1307.c: 324: pm_am = 0x01;
  5158  052D  01A7               	clrf	ds1307_switch_to_12hr@pm_am
  5159  052E  0AA7               	incf	ds1307_switch_to_12hr@pm_am,f
  5160  052F                     i1l2591:	
  5161                           
  5162                           ;ds1307.c: 325: }
  5163                           ;ds1307.c: 326: if (hrs == 0) {
  5164  052F  08A8               	movf	ds1307_switch_to_12hr@hrs,f
  5165  0530  1D03               	skipz
  5166  0531  2D34               	goto	i1l2595
  5167                           
  5168                           ;ds1307.c: 328: hrs = 12;
  5169  0532  300C               	movlw	12
  5170  0533  2D3A               	goto	L4
  5171  0534                     i1l2595:	
  5172                           ;ds1307.c: 329: } else if (hrs > 12) {
  5173                           
  5174  0534  300D               	movlw	13
  5175  0535  0228               	subwf	ds1307_switch_to_12hr@hrs,w
  5176  0536  1C03               	skipc
  5177  0537  2D3D               	goto	i1l2599
  5178                           
  5179                           ;ds1307.c: 331: hrs = hrs - 12;
  5180  0538  0828               	movf	ds1307_switch_to_12hr@hrs,w
  5181  0539  3EF4               	addlw	244
  5182  053A                     L4:	
  5183  053A  00FD               	movwf	??_ds1307_switch_to_12hr
  5184  053B  087D               	movf	??_ds1307_switch_to_12hr,w
  5185  053C  00A8               	movwf	ds1307_switch_to_12hr@hrs
  5186  053D                     i1l2599:	
  5187                           
  5188                           ;ds1307.c: 332: }
  5189                           ;ds1307.c: 335: ds1307_set_hr_mode(0x01);
  5190  053D  3001               	movlw	1
  5191  053E  318D  2597  3185   	fcall	_ds1307_set_hr_mode
  5192                           
  5193                           ;ds1307.c: 336: ds1307_set_pm_am(pm_am);
  5194  0541  0020               	movlb	0	; select bank0
  5195  0542  0827               	movf	ds1307_switch_to_12hr@pm_am,w
  5196  0543  318E  262B  3185   	fcall	_ds1307_set_pm_am
  5197                           
  5198                           ;ds1307.c: 337: ds1307_set_hours(hrs);
  5199  0546  0020               	movlb	0	; select bank0
  5200  0547  0828               	movf	ds1307_switch_to_12hr@hrs,w
  5201  0548  318F  27A7         	fcall	_ds1307_set_hours
  5202  054A  0008               	return
  5203  054B                     __end_of_ds1307_switch_to_12hr:	
  5204                           
  5205                           	psect	text34
  5206  0E2B                     __ptext34:	
  5207 ;; *************** function _ds1307_set_pm_am *****************
  5208 ;; Defined at:
  5209 ;;		line 294 in file "ds1307.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;  pm_am           1    wreg     unsigned char 
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  pm_am           1    1[COMMON] unsigned char 
  5214 ;; Return value:  Size  Location     Type
  5215 ;;		None               void
  5216 ;; Registers used:
  5217 ;;		wreg, status,2, pclath, cstack
  5218 ;; Tracked objects:
  5219 ;;		On entry : 0/0
  5220 ;;		On exit  : 0/0
  5221 ;;		Unchanged: 0/0
  5222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5223 ;;      Params:         0       0       0       0
  5224 ;;      Locals:         1       0       0       0
  5225 ;;      Temps:          1       0       0       0
  5226 ;;      Totals:         2       0       0       0
  5227 ;;Total ram usage:        2 bytes
  5228 ;; Hardware stack levels used:    1
  5229 ;; Hardware stack levels required when called:    1
  5230 ;; This function calls:
  5231 ;;		_ds1307_is_12hr_mode
  5232 ;; This function is called by:
  5233 ;;		_update_clock
  5234 ;;		_ds1307_switch_to_12hr
  5235 ;; This function uses a non-reentrant model
  5236 ;;
  5237                           
  5238                           
  5239                           ;psect for function _ds1307_set_pm_am
  5240  0E2B                     _ds1307_set_pm_am:	
  5241                           
  5242                           ;incstack = 0
  5243                           ; Regs used in _ds1307_set_pm_am: [wreg+status,2+pclath+cstack]
  5244                           ;ds1307_set_pm_am@pm_am stored from wreg
  5245  0E2B  00F1               	movwf	ds1307_set_pm_am@pm_am
  5246                           
  5247                           ;ds1307.c: 295: if (ds1307_is_12hr_mode()) {
  5248  0E2C  318B  23DD  318E   	fcall	_ds1307_is_12hr_mode
  5249  0E2F  3A00               	xorlw	0
  5250  0E30  1903               	skipnz
  5251  0E31  0008               	return
  5252                           
  5253                           ;ds1307.c: 296: if (pm_am == 0x01) {
  5254  0E32  0871               	movf	ds1307_set_pm_am@pm_am,w
  5255  0E33  3A01               	xorlw	1
  5256  0E34  1D03               	skipz
  5257  0E35  2E3D               	goto	i1l2375
  5258                           
  5259                           ;ds1307.c: 298: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b00100000
      +                          ;
  5260  0E36  0021               	movlb	1	; select bank1
  5261  0E37  0839               	movf	(_g_reg_data^(0+128)+2),w
  5262  0E38  3820               	iorlw	32
  5263  0E39  00F0               	movwf	??_ds1307_set_pm_am
  5264  0E3A  0870               	movf	??_ds1307_set_pm_am,w
  5265  0E3B  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5266                           
  5267                           ;ds1307.c: 299: } else {
  5268  0E3C  0008               	return
  5269  0E3D                     i1l2375:	
  5270                           
  5271                           ;ds1307.c: 301: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b11011111
      +                          ;
  5272  0E3D  0021               	movlb	1	; select bank1
  5273  0E3E  0839               	movf	(_g_reg_data^(0+128)+2),w
  5274  0E3F  39DF               	andlw	223
  5275  0E40  00F0               	movwf	??_ds1307_set_pm_am
  5276  0E41  0870               	movf	??_ds1307_set_pm_am,w
  5277  0E42  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5278  0E43  0008               	return
  5279  0E44                     __end_of_ds1307_set_pm_am:	
  5280                           
  5281                           	psect	text35
  5282  0D97                     __ptext35:	
  5283 ;; *************** function _ds1307_set_hr_mode *****************
  5284 ;; Defined at:
  5285 ;;		line 306 in file "ds1307.c"
  5286 ;; Parameters:    Size  Location     Type
  5287 ;;  mode            1    wreg     unsigned char 
  5288 ;; Auto vars:     Size  Location     Type
  5289 ;;  mode            1    1[COMMON] unsigned char 
  5290 ;; Return value:  Size  Location     Type
  5291 ;;		None               void
  5292 ;; Registers used:
  5293 ;;		wreg, status,2
  5294 ;; Tracked objects:
  5295 ;;		On entry : 0/0
  5296 ;;		On exit  : 0/0
  5297 ;;		Unchanged: 0/0
  5298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5299 ;;      Params:         0       0       0       0
  5300 ;;      Locals:         1       0       0       0
  5301 ;;      Temps:          1       0       0       0
  5302 ;;      Totals:         2       0       0       0
  5303 ;;Total ram usage:        2 bytes
  5304 ;; Hardware stack levels used:    1
  5305 ;; This function calls:
  5306 ;;		Nothing
  5307 ;; This function is called by:
  5308 ;;		_ds1307_switch_to_12hr
  5309 ;;		_ds1307_switch_to_24hr
  5310 ;; This function uses a non-reentrant model
  5311 ;;
  5312                           
  5313                           
  5314                           ;psect for function _ds1307_set_hr_mode
  5315  0D97                     _ds1307_set_hr_mode:	
  5316                           
  5317                           ;incstack = 0
  5318                           ; Regs used in _ds1307_set_hr_mode: [wreg+status,2]
  5319                           ;ds1307_set_hr_mode@mode stored from wreg
  5320  0D97  00F1               	movwf	ds1307_set_hr_mode@mode
  5321                           
  5322                           ;ds1307.c: 309: if (mode == 1) {
  5323  0D98  0871               	movf	ds1307_set_hr_mode@mode,w
  5324  0D99  3A01               	xorlw	1
  5325  0D9A  1D03               	skipz
  5326  0D9B  2DA3               	goto	i1l2397
  5327                           
  5328                           ;ds1307.c: 310: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b01000000
      +                          ;
  5329  0D9C  0021               	movlb	1	; select bank1
  5330  0D9D  0839               	movf	(_g_reg_data^(0+128)+2),w
  5331  0D9E  3840               	iorlw	64
  5332  0D9F  00F0               	movwf	??_ds1307_set_hr_mode
  5333  0DA0  0870               	movf	??_ds1307_set_hr_mode,w
  5334  0DA1  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5335                           
  5336                           ;ds1307.c: 311: } else {
  5337  0DA2  0008               	return
  5338  0DA3                     i1l2397:	
  5339                           
  5340                           ;ds1307.c: 312: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b10111111
      +                          ;
  5341  0DA3  0021               	movlb	1	; select bank1
  5342  0DA4  0839               	movf	(_g_reg_data^(0+128)+2),w
  5343  0DA5  39BF               	andlw	191
  5344  0DA6  00F0               	movwf	??_ds1307_set_hr_mode
  5345  0DA7  0870               	movf	??_ds1307_set_hr_mode,w
  5346  0DA8  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5347  0DA9  0008               	return
  5348  0DAA                     __end_of_ds1307_set_hr_mode:	
  5349                           
  5350                           	psect	text36
  5351  0FA7                     __ptext36:	
  5352 ;; *************** function _ds1307_set_hours *****************
  5353 ;; Defined at:
  5354 ;;		line 223 in file "ds1307.c"
  5355 ;; Parameters:    Size  Location     Type
  5356 ;;  hours           1    wreg     unsigned char 
  5357 ;; Auto vars:     Size  Location     Type
  5358 ;;  hours           1   12[COMMON] unsigned char 
  5359 ;; Return value:  Size  Location     Type
  5360 ;;		None               void
  5361 ;; Registers used:
  5362 ;;		wreg, status,2, status,0, pclath, cstack
  5363 ;; Tracked objects:
  5364 ;;		On entry : 0/0
  5365 ;;		On exit  : 0/0
  5366 ;;		Unchanged: 0/0
  5367 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5368 ;;      Params:         0       0       0       0
  5369 ;;      Locals:         1       0       0       0
  5370 ;;      Temps:          2       0       0       0
  5371 ;;      Totals:         3       0       0       0
  5372 ;;Total ram usage:        3 bytes
  5373 ;; Hardware stack levels used:    1
  5374 ;; Hardware stack levels required when called:    2
  5375 ;; This function calls:
  5376 ;;		_dec_to_bcd
  5377 ;;		_ds1307_is_12hr_mode
  5378 ;; This function is called by:
  5379 ;;		_update_clock
  5380 ;;		_ds1307_switch_to_12hr
  5381 ;;		_ds1307_switch_to_24hr
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           
  5385                           
  5386                           ;psect for function _ds1307_set_hours
  5387  0FA7                     _ds1307_set_hours:	
  5388                           
  5389                           ;incstack = 0
  5390                           ; Regs used in _ds1307_set_hours: [wreg+status,2+status,0+pclath+cstack]
  5391                           ;ds1307_set_hours@hours stored from wreg
  5392  0FA7  00FC               	movwf	ds1307_set_hours@hours
  5393                           
  5394                           ;ds1307.c: 224: if (ds1307_is_12hr_mode()) {
  5395  0FA8  318B  23DD  318F   	fcall	_ds1307_is_12hr_mode
  5396  0FAB  3A00               	xorlw	0
  5397  0FAC  1903               	skipnz
  5398  0FAD  2FC2               	goto	i1l2385
  5399                           
  5400                           ;ds1307.c: 226: if ((hours > 0) && (hours < 13)) {
  5401  0FAE  087C               	movf	ds1307_set_hours@hours,w
  5402  0FAF  1903               	btfsc	3,2
  5403  0FB0  0008               	return
  5404  0FB1  300D               	movlw	13
  5405  0FB2  027C               	subwf	ds1307_set_hours@hours,w
  5406  0FB3  1803               	skipnc
  5407  0FB4  0008               	return
  5408                           
  5409                           ;ds1307.c: 228: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x60);
  5410  0FB5  3060               	movlw	96
  5411  0FB6  0021               	movlb	1	; select bank1
  5412  0FB7  0539               	andwf	(_g_reg_data^(0+128)+2),w
  5413  0FB8  00FA               	movwf	??_ds1307_set_hours
  5414  0FB9  087C               	movf	ds1307_set_hours@hours,w
  5415  0FBA  3185  257B         	fcall	_dec_to_bcd
  5416  0FBC  047A               	iorwf	??_ds1307_set_hours,w
  5417  0FBD  00FB               	movwf	??_ds1307_set_hours+1
  5418  0FBE  087B               	movf	??_ds1307_set_hours+1,w
  5419  0FBF  0021               	movlb	1	; select bank1
  5420  0FC0  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5421                           
  5422                           ;ds1307.c: 229: }
  5423                           ;ds1307.c: 230: } else {
  5424  0FC1  0008               	return
  5425  0FC2                     i1l2385:	
  5426                           
  5427                           ;ds1307.c: 231: if (hours < 24) {
  5428  0FC2  3018               	movlw	24
  5429  0FC3  027C               	subwf	ds1307_set_hours@hours,w
  5430  0FC4  1803               	skipnc
  5431  0FC5  0008               	return
  5432                           
  5433                           ;ds1307.c: 233: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x40);
  5434  0FC6  3040               	movlw	64
  5435  0FC7  0021               	movlb	1	; select bank1
  5436  0FC8  0539               	andwf	(_g_reg_data^(0+128)+2),w
  5437  0FC9  00FA               	movwf	??_ds1307_set_hours
  5438  0FCA  087C               	movf	ds1307_set_hours@hours,w
  5439  0FCB  3185  257B         	fcall	_dec_to_bcd
  5440  0FCD  047A               	iorwf	??_ds1307_set_hours,w
  5441  0FCE  00FB               	movwf	??_ds1307_set_hours+1
  5442  0FCF  087B               	movf	??_ds1307_set_hours+1,w
  5443  0FD0  0021               	movlb	1	; select bank1
  5444  0FD1  00B9               	movwf	(_g_reg_data^(0+128)+2)
  5445  0FD2  0008               	return
  5446  0FD3                     __end_of_ds1307_set_hours:	
  5447                           
  5448                           	psect	text37
  5449  0C9B                     __ptext37:	
  5450 ;; *************** function _ds1307_set_year *****************
  5451 ;; Defined at:
  5452 ;;		line 275 in file "ds1307.c"
  5453 ;; Parameters:    Size  Location     Type
  5454 ;;  year            1    wreg     unsigned char 
  5455 ;; Auto vars:     Size  Location     Type
  5456 ;;  year            1   11[COMMON] unsigned char 
  5457 ;; Return value:  Size  Location     Type
  5458 ;;		None               void
  5459 ;; Registers used:
  5460 ;;		wreg, status,2, status,0, pclath, cstack
  5461 ;; Tracked objects:
  5462 ;;		On entry : 0/0
  5463 ;;		On exit  : 0/0
  5464 ;;		Unchanged: 0/0
  5465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5466 ;;      Params:         0       0       0       0
  5467 ;;      Locals:         1       0       0       0
  5468 ;;      Temps:          1       0       0       0
  5469 ;;      Totals:         2       0       0       0
  5470 ;;Total ram usage:        2 bytes
  5471 ;; Hardware stack levels used:    1
  5472 ;; Hardware stack levels required when called:    2
  5473 ;; This function calls:
  5474 ;;		_dec_to_bcd
  5475 ;; This function is called by:
  5476 ;;		_update_clock
  5477 ;; This function uses a non-reentrant model
  5478 ;;
  5479                           
  5480                           
  5481                           ;psect for function _ds1307_set_year
  5482  0C9B                     _ds1307_set_year:	
  5483                           
  5484                           ;incstack = 0
  5485                           ; Regs used in _ds1307_set_year: [wreg+status,2+status,0+pclath+cstack]
  5486                           ;ds1307_set_year@year stored from wreg
  5487  0C9B  00FB               	movwf	ds1307_set_year@year
  5488                           
  5489                           ;ds1307.c: 276: if (year < 100) {
  5490  0C9C  3064               	movlw	100
  5491  0C9D  027B               	subwf	ds1307_set_year@year,w
  5492  0C9E  1803               	skipnc
  5493  0C9F  0008               	return
  5494                           
  5495                           ;ds1307.c: 277: g_reg_data[DS1307_REG_YEAR] = dec_to_bcd(year);
  5496  0CA0  087B               	movf	ds1307_set_year@year,w
  5497  0CA1  3185  257B         	fcall	_dec_to_bcd
  5498  0CA3  00FA               	movwf	??_ds1307_set_year
  5499  0CA4  087A               	movf	??_ds1307_set_year,w
  5500  0CA5  0021               	movlb	1	; select bank1
  5501  0CA6  00BD               	movwf	(_g_reg_data^(0+128)+6)
  5502  0CA7  0008               	return
  5503  0CA8                     __end_of_ds1307_set_year:	
  5504                           
  5505                           	psect	text38
  5506  0D60                     __ptext38:	
  5507 ;; *************** function _ds1307_set_seconds *****************
  5508 ;; Defined at:
  5509 ;;		line 192 in file "ds1307.c"
  5510 ;; Parameters:    Size  Location     Type
  5511 ;;  sec             1    wreg     unsigned char 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  sec             1   12[COMMON] unsigned char 
  5514 ;; Return value:  Size  Location     Type
  5515 ;;		None               void
  5516 ;; Registers used:
  5517 ;;		wreg, status,2, status,0, pclath, cstack
  5518 ;; Tracked objects:
  5519 ;;		On entry : 0/0
  5520 ;;		On exit  : 0/0
  5521 ;;		Unchanged: 0/0
  5522 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5523 ;;      Params:         0       0       0       0
  5524 ;;      Locals:         1       0       0       0
  5525 ;;      Temps:          2       0       0       0
  5526 ;;      Totals:         3       0       0       0
  5527 ;;Total ram usage:        3 bytes
  5528 ;; Hardware stack levels used:    1
  5529 ;; Hardware stack levels required when called:    2
  5530 ;; This function calls:
  5531 ;;		_dec_to_bcd
  5532 ;; This function is called by:
  5533 ;;		_update_clock
  5534 ;; This function uses a non-reentrant model
  5535 ;;
  5536                           
  5537                           
  5538                           ;psect for function _ds1307_set_seconds
  5539  0D60                     _ds1307_set_seconds:	
  5540                           
  5541                           ;incstack = 0
  5542                           ; Regs used in _ds1307_set_seconds: [wreg+status,2+status,0+pclath+cstack]
  5543                           ;ds1307_set_seconds@sec stored from wreg
  5544  0D60  00FC               	movwf	ds1307_set_seconds@sec
  5545                           
  5546                           ;ds1307.c: 194: if (sec < 60) {
  5547  0D61  303C               	movlw	60
  5548  0D62  027C               	subwf	ds1307_set_seconds@sec,w
  5549  0D63  1803               	skipnc
  5550  0D64  0008               	return
  5551                           
  5552                           ;ds1307.c: 196: g_reg_data[DS1307_REG_SECONDS] = dec_to_bcd(sec) | (g_reg_data[DS1307_RE
      +                          G_SECONDS] & 0x80);
  5553  0D65  3080               	movlw	128
  5554  0D66  0021               	movlb	1	; select bank1
  5555  0D67  0537               	andwf	_g_reg_data^(0+128),w
  5556  0D68  00FA               	movwf	??_ds1307_set_seconds
  5557  0D69  087C               	movf	ds1307_set_seconds@sec,w
  5558  0D6A  3185  257B         	fcall	_dec_to_bcd
  5559  0D6C  047A               	iorwf	??_ds1307_set_seconds,w
  5560  0D6D  00FB               	movwf	??_ds1307_set_seconds+1
  5561  0D6E  087B               	movf	??_ds1307_set_seconds+1,w
  5562  0D6F  0021               	movlb	1	; select bank1
  5563  0D70  00B7               	movwf	_g_reg_data^(0+128)
  5564  0D71  0008               	return
  5565  0D72                     __end_of_ds1307_set_seconds:	
  5566                           
  5567                           	psect	text39
  5568  0D2F                     __ptext39:	
  5569 ;; *************** function _ds1307_set_month *****************
  5570 ;; Defined at:
  5571 ;;		line 264 in file "ds1307.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  month           1    wreg     unsigned char 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  month           1   11[COMMON] unsigned char 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;		None               void
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, pclath, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5585 ;;      Params:         0       0       0       0
  5586 ;;      Locals:         1       0       0       0
  5587 ;;      Temps:          1       0       0       0
  5588 ;;      Totals:         2       0       0       0
  5589 ;;Total ram usage:        2 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    2
  5592 ;; This function calls:
  5593 ;;		_dec_to_bcd
  5594 ;; This function is called by:
  5595 ;;		_update_clock
  5596 ;; This function uses a non-reentrant model
  5597 ;;
  5598                           
  5599                           
  5600                           ;psect for function _ds1307_set_month
  5601  0D2F                     _ds1307_set_month:	
  5602                           
  5603                           ;incstack = 0
  5604                           ; Regs used in _ds1307_set_month: [wreg+status,2+status,0+pclath+cstack]
  5605                           ;ds1307_set_month@month stored from wreg
  5606  0D2F  00FB               	movwf	ds1307_set_month@month
  5607                           
  5608                           ;ds1307.c: 265: if ((month > 0) && (month < 13)) {
  5609  0D30  087B               	movf	ds1307_set_month@month,w
  5610  0D31  1903               	btfsc	3,2
  5611  0D32  0008               	return
  5612  0D33  300D               	movlw	13
  5613  0D34  027B               	subwf	ds1307_set_month@month,w
  5614  0D35  1803               	skipnc
  5615  0D36  0008               	return
  5616                           
  5617                           ;ds1307.c: 266: g_reg_data[DS1307_REG_MONTH] = dec_to_bcd(month);
  5618  0D37  087B               	movf	ds1307_set_month@month,w
  5619  0D38  3185  257B         	fcall	_dec_to_bcd
  5620  0D3A  00FA               	movwf	??_ds1307_set_month
  5621  0D3B  087A               	movf	??_ds1307_set_month,w
  5622  0D3C  0021               	movlb	1	; select bank1
  5623  0D3D  00BC               	movwf	(_g_reg_data^(0+128)+5)
  5624  0D3E  0008               	return
  5625  0D3F                     __end_of_ds1307_set_month:	
  5626                           
  5627                           	psect	text40
  5628  0C8E                     __ptext40:	
  5629 ;; *************** function _ds1307_set_minutes *****************
  5630 ;; Defined at:
  5631 ;;		line 204 in file "ds1307.c"
  5632 ;; Parameters:    Size  Location     Type
  5633 ;;  min             1    wreg     unsigned char 
  5634 ;; Auto vars:     Size  Location     Type
  5635 ;;  min             1   11[COMMON] unsigned char 
  5636 ;; Return value:  Size  Location     Type
  5637 ;;		None               void
  5638 ;; Registers used:
  5639 ;;		wreg, status,2, status,0, pclath, cstack
  5640 ;; Tracked objects:
  5641 ;;		On entry : 0/0
  5642 ;;		On exit  : 0/0
  5643 ;;		Unchanged: 0/0
  5644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5645 ;;      Params:         0       0       0       0
  5646 ;;      Locals:         1       0       0       0
  5647 ;;      Temps:          1       0       0       0
  5648 ;;      Totals:         2       0       0       0
  5649 ;;Total ram usage:        2 bytes
  5650 ;; Hardware stack levels used:    1
  5651 ;; Hardware stack levels required when called:    2
  5652 ;; This function calls:
  5653 ;;		_dec_to_bcd
  5654 ;; This function is called by:
  5655 ;;		_update_clock
  5656 ;; This function uses a non-reentrant model
  5657 ;;
  5658                           
  5659                           
  5660                           ;psect for function _ds1307_set_minutes
  5661  0C8E                     _ds1307_set_minutes:	
  5662                           
  5663                           ;incstack = 0
  5664                           ; Regs used in _ds1307_set_minutes: [wreg+status,2+status,0+pclath+cstack]
  5665                           ;ds1307_set_minutes@min stored from wreg
  5666  0C8E  00FB               	movwf	ds1307_set_minutes@min
  5667                           
  5668                           ;ds1307.c: 206: if (min < 60) {
  5669  0C8F  303C               	movlw	60
  5670  0C90  027B               	subwf	ds1307_set_minutes@min,w
  5671  0C91  1803               	skipnc
  5672  0C92  0008               	return
  5673                           
  5674                           ;ds1307.c: 207: g_reg_data[DS1307_REG_MINUTES] = dec_to_bcd(min);
  5675  0C93  087B               	movf	ds1307_set_minutes@min,w
  5676  0C94  3185  257B         	fcall	_dec_to_bcd
  5677  0C96  00FA               	movwf	??_ds1307_set_minutes
  5678  0C97  087A               	movf	??_ds1307_set_minutes,w
  5679  0C98  0021               	movlb	1	; select bank1
  5680  0C99  00B8               	movwf	(_g_reg_data^(0+128)+1)
  5681  0C9A  0008               	return
  5682  0C9B                     __end_of_ds1307_set_minutes:	
  5683                           
  5684                           	psect	text41
  5685  0D1F                     __ptext41:	
  5686 ;; *************** function _ds1307_set_day_of_month *****************
  5687 ;; Defined at:
  5688 ;;		line 254 in file "ds1307.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;  dom             1    wreg     unsigned char 
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  dom             1   11[COMMON] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;		None               void
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0, pclath, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5702 ;;      Params:         0       0       0       0
  5703 ;;      Locals:         1       0       0       0
  5704 ;;      Temps:          1       0       0       0
  5705 ;;      Totals:         2       0       0       0
  5706 ;;Total ram usage:        2 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    2
  5709 ;; This function calls:
  5710 ;;		_dec_to_bcd
  5711 ;; This function is called by:
  5712 ;;		_update_clock
  5713 ;; This function uses a non-reentrant model
  5714 ;;
  5715                           
  5716                           
  5717                           ;psect for function _ds1307_set_day_of_month
  5718  0D1F                     _ds1307_set_day_of_month:	
  5719                           
  5720                           ;incstack = 0
  5721                           ; Regs used in _ds1307_set_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  5722                           ;ds1307_set_day_of_month@dom stored from wreg
  5723  0D1F  00FB               	movwf	ds1307_set_day_of_month@dom
  5724                           
  5725                           ;ds1307.c: 255: if ((dom > 0) && (dom < 32)) {
  5726  0D20  087B               	movf	ds1307_set_day_of_month@dom,w
  5727  0D21  1903               	btfsc	3,2
  5728  0D22  0008               	return
  5729  0D23  3020               	movlw	32
  5730  0D24  027B               	subwf	ds1307_set_day_of_month@dom,w
  5731  0D25  1803               	skipnc
  5732  0D26  0008               	return
  5733                           
  5734                           ;ds1307.c: 256: g_reg_data[DS1307_REG_DAY_OM] = dec_to_bcd(dom);
  5735  0D27  087B               	movf	ds1307_set_day_of_month@dom,w
  5736  0D28  3185  257B         	fcall	_dec_to_bcd
  5737  0D2A  00FA               	movwf	??_ds1307_set_day_of_month
  5738  0D2B  087A               	movf	??_ds1307_set_day_of_month,w
  5739  0D2C  0021               	movlb	1	; select bank1
  5740  0D2D  00BB               	movwf	(_g_reg_data^(0+128)+4)
  5741  0D2E  0008               	return
  5742  0D2F                     __end_of_ds1307_set_day_of_month:	
  5743                           
  5744                           	psect	text42
  5745  057B                     __ptext42:	
  5746 ;; *************** function _dec_to_bcd *****************
  5747 ;; Defined at:
  5748 ;;		line 67 in file "ds1307.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  dec             1    wreg     unsigned char 
  5751 ;; Auto vars:     Size  Location     Type
  5752 ;;  dec             1    9[COMMON] unsigned char 
  5753 ;; Return value:  Size  Location     Type
  5754 ;;                  1    wreg      unsigned char 
  5755 ;; Registers used:
  5756 ;;		wreg, status,2, status,0, pclath, cstack
  5757 ;; Tracked objects:
  5758 ;;		On entry : 0/0
  5759 ;;		On exit  : 0/0
  5760 ;;		Unchanged: 0/0
  5761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5762 ;;      Params:         0       0       0       0
  5763 ;;      Locals:         1       0       0       0
  5764 ;;      Temps:          0       7       0       0
  5765 ;;      Totals:         1       7       0       0
  5766 ;;Total ram usage:        8 bytes
  5767 ;; Hardware stack levels used:    1
  5768 ;; Hardware stack levels required when called:    1
  5769 ;; This function calls:
  5770 ;;		___awdiv
  5771 ;;		___awmod
  5772 ;; This function is called by:
  5773 ;;		_ds1307_set_seconds
  5774 ;;		_ds1307_set_minutes
  5775 ;;		_ds1307_set_hours
  5776 ;;		_ds1307_set_day_of_month
  5777 ;;		_ds1307_set_month
  5778 ;;		_ds1307_set_year
  5779 ;; This function uses a non-reentrant model
  5780 ;;
  5781                           
  5782                           
  5783                           ;psect for function _dec_to_bcd
  5784  057B                     _dec_to_bcd:	
  5785                           
  5786                           ;incstack = 0
  5787                           ; Regs used in _dec_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  5788                           ;dec_to_bcd@dec stored from wreg
  5789  057B  00F9               	movwf	dec_to_bcd@dec
  5790                           
  5791                           ;ds1307.c: 70: return (((uint8_t) (dec / 10) << 4) | (dec % 10));
  5792  057C  300A               	movlw	10
  5793  057D  00F0               	movwf	___awmod@divisor
  5794  057E  3000               	movlw	0
  5795  057F  00F1               	movwf	___awmod@divisor+1
  5796  0580  0879               	movf	dec_to_bcd@dec,w
  5797  0581  0020               	movlb	0	; select bank0
  5798  0582  00A0               	movwf	??_dec_to_bcd
  5799  0583  01A1               	clrf	??_dec_to_bcd+1
  5800  0584  0820               	movf	??_dec_to_bcd,w
  5801  0585  00F2               	movwf	___awmod@dividend
  5802  0586  0821               	movf	??_dec_to_bcd+1,w
  5803  0587  00F3               	movwf	___awmod@dividend+1
  5804  0588  3186  2649  3185   	fcall	___awmod
  5805  058B  0870               	movf	?___awmod,w
  5806  058C  0020               	movlb	0	; select bank0
  5807  058D  00A2               	movwf	??_dec_to_bcd+2
  5808  058E  0871               	movf	?___awmod+1,w
  5809  058F  00A3               	movwf	??_dec_to_bcd+3
  5810  0590  300A               	movlw	10
  5811  0591  00F0               	movwf	___awdiv@divisor
  5812  0592  3000               	movlw	0
  5813  0593  00F1               	movwf	___awdiv@divisor+1
  5814  0594  0879               	movf	dec_to_bcd@dec,w
  5815  0595  00A4               	movwf	??_dec_to_bcd+4
  5816  0596  01A5               	clrf	??_dec_to_bcd+5
  5817  0597  0824               	movf	??_dec_to_bcd+4,w
  5818  0598  00F2               	movwf	___awdiv@dividend
  5819  0599  0825               	movf	??_dec_to_bcd+5,w
  5820  059A  00F3               	movwf	___awdiv@dividend+1
  5821  059B  3184  247C  3185   	fcall	___awdiv
  5822  059E  0870               	movf	?___awdiv,w
  5823  059F  0020               	movlb	0	; select bank0
  5824  05A0  00A6               	movwf	??_dec_to_bcd+6
  5825  05A1  3003               	movlw	3
  5826  05A2                     u156_25:	
  5827  05A2  35A6               	lslf	??_dec_to_bcd+6,f
  5828  05A3  3EFF               	addlw	-1
  5829  05A4  1D03               	skipz
  5830  05A5  2DA2               	goto	u156_25
  5831  05A6  3526               	lslf	??_dec_to_bcd+6,w
  5832  05A7  0422               	iorwf	??_dec_to_bcd+2,w
  5833  05A8  0008               	return
  5834  05A9                     __end_of_dec_to_bcd:	
  5835                           
  5836                           	psect	text43
  5837  0649                     __ptext43:	
  5838 ;; *************** function ___awmod *****************
  5839 ;; Defined at:
  5840 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\awmod.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  divisor         2    0[COMMON] int 
  5843 ;;  dividend        2    2[COMMON] int 
  5844 ;; Auto vars:     Size  Location     Type
  5845 ;;  sign            1    6[COMMON] unsigned char 
  5846 ;;  counter         1    5[COMMON] unsigned char 
  5847 ;; Return value:  Size  Location     Type
  5848 ;;                  2    0[COMMON] int 
  5849 ;; Registers used:
  5850 ;;		wreg, status,2, status,0
  5851 ;; Tracked objects:
  5852 ;;		On entry : 0/0
  5853 ;;		On exit  : 0/0
  5854 ;;		Unchanged: 0/0
  5855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5856 ;;      Params:         4       0       0       0
  5857 ;;      Locals:         2       0       0       0
  5858 ;;      Temps:          1       0       0       0
  5859 ;;      Totals:         7       0       0       0
  5860 ;;Total ram usage:        7 bytes
  5861 ;; Hardware stack levels used:    1
  5862 ;; This function calls:
  5863 ;;		Nothing
  5864 ;; This function is called by:
  5865 ;;		_dec_to_bcd
  5866 ;; This function uses a non-reentrant model
  5867 ;;
  5868                           
  5869                           
  5870                           ;psect for function ___awmod
  5871  0649                     ___awmod:	
  5872                           
  5873                           ;incstack = 0
  5874                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  5875  0649  01F6               	clrf	___awmod@sign
  5876  064A  1FF3               	btfss	___awmod@dividend+1,7
  5877  064B  2E53               	goto	i1l2237
  5878  064C  09F2               	comf	___awmod@dividend,f
  5879  064D  09F3               	comf	___awmod@dividend+1,f
  5880  064E  0AF2               	incf	___awmod@dividend,f
  5881  064F  1903               	skipnz
  5882  0650  0AF3               	incf	___awmod@dividend+1,f
  5883  0651  01F6               	clrf	___awmod@sign
  5884  0652  0AF6               	incf	___awmod@sign,f
  5885  0653                     i1l2237:	
  5886  0653  1FF1               	btfss	___awmod@divisor+1,7
  5887  0654  2E5A               	goto	i1l2241
  5888  0655  09F0               	comf	___awmod@divisor,f
  5889  0656  09F1               	comf	___awmod@divisor+1,f
  5890  0657  0AF0               	incf	___awmod@divisor,f
  5891  0658  1903               	skipnz
  5892  0659  0AF1               	incf	___awmod@divisor+1,f
  5893  065A                     i1l2241:	
  5894  065A  0871               	movf	___awmod@divisor+1,w
  5895  065B  0470               	iorwf	___awmod@divisor,w
  5896  065C  1903               	skipnz
  5897  065D  2E81               	goto	i1l2259
  5898  065E  01F5               	clrf	___awmod@counter
  5899  065F  0AF5               	incf	___awmod@counter,f
  5900  0660                     i1l2249:	
  5901  0660  1BF1               	btfsc	___awmod@divisor+1,7
  5902  0661  2E6C               	goto	i1l2251
  5903  0662  3001               	movlw	1
  5904  0663                     u149_25:	
  5905  0663  35F0               	lslf	___awmod@divisor,f
  5906  0664  0DF1               	rlf	___awmod@divisor+1,f
  5907  0665  0B89               	decfsz	9,f
  5908  0666  2E63               	goto	u149_25
  5909  0667  3001               	movlw	1
  5910  0668  00F4               	movwf	??___awmod
  5911  0669  0874               	movf	??___awmod,w
  5912  066A  07F5               	addwf	___awmod@counter,f
  5913  066B  2E60               	goto	i1l2249
  5914  066C                     i1l2251:	
  5915  066C  0871               	movf	___awmod@divisor+1,w
  5916  066D  0273               	subwf	___awmod@dividend+1,w
  5917  066E  1D03               	skipz
  5918  066F  2E72               	goto	u151_25
  5919  0670  0870               	movf	___awmod@divisor,w
  5920  0671  0272               	subwf	___awmod@dividend,w
  5921  0672                     u151_25:	
  5922  0672  1C03               	skipc
  5923  0673  2E78               	goto	i1l2255
  5924  0674  0870               	movf	___awmod@divisor,w
  5925  0675  02F2               	subwf	___awmod@dividend,f
  5926  0676  0871               	movf	___awmod@divisor+1,w
  5927  0677  3BF3               	subwfb	___awmod@dividend+1,f
  5928  0678                     i1l2255:	
  5929  0678  3001               	movlw	1
  5930  0679                     u152_25:	
  5931  0679  36F1               	lsrf	___awmod@divisor+1,f
  5932  067A  0CF0               	rrf	___awmod@divisor,f
  5933  067B  0B89               	decfsz	9,f
  5934  067C  2E79               	goto	u152_25
  5935  067D  3001               	movlw	1
  5936  067E  02F5               	subwf	___awmod@counter,f
  5937  067F  1D03               	btfss	3,2
  5938  0680  2E6C               	goto	i1l2251
  5939  0681                     i1l2259:	
  5940  0681  0876               	movf	___awmod@sign,w
  5941  0682  1903               	btfsc	3,2
  5942  0683  2E89               	goto	i1l2263
  5943  0684  09F2               	comf	___awmod@dividend,f
  5944  0685  09F3               	comf	___awmod@dividend+1,f
  5945  0686  0AF2               	incf	___awmod@dividend,f
  5946  0687  1903               	skipnz
  5947  0688  0AF3               	incf	___awmod@dividend+1,f
  5948  0689                     i1l2263:	
  5949  0689  0873               	movf	___awmod@dividend+1,w
  5950  068A  01F1               	clrf	?___awmod+1
  5951  068B  07F1               	addwf	?___awmod+1,f
  5952  068C  0872               	movf	___awmod@dividend,w
  5953  068D  01F0               	clrf	?___awmod
  5954  068E  07F0               	addwf	?___awmod,f
  5955  068F  0008               	return
  5956  0690                     __end_of___awmod:	
  5957                           
  5958                           	psect	text44
  5959  047C                     __ptext44:	
  5960 ;; *************** function ___awdiv *****************
  5961 ;; Defined at:
  5962 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\awdiv.c"
  5963 ;; Parameters:    Size  Location     Type
  5964 ;;  divisor         2    0[COMMON] int 
  5965 ;;  dividend        2    2[COMMON] int 
  5966 ;; Auto vars:     Size  Location     Type
  5967 ;;  quotient        2    7[COMMON] int 
  5968 ;;  sign            1    6[COMMON] unsigned char 
  5969 ;;  counter         1    5[COMMON] unsigned char 
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  2    0[COMMON] int 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5979 ;;      Params:         4       0       0       0
  5980 ;;      Locals:         4       0       0       0
  5981 ;;      Temps:          1       0       0       0
  5982 ;;      Totals:         9       0       0       0
  5983 ;;Total ram usage:        9 bytes
  5984 ;; Hardware stack levels used:    1
  5985 ;; This function calls:
  5986 ;;		Nothing
  5987 ;; This function is called by:
  5988 ;;		_dec_to_bcd
  5989 ;; This function uses a non-reentrant model
  5990 ;;
  5991                           
  5992                           
  5993                           ;psect for function ___awdiv
  5994  047C                     ___awdiv:	
  5995                           
  5996                           ;incstack = 0
  5997                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  5998  047C  01F6               	clrf	___awdiv@sign
  5999  047D  1FF1               	btfss	___awdiv@divisor+1,7
  6000  047E  2C86               	goto	i1l2193
  6001  047F  09F0               	comf	___awdiv@divisor,f
  6002  0480  09F1               	comf	___awdiv@divisor+1,f
  6003  0481  0AF0               	incf	___awdiv@divisor,f
  6004  0482  1903               	skipnz
  6005  0483  0AF1               	incf	___awdiv@divisor+1,f
  6006  0484  01F6               	clrf	___awdiv@sign
  6007  0485  0AF6               	incf	___awdiv@sign,f
  6008  0486                     i1l2193:	
  6009  0486  1FF3               	btfss	___awdiv@dividend+1,7
  6010  0487  2C91               	goto	i1l2199
  6011  0488  09F2               	comf	___awdiv@dividend,f
  6012  0489  09F3               	comf	___awdiv@dividend+1,f
  6013  048A  0AF2               	incf	___awdiv@dividend,f
  6014  048B  1903               	skipnz
  6015  048C  0AF3               	incf	___awdiv@dividend+1,f
  6016  048D  3001               	movlw	1
  6017  048E  00F4               	movwf	??___awdiv
  6018  048F  0874               	movf	??___awdiv,w
  6019  0490  06F6               	xorwf	___awdiv@sign,f
  6020  0491                     i1l2199:	
  6021  0491  01F7               	clrf	___awdiv@quotient
  6022  0492  01F8               	clrf	___awdiv@quotient+1
  6023  0493  0871               	movf	___awdiv@divisor+1,w
  6024  0494  0470               	iorwf	___awdiv@divisor,w
  6025  0495  1903               	skipnz
  6026  0496  2CC0               	goto	i1l2221
  6027  0497  01F5               	clrf	___awdiv@counter
  6028  0498  0AF5               	incf	___awdiv@counter,f
  6029  0499                     i1l2209:	
  6030  0499  1BF1               	btfsc	___awdiv@divisor+1,7
  6031  049A  2CA5               	goto	i1l2211
  6032  049B  3001               	movlw	1
  6033  049C                     u139_25:	
  6034  049C  35F0               	lslf	___awdiv@divisor,f
  6035  049D  0DF1               	rlf	___awdiv@divisor+1,f
  6036  049E  0B89               	decfsz	9,f
  6037  049F  2C9C               	goto	u139_25
  6038  04A0  3001               	movlw	1
  6039  04A1  00F4               	movwf	??___awdiv
  6040  04A2  0874               	movf	??___awdiv,w
  6041  04A3  07F5               	addwf	___awdiv@counter,f
  6042  04A4  2C99               	goto	i1l2209
  6043  04A5                     i1l2211:	
  6044  04A5  3001               	movlw	1
  6045  04A6                     u141_25:	
  6046  04A6  35F7               	lslf	___awdiv@quotient,f
  6047  04A7  0DF8               	rlf	___awdiv@quotient+1,f
  6048  04A8  0B89               	decfsz	9,f
  6049  04A9  2CA6               	goto	u141_25
  6050  04AA  0871               	movf	___awdiv@divisor+1,w
  6051  04AB  0273               	subwf	___awdiv@dividend+1,w
  6052  04AC  1D03               	skipz
  6053  04AD  2CB0               	goto	u142_25
  6054  04AE  0870               	movf	___awdiv@divisor,w
  6055  04AF  0272               	subwf	___awdiv@dividend,w
  6056  04B0                     u142_25:	
  6057  04B0  1C03               	skipc
  6058  04B1  2CB7               	goto	i1l2217
  6059  04B2  0870               	movf	___awdiv@divisor,w
  6060  04B3  02F2               	subwf	___awdiv@dividend,f
  6061  04B4  0871               	movf	___awdiv@divisor+1,w
  6062  04B5  3BF3               	subwfb	___awdiv@dividend+1,f
  6063  04B6  1477               	bsf	___awdiv@quotient,0
  6064  04B7                     i1l2217:	
  6065  04B7  3001               	movlw	1
  6066  04B8                     u143_25:	
  6067  04B8  36F1               	lsrf	___awdiv@divisor+1,f
  6068  04B9  0CF0               	rrf	___awdiv@divisor,f
  6069  04BA  0B89               	decfsz	9,f
  6070  04BB  2CB8               	goto	u143_25
  6071  04BC  3001               	movlw	1
  6072  04BD  02F5               	subwf	___awdiv@counter,f
  6073  04BE  1D03               	btfss	3,2
  6074  04BF  2CA5               	goto	i1l2211
  6075  04C0                     i1l2221:	
  6076  04C0  0876               	movf	___awdiv@sign,w
  6077  04C1  1903               	btfsc	3,2
  6078  04C2  2CC8               	goto	i1l2225
  6079  04C3  09F7               	comf	___awdiv@quotient,f
  6080  04C4  09F8               	comf	___awdiv@quotient+1,f
  6081  04C5  0AF7               	incf	___awdiv@quotient,f
  6082  04C6  1903               	skipnz
  6083  04C7  0AF8               	incf	___awdiv@quotient+1,f
  6084  04C8                     i1l2225:	
  6085  04C8  0878               	movf	___awdiv@quotient+1,w
  6086  04C9  01F1               	clrf	?___awdiv+1
  6087  04CA  07F1               	addwf	?___awdiv+1,f
  6088  04CB  0877               	movf	___awdiv@quotient,w
  6089  04CC  01F0               	clrf	?___awdiv
  6090  04CD  07F0               	addwf	?___awdiv,f
  6091  04CE  0008               	return
  6092  04CF                     __end_of___awdiv:	
  6093                           
  6094                           	psect	text45
  6095  054B                     __ptext45:	
  6096 ;; *************** function _ds1307_set_clock *****************
  6097 ;; Defined at:
  6098 ;;		line 158 in file "ds1307.c"
  6099 ;; Parameters:    Size  Location     Type
  6100 ;;		None
  6101 ;; Auto vars:     Size  Location     Type
  6102 ;;  r               1    9[COMMON] unsigned char 
  6103 ;; Return value:  Size  Location     Type
  6104 ;;		None               void
  6105 ;; Registers used:
  6106 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6107 ;; Tracked objects:
  6108 ;;		On entry : 0/0
  6109 ;;		On exit  : 0/0
  6110 ;;		Unchanged: 0/0
  6111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6112 ;;      Params:         0       0       0       0
  6113 ;;      Locals:         1       0       0       0
  6114 ;;      Temps:          1       0       0       0
  6115 ;;      Totals:         2       0       0       0
  6116 ;;Total ram usage:        2 bytes
  6117 ;; Hardware stack levels used:    1
  6118 ;; Hardware stack levels required when called:    4
  6119 ;; This function calls:
  6120 ;;		_ds1307_start_clock
  6121 ;;		_ds1307_stop_clock
  6122 ;;		i1_i2c_send_address
  6123 ;;		i1_i2c_send_data
  6124 ;;		i1_i2c_start
  6125 ;;		i1_i2c_stop
  6126 ;; This function is called by:
  6127 ;;		_update_clock
  6128 ;; This function uses a non-reentrant model
  6129 ;;
  6130                           
  6131                           
  6132                           ;psect for function _ds1307_set_clock
  6133  054B                     _ds1307_set_clock:	
  6134                           
  6135                           ;ds1307.c: 162: ds1307_stop_clock();
  6136                           
  6137                           ;incstack = 0
  6138                           ; Regs used in _ds1307_set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  6139  054B  318D  25FD  3185   	fcall	_ds1307_stop_clock
  6140                           
  6141                           ;ds1307.c: 163: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  6142  054E  0021               	movlb	1	; select bank1
  6143  054F  0837               	movf	_g_reg_data^(0+128),w
  6144  0550  3880               	iorlw	128
  6145  0551  00F8               	movwf	??_ds1307_set_clock
  6146  0552  0878               	movf	??_ds1307_set_clock,w
  6147  0553  00B7               	movwf	_g_reg_data^(0+128)
  6148                           
  6149                           ;ds1307.c: 164: i2c_start();
  6150  0554  318B  23E7  3185   	fcall	i1_i2c_start
  6151                           
  6152                           ;ds1307.c: 165: i2c_send_address(0b01101000, 0);
  6153  0557  01F0               	clrf	i1i2c_send_address@mode
  6154  0558  3068               	movlw	104
  6155  0559  318C  2481  3185   	fcall	i1_i2c_send_address
  6156                           
  6157                           ;ds1307.c: 166: i2c_send_data(0x00);
  6158  055C  3000               	movlw	0
  6159  055D  318C  241F  3185   	fcall	i1_i2c_send_data
  6160                           
  6161                           ;ds1307.c: 167: for (uint8_t r = 0x00; r < 0x07; r++) {
  6162  0560  01F9               	clrf	ds1307_set_clock@r
  6163  0561  3007               	movlw	7
  6164  0562  0279               	subwf	ds1307_set_clock@r,w
  6165  0563  1803               	btfsc	3,0
  6166  0564  2D75               	goto	i1l2625
  6167  0565                     i1l2619:	
  6168                           
  6169                           ;ds1307.c: 168: i2c_send_data(g_reg_data[r]);
  6170  0565  0879               	movf	ds1307_set_clock@r,w
  6171  0566  3EB7               	addlw	_g_reg_data& (0+255)
  6172  0567  0086               	movwf	6
  6173  0568  0187               	clrf	7
  6174  0569  0801               	movf	1,w
  6175  056A  318C  241F  3185   	fcall	i1_i2c_send_data
  6176  056D  3001               	movlw	1
  6177  056E  00F8               	movwf	??_ds1307_set_clock
  6178  056F  0878               	movf	??_ds1307_set_clock,w
  6179  0570  07F9               	addwf	ds1307_set_clock@r,f
  6180  0571  3007               	movlw	7
  6181  0572  0279               	subwf	ds1307_set_clock@r,w
  6182  0573  1C03               	skipc
  6183  0574  2D65               	goto	i1l2619
  6184  0575                     i1l2625:	
  6185                           
  6186                           ;ds1307.c: 169: }
  6187                           ;ds1307.c: 170: i2c_stop();
  6188  0575  318B  23EC  3185   	fcall	i1_i2c_stop
  6189                           
  6190                           ;ds1307.c: 171: ds1307_start_clock();
  6191  0578  318D  25E7         	fcall	_ds1307_start_clock
  6192  057A  0008               	return
  6193  057B                     __end_of_ds1307_set_clock:	
  6194                           
  6195                           	psect	text46
  6196  0DFD                     __ptext46:	
  6197 ;; *************** function _ds1307_stop_clock *****************
  6198 ;; Defined at:
  6199 ;;		line 114 in file "ds1307.c"
  6200 ;; Parameters:    Size  Location     Type
  6201 ;;		None
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  tsec            1    7[COMMON] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;		None               void
  6206 ;; Registers used:
  6207 ;;		wreg, status,2, status,0, pclath, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6213 ;;      Params:         0       0       0       0
  6214 ;;      Locals:         1       0       0       0
  6215 ;;      Temps:          1       0       0       0
  6216 ;;      Totals:         2       0       0       0
  6217 ;;Total ram usage:        2 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    3
  6220 ;; This function calls:
  6221 ;;		_ds1307_read_addr
  6222 ;;		_ds1307_write_addr
  6223 ;; This function is called by:
  6224 ;;		_update_clock
  6225 ;;		_ds1307_set_clock
  6226 ;; This function uses a non-reentrant model
  6227 ;;
  6228                           
  6229                           
  6230                           ;psect for function _ds1307_stop_clock
  6231  0DFD                     _ds1307_stop_clock:	
  6232                           
  6233                           ;ds1307.c: 119: uint8_t tsec;
  6234                           ;ds1307.c: 120: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  6235                           
  6236                           ;incstack = 0
  6237                           ; Regs used in _ds1307_stop_clock: [wreg+status,2+status,0+pclath+cstack]
  6238  0DFD  3000               	movlw	0
  6239  0DFE  318E  26DF  318D   	fcall	_ds1307_read_addr
  6240  0E01  00F6               	movwf	??_ds1307_stop_clock
  6241  0E02  0876               	movf	??_ds1307_stop_clock,w
  6242  0E03  00F7               	movwf	ds1307_stop_clock@tsec
  6243                           
  6244                           ;ds1307.c: 121: ds1307_write_addr(DS1307_REG_SECONDS, (tsec | 0x80));
  6245  0E04  0877               	movf	ds1307_stop_clock@tsec,w
  6246  0E05  3880               	iorlw	128
  6247  0E06  00F6               	movwf	??_ds1307_stop_clock
  6248  0E07  0876               	movf	??_ds1307_stop_clock,w
  6249  0E08  00F3               	movwf	ds1307_write_addr@value
  6250  0E09  3000               	movlw	0
  6251  0E0A  318D  25BE         	fcall	_ds1307_write_addr
  6252                           
  6253                           ;ds1307.c: 122: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  6254  0E0C  0021               	movlb	1	; select bank1
  6255  0E0D  0837               	movf	_g_reg_data^(0+128),w
  6256  0E0E  3880               	iorlw	128
  6257  0E0F  00F6               	movwf	??_ds1307_stop_clock
  6258  0E10  0876               	movf	??_ds1307_stop_clock,w
  6259  0E11  00B7               	movwf	_g_reg_data^(0+128)
  6260  0E12  0008               	return
  6261  0E13                     __end_of_ds1307_stop_clock:	
  6262                           
  6263                           	psect	text47
  6264  0DE7                     __ptext47:	
  6265 ;; *************** function _ds1307_start_clock *****************
  6266 ;; Defined at:
  6267 ;;		line 125 in file "ds1307.c"
  6268 ;; Parameters:    Size  Location     Type
  6269 ;;		None
  6270 ;; Auto vars:     Size  Location     Type
  6271 ;;  tsec            1    7[COMMON] unsigned char 
  6272 ;; Return value:  Size  Location     Type
  6273 ;;		None               void
  6274 ;; Registers used:
  6275 ;;		wreg, status,2, status,0, pclath, cstack
  6276 ;; Tracked objects:
  6277 ;;		On entry : 0/0
  6278 ;;		On exit  : 0/0
  6279 ;;		Unchanged: 0/0
  6280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6281 ;;      Params:         0       0       0       0
  6282 ;;      Locals:         1       0       0       0
  6283 ;;      Temps:          1       0       0       0
  6284 ;;      Totals:         2       0       0       0
  6285 ;;Total ram usage:        2 bytes
  6286 ;; Hardware stack levels used:    1
  6287 ;; Hardware stack levels required when called:    3
  6288 ;; This function calls:
  6289 ;;		_ds1307_read_addr
  6290 ;;		_ds1307_write_addr
  6291 ;; This function is called by:
  6292 ;;		_ds1307_set_clock
  6293 ;; This function uses a non-reentrant model
  6294 ;;
  6295                           
  6296                           
  6297                           ;psect for function _ds1307_start_clock
  6298  0DE7                     _ds1307_start_clock:	
  6299                           
  6300                           ;ds1307.c: 130: uint8_t tsec;
  6301                           ;ds1307.c: 131: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  6302                           
  6303                           ;incstack = 0
  6304                           ; Regs used in _ds1307_start_clock: [wreg+status,2+status,0+pclath+cstack]
  6305  0DE7  3000               	movlw	0
  6306  0DE8  318E  26DF  318D   	fcall	_ds1307_read_addr
  6307  0DEB  00F6               	movwf	??_ds1307_start_clock
  6308  0DEC  0876               	movf	??_ds1307_start_clock,w
  6309  0DED  00F7               	movwf	ds1307_start_clock@tsec
  6310                           
  6311                           ;ds1307.c: 132: ds1307_write_addr(DS1307_REG_SECONDS, (tsec & 0x7F));
  6312  0DEE  0877               	movf	ds1307_start_clock@tsec,w
  6313  0DEF  397F               	andlw	127
  6314  0DF0  00F6               	movwf	??_ds1307_start_clock
  6315  0DF1  0876               	movf	??_ds1307_start_clock,w
  6316  0DF2  00F3               	movwf	ds1307_write_addr@value
  6317  0DF3  3000               	movlw	0
  6318  0DF4  318D  25BE         	fcall	_ds1307_write_addr
  6319                           
  6320                           ;ds1307.c: 133: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] & 0x7F;
  6321  0DF6  0021               	movlb	1	; select bank1
  6322  0DF7  0837               	movf	_g_reg_data^(0+128),w
  6323  0DF8  397F               	andlw	127
  6324  0DF9  00F6               	movwf	??_ds1307_start_clock
  6325  0DFA  0876               	movf	??_ds1307_start_clock,w
  6326  0DFB  00B7               	movwf	_g_reg_data^(0+128)
  6327  0DFC  0008               	return
  6328  0DFD                     __end_of_ds1307_start_clock:	
  6329                           
  6330                           	psect	text48
  6331  0DBE                     __ptext48:	
  6332 ;; *************** function _ds1307_write_addr *****************
  6333 ;; Defined at:
  6334 ;;		line 103 in file "ds1307.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;  addr            1    wreg     unsigned char 
  6337 ;;  value           1    3[COMMON] unsigned char 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  addr            1    4[COMMON] unsigned char 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;		None               void
  6342 ;; Registers used:
  6343 ;;		wreg, status,2, status,0, pclath, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6349 ;;      Params:         1       0       0       0
  6350 ;;      Locals:         1       0       0       0
  6351 ;;      Temps:          0       0       0       0
  6352 ;;      Totals:         2       0       0       0
  6353 ;;Total ram usage:        2 bytes
  6354 ;; Hardware stack levels used:    1
  6355 ;; Hardware stack levels required when called:    2
  6356 ;; This function calls:
  6357 ;;		i1_i2c_send_address
  6358 ;;		i1_i2c_send_data
  6359 ;;		i1_i2c_start
  6360 ;;		i1_i2c_stop
  6361 ;; This function is called by:
  6362 ;;		_ds1307_stop_clock
  6363 ;;		_ds1307_start_clock
  6364 ;;		_ds1307_set_control
  6365 ;;		_ds1307_write_ram
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           
  6370                           ;psect for function _ds1307_write_addr
  6371  0DBE                     _ds1307_write_addr:	
  6372                           
  6373                           ;incstack = 0
  6374                           ; Regs used in _ds1307_write_addr: [wreg+status,2+status,0+pclath+cstack]
  6375                           ;ds1307_write_addr@addr stored from wreg
  6376  0DBE  00F4               	movwf	ds1307_write_addr@addr
  6377                           
  6378                           ;ds1307.c: 107: i2c_start();
  6379  0DBF  318B  23E7  318D   	fcall	i1_i2c_start
  6380                           
  6381                           ;ds1307.c: 108: i2c_send_address(0b01101000, 0);
  6382  0DC2  01F0               	clrf	i1i2c_send_address@mode
  6383  0DC3  3068               	movlw	104
  6384  0DC4  318C  2481  318D   	fcall	i1_i2c_send_address
  6385                           
  6386                           ;ds1307.c: 109: i2c_send_data(addr);
  6387  0DC7  0874               	movf	ds1307_write_addr@addr,w
  6388  0DC8  318C  241F  318D   	fcall	i1_i2c_send_data
  6389                           
  6390                           ;ds1307.c: 110: i2c_send_data(value);
  6391  0DCB  0873               	movf	ds1307_write_addr@value,w
  6392  0DCC  318C  241F  318D   	fcall	i1_i2c_send_data
  6393                           
  6394                           ;ds1307.c: 111: i2c_stop();
  6395  0DCF  318B  23EC         	fcall	i1_i2c_stop
  6396  0DD1  0008               	return
  6397  0DD2                     __end_of_ds1307_write_addr:	
  6398                           
  6399                           	psect	text49
  6400  0EDF                     __ptext49:	
  6401 ;; *************** function _ds1307_read_addr *****************
  6402 ;; Defined at:
  6403 ;;		line 86 in file "ds1307.c"
  6404 ;; Parameters:    Size  Location     Type
  6405 ;;  addr            1    wreg     unsigned char 
  6406 ;; Auto vars:     Size  Location     Type
  6407 ;;  addr            1    4[COMMON] unsigned char 
  6408 ;;  read_value      1    5[COMMON] unsigned char 
  6409 ;; Return value:  Size  Location     Type
  6410 ;;                  1    wreg      unsigned char 
  6411 ;; Registers used:
  6412 ;;		wreg, status,2, status,0, pclath, cstack
  6413 ;; Tracked objects:
  6414 ;;		On entry : 0/0
  6415 ;;		On exit  : 0/0
  6416 ;;		Unchanged: 0/0
  6417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6418 ;;      Params:         0       0       0       0
  6419 ;;      Locals:         2       0       0       0
  6420 ;;      Temps:          1       0       0       0
  6421 ;;      Totals:         3       0       0       0
  6422 ;;Total ram usage:        3 bytes
  6423 ;; Hardware stack levels used:    1
  6424 ;; Hardware stack levels required when called:    2
  6425 ;; This function calls:
  6426 ;;		i1_i2c_read_data
  6427 ;;		i1_i2c_restart
  6428 ;;		i1_i2c_send_ack
  6429 ;;		i1_i2c_send_address
  6430 ;;		i1_i2c_send_data
  6431 ;;		i1_i2c_start
  6432 ;;		i1_i2c_stop
  6433 ;; This function is called by:
  6434 ;;		_ds1307_stop_clock
  6435 ;;		_ds1307_start_clock
  6436 ;;		_ds1307_read_ram
  6437 ;; This function uses a non-reentrant model
  6438 ;;
  6439                           
  6440                           
  6441                           ;psect for function _ds1307_read_addr
  6442  0EDF                     _ds1307_read_addr:	
  6443                           
  6444                           ;incstack = 0
  6445                           ; Regs used in _ds1307_read_addr: [wreg+status,2+status,0+pclath+cstack]
  6446                           ;ds1307_read_addr@addr stored from wreg
  6447  0EDF  00F4               	movwf	ds1307_read_addr@addr
  6448                           
  6449                           ;ds1307.c: 87: uint8_t read_value;
  6450                           ;ds1307.c: 91: i2c_start();
  6451  0EE0  318B  23E7  318E   	fcall	i1_i2c_start
  6452                           
  6453                           ;ds1307.c: 92: i2c_send_address(0b01101000, 0);
  6454  0EE3  01F0               	clrf	i1i2c_send_address@mode
  6455  0EE4  3068               	movlw	104
  6456  0EE5  318C  2481  318E   	fcall	i1_i2c_send_address
  6457                           
  6458                           ;ds1307.c: 93: i2c_send_data(addr);
  6459  0EE8  0874               	movf	ds1307_read_addr@addr,w
  6460  0EE9  318C  241F  318E   	fcall	i1_i2c_send_data
  6461                           
  6462                           ;ds1307.c: 94: i2c_restart();
  6463  0EEC  318B  23E2  318E   	fcall	i1_i2c_restart
  6464                           
  6465                           ;ds1307.c: 95: i2c_send_address(0b01101000, 1);
  6466  0EEF  01F0               	clrf	i1i2c_send_address@mode
  6467  0EF0  0AF0               	incf	i1i2c_send_address@mode,f
  6468  0EF1  3068               	movlw	104
  6469  0EF2  318C  2481  318E   	fcall	i1_i2c_send_address
  6470                           
  6471                           ;ds1307.c: 96: read_value = i2c_read_data();
  6472  0EF5  318C  24C3  318E   	fcall	i1_i2c_read_data
  6473  0EF8  00F3               	movwf	??_ds1307_read_addr
  6474  0EF9  0873               	movf	??_ds1307_read_addr,w
  6475  0EFA  00F5               	movwf	ds1307_read_addr@read_value
  6476                           
  6477                           ;ds1307.c: 97: i2c_send_ack(1);
  6478  0EFB  3001               	movlw	1
  6479  0EFC  318C  246A  318E   	fcall	i1_i2c_send_ack
  6480                           
  6481                           ;ds1307.c: 98: i2c_stop();
  6482  0EFF  318B  23EC         	fcall	i1_i2c_stop
  6483                           
  6484                           ;ds1307.c: 100: return read_value;
  6485  0F01  0875               	movf	ds1307_read_addr@read_value,w
  6486  0F02  0008               	return
  6487  0F03                     __end_of_ds1307_read_addr:	
  6488                           
  6489                           	psect	text50
  6490  0C6A                     __ptext50:	
  6491 ;; *************** function i1_i2c_send_ack *****************
  6492 ;; Defined at:
  6493 ;;		line 97 in file "pic12f1840_i2c.c"
  6494 ;; Parameters:    Size  Location     Type
  6495 ;;  ack             1    wreg     unsigned char 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  ack             1    0[COMMON] unsigned char 
  6498 ;; Return value:  Size  Location     Type
  6499 ;;		None               void
  6500 ;; Registers used:
  6501 ;;		wreg, status,2, status,0, pclath, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6507 ;;      Params:         0       0       0       0
  6508 ;;      Locals:         1       0       0       0
  6509 ;;      Temps:          0       0       0       0
  6510 ;;      Totals:         1       0       0       0
  6511 ;;Total ram usage:        1 bytes
  6512 ;; Hardware stack levels used:    1
  6513 ;; Hardware stack levels required when called:    1
  6514 ;; This function calls:
  6515 ;;		i1_i2c_wait
  6516 ;; This function is called by:
  6517 ;;		_ds1307_read_addr
  6518 ;;		i1_ds1307_get_clock
  6519 ;; This function uses a non-reentrant model
  6520 ;;
  6521                           
  6522                           
  6523                           ;psect for function i1_i2c_send_ack
  6524  0C6A                     i1_i2c_send_ack:	
  6525                           
  6526                           ;incstack = 0
  6527                           ; Regs used in i1_i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  6528                           ;i1i2c_send_ack@ack stored from wreg
  6529  0C6A  00F0               	movwf	i1i2c_send_ack@ack
  6530                           
  6531                           ;pic12f1840_i2c.c: 98: i2c_wait();
  6532  0C6B  318C  2418         	fcall	i1_i2c_wait
  6533                           
  6534                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  6535  0C6D  0870               	movf	i1i2c_send_ack@ack,w
  6536  0C6E  0024               	movlb	4	; select bank4
  6537  0C6F  1D03               	skipz
  6538  0C70  1696               	bsf	22,5	;volatile
  6539  0C71  1903               	skipnz
  6540  0C72  1296               	bcf	22,5	;volatile
  6541                           
  6542                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  6543  0C73  1616               	bsf	22,4	;volatile
  6544  0C74  0008               	return
  6545  0C75                     __end_ofi1_i2c_send_ack:	
  6546                           
  6547                           	psect	text51
  6548  0EBD                     __ptext51:	
  6549 ;; *************** function _adjust_val *****************
  6550 ;; Defined at:
  6551 ;;		line 126 in file "main.c"
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  value           1    wreg     unsigned char 
  6554 ;;  lim_dwn         1    0[COMMON] unsigned char 
  6555 ;;  lim_up          1    1[COMMON] unsigned char 
  6556 ;;  up_down         1    2[COMMON] unsigned char 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  value           1    4[COMMON] unsigned char 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      unsigned char 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6568 ;;      Params:         3       0       0       0
  6569 ;;      Locals:         1       0       0       0
  6570 ;;      Temps:          1       0       0       0
  6571 ;;      Totals:         5       0       0       0
  6572 ;;Total ram usage:        5 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; This function calls:
  6575 ;;		Nothing
  6576 ;; This function is called by:
  6577 ;;		_update_clock
  6578 ;; This function uses a non-reentrant model
  6579 ;;
  6580                           
  6581                           
  6582                           ;psect for function _adjust_val
  6583  0EBD                     _adjust_val:	
  6584                           
  6585                           ;incstack = 0
  6586                           ; Regs used in _adjust_val: [wreg+status,2+status,0]
  6587                           ;adjust_val@value stored from wreg
  6588  0EBD  00F4               	movwf	adjust_val@value
  6589                           
  6590                           ;main.c: 127: if ((value == lim_up) && (up_down)) {
  6591  0EBE  0874               	movf	adjust_val@value,w
  6592  0EBF  0671               	xorwf	adjust_val@lim_up,w
  6593  0EC0  1D03               	skipz
  6594  0EC1  2EC7               	goto	i1l2485
  6595  0EC2  0872               	movf	adjust_val@up_down,w
  6596  0EC3  1903               	btfsc	3,2
  6597  0EC4  2EC7               	goto	i1l2485
  6598                           
  6599                           ;main.c: 128: value = lim_dwn;
  6600  0EC5  0870               	movf	adjust_val@lim_dwn,w
  6601  0EC6  2ECF               	goto	L5
  6602  0EC7                     i1l2485:	
  6603                           ;main.c: 129: } else if ((value == lim_dwn) && (!up_down)) {
  6604                           
  6605  0EC7  0874               	movf	adjust_val@value,w
  6606  0EC8  0670               	xorwf	adjust_val@lim_dwn,w
  6607  0EC9  1D03               	skipz
  6608  0ECA  2ED3               	goto	i1l2491
  6609  0ECB  08F2               	movf	adjust_val@up_down,f
  6610  0ECC  1D03               	skipz
  6611  0ECD  2ED3               	goto	i1l2491
  6612                           
  6613                           ;main.c: 130: value = lim_up;
  6614  0ECE  0871               	movf	adjust_val@lim_up,w
  6615  0ECF                     L5:	
  6616  0ECF  00F3               	movwf	??_adjust_val
  6617  0ED0  0873               	movf	??_adjust_val,w
  6618  0ED1  00F4               	movwf	adjust_val@value
  6619                           
  6620                           ;main.c: 131: } else if (up_down) {
  6621  0ED2  2EDD               	goto	i1l2497
  6622  0ED3                     i1l2491:	
  6623  0ED3  0872               	movf	adjust_val@up_down,w
  6624  0ED4  1903               	btfsc	3,2
  6625  0ED5  2EDB               	goto	i1l2495
  6626                           
  6627                           ;main.c: 132: value++;
  6628  0ED6  3001               	movlw	1
  6629  0ED7  00F3               	movwf	??_adjust_val
  6630  0ED8  0873               	movf	??_adjust_val,w
  6631  0ED9  07F4               	addwf	adjust_val@value,f
  6632                           
  6633                           ;main.c: 133: } else {
  6634  0EDA  2EDD               	goto	i1l2497
  6635  0EDB                     i1l2495:	
  6636                           
  6637                           ;main.c: 134: value--;
  6638  0EDB  3001               	movlw	1
  6639  0EDC  02F4               	subwf	adjust_val@value,f
  6640  0EDD                     i1l2497:	
  6641                           
  6642                           ;main.c: 135: }
  6643                           ;main.c: 136: return value;
  6644  0EDD  0874               	movf	adjust_val@value,w
  6645  0EDE  0008               	return
  6646  0EDF                     __end_of_adjust_val:	
  6647                           
  6648                           	psect	text52
  6649  0F2A                     __ptext52:	
  6650 ;; *************** function _lcd_write *****************
  6651 ;; Defined at:
  6652 ;;		line 101 in file "HD44780-IOE.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  str             2    0[BANK0 ] PTR unsigned char 
  6655 ;;		 -> tmr_isr@pos(2), STR_2(7), STR_1(7), tmr_isr@date(10), 
  6656 ;;		 -> tmr_isr@time(10), 
  6657 ;; Auto vars:     Size  Location     Type
  6658 ;;  i               1   13[COMMON] unsigned char 
  6659 ;; Return value:  Size  Location     Type
  6660 ;;		None               void
  6661 ;; Registers used:
  6662 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6663 ;; Tracked objects:
  6664 ;;		On entry : 0/0
  6665 ;;		On exit  : 0/0
  6666 ;;		Unchanged: 0/0
  6667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6668 ;;      Params:         0       2       0       0
  6669 ;;      Locals:         1       0       0       0
  6670 ;;      Temps:          0       2       0       0
  6671 ;;      Totals:         1       4       0       0
  6672 ;;Total ram usage:        5 bytes
  6673 ;; Hardware stack levels used:    1
  6674 ;; Hardware stack levels required when called:    7
  6675 ;; This function calls:
  6676 ;;		_lcd_data
  6677 ;; This function is called by:
  6678 ;;		_tmr_isr
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           
  6683                           ;psect for function _lcd_write
  6684  0F2A                     _lcd_write:	
  6685                           
  6686                           ;HD44780-IOE.c: 102: unsigned char i = 0;
  6687                           
  6688                           ;incstack = 0
  6689 ;; hardware stack exceeded
  6690                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6691  0F2A  01FD               	clrf	lcd_write@i
  6692  0F2B                     i1l3005:	
  6693                           ;HD44780-IOE.c: 104: while (str[i] != '\0')
  6694                           
  6695  0F2B  0020               	movlb	0	; select bank0
  6696  0F2C  0821               	movf	lcd_write@str+1,w
  6697  0F2D  00A3               	movwf	??_lcd_write+1
  6698  0F2E  0820               	movf	lcd_write@str,w
  6699  0F2F  00A2               	movwf	??_lcd_write
  6700  0F30  087D               	movf	lcd_write@i,w
  6701  0F31  0722               	addwf	??_lcd_write,w
  6702  0F32  0084               	movwf	4
  6703  0F33  0823               	movf	??_lcd_write+1,w
  6704  0F34  1803               	skipnc
  6705  0F35  0A23               	incf	??_lcd_write+1,w
  6706  0F36  0085               	movwf	5
  6707  0F37  0800               	movf	0,w	;code access
  6708  0F38  3800               	iorlw	0
  6709  0F39  1903               	btfsc	3,2
  6710  0F3A  0008               	return
  6711                           
  6712                           ;HD44780-IOE.c: 105: lcd_data(str[i++]);
  6713  0F3B  0020               	movlb	0	; select bank0
  6714  0F3C  0821               	movf	lcd_write@str+1,w
  6715  0F3D  00A3               	movwf	??_lcd_write+1
  6716  0F3E  0820               	movf	lcd_write@str,w
  6717  0F3F  00A2               	movwf	??_lcd_write
  6718  0F40  087D               	movf	lcd_write@i,w
  6719  0F41  0722               	addwf	??_lcd_write,w
  6720  0F42  0084               	movwf	4
  6721  0F43  0823               	movf	??_lcd_write+1,w
  6722  0F44  1803               	skipnc
  6723  0F45  0A23               	incf	??_lcd_write+1,w
  6724  0F46  0085               	movwf	5
  6725  0F47  0800               	movf	0,w	;code access
  6726  0F48  318D  250F  318F   	fcall	_lcd_data
  6727  0F4B  3001               	movlw	1
  6728  0F4C  0020               	movlb	0	; select bank0
  6729  0F4D  00A2               	movwf	??_lcd_write
  6730  0F4E  0822               	movf	??_lcd_write,w
  6731  0F4F  07FD               	addwf	lcd_write@i,f
  6732  0F50  2F2B               	goto	i1l3005
  6733  0F51                     __end_of_lcd_write:	
  6734                           
  6735                           	psect	text53
  6736  0D0F                     __ptext53:	
  6737 ;; *************** function _lcd_data *****************
  6738 ;; Defined at:
  6739 ;;		line 185 in file "HD44780-IOE.c"
  6740 ;; Parameters:    Size  Location     Type
  6741 ;;  data            1    wreg     unsigned char 
  6742 ;; Auto vars:     Size  Location     Type
  6743 ;;  data            1   12[COMMON] unsigned char 
  6744 ;; Return value:  Size  Location     Type
  6745 ;;		None               void
  6746 ;; Registers used:
  6747 ;;		wreg, status,2, status,0, pclath, cstack
  6748 ;; Tracked objects:
  6749 ;;		On entry : 0/0
  6750 ;;		On exit  : 0/0
  6751 ;;		Unchanged: 0/0
  6752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6753 ;;      Params:         0       0       0       0
  6754 ;;      Locals:         1       0       0       0
  6755 ;;      Temps:          1       0       0       0
  6756 ;;      Totals:         2       0       0       0
  6757 ;;Total ram usage:        2 bytes
  6758 ;; Hardware stack levels used:    1
  6759 ;; Hardware stack levels required when called:    6
  6760 ;; This function calls:
  6761 ;;		i1__send_byte
  6762 ;;		i1_mcp23017_ioa_send_byte
  6763 ;; This function is called by:
  6764 ;;		_lcd_write
  6765 ;;		_lcd_add_character
  6766 ;; This function uses a non-reentrant model
  6767 ;;
  6768                           
  6769                           
  6770                           ;psect for function _lcd_data
  6771  0D0F                     _lcd_data:	
  6772                           
  6773                           ;incstack = 0
  6774 ;; hardware stack exceeded
  6775                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  6776                           ;lcd_data@data stored from wreg
  6777  0D0F  00FC               	movwf	lcd_data@data
  6778                           
  6779                           ;HD44780-IOE.c: 186: LCDPort.A4 = 1;
  6780  0D10  0021               	movlb	1	; select bank1
  6781  0D11  1646               	bsf	_LCDPort^(0+128),4
  6782                           
  6783                           ;HD44780-IOE.c: 187: mcp23017_ioa_send_byte();
  6784  0D12  318C  243D  318D   	fcall	i1_mcp23017_ioa_send_byte
  6785                           
  6786                           ;HD44780-IOE.c: 188: __nop();
  6787  0D15  0000               	nop
  6788                           
  6789                           ;HD44780-IOE.c: 189: _send_byte(data);
  6790  0D16  087C               	movf	lcd_data@data,w
  6791  0D17  318C  24EF  318D   	fcall	i1__send_byte
  6792                           
  6793                           ;HD44780-IOE.c: 190: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  6794  0D1A  3085               	movlw	133
  6795  0D1B  00FB               	movwf	??_lcd_data
  6796  0D1C                     u264_27:	
  6797  0D1C  0BFB               	decfsz	??_lcd_data,f
  6798  0D1D  2D1C               	goto	u264_27
  6799  0D1E  0008               	return
  6800  0D1F                     __end_of_lcd_data:	
  6801                           
  6802                           	psect	text54
  6803  0F03                     __ptext54:	
  6804 ;; *************** function _lcd_goto *****************
  6805 ;; Defined at:
  6806 ;;		line 111 in file "HD44780-IOE.c"
  6807 ;; Parameters:    Size  Location     Type
  6808 ;;  row             1    wreg     unsigned char 
  6809 ;;  col             1   13[COMMON] unsigned char 
  6810 ;; Auto vars:     Size  Location     Type
  6811 ;;  row             1    1[BANK0 ] unsigned char 
  6812 ;;  addr            1    2[BANK0 ] unsigned char 
  6813 ;; Return value:  Size  Location     Type
  6814 ;;		None               void
  6815 ;; Registers used:
  6816 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  6817 ;; Tracked objects:
  6818 ;;		On entry : 0/0
  6819 ;;		On exit  : 0/0
  6820 ;;		Unchanged: 0/0
  6821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6822 ;;      Params:         1       0       0       0
  6823 ;;      Locals:         0       2       0       0
  6824 ;;      Temps:          0       1       0       0
  6825 ;;      Totals:         1       3       0       0
  6826 ;;Total ram usage:        4 bytes
  6827 ;; Hardware stack levels used:    1
  6828 ;; Hardware stack levels required when called:    7
  6829 ;; This function calls:
  6830 ;;		i1_lcd_command
  6831 ;; This function is called by:
  6832 ;;		_tmr_isr
  6833 ;; This function uses a non-reentrant model
  6834 ;;
  6835                           
  6836                           
  6837                           ;psect for function _lcd_goto
  6838  0F03                     _lcd_goto:	
  6839                           
  6840                           ;incstack = 0
  6841 ;; hardware stack exceeded
  6842                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  6843                           ;lcd_goto@row stored from wreg
  6844  0F03  0020               	movlb	0	; select bank0
  6845  0F04  00A1               	movwf	lcd_goto@row
  6846                           
  6847                           ;HD44780-IOE.c: 112: unsigned char addr;
  6848                           ;HD44780-IOE.c: 114: switch (row) {
  6849  0F05  2F12               	goto	i1l2993
  6850  0F06                     i1l2981:	
  6851                           ;HD44780-IOE.c: 115: case 1: addr = 0x00;
  6852                           
  6853  0F06  2F10               	goto	i1l2989
  6854  0F07                     i1l2983:	
  6855                           ;HD44780-IOE.c: 117: case 2: addr = 0x40;
  6856                           
  6857                           ;HD44780-IOE.c: 116: break;
  6858                           
  6859  0F07  3040               	movlw	64
  6860  0F08  2F0C               	goto	L7
  6861  0F09                     i1l2985:	
  6862                           ;HD44780-IOE.c: 119: case 3: addr = 0x14;
  6863                           
  6864                           ;HD44780-IOE.c: 118: break;
  6865                           
  6866  0F09  3014               	movlw	20
  6867  0F0A  2F0C               	goto	L7
  6868  0F0B                     i1l2987:	
  6869                           ;HD44780-IOE.c: 121: case 4: addr = 0x54;
  6870                           
  6871                           ;HD44780-IOE.c: 120: break;
  6872                           
  6873  0F0B  3054               	movlw	84
  6874  0F0C                     L7:	
  6875  0F0C  00A0               	movwf	??_lcd_goto
  6876  0F0D  0820               	movf	??_lcd_goto,w
  6877  0F0E  00A2               	movwf	lcd_goto@addr
  6878                           
  6879                           ;HD44780-IOE.c: 122: break;
  6880  0F0F  2F20               	goto	i1l2995
  6881  0F10                     i1l2989:	
  6882                           ;HD44780-IOE.c: 123: default:addr = 0x00;
  6883                           
  6884  0F10  01A2               	clrf	lcd_goto@addr
  6885                           
  6886                           ;HD44780-IOE.c: 125: }
  6887                           
  6888                           ;HD44780-IOE.c: 124: break;
  6889  0F11  2F20               	goto	i1l2995
  6890  0F12                     i1l2993:	
  6891  0F12  0821               	movf	lcd_goto@row,w
  6892                           
  6893                           ; Switch size 1, requested type "space"
  6894                           ; Number of cases is 4, Range of values is 1 to 4
  6895                           ; switch strategies available:
  6896                           ; Name         Instructions Cycles
  6897                           ; simple_byte           13     7 (average)
  6898                           ; direct_byte           17     9 (fixed)
  6899                           ; jumptable            263     9 (fixed)
  6900                           ;	Chosen strategy is simple_byte
  6901  0F13  3A01               	xorlw	1	; case 1
  6902  0F14  1903               	skipnz
  6903  0F15  2F06               	goto	i1l2981
  6904  0F16  3A03               	xorlw	3	; case 2
  6905  0F17  1903               	skipnz
  6906  0F18  2F07               	goto	i1l2983
  6907  0F19  3A01               	xorlw	1	; case 3
  6908  0F1A  1903               	skipnz
  6909  0F1B  2F09               	goto	i1l2985
  6910  0F1C  3A07               	xorlw	7	; case 4
  6911  0F1D  1903               	skipnz
  6912  0F1E  2F0B               	goto	i1l2987
  6913  0F1F  2F10               	goto	i1l2989
  6914  0F20                     i1l2995:	
  6915                           
  6916                           ;HD44780-IOE.c: 126: addr += col - 1;
  6917  0F20  087D               	movf	lcd_goto@col,w
  6918  0F21  3EFF               	addlw	255
  6919  0F22  00A0               	movwf	??_lcd_goto
  6920  0F23  0820               	movf	??_lcd_goto,w
  6921  0F24  07A2               	addwf	lcd_goto@addr,f
  6922                           
  6923                           ;HD44780-IOE.c: 127: lcd_command(0x80 | addr);
  6924  0F25  0822               	movf	lcd_goto@addr,w
  6925  0F26  3880               	iorlw	128
  6926  0F27  318C  24FF         	fcall	i1_lcd_command
  6927  0F29  0008               	return
  6928  0F2A                     __end_of_lcd_goto:	
  6929                           
  6930                           	psect	text55
  6931  0CFF                     __ptext55:	
  6932 ;; *************** function i1_lcd_command *****************
  6933 ;; Defined at:
  6934 ;;		line 177 in file "HD44780-IOE.c"
  6935 ;; Parameters:    Size  Location     Type
  6936 ;;  command         1    wreg     unsigned char 
  6937 ;; Auto vars:     Size  Location     Type
  6938 ;;  command         1   12[COMMON] unsigned char 
  6939 ;; Return value:  Size  Location     Type
  6940 ;;		None               void
  6941 ;; Registers used:
  6942 ;;		wreg, status,2, status,0, pclath, cstack
  6943 ;; Tracked objects:
  6944 ;;		On entry : 0/0
  6945 ;;		On exit  : 0/0
  6946 ;;		Unchanged: 0/0
  6947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6948 ;;      Params:         0       0       0       0
  6949 ;;      Locals:         1       0       0       0
  6950 ;;      Temps:          1       0       0       0
  6951 ;;      Totals:         2       0       0       0
  6952 ;;Total ram usage:        2 bytes
  6953 ;; Hardware stack levels used:    1
  6954 ;; Hardware stack levels required when called:    6
  6955 ;; This function calls:
  6956 ;;		i1__send_byte
  6957 ;;		i1_mcp23017_ioa_send_byte
  6958 ;; This function is called by:
  6959 ;;		_lcd_goto
  6960 ;; This function uses a non-reentrant model
  6961 ;;
  6962                           
  6963                           
  6964                           ;psect for function i1_lcd_command
  6965  0CFF                     i1_lcd_command:	
  6966                           
  6967                           ;incstack = 0
  6968 ;; hardware stack exceeded
  6969                           ; Regs used in i1_lcd_command: [wreg+status,2+status,0+pclath+cstack]
  6970                           ;i1lcd_command@command stored from wreg
  6971  0CFF  00FC               	movwf	i1lcd_command@command
  6972                           
  6973                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  6974  0D00  0021               	movlb	1	; select bank1
  6975  0D01  1246               	bcf	_LCDPort^(0+128),4
  6976                           
  6977                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  6978  0D02  318C  243D  318C   	fcall	i1_mcp23017_ioa_send_byte
  6979                           
  6980                           ;HD44780-IOE.c: 180: __nop();
  6981  0D05  0000               	nop
  6982                           
  6983                           ;HD44780-IOE.c: 181: _send_byte(command);
  6984  0D06  087C               	movf	i1lcd_command@command,w
  6985  0D07  318C  24EF  318C   	fcall	i1__send_byte
  6986                           
  6987                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  6988  0D0A  3085               	movlw	133
  6989  0D0B  00FB               	movwf	??i1_lcd_command
  6990  0D0C                     u265_27:	
  6991  0D0C  0BFB               	decfsz	??i1_lcd_command,f
  6992  0D0D  2D0C               	goto	u265_27
  6993  0D0E  0008               	return
  6994  0D0F                     __end_ofi1_lcd_command:	
  6995                           
  6996                           	psect	text56
  6997  0CEF                     __ptext56:	
  6998 ;; *************** function i1__send_byte *****************
  6999 ;; Defined at:
  7000 ;;		line 81 in file "HD44780-IOE.c"
  7001 ;; Parameters:    Size  Location     Type
  7002 ;;  data            1    wreg     unsigned char 
  7003 ;; Auto vars:     Size  Location     Type
  7004 ;;  data            1   10[COMMON] unsigned char 
  7005 ;; Return value:  Size  Location     Type
  7006 ;;		None               void
  7007 ;; Registers used:
  7008 ;;		wreg, status,2, status,0, pclath, cstack
  7009 ;; Tracked objects:
  7010 ;;		On entry : 0/0
  7011 ;;		On exit  : 0/0
  7012 ;;		Unchanged: 0/0
  7013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7014 ;;      Params:         0       0       0       0
  7015 ;;      Locals:         1       0       0       0
  7016 ;;      Temps:          1       0       0       0
  7017 ;;      Totals:         2       0       0       0
  7018 ;;Total ram usage:        2 bytes
  7019 ;; Hardware stack levels used:    1
  7020 ;; Hardware stack levels required when called:    5
  7021 ;; This function calls:
  7022 ;;		i1__send_nibble
  7023 ;; This function is called by:
  7024 ;;		_lcd_data
  7025 ;;		i1_lcd_command
  7026 ;; This function uses a non-reentrant model
  7027 ;;
  7028                           
  7029                           
  7030                           ;psect for function i1__send_byte
  7031  0CEF                     i1__send_byte:	
  7032                           
  7033                           ;incstack = 0
  7034 ;; hardware stack exceeded
  7035                           ; Regs used in i1__send_byte: [wreg+status,2+status,0+pclath+cstack]
  7036                           ;i1__send_byte@data stored from wreg
  7037  0CEF  00FA               	movwf	i1__send_byte@data
  7038                           
  7039                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  7040  0CF0  087A               	movf	i1__send_byte@data,w
  7041  0CF1  00F9               	movwf	??i1__send_byte
  7042  0CF2  3004               	movlw	4
  7043  0CF3                     u181_25:	
  7044  0CF3  36F9               	lsrf	??i1__send_byte,f
  7045  0CF4  0B89               	decfsz	9,f
  7046  0CF5  2CF3               	goto	u181_25
  7047  0CF6  0879               	movf	??i1__send_byte,w
  7048  0CF7  318F  2751  318C   	fcall	i1__send_nibble
  7049                           
  7050                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  7051  0CFA  087A               	movf	i1__send_byte@data,w
  7052  0CFB  390F               	andlw	15
  7053  0CFC  318F  2751         	fcall	i1__send_nibble
  7054  0CFE  0008               	return
  7055  0CFF                     __end_ofi1__send_byte:	
  7056                           
  7057                           	psect	text57
  7058  0F51                     __ptext57:	
  7059 ;; *************** function i1__send_nibble *****************
  7060 ;; Defined at:
  7061 ;;		line 65 in file "HD44780-IOE.c"
  7062 ;; Parameters:    Size  Location     Type
  7063 ;;  data            1    wreg     unsigned char 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  data            1    8[COMMON] unsigned char 
  7066 ;; Return value:  Size  Location     Type
  7067 ;;		None               void
  7068 ;; Registers used:
  7069 ;;		wreg, status,2, status,0, pclath, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7075 ;;      Params:         0       0       0       0
  7076 ;;      Locals:         1       0       0       0
  7077 ;;      Temps:          2       0       0       0
  7078 ;;      Totals:         3       0       0       0
  7079 ;;Total ram usage:        3 bytes
  7080 ;; Hardware stack levels used:    1
  7081 ;; Hardware stack levels required when called:    4
  7082 ;; This function calls:
  7083 ;;		i1_mcp23017_ioa_send_byte
  7084 ;; This function is called by:
  7085 ;;		i1__send_byte
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           
  7090                           ;psect for function i1__send_nibble
  7091  0F51                     i1__send_nibble:	
  7092                           
  7093                           ;incstack = 0
  7094 ;; hardware stack exceeded
  7095                           ; Regs used in i1__send_nibble: [wreg+status,2+status,0+pclath+cstack]
  7096                           ;i1__send_nibble@data stored from wreg
  7097  0F51  00F8               	movwf	i1__send_nibble@data
  7098                           
  7099                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  7100  0F52  30F0               	movlw	240
  7101  0F53  00F6               	movwf	??i1__send_nibble
  7102  0F54  0876               	movf	??i1__send_nibble,w
  7103  0F55  0021               	movlb	1	; select bank1
  7104  0F56  05C6               	andwf	_LCDPort^(0+128),f
  7105                           
  7106                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  7107  0F57  0878               	movf	i1__send_nibble@data,w
  7108  0F58  390F               	andlw	15
  7109  0F59  00F6               	movwf	??i1__send_nibble
  7110  0F5A  0876               	movf	??i1__send_nibble,w
  7111  0F5B  04C6               	iorwf	_LCDPort^(0+128),f
  7112                           
  7113                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  7114  0F5C  318C  243D  318F   	fcall	i1_mcp23017_ioa_send_byte
  7115                           
  7116                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  7117  0F5F  0021               	movlb	1	; select bank1
  7118  0F60  16C6               	bsf	_LCDPort^(0+128),5
  7119                           
  7120                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  7121  0F61  318C  243D  318F   	fcall	i1_mcp23017_ioa_send_byte
  7122                           
  7123                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  7124  0F64  3003               	movlw	3
  7125  0F65  00F7               	movwf	??i1__send_nibble+1
  7126  0F66  3097               	movlw	151
  7127  0F67  00F6               	movwf	??i1__send_nibble
  7128  0F68                     u266_27:	
  7129  0F68  0BF6               	decfsz	??i1__send_nibble,f
  7130  0F69  2F68               	goto	u266_27
  7131  0F6A  0BF7               	decfsz	??i1__send_nibble+1,f
  7132  0F6B  2F68               	goto	u266_27
  7133  0F6C  3200               	nop2
  7134                           
  7135                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  7136  0F6D  0021               	movlb	1	; select bank1
  7137  0F6E  12C6               	bcf	_LCDPort^(0+128),5
  7138                           
  7139                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  7140  0F6F  318C  243D  318F   	fcall	i1_mcp23017_ioa_send_byte
  7141                           
  7142                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  7143  0F72  3003               	movlw	3
  7144  0F73  00F7               	movwf	??i1__send_nibble+1
  7145  0F74  3097               	movlw	151
  7146  0F75  00F6               	movwf	??i1__send_nibble
  7147  0F76                     u267_27:	
  7148  0F76  0BF6               	decfsz	??i1__send_nibble,f
  7149  0F77  2F76               	goto	u267_27
  7150  0F78  0BF7               	decfsz	??i1__send_nibble+1,f
  7151  0F79  2F76               	goto	u267_27
  7152  0F7A  3200               	nop2
  7153  0F7B  0008               	return
  7154  0F7C                     __end_ofi1__send_nibble:	
  7155                           
  7156                           	psect	text58
  7157  0C3D                     __ptext58:	
  7158 ;; *************** function i1_mcp23017_ioa_send_byte *****************
  7159 ;; Defined at:
  7160 ;;		line 59 in file "HD44780-IOE.c"
  7161 ;; Parameters:    Size  Location     Type
  7162 ;;		None
  7163 ;; Auto vars:     Size  Location     Type
  7164 ;;		None
  7165 ;; Return value:  Size  Location     Type
  7166 ;;		None               void
  7167 ;; Registers used:
  7168 ;;		wreg, status,2, status,0, pclath, cstack
  7169 ;; Tracked objects:
  7170 ;;		On entry : 0/0
  7171 ;;		On exit  : 0/0
  7172 ;;		Unchanged: 0/0
  7173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7174 ;;      Params:         0       0       0       0
  7175 ;;      Locals:         0       0       0       0
  7176 ;;      Temps:          1       0       0       0
  7177 ;;      Totals:         1       0       0       0
  7178 ;;Total ram usage:        1 bytes
  7179 ;; Hardware stack levels used:    1
  7180 ;; Hardware stack levels required when called:    3
  7181 ;; This function calls:
  7182 ;;		i1_mcp23017_write_reg
  7183 ;; This function is called by:
  7184 ;;		_lcd_data
  7185 ;;		i1__send_nibble
  7186 ;;		i1_lcd_command
  7187 ;;		i1_lcd_backlight
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           
  7192                           ;psect for function i1_mcp23017_ioa_send_byte
  7193  0C3D                     i1_mcp23017_ioa_send_byte:	
  7194                           
  7195                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  7196                           
  7197                           ;incstack = 0
  7198                           ; Regs used in i1_mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  7199  0C3D  0021               	movlb	1	; select bank1
  7200  0C3E  0846               	movf	_LCDPort^(0+128),w
  7201  0C3F  00F5               	movwf	??i1_mcp23017_ioa_send_byte
  7202  0C40  0875               	movf	??i1_mcp23017_ioa_send_byte,w
  7203  0C41  00F3               	movwf	i1mcp23017_write_reg@value
  7204  0C42  3012               	movlw	18
  7205  0C43  318D  25D2         	fcall	i1_mcp23017_write_reg
  7206  0C45  0008               	return
  7207  0C46                     __end_ofi1_mcp23017_ioa_send_byte:	
  7208                           
  7209                           	psect	text59
  7210  0DD2                     __ptext59:	
  7211 ;; *************** function i1_mcp23017_write_reg *****************
  7212 ;; Defined at:
  7213 ;;		line 60 in file "mcp23017.c"
  7214 ;; Parameters:    Size  Location     Type
  7215 ;;  reg_address     1    wreg     unsigned char 
  7216 ;;  value           1    3[COMMON] unsigned char 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  reg_address     1    4[COMMON] unsigned char 
  7219 ;; Return value:  Size  Location     Type
  7220 ;;		None               void
  7221 ;; Registers used:
  7222 ;;		wreg, status,2, status,0, pclath, cstack
  7223 ;; Tracked objects:
  7224 ;;		On entry : 0/0
  7225 ;;		On exit  : 0/0
  7226 ;;		Unchanged: 0/0
  7227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7228 ;;      Params:         1       0       0       0
  7229 ;;      Locals:         1       0       0       0
  7230 ;;      Temps:          0       0       0       0
  7231 ;;      Totals:         2       0       0       0
  7232 ;;Total ram usage:        2 bytes
  7233 ;; Hardware stack levels used:    1
  7234 ;; Hardware stack levels required when called:    2
  7235 ;; This function calls:
  7236 ;;		i1_i2c_send_address
  7237 ;;		i1_i2c_send_data
  7238 ;;		i1_i2c_start
  7239 ;;		i1_i2c_stop
  7240 ;; This function is called by:
  7241 ;;		i1_mcp23017_ioa_send_byte
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           
  7246                           ;psect for function i1_mcp23017_write_reg
  7247  0DD2                     i1_mcp23017_write_reg:	
  7248                           
  7249                           ;incstack = 0
  7250                           ; Regs used in i1_mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  7251                           ;i1mcp23017_write_reg@reg_address stored from wreg
  7252  0DD2  00F4               	movwf	i1mcp23017_write_reg@reg_address
  7253                           
  7254                           ;mcp23017.c: 62: i2c_start();
  7255  0DD3  318B  23E7  318D   	fcall	i1_i2c_start
  7256                           
  7257                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  7258  0DD6  01F0               	clrf	i1i2c_send_address@mode
  7259  0DD7  0021               	movlb	1	; select bank1
  7260  0DD8  0849               	movf	_g_slave_address_7b^(0+128),w
  7261  0DD9  318C  2481  318D   	fcall	i1_i2c_send_address
  7262                           
  7263                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  7264  0DDC  0874               	movf	i1mcp23017_write_reg@reg_address,w
  7265  0DDD  318C  241F  318D   	fcall	i1_i2c_send_data
  7266                           
  7267                           ;mcp23017.c: 65: i2c_send_data(value);
  7268  0DE0  0873               	movf	i1mcp23017_write_reg@value,w
  7269  0DE1  318C  241F  318D   	fcall	i1_i2c_send_data
  7270                           
  7271                           ;mcp23017.c: 66: i2c_stop();
  7272  0DE4  318B  23EC         	fcall	i1_i2c_stop
  7273  0DE6  0008               	return
  7274  0DE7                     __end_ofi1_mcp23017_write_reg:	
  7275                           
  7276                           	psect	text60
  7277  0E9B                     __ptext60:	
  7278 ;; *************** function _keypad_read_key *****************
  7279 ;; Defined at:
  7280 ;;		line 63 in file "keypad.c"
  7281 ;; Parameters:    Size  Location     Type
  7282 ;;		None
  7283 ;; Auto vars:     Size  Location     Type
  7284 ;;  key             1    7[COMMON] unsigned char 
  7285 ;; Return value:  Size  Location     Type
  7286 ;;                  1    wreg      unsigned char 
  7287 ;; Registers used:
  7288 ;;		wreg, status,2, status,0, pclath, cstack
  7289 ;; Tracked objects:
  7290 ;;		On entry : 0/0
  7291 ;;		On exit  : 0/0
  7292 ;;		Unchanged: 0/0
  7293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7294 ;;      Params:         0       0       0       0
  7295 ;;      Locals:         1       0       0       0
  7296 ;;      Temps:          1       0       0       0
  7297 ;;      Totals:         2       0       0       0
  7298 ;;Total ram usage:        2 bytes
  7299 ;; Hardware stack levels used:    1
  7300 ;; Hardware stack levels required when called:    4
  7301 ;; This function calls:
  7302 ;;		_keypad_scan
  7303 ;; This function is called by:
  7304 ;;		_tmr_isr
  7305 ;; This function uses a non-reentrant model
  7306 ;;
  7307                           
  7308                           
  7309                           ;psect for function _keypad_read_key
  7310  0E9B                     _keypad_read_key:	
  7311                           
  7312                           ;keypad.c: 64: uint8_t key;
  7313                           ;keypad.c: 66: key = keypad_scan();
  7314                           
  7315                           ;incstack = 0
  7316                           ; Regs used in _keypad_read_key: [wreg+status,2+status,0+pclath+cstack]
  7317  0E9B  318B  23CA  318E   	fcall	_keypad_scan
  7318  0E9E  00F6               	movwf	??_keypad_read_key
  7319  0E9F  0876               	movf	??_keypad_read_key,w
  7320  0EA0  00F7               	movwf	keypad_read_key@key
  7321                           
  7322                           ;keypad.c: 67: if (key == (0)) {
  7323  0EA1  08F7               	movf	keypad_read_key@key,f
  7324  0EA2  1D03               	skipz
  7325  0EA3  2EA8               	goto	i1l2947
  7326                           
  7327                           ;keypad.c: 69: g_old_key = (0);
  7328  0EA4  0020               	movlb	0	; select bank0
  7329  0EA5  01D9               	clrf	_g_old_key
  7330                           
  7331                           ;keypad.c: 70: g_last_valid_key = (0);
  7332  0EA6  01D8               	clrf	_g_last_valid_key
  7333                           
  7334                           ;keypad.c: 71: } else if (key == g_old_key) {
  7335  0EA7  2EBB               	goto	i1l2959
  7336  0EA8                     i1l2947:	
  7337  0EA8  0877               	movf	keypad_read_key@key,w
  7338  0EA9  0020               	movlb	0	; select bank0
  7339  0EAA  0659               	xorwf	_g_old_key,w
  7340  0EAB  1D03               	skipz
  7341  0EAC  2EB6               	goto	i1l2955
  7342                           
  7343                           ;keypad.c: 73: if (key != g_last_valid_key) {
  7344  0EAD  0877               	movf	keypad_read_key@key,w
  7345  0EAE  0658               	xorwf	_g_last_valid_key,w
  7346  0EAF  1903               	skipnz
  7347  0EB0  2EBA               	goto	i1l2957
  7348                           
  7349                           ;keypad.c: 75: g_last_valid_key = key;
  7350  0EB1  0877               	movf	keypad_read_key@key,w
  7351  0EB2  00F6               	movwf	??_keypad_read_key
  7352  0EB3  0876               	movf	??_keypad_read_key,w
  7353  0EB4  00D8               	movwf	_g_last_valid_key
  7354                           
  7355                           ;keypad.c: 76: }
  7356  0EB5  2EBB               	goto	i1l2959
  7357  0EB6                     i1l2955:	
  7358                           ;keypad.c: 79: }
  7359                           ;keypad.c: 80: } else {
  7360                           
  7361                           ;keypad.c: 77: else{
  7362                           ;keypad.c: 78: key = (0);
  7363                           
  7364                           
  7365                           ;keypad.c: 81: g_old_key = key;
  7366  0EB6  0877               	movf	keypad_read_key@key,w
  7367  0EB7  00F6               	movwf	??_keypad_read_key
  7368  0EB8  0876               	movf	??_keypad_read_key,w
  7369  0EB9  00D9               	movwf	_g_old_key
  7370  0EBA                     i1l2957:	
  7371                           
  7372                           ;keypad.c: 82: key = (0);
  7373  0EBA  01F7               	clrf	keypad_read_key@key
  7374  0EBB                     i1l2959:	
  7375                           
  7376                           ;keypad.c: 83: }
  7377                           ;keypad.c: 84: return key;
  7378  0EBB  0877               	movf	keypad_read_key@key,w
  7379  0EBC  0008               	return
  7380  0EBD                     __end_of_keypad_read_key:	
  7381                           
  7382                           	psect	text61
  7383  0BCA                     __ptext61:	
  7384 ;; *************** function _keypad_scan *****************
  7385 ;; Defined at:
  7386 ;;		line 51 in file "keypad.c"
  7387 ;; Parameters:    Size  Location     Type
  7388 ;;		None
  7389 ;; Auto vars:     Size  Location     Type
  7390 ;;		None
  7391 ;; Return value:  Size  Location     Type
  7392 ;;                  1    wreg      unsigned char 
  7393 ;; Registers used:
  7394 ;;		wreg, status,2, status,0, pclath, cstack
  7395 ;; Tracked objects:
  7396 ;;		On entry : 0/0
  7397 ;;		On exit  : 0/0
  7398 ;;		Unchanged: 0/0
  7399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7400 ;;      Params:         0       0       0       0
  7401 ;;      Locals:         0       0       0       0
  7402 ;;      Temps:          0       0       0       0
  7403 ;;      Totals:         0       0       0       0
  7404 ;;Total ram usage:        0 bytes
  7405 ;; Hardware stack levels used:    1
  7406 ;; Hardware stack levels required when called:    3
  7407 ;; This function calls:
  7408 ;;		_mcp23017_read_reg
  7409 ;; This function is called by:
  7410 ;;		_keypad_read_key
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           
  7415                           ;psect for function _keypad_scan
  7416  0BCA                     _keypad_scan:	
  7417                           
  7418                           ;keypad.c: 53: return mcp23017_read_reg(MCP23017_REG_GPIOB);
  7419                           
  7420                           ;incstack = 0
  7421                           ; Regs used in _keypad_scan: [wreg+status,2+status,0+pclath+cstack]
  7422  0BCA  3013               	movlw	19
  7423  0BCB  318E  2679         	fcall	_mcp23017_read_reg
  7424  0BCD  0008               	return
  7425  0BCE                     __end_of_keypad_scan:	
  7426                           
  7427                           	psect	text62
  7428  0E79                     __ptext62:	
  7429 ;; *************** function _mcp23017_read_reg *****************
  7430 ;; Defined at:
  7431 ;;		line 69 in file "mcp23017.c"
  7432 ;; Parameters:    Size  Location     Type
  7433 ;;  reg_address     1    wreg     unsigned char 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  reg_address     1    4[COMMON] unsigned char 
  7436 ;;  value           1    5[COMMON] unsigned char 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  1    wreg      unsigned char 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0, pclath, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7446 ;;      Params:         0       0       0       0
  7447 ;;      Locals:         2       0       0       0
  7448 ;;      Temps:          1       0       0       0
  7449 ;;      Totals:         3       0       0       0
  7450 ;;Total ram usage:        3 bytes
  7451 ;; Hardware stack levels used:    1
  7452 ;; Hardware stack levels required when called:    2
  7453 ;; This function calls:
  7454 ;;		i1_i2c_read_data
  7455 ;;		i1_i2c_restart
  7456 ;;		i1_i2c_send_address
  7457 ;;		i1_i2c_send_data
  7458 ;;		i1_i2c_start
  7459 ;;		i1_i2c_stop
  7460 ;; This function is called by:
  7461 ;;		_keypad_scan
  7462 ;; This function uses a non-reentrant model
  7463 ;;
  7464                           
  7465                           
  7466                           ;psect for function _mcp23017_read_reg
  7467  0E79                     _mcp23017_read_reg:	
  7468                           
  7469                           ;incstack = 0
  7470                           ; Regs used in _mcp23017_read_reg: [wreg+status,2+status,0+pclath+cstack]
  7471                           ;mcp23017_read_reg@reg_address stored from wreg
  7472  0E79  00F4               	movwf	mcp23017_read_reg@reg_address
  7473                           
  7474                           ;mcp23017.c: 70: uint8_t value;
  7475                           ;mcp23017.c: 73: i2c_start();
  7476  0E7A  318B  23E7  318E   	fcall	i1_i2c_start
  7477                           
  7478                           ;mcp23017.c: 74: i2c_send_address(g_slave_address_7b, 0);
  7479  0E7D  01F0               	clrf	i1i2c_send_address@mode
  7480  0E7E  0021               	movlb	1	; select bank1
  7481  0E7F  0849               	movf	_g_slave_address_7b^(0+128),w
  7482  0E80  318C  2481  318E   	fcall	i1_i2c_send_address
  7483                           
  7484                           ;mcp23017.c: 75: i2c_send_data(reg_address);
  7485  0E83  0874               	movf	mcp23017_read_reg@reg_address,w
  7486  0E84  318C  241F  318E   	fcall	i1_i2c_send_data
  7487                           
  7488                           ;mcp23017.c: 76: i2c_restart();
  7489  0E87  318B  23E2  318E   	fcall	i1_i2c_restart
  7490                           
  7491                           ;mcp23017.c: 77: i2c_send_address(g_slave_address_7b, 1);
  7492  0E8A  01F0               	clrf	i1i2c_send_address@mode
  7493  0E8B  0AF0               	incf	i1i2c_send_address@mode,f
  7494  0E8C  0021               	movlb	1	; select bank1
  7495  0E8D  0849               	movf	_g_slave_address_7b^(0+128),w
  7496  0E8E  318C  2481  318E   	fcall	i1_i2c_send_address
  7497                           
  7498                           ;mcp23017.c: 78: value = i2c_read_data();
  7499  0E91  318C  24C3  318E   	fcall	i1_i2c_read_data
  7500  0E94  00F3               	movwf	??_mcp23017_read_reg
  7501  0E95  0873               	movf	??_mcp23017_read_reg,w
  7502  0E96  00F5               	movwf	mcp23017_read_reg@value
  7503                           
  7504                           ;mcp23017.c: 79: i2c_stop();
  7505  0E97  318B  23EC         	fcall	i1_i2c_stop
  7506                           
  7507                           ;mcp23017.c: 81: return value;
  7508  0E99  0875               	movf	mcp23017_read_reg@value,w
  7509  0E9A  0008               	return
  7510  0E9B                     __end_of_mcp23017_read_reg:	
  7511                           
  7512                           	psect	text63
  7513  0BEC                     __ptext63:	
  7514 ;; *************** function i1_i2c_stop *****************
  7515 ;; Defined at:
  7516 ;;		line 92 in file "pic12f1840_i2c.c"
  7517 ;; Parameters:    Size  Location     Type
  7518 ;;		None
  7519 ;; Auto vars:     Size  Location     Type
  7520 ;;		None
  7521 ;; Return value:  Size  Location     Type
  7522 ;;		None               void
  7523 ;; Registers used:
  7524 ;;		wreg, status,2, status,0, pclath, cstack
  7525 ;; Tracked objects:
  7526 ;;		On entry : 0/0
  7527 ;;		On exit  : 0/0
  7528 ;;		Unchanged: 0/0
  7529 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7530 ;;      Params:         0       0       0       0
  7531 ;;      Locals:         0       0       0       0
  7532 ;;      Temps:          0       0       0       0
  7533 ;;      Totals:         0       0       0       0
  7534 ;;Total ram usage:        0 bytes
  7535 ;; Hardware stack levels used:    1
  7536 ;; Hardware stack levels required when called:    1
  7537 ;; This function calls:
  7538 ;;		i1_i2c_wait
  7539 ;; This function is called by:
  7540 ;;		_mcp23017_read_reg
  7541 ;;		_ds1307_read_addr
  7542 ;;		_ds1307_write_addr
  7543 ;;		_ds1307_set_clock
  7544 ;;		i1_mcp23017_write_reg
  7545 ;;		i1_ds1307_get_clock
  7546 ;; This function uses a non-reentrant model
  7547 ;;
  7548                           
  7549                           
  7550                           ;psect for function i1_i2c_stop
  7551  0BEC                     i1_i2c_stop:	
  7552                           
  7553                           ;pic12f1840_i2c.c: 93: i2c_wait();
  7554                           
  7555                           ;incstack = 0
  7556                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  7557  0BEC  318C  2418         	fcall	i1_i2c_wait
  7558                           
  7559                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  7560  0BEE  0024               	movlb	4	; select bank4
  7561  0BEF  1516               	bsf	22,2	;volatile
  7562  0BF0  0008               	return
  7563  0BF1                     __end_ofi1_i2c_stop:	
  7564                           
  7565                           	psect	text64
  7566  0BE7                     __ptext64:	
  7567 ;; *************** function i1_i2c_start *****************
  7568 ;; Defined at:
  7569 ;;		line 82 in file "pic12f1840_i2c.c"
  7570 ;; Parameters:    Size  Location     Type
  7571 ;;		None
  7572 ;; Auto vars:     Size  Location     Type
  7573 ;;		None
  7574 ;; Return value:  Size  Location     Type
  7575 ;;		None               void
  7576 ;; Registers used:
  7577 ;;		wreg, status,2, status,0, pclath, cstack
  7578 ;; Tracked objects:
  7579 ;;		On entry : 0/0
  7580 ;;		On exit  : 0/0
  7581 ;;		Unchanged: 0/0
  7582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7583 ;;      Params:         0       0       0       0
  7584 ;;      Locals:         0       0       0       0
  7585 ;;      Temps:          0       0       0       0
  7586 ;;      Totals:         0       0       0       0
  7587 ;;Total ram usage:        0 bytes
  7588 ;; Hardware stack levels used:    1
  7589 ;; Hardware stack levels required when called:    1
  7590 ;; This function calls:
  7591 ;;		i1_i2c_wait
  7592 ;; This function is called by:
  7593 ;;		_mcp23017_read_reg
  7594 ;;		_ds1307_read_addr
  7595 ;;		_ds1307_write_addr
  7596 ;;		_ds1307_set_clock
  7597 ;;		i1_mcp23017_write_reg
  7598 ;;		i1_ds1307_get_clock
  7599 ;; This function uses a non-reentrant model
  7600 ;;
  7601                           
  7602                           
  7603                           ;psect for function i1_i2c_start
  7604  0BE7                     i1_i2c_start:	
  7605                           
  7606                           ;pic12f1840_i2c.c: 83: i2c_wait();
  7607                           
  7608                           ;incstack = 0
  7609                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7610  0BE7  318C  2418         	fcall	i1_i2c_wait
  7611                           
  7612                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  7613  0BE9  0024               	movlb	4	; select bank4
  7614  0BEA  1416               	bsf	22,0	;volatile
  7615  0BEB  0008               	return
  7616  0BEC                     __end_ofi1_i2c_start:	
  7617                           
  7618                           	psect	text65
  7619  0C1F                     __ptext65:	
  7620 ;; *************** function i1_i2c_send_data *****************
  7621 ;; Defined at:
  7622 ;;		line 115 in file "pic12f1840_i2c.c"
  7623 ;; Parameters:    Size  Location     Type
  7624 ;;  data            1    wreg     unsigned char 
  7625 ;; Auto vars:     Size  Location     Type
  7626 ;;  data            1    0[COMMON] unsigned char 
  7627 ;; Return value:  Size  Location     Type
  7628 ;;		None               void
  7629 ;; Registers used:
  7630 ;;		wreg, status,2, status,0, pclath, cstack
  7631 ;; Tracked objects:
  7632 ;;		On entry : 0/0
  7633 ;;		On exit  : 0/0
  7634 ;;		Unchanged: 0/0
  7635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7636 ;;      Params:         0       0       0       0
  7637 ;;      Locals:         1       0       0       0
  7638 ;;      Temps:          0       0       0       0
  7639 ;;      Totals:         1       0       0       0
  7640 ;;Total ram usage:        1 bytes
  7641 ;; Hardware stack levels used:    1
  7642 ;; Hardware stack levels required when called:    1
  7643 ;; This function calls:
  7644 ;;		i1_i2c_wait
  7645 ;; This function is called by:
  7646 ;;		_mcp23017_read_reg
  7647 ;;		_ds1307_read_addr
  7648 ;;		_ds1307_write_addr
  7649 ;;		_ds1307_set_clock
  7650 ;;		i1_mcp23017_write_reg
  7651 ;;		i1_ds1307_get_clock
  7652 ;; This function uses a non-reentrant model
  7653 ;;
  7654                           
  7655                           
  7656                           ;psect for function i1_i2c_send_data
  7657  0C1F                     i1_i2c_send_data:	
  7658                           
  7659                           ;incstack = 0
  7660                           ; Regs used in i1_i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  7661                           ;i1i2c_send_data@data stored from wreg
  7662  0C1F  00F0               	movwf	i1i2c_send_data@data
  7663                           
  7664                           ;pic12f1840_i2c.c: 116: i2c_wait();
  7665  0C20  318C  2418         	fcall	i1_i2c_wait
  7666                           
  7667                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  7668  0C22  0870               	movf	i1i2c_send_data@data,w
  7669  0C23  0024               	movlb	4	; select bank4
  7670  0C24  0091               	movwf	17	;volatile
  7671  0C25  0008               	return
  7672  0C26                     __end_ofi1_i2c_send_data:	
  7673                           
  7674                           	psect	text66
  7675  0C81                     __ptext66:	
  7676 ;; *************** function i1_i2c_send_address *****************
  7677 ;; Defined at:
  7678 ;;		line 108 in file "pic12f1840_i2c.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  address         1    wreg     unsigned char 
  7681 ;;  mode            1    0[COMMON] unsigned char 
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;  address         1    2[COMMON] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;		None               void
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0, pclath, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7693 ;;      Params:         1       0       0       0
  7694 ;;      Locals:         1       0       0       0
  7695 ;;      Temps:          1       0       0       0
  7696 ;;      Totals:         3       0       0       0
  7697 ;;Total ram usage:        3 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    1
  7700 ;; This function calls:
  7701 ;;		i1_i2c_wait
  7702 ;; This function is called by:
  7703 ;;		_mcp23017_read_reg
  7704 ;;		_ds1307_read_addr
  7705 ;;		_ds1307_write_addr
  7706 ;;		_ds1307_set_clock
  7707 ;;		i1_mcp23017_write_reg
  7708 ;;		i1_ds1307_get_clock
  7709 ;; This function uses a non-reentrant model
  7710 ;;
  7711                           
  7712                           
  7713                           ;psect for function i1_i2c_send_address
  7714  0C81                     i1_i2c_send_address:	
  7715                           
  7716                           ;incstack = 0
  7717                           ; Regs used in i1_i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  7718                           ;i1i2c_send_address@address stored from wreg
  7719  0C81  00F2               	movwf	i1i2c_send_address@address
  7720                           
  7721                           ;pic12f1840_i2c.c: 109: i2c_wait();
  7722  0C82  318C  2418         	fcall	i1_i2c_wait
  7723                           
  7724                           ;pic12f1840_i2c.c: 110: address <<= 1;
  7725  0C84  1003               	clrc
  7726  0C85  0DF2               	rlf	i1i2c_send_address@address,f
  7727                           
  7728                           ;pic12f1840_i2c.c: 111: address += mode;
  7729  0C86  0870               	movf	i1i2c_send_address@mode,w
  7730  0C87  00F1               	movwf	??i1_i2c_send_address
  7731  0C88  0871               	movf	??i1_i2c_send_address,w
  7732  0C89  07F2               	addwf	i1i2c_send_address@address,f
  7733                           
  7734                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  7735  0C8A  0872               	movf	i1i2c_send_address@address,w
  7736  0C8B  0024               	movlb	4	; select bank4
  7737  0C8C  0091               	movwf	17	;volatile
  7738  0C8D  0008               	return
  7739  0C8E                     __end_ofi1_i2c_send_address:	
  7740                           
  7741                           	psect	text67
  7742  0BE2                     __ptext67:	
  7743 ;; *************** function i1_i2c_restart *****************
  7744 ;; Defined at:
  7745 ;;		line 87 in file "pic12f1840_i2c.c"
  7746 ;; Parameters:    Size  Location     Type
  7747 ;;		None
  7748 ;; Auto vars:     Size  Location     Type
  7749 ;;		None
  7750 ;; Return value:  Size  Location     Type
  7751 ;;		None               void
  7752 ;; Registers used:
  7753 ;;		wreg, status,2, status,0, pclath, cstack
  7754 ;; Tracked objects:
  7755 ;;		On entry : 0/0
  7756 ;;		On exit  : 0/0
  7757 ;;		Unchanged: 0/0
  7758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7759 ;;      Params:         0       0       0       0
  7760 ;;      Locals:         0       0       0       0
  7761 ;;      Temps:          0       0       0       0
  7762 ;;      Totals:         0       0       0       0
  7763 ;;Total ram usage:        0 bytes
  7764 ;; Hardware stack levels used:    1
  7765 ;; Hardware stack levels required when called:    1
  7766 ;; This function calls:
  7767 ;;		i1_i2c_wait
  7768 ;; This function is called by:
  7769 ;;		_mcp23017_read_reg
  7770 ;;		_ds1307_read_addr
  7771 ;;		i1_ds1307_get_clock
  7772 ;; This function uses a non-reentrant model
  7773 ;;
  7774                           
  7775                           
  7776                           ;psect for function i1_i2c_restart
  7777  0BE2                     i1_i2c_restart:	
  7778                           
  7779                           ;pic12f1840_i2c.c: 88: i2c_wait();
  7780                           
  7781                           ;incstack = 0
  7782                           ; Regs used in i1_i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  7783  0BE2  318C  2418         	fcall	i1_i2c_wait
  7784                           
  7785                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  7786  0BE4  0024               	movlb	4	; select bank4
  7787  0BE5  1496               	bsf	22,1	;volatile
  7788  0BE6  0008               	return
  7789  0BE7                     __end_ofi1_i2c_restart:	
  7790                           
  7791                           	psect	text68
  7792  0CC3                     __ptext68:	
  7793 ;; *************** function i1_i2c_read_data *****************
  7794 ;; Defined at:
  7795 ;;		line 120 in file "pic12f1840_i2c.c"
  7796 ;; Parameters:    Size  Location     Type
  7797 ;;		None
  7798 ;; Auto vars:     Size  Location     Type
  7799 ;;  i2c_read_dat    1    1[COMMON] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  1    wreg      unsigned char 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0, pclath, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7809 ;;      Params:         0       0       0       0
  7810 ;;      Locals:         1       0       0       0
  7811 ;;      Temps:          1       0       0       0
  7812 ;;      Totals:         2       0       0       0
  7813 ;;Total ram usage:        2 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    1
  7816 ;; This function calls:
  7817 ;;		i1_i2c_wait
  7818 ;; This function is called by:
  7819 ;;		_mcp23017_read_reg
  7820 ;;		_ds1307_read_addr
  7821 ;;		i1_ds1307_get_clock
  7822 ;; This function uses a non-reentrant model
  7823 ;;
  7824                           
  7825                           
  7826                           ;psect for function i1_i2c_read_data
  7827  0CC3                     i1_i2c_read_data:	
  7828                           
  7829                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  7830                           ;pic12f1840_i2c.c: 123: i2c_wait();
  7831                           
  7832                           ;incstack = 0
  7833                           ; Regs used in i1_i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  7834  0CC3  318C  2418  318C   	fcall	i1_i2c_wait
  7835                           
  7836                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  7837  0CC6  0024               	movlb	4	; select bank4
  7838  0CC7  1596               	bsf	22,3	;volatile
  7839                           
  7840                           ;pic12f1840_i2c.c: 125: i2c_wait();
  7841  0CC8  318C  2418         	fcall	i1_i2c_wait
  7842                           
  7843                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  7844  0CCA  0024               	movlb	4	; select bank4
  7845  0CCB  0811               	movf	17,w	;volatile
  7846  0CCC  00F0               	movwf	??i1_i2c_read_data
  7847  0CCD  0870               	movf	??i1_i2c_read_data,w
  7848  0CCE  00F1               	movwf	i1i2c_read_data@read_data
  7849                           
  7850                           ;pic12f1840_i2c.c: 128: return read_data;
  7851  0CCF  0871               	movf	i1i2c_read_data@read_data,w
  7852  0CD0  0008               	return
  7853  0CD1                     __end_ofi1_i2c_read_data:	
  7854                           
  7855                           	psect	text69
  7856  0C18                     __ptext69:	
  7857 ;; *************** function i1_i2c_wait *****************
  7858 ;; Defined at:
  7859 ;;		line 76 in file "pic12f1840_i2c.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;		None
  7864 ;; Return value:  Size  Location     Type
  7865 ;;		None               void
  7866 ;; Registers used:
  7867 ;;		wreg, status,2
  7868 ;; Tracked objects:
  7869 ;;		On entry : 0/0
  7870 ;;		On exit  : 0/0
  7871 ;;		Unchanged: 0/0
  7872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7873 ;;      Params:         0       0       0       0
  7874 ;;      Locals:         0       0       0       0
  7875 ;;      Temps:          0       0       0       0
  7876 ;;      Totals:         0       0       0       0
  7877 ;;Total ram usage:        0 bytes
  7878 ;; Hardware stack levels used:    1
  7879 ;; This function calls:
  7880 ;;		Nothing
  7881 ;; This function is called by:
  7882 ;;		i1_i2c_start
  7883 ;;		i1_i2c_restart
  7884 ;;		i1_i2c_stop
  7885 ;;		i1_i2c_send_ack
  7886 ;;		i1_i2c_send_address
  7887 ;;		i1_i2c_send_data
  7888 ;;		i1_i2c_read_data
  7889 ;; This function uses a non-reentrant model
  7890 ;;
  7891                           
  7892                           
  7893                           ;psect for function i1_i2c_wait
  7894  0C18                     i1_i2c_wait:	
  7895  0C18                     i1l2115:	
  7896                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  7897                           
  7898                           ;incstack = 0
  7899                           ; Regs used in i1_i2c_wait: [wreg+status,2]
  7900                           
  7901  0C18  0024               	movlb	4	; select bank4
  7902  0C19  0816               	movf	22,w	;volatile
  7903  0C1A  391F               	andlw	31
  7904  0C1B  1903               	btfsc	3,2
  7905  0C1C  1914               	btfsc	20,2	;volatile
  7906  0C1D  2C18               	goto	i1l2115
  7907  0C1E  0008               	return
  7908  0C1F                     __end_ofi1_i2c_wait:	
  7909                           
  7910                           	psect	text70
  7911  03BC                     __ptext70:	
  7912 ;; *************** function _ds1307_time_formatted *****************
  7913 ;; Defined at:
  7914 ;;		line 375 in file "ds1307.c"
  7915 ;; Parameters:    Size  Location     Type
  7916 ;;  p_str_time      1    wreg     PTR unsigned char 
  7917 ;;		 -> tmr_isr@time(10), 
  7918 ;; Auto vars:     Size  Location     Type
  7919 ;;  p_str_time      1   27[BANK0 ] PTR unsigned char 
  7920 ;;		 -> tmr_isr@time(10), 
  7921 ;; Return value:  Size  Location     Type
  7922 ;;		None               void
  7923 ;; Registers used:
  7924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7925 ;; Tracked objects:
  7926 ;;		On entry : 0/0
  7927 ;;		On exit  : 0/0
  7928 ;;		Unchanged: 0/0
  7929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7930 ;;      Params:         0       0       0       0
  7931 ;;      Locals:         0       1       0       0
  7932 ;;      Temps:          0       6       0       0
  7933 ;;      Totals:         0       7       0       0
  7934 ;;Total ram usage:        7 bytes
  7935 ;; Hardware stack levels used:    1
  7936 ;; Hardware stack levels required when called:    4
  7937 ;; This function calls:
  7938 ;;		_ds1307_get_hours
  7939 ;;		_ds1307_get_minutes
  7940 ;;		_ds1307_get_seconds
  7941 ;;		_ds1307_is_12hr_mode
  7942 ;;		_ds1307_is_pm
  7943 ;;		_sprintf
  7944 ;; This function is called by:
  7945 ;;		_tmr_isr
  7946 ;; This function uses a non-reentrant model
  7947 ;;
  7948                           
  7949                           
  7950                           ;psect for function _ds1307_time_formatted
  7951  03BC                     _ds1307_time_formatted:	
  7952                           
  7953                           ;incstack = 0
  7954                           ; Regs used in _ds1307_time_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7955                           ;ds1307_time_formatted@p_str_time stored from wreg
  7956  03BC  0020               	movlb	0	; select bank0
  7957  03BD  00BB               	movwf	ds1307_time_formatted@p_str_time
  7958                           
  7959                           ;ds1307.c: 376: if (ds1307_is_12hr_mode()) {
  7960  03BE  318B  23DD  3183   	fcall	_ds1307_is_12hr_mode
  7961  03C1  3A00               	xorlw	0
  7962  03C2  1903               	skipnz
  7963  03C3  2C02               	goto	i1l2975
  7964                           
  7965                           ;ds1307.c: 378: sprintf(p_str_time, "%.2u:%.2u:%.2u", ds1307_get_hours(), ds1307_get_min
      +                          utes(), ds1307_get_seconds());
  7966  03C4  3029               	movlw	low (STR_4| (0+32768))
  7967  03C5  0020               	movlb	0	; select bank0
  7968  03C6  00A0               	movwf	sprintf@f
  7969  03C7  3086               	movlw	high (STR_4| (0+32768))
  7970  03C8  00A1               	movwf	sprintf@f+1
  7971  03C9  318D  25AA  3183   	fcall	_ds1307_get_hours
  7972  03CC  0020               	movlb	0	; select bank0
  7973  03CD  00B5               	movwf	??_ds1307_time_formatted
  7974  03CE  01B6               	clrf	??_ds1307_time_formatted+1
  7975  03CF  0835               	movf	??_ds1307_time_formatted,w
  7976  03D0  00A2               	movwf	?_sprintf+2
  7977  03D1  0836               	movf	??_ds1307_time_formatted+1,w
  7978  03D2  00A3               	movwf	?_sprintf+3
  7979  03D3  318B  23D8  3183   	fcall	_ds1307_get_minutes
  7980  03D6  0020               	movlb	0	; select bank0
  7981  03D7  00B7               	movwf	??_ds1307_time_formatted+2
  7982  03D8  01B8               	clrf	??_ds1307_time_formatted+3
  7983  03D9  0837               	movf	??_ds1307_time_formatted+2,w
  7984  03DA  00A4               	movwf	?_sprintf+4
  7985  03DB  0838               	movf	??_ds1307_time_formatted+3,w
  7986  03DC  00A5               	movwf	?_sprintf+5
  7987  03DD  318C  2406  3183   	fcall	_ds1307_get_seconds
  7988  03E0  0020               	movlb	0	; select bank0
  7989  03E1  00B9               	movwf	??_ds1307_time_formatted+4
  7990  03E2  01BA               	clrf	??_ds1307_time_formatted+5
  7991  03E3  0839               	movf	??_ds1307_time_formatted+4,w
  7992  03E4  00A6               	movwf	?_sprintf+6
  7993  03E5  083A               	movf	??_ds1307_time_formatted+5,w
  7994  03E6  00A7               	movwf	?_sprintf+7
  7995  03E7  083B               	movf	ds1307_time_formatted@p_str_time,w
  7996  03E8  3182  221B  3183   	fcall	_sprintf
  7997                           
  7998                           ;ds1307.c: 379: if (ds1307_is_pm()) {
  7999  03EB  318E  2644  3183   	fcall	_ds1307_is_pm
  8000  03EE  3A00               	xorlw	0
  8001  03EF  1903               	skipnz
  8002  03F0  2BF3               	goto	i1l2971
  8003                           
  8004                           ;ds1307.c: 380: p_str_time[8] = 'P';
  8005  03F1  3050               	movlw	80
  8006  03F2  2BF4               	goto	L8
  8007  03F3                     i1l2971:	
  8008                           ;ds1307.c: 381: } else {
  8009                           
  8010                           
  8011                           ;ds1307.c: 382: p_str_time[8] = 'A';
  8012  03F3  3041               	movlw	65
  8013  03F4                     L8:	
  8014  03F4  0020               	movlb	0	; select bank0
  8015  03F5  00B5               	movwf	??_ds1307_time_formatted
  8016  03F6  083B               	movf	ds1307_time_formatted@p_str_time,w
  8017  03F7  3E08               	addlw	8
  8018  03F8  0086               	movwf	6
  8019  03F9  0187               	clrf	7
  8020  03FA  0835               	movf	??_ds1307_time_formatted,w
  8021  03FB  0081               	movwf	1
  8022                           
  8023                           ;ds1307.c: 383: }
  8024                           ;ds1307.c: 384: p_str_time[9] = (0);
  8025  03FC  083B               	movf	ds1307_time_formatted@p_str_time,w
  8026  03FD  3E09               	addlw	9
  8027  03FE  0086               	movwf	6
  8028  03FF  0187               	clrf	7
  8029  0400  0181               	clrf	1
  8030                           
  8031                           ;ds1307.c: 385: } else {
  8032  0401  0008               	return
  8033  0402                     i1l2975:	
  8034                           
  8035                           ;ds1307.c: 387: sprintf(p_str_time, "%.2u:%.2u:%.2u ", ds1307_get_hours(), ds1307_get_mi
      +                          nutes(), ds1307_get_seconds());
  8036  0402  300A               	movlw	low (STR_5| (0+32768))
  8037  0403  0020               	movlb	0	; select bank0
  8038  0404  00A0               	movwf	sprintf@f
  8039  0405  3086               	movlw	high (STR_5| (0+32768))
  8040  0406  00A1               	movwf	sprintf@f+1
  8041  0407  318D  25AA  3183   	fcall	_ds1307_get_hours
  8042  040A  0020               	movlb	0	; select bank0
  8043  040B  00B5               	movwf	??_ds1307_time_formatted
  8044  040C  01B6               	clrf	??_ds1307_time_formatted+1
  8045  040D  0835               	movf	??_ds1307_time_formatted,w
  8046  040E  00A2               	movwf	?_sprintf+2
  8047  040F  0836               	movf	??_ds1307_time_formatted+1,w
  8048  0410  00A3               	movwf	?_sprintf+3
  8049  0411  318B  23D8  3183   	fcall	_ds1307_get_minutes
  8050  0414  0020               	movlb	0	; select bank0
  8051  0415  00B7               	movwf	??_ds1307_time_formatted+2
  8052  0416  01B8               	clrf	??_ds1307_time_formatted+3
  8053  0417  0837               	movf	??_ds1307_time_formatted+2,w
  8054  0418  00A4               	movwf	?_sprintf+4
  8055  0419  0838               	movf	??_ds1307_time_formatted+3,w
  8056  041A  00A5               	movwf	?_sprintf+5
  8057  041B  318C  2406  3183   	fcall	_ds1307_get_seconds
  8058  041E  0020               	movlb	0	; select bank0
  8059  041F  00B9               	movwf	??_ds1307_time_formatted+4
  8060  0420  01BA               	clrf	??_ds1307_time_formatted+5
  8061  0421  0839               	movf	??_ds1307_time_formatted+4,w
  8062  0422  00A6               	movwf	?_sprintf+6
  8063  0423  083A               	movf	??_ds1307_time_formatted+5,w
  8064  0424  00A7               	movwf	?_sprintf+7
  8065  0425  083B               	movf	ds1307_time_formatted@p_str_time,w
  8066  0426  3182  221B         	fcall	_sprintf
  8067  0428  0008               	return
  8068  0429                     __end_of_ds1307_time_formatted:	
  8069                           
  8070                           	psect	text71
  8071  0E44                     __ptext71:	
  8072 ;; *************** function _ds1307_is_pm *****************
  8073 ;; Defined at:
  8074 ;;		line 281 in file "ds1307.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;  is_pm           1   12[COMMON] unsigned char 
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      unsigned char 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, pclath, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8088 ;;      Params:         0       0       0       0
  8089 ;;      Locals:         1       0       0       0
  8090 ;;      Temps:          2       0       0       0
  8091 ;;      Totals:         3       0       0       0
  8092 ;;Total ram usage:        3 bytes
  8093 ;; Hardware stack levels used:    1
  8094 ;; Hardware stack levels required when called:    3
  8095 ;; This function calls:
  8096 ;;		_ds1307_get_hours
  8097 ;;		_ds1307_is_12hr_mode
  8098 ;; This function is called by:
  8099 ;;		_update_clock
  8100 ;;		_ds1307_switch_to_24hr
  8101 ;;		_ds1307_time_formatted
  8102 ;; This function uses a non-reentrant model
  8103 ;;
  8104                           
  8105                           
  8106                           ;psect for function _ds1307_is_pm
  8107  0E44                     _ds1307_is_pm:	
  8108                           
  8109                           ;ds1307.c: 282: bool is_pm;
  8110                           ;ds1307.c: 283: if (ds1307_is_12hr_mode()) {
  8111                           
  8112                           ;incstack = 0
  8113                           ; Regs used in _ds1307_is_pm: [wreg+status,2+status,0+pclath+cstack]
  8114  0E44  318B  23DD  318E   	fcall	_ds1307_is_12hr_mode
  8115  0E47  3A00               	xorlw	0
  8116  0E48  1903               	skipnz
  8117  0E49  2E51               	goto	i1l2363
  8118                           
  8119                           ;ds1307.c: 285: is_pm = ((g_reg_data[DS1307_REG_HOURS] & 0x20) == 0x20);
  8120  0E4A  3000               	movlw	0
  8121  0E4B  0021               	movlb	1	; select bank1
  8122  0E4C  1AB9               	btfsc	(_g_reg_data^(0+128)+2),5
  8123  0E4D  3001               	movlw	1
  8124  0E4E  00FA               	movwf	??_ds1307_is_pm
  8125  0E4F  087A               	movf	??_ds1307_is_pm,w
  8126  0E50  2E5B               	goto	L9
  8127  0E51                     i1l2363:	
  8128                           ;ds1307.c: 286: } else {
  8129                           
  8130                           
  8131                           ;ds1307.c: 289: is_pm = (ds1307_get_hours() > 11);
  8132  0E51  318D  25AA         	fcall	_ds1307_get_hours
  8133  0E53  00FA               	movwf	??_ds1307_is_pm
  8134  0E54  300C               	movlw	12
  8135  0E55  027A               	subwf	??_ds1307_is_pm,w
  8136  0E56  3000               	movlw	0
  8137  0E57  1803               	skipnc
  8138  0E58  3001               	movlw	1
  8139  0E59  00FB               	movwf	??_ds1307_is_pm+1
  8140  0E5A  087B               	movf	??_ds1307_is_pm+1,w
  8141  0E5B                     L9:	
  8142  0E5B  00FC               	movwf	ds1307_is_pm@is_pm
  8143                           
  8144                           ;ds1307.c: 290: }
  8145                           ;ds1307.c: 291: return is_pm;
  8146  0E5C  087C               	movf	ds1307_is_pm@is_pm,w
  8147  0E5D  0008               	return
  8148  0E5E                     __end_of_ds1307_is_pm:	
  8149                           
  8150                           	psect	text72
  8151  0DAA                     __ptext72:	
  8152 ;; *************** function _ds1307_get_hours *****************
  8153 ;; Defined at:
  8154 ;;		line 211 in file "ds1307.c"
  8155 ;; Parameters:    Size  Location     Type
  8156 ;;		None
  8157 ;; Auto vars:     Size  Location     Type
  8158 ;;  hours           1    9[COMMON] unsigned char 
  8159 ;; Return value:  Size  Location     Type
  8160 ;;                  1    wreg      unsigned char 
  8161 ;; Registers used:
  8162 ;;		wreg, status,2, status,0, pclath, cstack
  8163 ;; Tracked objects:
  8164 ;;		On entry : 0/0
  8165 ;;		On exit  : 0/0
  8166 ;;		Unchanged: 0/0
  8167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8168 ;;      Params:         0       0       0       0
  8169 ;;      Locals:         1       0       0       0
  8170 ;;      Temps:          1       0       0       0
  8171 ;;      Totals:         2       0       0       0
  8172 ;;Total ram usage:        2 bytes
  8173 ;; Hardware stack levels used:    1
  8174 ;; Hardware stack levels required when called:    2
  8175 ;; This function calls:
  8176 ;;		_bcd_to_dec
  8177 ;;		_ds1307_is_12hr_mode
  8178 ;; This function is called by:
  8179 ;;		_update_clock
  8180 ;;		_ds1307_is_pm
  8181 ;;		_ds1307_switch_to_12hr
  8182 ;;		_ds1307_switch_to_24hr
  8183 ;;		_ds1307_time_formatted
  8184 ;; This function uses a non-reentrant model
  8185 ;;
  8186                           
  8187                           
  8188                           ;psect for function _ds1307_get_hours
  8189  0DAA                     _ds1307_get_hours:	
  8190                           
  8191                           ;ds1307.c: 212: uint8_t hours;
  8192                           ;ds1307.c: 213: if (ds1307_is_12hr_mode()) {
  8193                           
  8194                           ;incstack = 0
  8195                           ; Regs used in _ds1307_get_hours: [wreg+status,2+status,0+pclath+cstack]
  8196  0DAA  318B  23DD  318D   	fcall	_ds1307_is_12hr_mode
  8197  0DAD  3A00               	xorlw	0
  8198  0DAE  1903               	skipnz
  8199  0DAF  2DB4               	goto	i1l2293
  8200                           
  8201                           ;ds1307.c: 215: hours = g_reg_data[DS1307_REG_HOURS] & 0x1F;
  8202  0DB0  0021               	movlb	1	; select bank1
  8203  0DB1  0839               	movf	(_g_reg_data^(0+128)+2),w
  8204  0DB2  391F               	andlw	31
  8205  0DB3  2DB7               	goto	L10
  8206  0DB4                     i1l2293:	
  8207                           ;ds1307.c: 216: } else {
  8208                           
  8209                           
  8210                           ;ds1307.c: 218: hours = g_reg_data[DS1307_REG_HOURS] & 0x3F;
  8211  0DB4  0021               	movlb	1	; select bank1
  8212  0DB5  0839               	movf	(_g_reg_data^(0+128)+2),w
  8213  0DB6  393F               	andlw	63
  8214  0DB7                     L10:	
  8215  0DB7  00F8               	movwf	??_ds1307_get_hours
  8216  0DB8  0878               	movf	??_ds1307_get_hours,w
  8217  0DB9  00F9               	movwf	ds1307_get_hours@hours
  8218                           
  8219                           ;ds1307.c: 219: }
  8220                           ;ds1307.c: 220: return bcd_to_dec(hours);
  8221  0DBA  0879               	movf	ds1307_get_hours@hours,w
  8222  0DBB  318D  2584         	fcall	_bcd_to_dec
  8223  0DBD  0008               	return
  8224  0DBE                     __end_of_ds1307_get_hours:	
  8225                           
  8226                           	psect	text73
  8227  0BDD                     __ptext73:	
  8228 ;; *************** function _ds1307_is_12hr_mode *****************
  8229 ;; Defined at:
  8230 ;;		line 182 in file "ds1307.c"
  8231 ;; Parameters:    Size  Location     Type
  8232 ;;		None
  8233 ;; Auto vars:     Size  Location     Type
  8234 ;;		None
  8235 ;; Return value:  Size  Location     Type
  8236 ;;                  1    wreg      unsigned char 
  8237 ;; Registers used:
  8238 ;;		wreg
  8239 ;; Tracked objects:
  8240 ;;		On entry : 0/0
  8241 ;;		On exit  : 0/0
  8242 ;;		Unchanged: 0/0
  8243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8244 ;;      Params:         0       0       0       0
  8245 ;;      Locals:         0       0       0       0
  8246 ;;      Temps:          0       0       0       0
  8247 ;;      Totals:         0       0       0       0
  8248 ;;Total ram usage:        0 bytes
  8249 ;; Hardware stack levels used:    1
  8250 ;; This function calls:
  8251 ;;		Nothing
  8252 ;; This function is called by:
  8253 ;;		_update_clock
  8254 ;;		_ds1307_get_hours
  8255 ;;		_ds1307_set_hours
  8256 ;;		_ds1307_is_pm
  8257 ;;		_ds1307_set_pm_am
  8258 ;;		_ds1307_switch_to_12hr
  8259 ;;		_ds1307_switch_to_24hr
  8260 ;;		_ds1307_time_formatted
  8261 ;; This function uses a non-reentrant model
  8262 ;;
  8263                           
  8264                           
  8265                           ;psect for function _ds1307_is_12hr_mode
  8266  0BDD                     _ds1307_is_12hr_mode:	
  8267                           
  8268                           ;ds1307.c: 185: return ((g_reg_data[DS1307_REG_HOURS] & 0x40) == 0x40);
  8269                           
  8270                           ;incstack = 0
  8271                           ; Regs used in _ds1307_is_12hr_mode: [wreg]
  8272  0BDD  3000               	movlw	0
  8273  0BDE  0021               	movlb	1	; select bank1
  8274  0BDF  1B39               	btfsc	(_g_reg_data^(0+128)+2),6
  8275  0BE0  3001               	movlw	1
  8276  0BE1  0008               	return
  8277  0BE2                     __end_of_ds1307_is_12hr_mode:	
  8278                           
  8279                           	psect	text74
  8280  0C06                     __ptext74:	
  8281 ;; *************** function _ds1307_get_seconds *****************
  8282 ;; Defined at:
  8283 ;;		line 188 in file "ds1307.c"
  8284 ;; Parameters:    Size  Location     Type
  8285 ;;		None
  8286 ;; Auto vars:     Size  Location     Type
  8287 ;;		None
  8288 ;; Return value:  Size  Location     Type
  8289 ;;                  1    wreg      unsigned char 
  8290 ;; Registers used:
  8291 ;;		wreg, status,2, status,0, pclath, cstack
  8292 ;; Tracked objects:
  8293 ;;		On entry : 0/0
  8294 ;;		On exit  : 0/0
  8295 ;;		Unchanged: 0/0
  8296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8297 ;;      Params:         0       0       0       0
  8298 ;;      Locals:         0       0       0       0
  8299 ;;      Temps:          0       0       0       0
  8300 ;;      Totals:         0       0       0       0
  8301 ;;Total ram usage:        0 bytes
  8302 ;; Hardware stack levels used:    1
  8303 ;; Hardware stack levels required when called:    2
  8304 ;; This function calls:
  8305 ;;		_bcd_to_dec
  8306 ;; This function is called by:
  8307 ;;		_update_clock
  8308 ;;		_ds1307_time_formatted
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           
  8313                           ;psect for function _ds1307_get_seconds
  8314  0C06                     _ds1307_get_seconds:	
  8315                           
  8316                           ;ds1307.c: 189: return bcd_to_dec(g_reg_data[DS1307_REG_SECONDS] & 0x7F);
  8317                           
  8318                           ;incstack = 0
  8319                           ; Regs used in _ds1307_get_seconds: [wreg+status,2+status,0+pclath+cstack]
  8320  0C06  0021               	movlb	1	; select bank1
  8321  0C07  0837               	movf	_g_reg_data^(0+128),w
  8322  0C08  397F               	andlw	127
  8323  0C09  318D  2584         	fcall	_bcd_to_dec
  8324  0C0B  0008               	return
  8325  0C0C                     __end_of_ds1307_get_seconds:	
  8326                           
  8327                           	psect	text75
  8328  0BD8                     __ptext75:	
  8329 ;; *************** function _ds1307_get_minutes *****************
  8330 ;; Defined at:
  8331 ;;		line 200 in file "ds1307.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;                  1    wreg      unsigned char 
  8338 ;; Registers used:
  8339 ;;		wreg, status,2, status,0, pclath, cstack
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8345 ;;      Params:         0       0       0       0
  8346 ;;      Locals:         0       0       0       0
  8347 ;;      Temps:          0       0       0       0
  8348 ;;      Totals:         0       0       0       0
  8349 ;;Total ram usage:        0 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; Hardware stack levels required when called:    2
  8352 ;; This function calls:
  8353 ;;		_bcd_to_dec
  8354 ;; This function is called by:
  8355 ;;		_update_clock
  8356 ;;		_ds1307_time_formatted
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           
  8360                           
  8361                           ;psect for function _ds1307_get_minutes
  8362  0BD8                     _ds1307_get_minutes:	
  8363                           
  8364                           ;ds1307.c: 201: return bcd_to_dec(g_reg_data[DS1307_REG_MINUTES]);
  8365                           
  8366                           ;incstack = 0
  8367                           ; Regs used in _ds1307_get_minutes: [wreg+status,2+status,0+pclath+cstack]
  8368  0BD8  0021               	movlb	1	; select bank1
  8369  0BD9  0838               	movf	(_g_reg_data^(0+128)+1),w
  8370  0BDA  318D  2584         	fcall	_bcd_to_dec
  8371  0BDC  0008               	return
  8372  0BDD                     __end_of_ds1307_get_minutes:	
  8373                           
  8374                           	psect	text76
  8375  05D7                     __ptext76:	
  8376 ;; *************** function _ds1307_date_formatted *****************
  8377 ;; Defined at:
  8378 ;;		line 391 in file "ds1307.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;  p_str_date      1    wreg     PTR unsigned char 
  8381 ;;		 -> tmr_isr@date(10), 
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;  p_str_date      1   27[BANK0 ] PTR unsigned char 
  8384 ;;		 -> tmr_isr@date(10), 
  8385 ;; Return value:  Size  Location     Type
  8386 ;;		None               void
  8387 ;; Registers used:
  8388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8389 ;; Tracked objects:
  8390 ;;		On entry : 0/0
  8391 ;;		On exit  : 0/0
  8392 ;;		Unchanged: 0/0
  8393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8394 ;;      Params:         0       0       0       0
  8395 ;;      Locals:         0       1       0       0
  8396 ;;      Temps:          0       6       0       0
  8397 ;;      Totals:         0       7       0       0
  8398 ;;Total ram usage:        7 bytes
  8399 ;; Hardware stack levels used:    1
  8400 ;; Hardware stack levels required when called:    3
  8401 ;; This function calls:
  8402 ;;		_ds1307_get_day_of_month
  8403 ;;		_ds1307_get_month
  8404 ;;		_ds1307_get_year
  8405 ;;		_sprintf
  8406 ;; This function is called by:
  8407 ;;		_tmr_isr
  8408 ;; This function uses a non-reentrant model
  8409 ;;
  8410                           
  8411                           
  8412                           ;psect for function _ds1307_date_formatted
  8413  05D7                     _ds1307_date_formatted:	
  8414                           
  8415                           ;incstack = 0
  8416                           ; Regs used in _ds1307_date_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8417                           ;ds1307_date_formatted@p_str_date stored from wreg
  8418  05D7  0020               	movlb	0	; select bank0
  8419  05D8  00BB               	movwf	ds1307_date_formatted@p_str_date
  8420                           
  8421                           ;ds1307.c: 393: sprintf(p_str_date, "%.2u/%.2u/%.2u", ds1307_get_month(), ds1307_get_day
      +                          _of_month(), ds1307_get_year());
  8422  05D9  301A               	movlw	low (STR_6| (0+32768))
  8423  05DA  00A0               	movwf	sprintf@f
  8424  05DB  3086               	movlw	high (STR_6| (0+32768))
  8425  05DC  00A1               	movwf	sprintf@f+1
  8426  05DD  318B  23CE  3185   	fcall	_ds1307_get_month
  8427  05E0  0020               	movlb	0	; select bank0
  8428  05E1  00B5               	movwf	??_ds1307_date_formatted
  8429  05E2  01B6               	clrf	??_ds1307_date_formatted+1
  8430  05E3  0835               	movf	??_ds1307_date_formatted,w
  8431  05E4  00A2               	movwf	?_sprintf+2
  8432  05E5  0836               	movf	??_ds1307_date_formatted+1,w
  8433  05E6  00A3               	movwf	?_sprintf+3
  8434  05E7  318C  2400  3185   	fcall	_ds1307_get_day_of_month
  8435  05EA  0020               	movlb	0	; select bank0
  8436  05EB  00B7               	movwf	??_ds1307_date_formatted+2
  8437  05EC  01B8               	clrf	??_ds1307_date_formatted+3
  8438  05ED  0837               	movf	??_ds1307_date_formatted+2,w
  8439  05EE  00A4               	movwf	?_sprintf+4
  8440  05EF  0838               	movf	??_ds1307_date_formatted+3,w
  8441  05F0  00A5               	movwf	?_sprintf+5
  8442  05F1  318B  23D3  3185   	fcall	_ds1307_get_year
  8443  05F4  0020               	movlb	0	; select bank0
  8444  05F5  00B9               	movwf	??_ds1307_date_formatted+4
  8445  05F6  01BA               	clrf	??_ds1307_date_formatted+5
  8446  05F7  0839               	movf	??_ds1307_date_formatted+4,w
  8447  05F8  00A6               	movwf	?_sprintf+6
  8448  05F9  083A               	movf	??_ds1307_date_formatted+5,w
  8449  05FA  00A7               	movwf	?_sprintf+7
  8450  05FB  083B               	movf	ds1307_date_formatted@p_str_date,w
  8451  05FC  3182  221B         	fcall	_sprintf
  8452  05FE  0008               	return
  8453  05FF                     __end_of_ds1307_date_formatted:	
  8454                           
  8455                           	psect	text77
  8456  021B                     __ptext77:	
  8457 ;; *************** function _sprintf *****************
  8458 ;; Defined at:
  8459 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\doprnt.c"
  8460 ;; Parameters:    Size  Location     Type
  8461 ;;  sp              1    wreg     PTR unsigned char 
  8462 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  8463 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  8464 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(3), 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  sp              1   18[BANK0 ] PTR unsigned char 
  8467 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  8468 ;;  _val            4   14[BANK0 ] struct .
  8469 ;;  c               1   20[BANK0 ] char 
  8470 ;;  prec            1   19[BANK0 ] char 
  8471 ;;  ap              1   13[BANK0 ] PTR void [1]
  8472 ;;		 -> ?_sprintf(2), 
  8473 ;;  flag            1   12[BANK0 ] unsigned char 
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  2    0[BANK0 ] int 
  8476 ;; Registers used:
  8477 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8483 ;;      Params:         0       8       0       0
  8484 ;;      Locals:         0       9       0       0
  8485 ;;      Temps:          0       4       0       0
  8486 ;;      Totals:         0      21       0       0
  8487 ;;Total ram usage:       21 bytes
  8488 ;; Hardware stack levels used:    1
  8489 ;; Hardware stack levels required when called:    1
  8490 ;; This function calls:
  8491 ;;		___bmul
  8492 ;;		___lwdiv
  8493 ;;		___lwmod
  8494 ;;		_isdigit
  8495 ;; This function is called by:
  8496 ;;		_tmr_isr
  8497 ;;		_ds1307_time_formatted
  8498 ;;		_ds1307_date_formatted
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           
  8503                           ;psect for function _sprintf
  8504  021B                     _sprintf:	
  8505                           
  8506                           ;incstack = 0
  8507                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8508                           ;sprintf@sp stored from wreg
  8509  021B  0020               	movlb	0	; select bank0
  8510  021C  00B2               	movwf	sprintf@sp
  8511                           
  8512                           ;doprnt.c: 494: va_list ap;
  8513                           ;doprnt.c: 499: signed char c;
  8514                           ;doprnt.c: 506: signed char prec;
  8515                           ;doprnt.c: 508: unsigned char flag;
  8516                           ;doprnt.c: 527: union {
  8517                           ;doprnt.c: 528: unsigned int _val;
  8518                           ;doprnt.c: 529: struct {
  8519                           ;doprnt.c: 530: const char * _cp;
  8520                           ;doprnt.c: 531: unsigned _len;
  8521                           ;doprnt.c: 532: } _str;
  8522                           ;doprnt.c: 533: } _val;
  8523                           ;doprnt.c: 542: *ap = __va_start();
  8524  021D  3022               	movlw	(?_sprintf+2)& (0+255)
  8525  021E  00A8               	movwf	??_sprintf
  8526  021F  0828               	movf	??_sprintf,w
  8527  0220  00AD               	movwf	sprintf@ap
  8528  0221                     i1l2697:	
  8529                           ;doprnt.c: 545: while(c = *f++) {
  8530                           
  8531  0221  0821               	movf	sprintf@f+1,w
  8532  0222  00A9               	movwf	??_sprintf+1
  8533  0223  0820               	movf	sprintf@f,w
  8534  0224  00A8               	movwf	??_sprintf
  8535  0225  0AA0               	incf	sprintf@f,f
  8536  0226  1903               	skipnz
  8537  0227  0AA1               	incf	sprintf@f+1,f
  8538  0228  0828               	movf	??_sprintf,w
  8539  0229  0084               	movwf	4
  8540  022A  0829               	movf	??_sprintf+1,w
  8541  022B  0085               	movwf	5
  8542  022C  0800               	movf	0,w	;code access
  8543  022D  00AA               	movwf	??_sprintf+2
  8544  022E  082A               	movf	??_sprintf+2,w
  8545  022F  00B4               	movwf	sprintf@c
  8546  0230  08B4               	movf	sprintf@c,f
  8547  0231  1903               	btfsc	3,2
  8548  0232  2B25               	goto	i1l2699
  8549                           
  8550                           ;doprnt.c: 547: if(c != '%')
  8551  0233  0834               	movf	sprintf@c,w
  8552  0234  3A25               	xorlw	37
  8553  0235  1903               	skipnz
  8554  0236  2A43               	goto	i1l2635
  8555                           
  8556                           ;doprnt.c: 549: {
  8557                           ;doprnt.c: 550: ((*sp++ = (c)));
  8558  0237  0834               	movf	sprintf@c,w
  8559  0238  00A8               	movwf	??_sprintf
  8560  0239  0832               	movf	sprintf@sp,w
  8561  023A  0086               	movwf	6
  8562  023B  0187               	clrf	7
  8563  023C  0828               	movf	??_sprintf,w
  8564  023D  0081               	movwf	1
  8565  023E  3001               	movlw	1
  8566  023F  00A8               	movwf	??_sprintf
  8567  0240  0828               	movf	??_sprintf,w
  8568  0241  07B2               	addwf	sprintf@sp,f
  8569                           
  8570                           ;doprnt.c: 551: continue;
  8571  0242  2A21               	goto	i1l2697
  8572  0243                     i1l2635:	
  8573                           
  8574                           ;doprnt.c: 552: }
  8575                           ;doprnt.c: 557: flag = 0;
  8576  0243  01AC               	clrf	sprintf@flag
  8577                           
  8578                           ;doprnt.c: 620: if(*f == '.') {
  8579  0244  0820               	movf	sprintf@f,w
  8580  0245  0084               	movwf	4
  8581  0246  0821               	movf	sprintf@f+1,w
  8582  0247  0085               	movwf	5
  8583  0248  0800               	movf	0,w	;code access
  8584  0249  3A2E               	xorlw	46
  8585  024A  1D03               	skipz
  8586  024B  2A75               	goto	i1l2649
  8587                           
  8588                           ;doprnt.c: 622: f++;
  8589  024C  3001               	movlw	1
  8590  024D  07A0               	addwf	sprintf@f,f
  8591  024E  3000               	movlw	0
  8592  024F  3DA1               	addwfc	sprintf@f+1,f
  8593                           
  8594                           ;doprnt.c: 629: {
  8595                           ;doprnt.c: 630: prec = 0;
  8596  0250  01B3               	clrf	sprintf@prec
  8597  0251                     i1l2647:	
  8598                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  8599                           
  8600  0251  0820               	movf	sprintf@f,w
  8601  0252  0084               	movwf	4
  8602  0253  0821               	movf	sprintf@f+1,w
  8603  0254  0085               	movwf	5
  8604  0255  0800               	movf	0,w	;code access
  8605  0256  318C  24B5  3182   	fcall	_isdigit
  8606  0259  1C03               	btfss	3,0
  8607  025A  2A7D               	goto	i1l2655
  8608                           
  8609                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  8610  025B  0020               	movlb	0	; select bank0
  8611  025C  0820               	movf	sprintf@f,w
  8612  025D  0084               	movwf	4
  8613  025E  0821               	movf	sprintf@f+1,w
  8614  025F  0085               	movwf	5
  8615  0260  0800               	movf	0,w	;code access
  8616  0261  00A8               	movwf	??_sprintf
  8617  0262  300A               	movlw	10
  8618  0263  00A9               	movwf	??_sprintf+1
  8619  0264  0829               	movf	??_sprintf+1,w
  8620  0265  00F0               	movwf	___bmul@multiplicand
  8621  0266  0833               	movf	sprintf@prec,w
  8622  0267  318D  254F  3182   	fcall	___bmul
  8623  026A  0020               	movlb	0	; select bank0
  8624  026B  0728               	addwf	??_sprintf,w
  8625  026C  3ED0               	addlw	-48
  8626  026D  00AA               	movwf	??_sprintf+2
  8627  026E  082A               	movf	??_sprintf+2,w
  8628  026F  00B3               	movwf	sprintf@prec
  8629  0270  3001               	movlw	1
  8630  0271  07A0               	addwf	sprintf@f,f
  8631  0272  3000               	movlw	0
  8632  0273  3DA1               	addwfc	sprintf@f+1,f
  8633  0274  2A51               	goto	i1l2647
  8634  0275                     i1l2649:	
  8635                           ;doprnt.c: 633: }
  8636                           ;doprnt.c: 634: } else {
  8637                           
  8638                           
  8639                           ;doprnt.c: 635: prec = 0;
  8640  0275  0020               	movlb	0	; select bank0
  8641  0276  01B3               	clrf	sprintf@prec
  8642                           
  8643                           ;doprnt.c: 639: }
  8644                           ;doprnt.c: 644: switch(c = *f++) {
  8645  0277  2A7D               	goto	i1l2655
  8646  0278                     i1l2651:	
  8647                           ;doprnt.c: 826: case 'u':
  8648                           
  8649                           ;doprnt.c: 822: continue;
  8650                           
  8651                           ;doprnt.c: 811: default:
  8652                           
  8653                           ;doprnt.c: 647: goto alldone;
  8654                           
  8655                           ;doprnt.c: 646: case 0:
  8656                           
  8657                           
  8658                           ;doprnt.c: 827: flag |= 0xC0;
  8659  0278  30C0               	movlw	192
  8660  0279  00A8               	movwf	??_sprintf
  8661  027A  0828               	movf	??_sprintf,w
  8662  027B  04AC               	iorwf	sprintf@flag,f
  8663                           
  8664                           ;doprnt.c: 831: }
  8665                           
  8666                           ;doprnt.c: 828: break;
  8667  027C  2A92               	goto	i1l2657
  8668  027D                     i1l2655:	
  8669  027D  0020               	movlb	0	; select bank0
  8670  027E  0821               	movf	sprintf@f+1,w
  8671  027F  00A9               	movwf	??_sprintf+1
  8672  0280  0820               	movf	sprintf@f,w
  8673  0281  00A8               	movwf	??_sprintf
  8674  0282  0AA0               	incf	sprintf@f,f
  8675  0283  1903               	skipnz
  8676  0284  0AA1               	incf	sprintf@f+1,f
  8677  0285  0828               	movf	??_sprintf,w
  8678  0286  0084               	movwf	4
  8679  0287  0829               	movf	??_sprintf+1,w
  8680  0288  0085               	movwf	5
  8681  0289  0800               	movf	0,w	;code access
  8682  028A  00B4               	movwf	sprintf@c
  8683                           
  8684                           ; Switch size 1, requested type "space"
  8685                           ; Number of cases is 2, Range of values is 0 to 117
  8686                           ; switch strategies available:
  8687                           ; Name         Instructions Cycles
  8688                           ; simple_byte            7     4 (average)
  8689                           ; direct_byte          242     6 (fixed)
  8690                           ; jumptable            260     6 (fixed)
  8691                           ;	Chosen strategy is simple_byte
  8692  028B  3A00               	xorlw	0	; case 0
  8693  028C  1903               	skipnz
  8694  028D  2B25               	goto	i1l2699
  8695  028E  3A75               	xorlw	117	; case 117
  8696  028F  1903               	skipnz
  8697  0290  2A78               	goto	i1l2651
  8698  0291  2A21               	goto	i1l2697
  8699  0292                     i1l2657:	
  8700                           
  8701                           ;doprnt.c: 1282: {
  8702                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  8703  0292  082D               	movf	sprintf@ap,w
  8704  0293  0086               	movwf	6
  8705  0294  0187               	clrf	7
  8706  0295  3F40               	moviw [0]fsr1
  8707  0296  00AE               	movwf	sprintf@_val
  8708  0297  3F41               	moviw [1]fsr1
  8709  0298  00AF               	movwf	sprintf@_val+1
  8710  0299  3002               	movlw	2
  8711  029A  00A8               	movwf	??_sprintf
  8712  029B  0828               	movf	??_sprintf,w
  8713  029C  07AD               	addwf	sprintf@ap,f
  8714                           
  8715                           ;doprnt.c: 1296: }
  8716                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  8717  029D  08B3               	movf	sprintf@prec,f
  8718  029E  1D03               	skipz
  8719  029F  2AA8               	goto	i1l2667
  8720  02A0  082F               	movf	sprintf@_val+1,w
  8721  02A1  042E               	iorwf	sprintf@_val,w
  8722  02A2  1D03               	skipz
  8723  02A3  2AA8               	goto	i1l2667
  8724                           
  8725                           ;doprnt.c: 1300: prec++;
  8726  02A4  3001               	movlw	1
  8727  02A5  00A8               	movwf	??_sprintf
  8728  02A6  0828               	movf	??_sprintf,w
  8729  02A7  07B3               	addwf	sprintf@prec,f
  8730  02A8                     i1l2667:	
  8731                           
  8732                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8733  02A8  01B4               	clrf	sprintf@c
  8734  02A9  0AB4               	incf	sprintf@c,f
  8735  02AA  0834               	movf	sprintf@c,w
  8736  02AB  3A05               	xorlw	5
  8737  02AC  1903               	btfsc	3,2
  8738  02AD  2ACD               	goto	i1l2681
  8739  02AE                     i1l2673:	
  8740                           
  8741                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  8742  02AE  0834               	movf	sprintf@c,w
  8743  02AF  00A8               	movwf	??_sprintf
  8744  02B0  01A9               	clrf	??_sprintf+1
  8745  02B1  35A8               	lslf	??_sprintf,f
  8746  02B2  0DA9               	rlf	??_sprintf+1,f
  8747  02B3  3000               	movlw	low (_dpowers| (0+32768))
  8748  02B4  0728               	addwf	??_sprintf,w
  8749  02B5  0084               	movwf	4
  8750  02B6  3086               	movlw	high (_dpowers| (0+32768))
  8751  02B7  3D29               	addwfc	??_sprintf+1,w
  8752  02B8  0085               	movwf	5
  8753  02B9  3F00               	moviw [0]fsr0
  8754  02BA  00AA               	movwf	??_sprintf+2
  8755  02BB  3F01               	moviw [1]fsr0
  8756  02BC  00AB               	movwf	??_sprintf+3
  8757  02BD  082B               	movf	??_sprintf+3,w
  8758  02BE  022F               	subwf	sprintf@_val+1,w
  8759  02BF  1D03               	skipz
  8760  02C0  2AC3               	goto	u213_25
  8761  02C1  082A               	movf	??_sprintf+2,w
  8762  02C2  022E               	subwf	sprintf@_val,w
  8763  02C3                     u213_25:	
  8764  02C3  1C03               	btfss	3,0
  8765  02C4  2ACD               	goto	i1l2681
  8766                           
  8767                           ;doprnt.c: 1316: break;
  8768  02C5  3001               	movlw	1
  8769  02C6  00A8               	movwf	??_sprintf
  8770  02C7  0828               	movf	??_sprintf,w
  8771  02C8  07B4               	addwf	sprintf@c,f
  8772  02C9  0834               	movf	sprintf@c,w
  8773  02CA  3A05               	xorlw	5
  8774  02CB  1D03               	skipz
  8775  02CC  2AAE               	goto	i1l2673
  8776  02CD                     i1l2681:	
  8777                           
  8778                           ;doprnt.c: 1348: if(c < prec)
  8779  02CD  0834               	movf	sprintf@c,w
  8780  02CE  3A80               	xorlw	128
  8781  02CF  00A8               	movwf	??_sprintf
  8782  02D0  0833               	movf	sprintf@prec,w
  8783  02D1  3A80               	xorlw	128
  8784  02D2  02A8               	subwf	??_sprintf,f
  8785  02D3  1803               	skipnc
  8786  02D4  2ADA               	goto	i1l2685
  8787                           
  8788                           ;doprnt.c: 1349: c = prec;
  8789  02D5  0833               	movf	sprintf@prec,w
  8790  02D6  00A8               	movwf	??_sprintf
  8791  02D7  0828               	movf	??_sprintf,w
  8792  02D8  00B4               	movwf	sprintf@c
  8793  02D9  2AE6               	goto	i1l2695
  8794  02DA                     i1l2685:	
  8795                           
  8796                           ;doprnt.c: 1350: else if(prec < c)
  8797  02DA  0833               	movf	sprintf@prec,w
  8798  02DB  3A80               	xorlw	128
  8799  02DC  00A8               	movwf	??_sprintf
  8800  02DD  0834               	movf	sprintf@c,w
  8801  02DE  3A80               	xorlw	128
  8802  02DF  02A8               	subwf	??_sprintf,f
  8803  02E0  1803               	skipnc
  8804  02E1  2AE6               	goto	i1l2695
  8805                           
  8806                           ;doprnt.c: 1351: prec = c;
  8807  02E2  0834               	movf	sprintf@c,w
  8808  02E3  00A8               	movwf	??_sprintf
  8809  02E4  0828               	movf	??_sprintf,w
  8810  02E5  00B3               	movwf	sprintf@prec
  8811  02E6                     i1l2695:	
  8812                           ;doprnt.c: 1431: {
  8813                           ;doprnt.c: 1478: }
  8814                           ;doprnt.c: 1483: while(prec--) {
  8815                           
  8816  02E6  30FF               	movlw	-1
  8817  02E7  00A8               	movwf	??_sprintf
  8818  02E8  0828               	movf	??_sprintf,w
  8819  02E9  07B3               	addwf	sprintf@prec,f
  8820  02EA  0833               	movf	sprintf@prec,w
  8821  02EB  3AFF               	xorlw	255
  8822  02EC  1903               	btfsc	3,2
  8823  02ED  2A21               	goto	i1l2697
  8824                           
  8825                           ;doprnt.c: 1487: {
  8826                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  8827  02EE  300A               	movlw	10
  8828  02EF  00F8               	movwf	___lwmod@divisor
  8829  02F0  3000               	movlw	0
  8830  02F1  00F9               	movwf	___lwmod@divisor+1
  8831  02F2  0833               	movf	sprintf@prec,w
  8832  02F3  00A8               	movwf	??_sprintf
  8833  02F4  01A9               	clrf	??_sprintf+1
  8834  02F5  35A8               	lslf	??_sprintf,f
  8835  02F6  0DA9               	rlf	??_sprintf+1,f
  8836  02F7  3000               	movlw	low (_dpowers| (0+32768))
  8837  02F8  0728               	addwf	??_sprintf,w
  8838  02F9  0084               	movwf	4
  8839  02FA  3086               	movlw	high (_dpowers| (0+32768))
  8840  02FB  3D29               	addwfc	??_sprintf+1,w
  8841  02FC  0085               	movwf	5
  8842  02FD  3F00               	moviw [0]fsr0
  8843  02FE  00F0               	movwf	___lwdiv@divisor
  8844  02FF  3F01               	moviw [1]fsr0
  8845  0300  00F1               	movwf	___lwdiv@divisor+1
  8846  0301  082F               	movf	sprintf@_val+1,w
  8847  0302  01F3               	clrf	___lwdiv@dividend+1
  8848  0303  07F3               	addwf	___lwdiv@dividend+1,f
  8849  0304  082E               	movf	sprintf@_val,w
  8850  0305  01F2               	clrf	___lwdiv@dividend
  8851  0306  07F2               	addwf	___lwdiv@dividend,f
  8852  0307  3187  2755  3182   	fcall	___lwdiv
  8853  030A  0871               	movf	?___lwdiv+1,w
  8854  030B  01FB               	clrf	___lwmod@dividend+1
  8855  030C  07FB               	addwf	___lwmod@dividend+1,f
  8856  030D  0870               	movf	?___lwdiv,w
  8857  030E  01FA               	clrf	___lwmod@dividend
  8858  030F  07FA               	addwf	___lwmod@dividend,f
  8859  0310  3185  25A9  3182   	fcall	___lwmod
  8860  0313  0878               	movf	?___lwmod,w
  8861  0314  3E30               	addlw	48
  8862  0315  0020               	movlb	0	; select bank0
  8863  0316  00AA               	movwf	??_sprintf+2
  8864  0317  082A               	movf	??_sprintf+2,w
  8865  0318  00B4               	movwf	sprintf@c
  8866                           
  8867                           ;doprnt.c: 1532: }
  8868                           ;doprnt.c: 1533: ((*sp++ = (c)));
  8869  0319  0834               	movf	sprintf@c,w
  8870  031A  00A8               	movwf	??_sprintf
  8871  031B  0832               	movf	sprintf@sp,w
  8872  031C  0086               	movwf	6
  8873  031D  0187               	clrf	7
  8874  031E  0828               	movf	??_sprintf,w
  8875  031F  0081               	movwf	1
  8876  0320  3001               	movlw	1
  8877  0321  00A8               	movwf	??_sprintf
  8878  0322  0828               	movf	??_sprintf,w
  8879  0323  07B2               	addwf	sprintf@sp,f
  8880  0324  2AE6               	goto	i1l2695
  8881  0325                     i1l2699:	
  8882                           ;doprnt.c: 1534: }
  8883                           ;doprnt.c: 1542: }
  8884                           ;doprnt.c: 1544: alldone:
  8885                           
  8886                           
  8887                           ;doprnt.c: 1547: *sp = 0;
  8888  0325  0832               	movf	sprintf@sp,w
  8889  0326  0086               	movwf	6
  8890  0327  0187               	clrf	7
  8891  0328  0181               	clrf	1
  8892  0329  0008               	return
  8893  032A                     __end_of_sprintf:	
  8894                           ;doprnt.c: 1549: return 0;
  8895                           ;	Return value of _sprintf is never used
  8896                           
  8897                           
  8898                           	psect	text78
  8899  0CB5                     __ptext78:	
  8900 ;; *************** function _isdigit *****************
  8901 ;; Defined at:
  8902 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\isdigit.c"
  8903 ;; Parameters:    Size  Location     Type
  8904 ;;  c               1    wreg     unsigned char 
  8905 ;; Auto vars:     Size  Location     Type
  8906 ;;  c               1    1[COMMON] unsigned char 
  8907 ;; Return value:  Size  Location     Type
  8908 ;;		None               void
  8909 ;; Registers used:
  8910 ;;		wreg, status,2, status,0
  8911 ;; Tracked objects:
  8912 ;;		On entry : 0/0
  8913 ;;		On exit  : 0/0
  8914 ;;		Unchanged: 0/0
  8915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8916 ;;      Params:         0       0       0       0
  8917 ;;      Locals:         2       0       0       0
  8918 ;;      Temps:          0       0       0       0
  8919 ;;      Totals:         2       0       0       0
  8920 ;;Total ram usage:        2 bytes
  8921 ;; Hardware stack levels used:    1
  8922 ;; This function calls:
  8923 ;;		Nothing
  8924 ;; This function is called by:
  8925 ;;		_sprintf
  8926 ;; This function uses a non-reentrant model
  8927 ;;
  8928                           
  8929                           
  8930                           ;psect for function _isdigit
  8931  0CB5                     _isdigit:	
  8932                           
  8933                           ;incstack = 0
  8934                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8935                           ;isdigit@c stored from wreg
  8936  0CB5  00F1               	movwf	isdigit@c
  8937  0CB6  01F0               	clrf	_isdigit$1061
  8938  0CB7  303A               	movlw	58
  8939  0CB8  0271               	subwf	isdigit@c,w
  8940  0CB9  1803               	skipnc
  8941  0CBA  2CC1               	goto	i1l2415
  8942  0CBB  3030               	movlw	48
  8943  0CBC  0271               	subwf	isdigit@c,w
  8944  0CBD  1C03               	skipc
  8945  0CBE  2CC1               	goto	i1l2415
  8946  0CBF  01F0               	clrf	_isdigit$1061
  8947  0CC0  0AF0               	incf	_isdigit$1061,f
  8948  0CC1                     i1l2415:	
  8949  0CC1  0C70               	rrf	_isdigit$1061,w
  8950  0CC2  0008               	return
  8951  0CC3                     __end_of_isdigit:	
  8952                           
  8953                           	psect	text79
  8954  05A9                     __ptext79:	
  8955 ;; *************** function ___lwmod *****************
  8956 ;; Defined at:
  8957 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lwmod.c"
  8958 ;; Parameters:    Size  Location     Type
  8959 ;;  divisor         2    8[COMMON] unsigned int 
  8960 ;;  dividend        2   10[COMMON] unsigned int 
  8961 ;; Auto vars:     Size  Location     Type
  8962 ;;  counter         1   13[COMMON] unsigned char 
  8963 ;; Return value:  Size  Location     Type
  8964 ;;                  2    8[COMMON] unsigned int 
  8965 ;; Registers used:
  8966 ;;		wreg, status,2, status,0
  8967 ;; Tracked objects:
  8968 ;;		On entry : 0/0
  8969 ;;		On exit  : 0/0
  8970 ;;		Unchanged: 0/0
  8971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8972 ;;      Params:         4       0       0       0
  8973 ;;      Locals:         1       0       0       0
  8974 ;;      Temps:          1       0       0       0
  8975 ;;      Totals:         6       0       0       0
  8976 ;;Total ram usage:        6 bytes
  8977 ;; Hardware stack levels used:    1
  8978 ;; This function calls:
  8979 ;;		Nothing
  8980 ;; This function is called by:
  8981 ;;		_sprintf
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           
  8986                           ;psect for function ___lwmod
  8987  05A9                     ___lwmod:	
  8988                           
  8989                           ;incstack = 0
  8990                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8991  05A9  0879               	movf	___lwmod@divisor+1,w
  8992  05AA  0478               	iorwf	___lwmod@divisor,w
  8993  05AB  1903               	skipnz
  8994  05AC  2DD0               	goto	i1l2463
  8995  05AD  01FD               	clrf	___lwmod@counter
  8996  05AE  0AFD               	incf	___lwmod@counter,f
  8997  05AF                     i1l2453:	
  8998  05AF  1BF9               	btfsc	___lwmod@divisor+1,7
  8999  05B0  2DBB               	goto	i1l2455
  9000  05B1  3001               	movlw	1
  9001  05B2                     u176_25:	
  9002  05B2  35F8               	lslf	___lwmod@divisor,f
  9003  05B3  0DF9               	rlf	___lwmod@divisor+1,f
  9004  05B4  0B89               	decfsz	9,f
  9005  05B5  2DB2               	goto	u176_25
  9006  05B6  3001               	movlw	1
  9007  05B7  00FC               	movwf	??___lwmod
  9008  05B8  087C               	movf	??___lwmod,w
  9009  05B9  07FD               	addwf	___lwmod@counter,f
  9010  05BA  2DAF               	goto	i1l2453
  9011  05BB                     i1l2455:	
  9012  05BB  0879               	movf	___lwmod@divisor+1,w
  9013  05BC  027B               	subwf	___lwmod@dividend+1,w
  9014  05BD  1D03               	skipz
  9015  05BE  2DC1               	goto	u178_25
  9016  05BF  0878               	movf	___lwmod@divisor,w
  9017  05C0  027A               	subwf	___lwmod@dividend,w
  9018  05C1                     u178_25:	
  9019  05C1  1C03               	skipc
  9020  05C2  2DC7               	goto	i1l2459
  9021  05C3  0878               	movf	___lwmod@divisor,w
  9022  05C4  02FA               	subwf	___lwmod@dividend,f
  9023  05C5  0879               	movf	___lwmod@divisor+1,w
  9024  05C6  3BFB               	subwfb	___lwmod@dividend+1,f
  9025  05C7                     i1l2459:	
  9026  05C7  3001               	movlw	1
  9027  05C8                     u179_25:	
  9028  05C8  36F9               	lsrf	___lwmod@divisor+1,f
  9029  05C9  0CF8               	rrf	___lwmod@divisor,f
  9030  05CA  0B89               	decfsz	9,f
  9031  05CB  2DC8               	goto	u179_25
  9032  05CC  3001               	movlw	1
  9033  05CD  02FD               	subwf	___lwmod@counter,f
  9034  05CE  1D03               	btfss	3,2
  9035  05CF  2DBB               	goto	i1l2455
  9036  05D0                     i1l2463:	
  9037  05D0  087B               	movf	___lwmod@dividend+1,w
  9038  05D1  01F9               	clrf	?___lwmod+1
  9039  05D2  07F9               	addwf	?___lwmod+1,f
  9040  05D3  087A               	movf	___lwmod@dividend,w
  9041  05D4  01F8               	clrf	?___lwmod
  9042  05D5  07F8               	addwf	?___lwmod,f
  9043  05D6  0008               	return
  9044  05D7                     __end_of___lwmod:	
  9045                           
  9046                           	psect	text80
  9047  0755                     __ptext80:	
  9048 ;; *************** function ___lwdiv *****************
  9049 ;; Defined at:
  9050 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lwdiv.c"
  9051 ;; Parameters:    Size  Location     Type
  9052 ;;  divisor         2    0[COMMON] unsigned int 
  9053 ;;  dividend        2    2[COMMON] unsigned int 
  9054 ;; Auto vars:     Size  Location     Type
  9055 ;;  quotient        2    5[COMMON] unsigned int 
  9056 ;;  counter         1    7[COMMON] unsigned char 
  9057 ;; Return value:  Size  Location     Type
  9058 ;;                  2    0[COMMON] unsigned int 
  9059 ;; Registers used:
  9060 ;;		wreg, status,2, status,0
  9061 ;; Tracked objects:
  9062 ;;		On entry : 0/0
  9063 ;;		On exit  : 0/0
  9064 ;;		Unchanged: 0/0
  9065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9066 ;;      Params:         4       0       0       0
  9067 ;;      Locals:         3       0       0       0
  9068 ;;      Temps:          1       0       0       0
  9069 ;;      Totals:         8       0       0       0
  9070 ;;Total ram usage:        8 bytes
  9071 ;; Hardware stack levels used:    1
  9072 ;; This function calls:
  9073 ;;		Nothing
  9074 ;; This function is called by:
  9075 ;;		_sprintf
  9076 ;; This function uses a non-reentrant model
  9077 ;;
  9078                           
  9079                           
  9080                           ;psect for function ___lwdiv
  9081  0755                     ___lwdiv:	
  9082                           
  9083                           ;incstack = 0
  9084                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  9085  0755  01F5               	clrf	___lwdiv@quotient
  9086  0756  01F6               	clrf	___lwdiv@quotient+1
  9087  0757  0871               	movf	___lwdiv@divisor+1,w
  9088  0758  0470               	iorwf	___lwdiv@divisor,w
  9089  0759  1903               	skipnz
  9090  075A  2F84               	goto	i1l2441
  9091  075B  01F7               	clrf	___lwdiv@counter
  9092  075C  0AF7               	incf	___lwdiv@counter,f
  9093  075D                     i1l2429:	
  9094  075D  1BF1               	btfsc	___lwdiv@divisor+1,7
  9095  075E  2F69               	goto	i1l2431
  9096  075F  3001               	movlw	1
  9097  0760                     u169_25:	
  9098  0760  35F0               	lslf	___lwdiv@divisor,f
  9099  0761  0DF1               	rlf	___lwdiv@divisor+1,f
  9100  0762  0B89               	decfsz	9,f
  9101  0763  2F60               	goto	u169_25
  9102  0764  3001               	movlw	1
  9103  0765  00F4               	movwf	??___lwdiv
  9104  0766  0874               	movf	??___lwdiv,w
  9105  0767  07F7               	addwf	___lwdiv@counter,f
  9106  0768  2F5D               	goto	i1l2429
  9107  0769                     i1l2431:	
  9108  0769  3001               	movlw	1
  9109  076A                     u171_25:	
  9110  076A  35F5               	lslf	___lwdiv@quotient,f
  9111  076B  0DF6               	rlf	___lwdiv@quotient+1,f
  9112  076C  0B89               	decfsz	9,f
  9113  076D  2F6A               	goto	u171_25
  9114  076E  0871               	movf	___lwdiv@divisor+1,w
  9115  076F  0273               	subwf	___lwdiv@dividend+1,w
  9116  0770  1D03               	skipz
  9117  0771  2F74               	goto	u172_25
  9118  0772  0870               	movf	___lwdiv@divisor,w
  9119  0773  0272               	subwf	___lwdiv@dividend,w
  9120  0774                     u172_25:	
  9121  0774  1C03               	skipc
  9122  0775  2F7B               	goto	i1l2437
  9123  0776  0870               	movf	___lwdiv@divisor,w
  9124  0777  02F2               	subwf	___lwdiv@dividend,f
  9125  0778  0871               	movf	___lwdiv@divisor+1,w
  9126  0779  3BF3               	subwfb	___lwdiv@dividend+1,f
  9127  077A  1475               	bsf	___lwdiv@quotient,0
  9128  077B                     i1l2437:	
  9129  077B  3001               	movlw	1
  9130  077C                     u173_25:	
  9131  077C  36F1               	lsrf	___lwdiv@divisor+1,f
  9132  077D  0CF0               	rrf	___lwdiv@divisor,f
  9133  077E  0B89               	decfsz	9,f
  9134  077F  2F7C               	goto	u173_25
  9135  0780  3001               	movlw	1
  9136  0781  02F7               	subwf	___lwdiv@counter,f
  9137  0782  1D03               	btfss	3,2
  9138  0783  2F69               	goto	i1l2431
  9139  0784                     i1l2441:	
  9140  0784  0876               	movf	___lwdiv@quotient+1,w
  9141  0785  01F1               	clrf	?___lwdiv+1
  9142  0786  07F1               	addwf	?___lwdiv+1,f
  9143  0787  0875               	movf	___lwdiv@quotient,w
  9144  0788  01F0               	clrf	?___lwdiv
  9145  0789  07F0               	addwf	?___lwdiv,f
  9146  078A  0008               	return
  9147  078B                     __end_of___lwdiv:	
  9148                           
  9149                           	psect	text81
  9150  0BD3                     __ptext81:	
  9151 ;; *************** function _ds1307_get_year *****************
  9152 ;; Defined at:
  9153 ;;		line 270 in file "ds1307.c"
  9154 ;; Parameters:    Size  Location     Type
  9155 ;;		None
  9156 ;; Auto vars:     Size  Location     Type
  9157 ;;		None
  9158 ;; Return value:  Size  Location     Type
  9159 ;;                  1    wreg      unsigned char 
  9160 ;; Registers used:
  9161 ;;		wreg, status,2, status,0, pclath, cstack
  9162 ;; Tracked objects:
  9163 ;;		On entry : 0/0
  9164 ;;		On exit  : 0/0
  9165 ;;		Unchanged: 0/0
  9166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9167 ;;      Params:         0       0       0       0
  9168 ;;      Locals:         0       0       0       0
  9169 ;;      Temps:          0       0       0       0
  9170 ;;      Totals:         0       0       0       0
  9171 ;;Total ram usage:        0 bytes
  9172 ;; Hardware stack levels used:    1
  9173 ;; Hardware stack levels required when called:    2
  9174 ;; This function calls:
  9175 ;;		_bcd_to_dec
  9176 ;; This function is called by:
  9177 ;;		_update_clock
  9178 ;;		_ds1307_date_formatted
  9179 ;; This function uses a non-reentrant model
  9180 ;;
  9181                           
  9182                           
  9183                           ;psect for function _ds1307_get_year
  9184  0BD3                     _ds1307_get_year:	
  9185                           
  9186                           ;ds1307.c: 272: return bcd_to_dec(g_reg_data[DS1307_REG_YEAR]);
  9187                           
  9188                           ;incstack = 0
  9189                           ; Regs used in _ds1307_get_year: [wreg+status,2+status,0+pclath+cstack]
  9190  0BD3  0021               	movlb	1	; select bank1
  9191  0BD4  083D               	movf	(_g_reg_data^(0+128)+6),w
  9192  0BD5  318D  2584         	fcall	_bcd_to_dec
  9193  0BD7  0008               	return
  9194  0BD8                     __end_of_ds1307_get_year:	
  9195                           
  9196                           	psect	text82
  9197  0BCE                     __ptext82:	
  9198 ;; *************** function _ds1307_get_month *****************
  9199 ;; Defined at:
  9200 ;;		line 260 in file "ds1307.c"
  9201 ;; Parameters:    Size  Location     Type
  9202 ;;		None
  9203 ;; Auto vars:     Size  Location     Type
  9204 ;;		None
  9205 ;; Return value:  Size  Location     Type
  9206 ;;                  1    wreg      unsigned char 
  9207 ;; Registers used:
  9208 ;;		wreg, status,2, status,0, pclath, cstack
  9209 ;; Tracked objects:
  9210 ;;		On entry : 0/0
  9211 ;;		On exit  : 0/0
  9212 ;;		Unchanged: 0/0
  9213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9214 ;;      Params:         0       0       0       0
  9215 ;;      Locals:         0       0       0       0
  9216 ;;      Temps:          0       0       0       0
  9217 ;;      Totals:         0       0       0       0
  9218 ;;Total ram usage:        0 bytes
  9219 ;; Hardware stack levels used:    1
  9220 ;; Hardware stack levels required when called:    2
  9221 ;; This function calls:
  9222 ;;		_bcd_to_dec
  9223 ;; This function is called by:
  9224 ;;		_update_clock
  9225 ;;		_ds1307_date_formatted
  9226 ;; This function uses a non-reentrant model
  9227 ;;
  9228                           
  9229                           
  9230                           ;psect for function _ds1307_get_month
  9231  0BCE                     _ds1307_get_month:	
  9232                           
  9233                           ;ds1307.c: 261: return bcd_to_dec(g_reg_data[DS1307_REG_MONTH]);
  9234                           
  9235                           ;incstack = 0
  9236                           ; Regs used in _ds1307_get_month: [wreg+status,2+status,0+pclath+cstack]
  9237  0BCE  0021               	movlb	1	; select bank1
  9238  0BCF  083C               	movf	(_g_reg_data^(0+128)+5),w
  9239  0BD0  318D  2584         	fcall	_bcd_to_dec
  9240  0BD2  0008               	return
  9241  0BD3                     __end_of_ds1307_get_month:	
  9242                           
  9243                           	psect	text83
  9244  0C00                     __ptext83:	
  9245 ;; *************** function _ds1307_get_day_of_month *****************
  9246 ;; Defined at:
  9247 ;;		line 249 in file "ds1307.c"
  9248 ;; Parameters:    Size  Location     Type
  9249 ;;		None
  9250 ;; Auto vars:     Size  Location     Type
  9251 ;;		None
  9252 ;; Return value:  Size  Location     Type
  9253 ;;                  1    wreg      unsigned char 
  9254 ;; Registers used:
  9255 ;;		wreg, status,2, status,0, pclath, cstack
  9256 ;; Tracked objects:
  9257 ;;		On entry : 0/0
  9258 ;;		On exit  : 0/0
  9259 ;;		Unchanged: 0/0
  9260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9261 ;;      Params:         0       0       0       0
  9262 ;;      Locals:         0       0       0       0
  9263 ;;      Temps:          0       0       0       0
  9264 ;;      Totals:         0       0       0       0
  9265 ;;Total ram usage:        0 bytes
  9266 ;; Hardware stack levels used:    1
  9267 ;; Hardware stack levels required when called:    2
  9268 ;; This function calls:
  9269 ;;		_bcd_to_dec
  9270 ;; This function is called by:
  9271 ;;		_update_clock
  9272 ;;		_ds1307_date_formatted
  9273 ;; This function uses a non-reentrant model
  9274 ;;
  9275                           
  9276                           
  9277                           ;psect for function _ds1307_get_day_of_month
  9278  0C00                     _ds1307_get_day_of_month:	
  9279                           
  9280                           ;ds1307.c: 251: return bcd_to_dec(g_reg_data[DS1307_REG_DAY_OM] & 0x3F);
  9281                           
  9282                           ;incstack = 0
  9283                           ; Regs used in _ds1307_get_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  9284  0C00  0021               	movlb	1	; select bank1
  9285  0C01  083B               	movf	(_g_reg_data^(0+128)+4),w
  9286  0C02  393F               	andlw	63
  9287  0C03  318D  2584         	fcall	_bcd_to_dec
  9288  0C05  0008               	return
  9289  0C06                     __end_of_ds1307_get_day_of_month:	
  9290                           
  9291                           	psect	text84
  9292  0D84                     __ptext84:	
  9293 ;; *************** function _bcd_to_dec *****************
  9294 ;; Defined at:
  9295 ;;		line 73 in file "ds1307.c"
  9296 ;; Parameters:    Size  Location     Type
  9297 ;;  bcd             1    wreg     unsigned char 
  9298 ;; Auto vars:     Size  Location     Type
  9299 ;;  bcd             1    7[COMMON] unsigned char 
  9300 ;; Return value:  Size  Location     Type
  9301 ;;                  1    wreg      unsigned char 
  9302 ;; Registers used:
  9303 ;;		wreg, status,2, status,0, pclath, cstack
  9304 ;; Tracked objects:
  9305 ;;		On entry : 0/0
  9306 ;;		On exit  : 0/0
  9307 ;;		Unchanged: 0/0
  9308 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9309 ;;      Params:         0       0       0       0
  9310 ;;      Locals:         1       0       0       0
  9311 ;;      Temps:          3       0       0       0
  9312 ;;      Totals:         4       0       0       0
  9313 ;;Total ram usage:        4 bytes
  9314 ;; Hardware stack levels used:    1
  9315 ;; Hardware stack levels required when called:    1
  9316 ;; This function calls:
  9317 ;;		___bmul
  9318 ;; This function is called by:
  9319 ;;		_ds1307_get_seconds
  9320 ;;		_ds1307_get_minutes
  9321 ;;		_ds1307_get_hours
  9322 ;;		_ds1307_get_day_of_month
  9323 ;;		_ds1307_get_month
  9324 ;;		_ds1307_get_year
  9325 ;; This function uses a non-reentrant model
  9326 ;;
  9327                           
  9328                           
  9329                           ;psect for function _bcd_to_dec
  9330  0D84                     _bcd_to_dec:	
  9331                           
  9332                           ;incstack = 0
  9333                           ; Regs used in _bcd_to_dec: [wreg+status,2+status,0+pclath+cstack]
  9334                           ;bcd_to_dec@bcd stored from wreg
  9335  0D84  00F7               	movwf	bcd_to_dec@bcd
  9336                           
  9337                           ;ds1307.c: 77: return (((bcd >> 4)*10) + (bcd & 0x0F));
  9338  0D85  300F               	movlw	15
  9339  0D86  0577               	andwf	bcd_to_dec@bcd,w
  9340  0D87  00F4               	movwf	??_bcd_to_dec
  9341  0D88  300A               	movlw	10
  9342  0D89  00F5               	movwf	??_bcd_to_dec+1
  9343  0D8A  0875               	movf	??_bcd_to_dec+1,w
  9344  0D8B  00F0               	movwf	___bmul@multiplicand
  9345  0D8C  0877               	movf	bcd_to_dec@bcd,w
  9346  0D8D  00F6               	movwf	??_bcd_to_dec+2
  9347  0D8E  3004               	movlw	4
  9348  0D8F                     u135_25:	
  9349  0D8F  36F6               	lsrf	??_bcd_to_dec+2,f
  9350  0D90  0B89               	decfsz	9,f
  9351  0D91  2D8F               	goto	u135_25
  9352  0D92  0876               	movf	??_bcd_to_dec+2,w
  9353  0D93  318D  254F         	fcall	___bmul
  9354  0D95  0774               	addwf	??_bcd_to_dec,w
  9355  0D96  0008               	return
  9356  0D97                     __end_of_bcd_to_dec:	
  9357                           
  9358                           	psect	text85
  9359  0D4F                     __ptext85:	
  9360 ;; *************** function ___bmul *****************
  9361 ;; Defined at:
  9362 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\Umul8.c"
  9363 ;; Parameters:    Size  Location     Type
  9364 ;;  multiplier      1    wreg     unsigned char 
  9365 ;;  multiplicand    1    0[COMMON] unsigned char 
  9366 ;; Auto vars:     Size  Location     Type
  9367 ;;  multiplier      1    3[COMMON] unsigned char 
  9368 ;;  product         1    2[COMMON] unsigned char 
  9369 ;; Return value:  Size  Location     Type
  9370 ;;                  1    wreg      unsigned char 
  9371 ;; Registers used:
  9372 ;;		wreg, status,2, status,0
  9373 ;; Tracked objects:
  9374 ;;		On entry : 0/0
  9375 ;;		On exit  : 0/0
  9376 ;;		Unchanged: 0/0
  9377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  9378 ;;      Params:         1       0       0       0
  9379 ;;      Locals:         2       0       0       0
  9380 ;;      Temps:          1       0       0       0
  9381 ;;      Totals:         4       0       0       0
  9382 ;;Total ram usage:        4 bytes
  9383 ;; Hardware stack levels used:    1
  9384 ;; This function calls:
  9385 ;;		Nothing
  9386 ;; This function is called by:
  9387 ;;		_bcd_to_dec
  9388 ;;		_sprintf
  9389 ;; This function uses a non-reentrant model
  9390 ;;
  9391                           
  9392                           
  9393                           ;psect for function ___bmul
  9394  0D4F                     ___bmul:	
  9395                           
  9396                           ;incstack = 0
  9397                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  9398                           ;___bmul@multiplier stored from wreg
  9399  0D4F  00F3               	movwf	___bmul@multiplier
  9400  0D50  01F2               	clrf	___bmul@product
  9401  0D51                     i1l2145:	
  9402  0D51  1C73               	btfss	___bmul@multiplier,0
  9403  0D52  2D57               	goto	i1l2149
  9404  0D53  0870               	movf	___bmul@multiplicand,w
  9405  0D54  00F1               	movwf	??___bmul
  9406  0D55  0871               	movf	??___bmul,w
  9407  0D56  07F2               	addwf	___bmul@product,f
  9408  0D57                     i1l2149:	
  9409  0D57  1003               	clrc
  9410  0D58  0DF0               	rlf	___bmul@multiplicand,f
  9411  0D59  1003               	clrc
  9412  0D5A  0CF3               	rrf	___bmul@multiplier,f
  9413  0D5B  08F3               	movf	___bmul@multiplier,f
  9414  0D5C  1D03               	skipz
  9415  0D5D  2D51               	goto	i1l2145
  9416  0D5E  0872               	movf	___bmul@product,w
  9417  0D5F  0008               	return
  9418  0D60                     __end_of___bmul:	
  9419  007E                     btemp	set	126	;btemp
  9420  007E                     pic14e$flags	set	126
  9421  007E                     wtemp	set	126
  9422  007E                     wtemp0	set	126
  9423  0080                     wtemp1	set	128
  9424  0082                     wtemp2	set	130
  9425  0084                     wtemp3	set	132
  9426  0086                     wtemp4	set	134
  9427  0088                     wtemp5	set	136
  9428  007F                     wtemp6	set	127
  9429  007E                     ttemp	set	126
  9430  007E                     ttemp0	set	126
  9431  0081                     ttemp1	set	129
  9432  0084                     ttemp2	set	132
  9433  0087                     ttemp3	set	135
  9434  007F                     ttemp4	set	127
  9435  007E                     ltemp	set	126
  9436  007E                     ltemp0	set	126
  9437  0082                     ltemp1	set	130
  9438  0086                     ltemp2	set	134
  9439  0080                     ltemp3	set	128


Data Sizes:
    Strings     63
    Constant    10
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     53      58
    BANK1            80     23      42
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), tmr_isr@date(BANK0[10]), tmr_isr@time(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S866$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), STR_2(CODE[7]), STR_1(CODE[7]), tmr_isr@date(BANK0[10]), 
		 -> tmr_isr@time(BANK0[10]), 

    ds1307_date_formatted@p_str_date	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@date(BANK0[10]), 

    ds1307_time_formatted@p_str_time	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@time(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr_isr in COMMON

    _tmr_isr->_lcd_goto
    _tmr_isr->_lcd_write
    i1_lcd_backlight->i1_mcp23017_ioa_send_byte
    _update_clock->_ds1307_switch_to_12hr
    _update_clock->_ds1307_switch_to_24hr
    i1_ds1307_get_clock->i1_i2c_send_address
    _ds1307_switch_to_24hr->_ds1307_is_pm
    _ds1307_switch_to_24hr->_ds1307_set_hours
    _ds1307_switch_to_12hr->_ds1307_set_hours
    _ds1307_set_hours->_dec_to_bcd
    _ds1307_set_year->_dec_to_bcd
    _ds1307_set_seconds->_dec_to_bcd
    _ds1307_set_month->_dec_to_bcd
    _ds1307_set_minutes->_dec_to_bcd
    _ds1307_set_day_of_month->_dec_to_bcd
    _dec_to_bcd->___awdiv
    _ds1307_set_clock->_ds1307_start_clock
    _ds1307_set_clock->_ds1307_stop_clock
    _ds1307_stop_clock->_ds1307_read_addr
    _ds1307_start_clock->_ds1307_read_addr
    _ds1307_write_addr->i1_i2c_send_address
    _ds1307_read_addr->i1_i2c_send_address
    _lcd_write->_lcd_data
    _lcd_data->i1__send_byte
    _lcd_goto->i1_lcd_command
    i1_lcd_command->i1__send_byte
    i1__send_byte->i1__send_nibble
    i1__send_nibble->i1_mcp23017_ioa_send_byte
    i1_mcp23017_ioa_send_byte->i1_mcp23017_write_reg
    i1_mcp23017_write_reg->i1_i2c_send_address
    _keypad_scan->_mcp23017_read_reg
    _mcp23017_read_reg->i1_i2c_send_address
    _ds1307_is_pm->_ds1307_get_hours
    _ds1307_get_hours->_bcd_to_dec
    _ds1307_get_seconds->_bcd_to_dec
    _ds1307_get_minutes->_bcd_to_dec
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ds1307_get_year->_bcd_to_dec
    _ds1307_get_month->_bcd_to_dec
    _ds1307_get_day_of_month->_bcd_to_dec
    _bcd_to_dec->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr_isr in BANK0

    _tmr_isr->_ds1307_date_formatted
    _tmr_isr->_ds1307_time_formatted
    _update_clock->_ds1307_switch_to_12hr
    _update_clock->_ds1307_switch_to_24hr
    _ds1307_set_hours->_dec_to_bcd
    _ds1307_set_year->_dec_to_bcd
    _ds1307_set_seconds->_dec_to_bcd
    _ds1307_set_month->_dec_to_bcd
    _ds1307_set_minutes->_dec_to_bcd
    _ds1307_set_day_of_month->_dec_to_bcd
    _ds1307_time_formatted->_sprintf
    _ds1307_date_formatted->_sprintf

Critical Paths under _main in BANK1

    _main->_i2c_init
    _mcp23017_init->_mcp23017_set_slave_addr
    _lcd_initialize->_lcd_flags_set
    _lcd_flags_set->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__send_nibble
    _lcd_backlight->_mcp23017_ioa_send_byte
    __set_4bit_interface->__send_nibble
    __send_nibble->_mcp23017_ioa_send_byte
    _mcp23017_ioa_send_byte->_mcp23017_write_reg
    _keypad_init->_mcp23017_write_reg
    _mcp23017_write_reg->_i2c_send_address
    _init->_write_t1
    _i2c_init->___lldiv
    _ds1307_init->_ds1307_get_clock
    _ds1307_get_clock->_i2c_send_address

Critical Paths under _tmr_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0   13531
                                             22 BANK1      1     1      0
                        _ds1307_init
                           _i2c_init
                               _init
                        _keypad_init
                     _lcd_initialize
                      _mcp23017_init
 ---------------------------------------------------------------------------------
 (1) _mcp23017_init                                        1     1      0      44
                                              2 BANK1      1     1      0
            _mcp23017_set_slave_addr
 ---------------------------------------------------------------------------------
 (2) _mcp23017_set_slave_addr                              2     2      0      22
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       3     3      0   10742
                                             18 BANK1      3     3      0
                __set_4bit_interface
                      _lcd_backlight
                        _lcd_command
                      _lcd_flags_set
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _lcd_flags_set                                        5     3      2    3510
                                             13 BANK1      5     3      2
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          2     2      0    2432
                                             11 BANK1      2     2      0
                         __send_byte
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) __send_byte                                           2     2      0    1238
                                              9 BANK1      2     2      0
                       __send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        1     1      0    1194
                                              6 BANK1      1     1      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (2) __set_4bit_interface                                  1     1      0    2366
                                              9 BANK1      1     1      0
                       __send_nibble
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (5) __send_nibble                                         3     3      0    1194
                                              6 BANK1      3     3      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) _mcp23017_ioa_send_byte                               1     1      0    1172
                                              5 BANK1      1     1      0
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          1     1      0    1172
                                              5 BANK1      1     1      0
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _mcp23017_write_reg                                   2     1      1    1172
                                              3 BANK1      2     1      1
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _init                                                 5     2      3     318
                                              2 BANK1      5     2      3
                           _write_t1
 ---------------------------------------------------------------------------------
 (2) _write_t1                                             2     0      2     146
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             8     4      4     398
                                             14 BANK1      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     290
                                              0 BANK1     14     6      8
 ---------------------------------------------------------------------------------
 (1) _ds1307_init                                          0     0      0     857
                   _ds1307_get_clock
 ---------------------------------------------------------------------------------
 (2) _ds1307_get_clock                                     2     2      0     857
                                              3 BANK1      2     2      0
                      _i2c_read_data
                        _i2c_restart
                       _i2c_send_ack
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_data                                        1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_address                                     3     2      1     722
                                              0 BANK1      3     2      1
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_ack                                         1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read_data                                        2     2      0      23
                                              0 BANK1      2     2      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tmr_isr                                            25    25      0   28689
                                             28 BANK0     25    25      0
              _ds1307_date_formatted
              _ds1307_time_formatted
                    _keypad_read_key
                           _lcd_goto
                          _lcd_write
                            _sprintf
                       _update_clock
                 i1_ds1307_get_clock
                    i1_lcd_backlight
                         i1_write_t1
 ---------------------------------------------------------------------------------
 (11) i1_write_t1                                          2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) i1_lcd_backlight                                     1     1      0     394
                                              6 COMMON     1     1      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _update_clock                                        6     6      0   16822
                                              9 BANK0      6     6      0
                         _adjust_val
            _ds1307_get_day_of_month
                   _ds1307_get_hours
                 _ds1307_get_minutes
                   _ds1307_get_month
                 _ds1307_get_seconds
                    _ds1307_get_year
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_clock
            _ds1307_set_day_of_month
                   _ds1307_set_hours
                 _ds1307_set_minutes
                   _ds1307_set_month
                   _ds1307_set_pm_am
                 _ds1307_set_seconds
                    _ds1307_set_year
                  _ds1307_stop_clock
              _ds1307_switch_to_12hr
              _ds1307_switch_to_24hr
                 i1_ds1307_get_clock
 ---------------------------------------------------------------------------------
 (11) i1_ds1307_get_clock                                  2     2      0     415
                                              3 COMMON     2     2      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_24hr                               3     3      0    1764
                                             13 COMMON     1     1      0
                                              7 BANK0      2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_12hr                               3     3      0    1475
                                             13 COMMON     1     1      0
                                              7 BANK0      2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
                   _ds1307_set_pm_am
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_pm_am                                    2     2      0      22
                                              0 COMMON     2     2      0
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hr_mode                                  2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hours                                    3     3      0    1006
                                             10 COMMON     3     3      0
                         _dec_to_bcd
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_year                                     2     2      0     940
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_seconds                                  3     3      0     940
                                             10 COMMON     3     3      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_month                                    2     2      0     962
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_minutes                                  2     2      0     940
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_day_of_month                             2     2      0     962
                                             10 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (14) _dec_to_bcd                                          8     8      0     896
                                              9 COMMON     1     1      0
                                              0 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (15) ___awmod                                             7     3      4     424
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (15) ___awdiv                                             9     5      4     428
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_clock                                    2     2      0    2404
                                              8 COMMON     2     2      0
                 _ds1307_start_clock
                  _ds1307_stop_clock
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_stop_clock                                   2     2      0    1017
                                              6 COMMON     2     2      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_start_clock                                  2     2      0    1017
                                              6 COMMON     2     2      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_write_addr                                   2     1      1     602
                                              3 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (13) _ds1307_read_addr                                    3     3      0     392
                                              3 COMMON     3     3      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c_send_ack                                      1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) _adjust_val                                          5     2      3    1376
                                              0 COMMON     5     2      3
 ---------------------------------------------------------------------------------
 (11) _lcd_write                                           5     3      2    1242
                                             13 COMMON     1     1      0
                                              0 BANK0      4     2      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (12) _lcd_data                                            2     2      0     832
                                             11 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _lcd_goto                                            4     3      1    1224
                                             13 COMMON     1     0      1
                                              0 BANK0      3     3      0
                      i1_lcd_command
 ---------------------------------------------------------------------------------
 (12) i1_lcd_command                                       2     2      0     832
                                             11 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (13) i1__send_byte                                        2     2      0     438
                                              9 COMMON     2     2      0
                     i1__send_nibble
 ---------------------------------------------------------------------------------
 (14) i1__send_nibble                                      3     3      0     394
                                              6 COMMON     3     3      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (12) i1_mcp23017_ioa_send_byte                            1     1      0     372
                                              5 COMMON     1     1      0
               i1_mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (13) i1_mcp23017_write_reg                                2     1      1     372
                                              3 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (11) _keypad_read_key                                     2     2      0     505
                                              6 COMMON     2     2      0
                        _keypad_scan
 ---------------------------------------------------------------------------------
 (12) _keypad_scan                                         0     0      0     370
                  _mcp23017_read_reg
 ---------------------------------------------------------------------------------
 (13) _mcp23017_read_reg                                   3     3      0     370
                                              3 COMMON     3     3      0
                    i1_i2c_read_data
                      i1_i2c_restart
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (14) i1_i2c_stop                                          0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_start                                         0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_data                                     1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_address                                  3     2      1     280
                                              0 COMMON     3     2      1
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_restart                                       0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_read_data                                     2     2      0      23
                                              0 COMMON     2     2      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (15) i1_i2c_wait                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ds1307_time_formatted                               7     7      0    3185
                                             21 BANK0      7     7      0
                   _ds1307_get_hours
                 _ds1307_get_minutes
                 _ds1307_get_seconds
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) _ds1307_is_pm                                        3     3      0     312
                                             10 COMMON     3     3      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_get_hours                                    2     2      0     288
                                              8 COMMON     2     2      0
                         _bcd_to_dec
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_is_12hr_mode                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_seconds                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_minutes                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (11) _ds1307_date_formatted                               7     7      0    2761
                                             21 BANK0      7     7      0
            _ds1307_get_day_of_month
                   _ds1307_get_month
                    _ds1307_get_year
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            21    13      8    1909
                                              0 BANK0     21    13      8
                             ___bmul
                            ___lwdiv
                            ___lwmod
            _ds1307_get_day_of_month (ARG)
                   _ds1307_get_hours (ARG)
                 _ds1307_get_minutes (ARG)
                   _ds1307_get_month (ARG)
                 _ds1307_get_seconds (ARG)
                    _ds1307_get_year (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_year                                     0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_month                                    0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_day_of_month                             0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (15) _bcd_to_dec                                          4     4      0     264
                                              4 COMMON     4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (16) ___bmul                                              4     3      1     220
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ds1307_init
     _ds1307_get_clock
       _i2c_read_data
         _i2c_wait
       _i2c_restart
         _i2c_wait
       _i2c_send_ack
         _i2c_wait
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _i2c_init
     ___lldiv
   _init
     _write_t1
   _keypad_init
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _lcd_initialize
     __set_4bit_interface
       __send_nibble
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_backlight
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_command
       __send_byte
         __send_nibble
           _mcp23017_ioa_send_byte
             _mcp23017_write_reg
               _i2c_send_address
                 _i2c_wait
               _i2c_send_data
                 _i2c_wait
               _i2c_start
                 _i2c_wait
               _i2c_stop
                 _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_flags_set
       _lcd_command
         __send_byte
           __send_nibble
             _mcp23017_ioa_send_byte
               _mcp23017_write_reg
                 _i2c_send_address
                   _i2c_wait
                 _i2c_send_data
                   _i2c_wait
                 _i2c_start
                   _i2c_wait
                 _i2c_stop
                   _i2c_wait
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _mcp23017_init
     _mcp23017_set_slave_addr

 _tmr_isr (ROOT)
   _ds1307_date_formatted
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _ds1307_time_formatted
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _keypad_read_key
     _keypad_scan
       _mcp23017_read_reg
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   _lcd_goto
     i1_lcd_command
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _lcd_write
     _lcd_data
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ds1307_get_day_of_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours (ARG)
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_year (ARG)
       _bcd_to_dec
         ___bmul
     _isdigit (ARG)
   _update_clock
     _adjust_val
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _ds1307_set_clock
       _ds1307_start_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       _ds1307_stop_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
     _ds1307_set_day_of_month
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_hours
       _dec_to_bcd
         ___awdiv
         ___awmod
       _ds1307_is_12hr_mode
     _ds1307_set_minutes
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_month
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_pm_am
       _ds1307_is_12hr_mode
     _ds1307_set_seconds
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_set_year
       _dec_to_bcd
         ___awdiv
         ___awmod
     _ds1307_stop_clock
       _ds1307_read_addr
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_ack
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
       _ds1307_write_addr
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
     _ds1307_switch_to_12hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___awdiv
           ___awmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
       _ds1307_set_pm_am
         _ds1307_is_12hr_mode
     _ds1307_switch_to_24hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_is_pm
         _ds1307_get_hours
           _bcd_to_dec
             ___bmul
           _ds1307_is_12hr_mode
         _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___awdiv
           ___awmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
     i1_ds1307_get_clock
       i1_i2c_read_data
         i1_i2c_wait
       i1_i2c_restart
         i1_i2c_wait
       i1_i2c_send_ack
         i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
   i1_ds1307_get_clock
     i1_i2c_read_data
       i1_i2c_wait
     i1_i2c_restart
       i1_i2c_wait
     i1_i2c_send_ack
       i1_i2c_wait
     i1_i2c_send_address
       i1_i2c_wait
     i1_i2c_send_data
       i1_i2c_wait
     i1_i2c_start
       i1_i2c_wait
     i1_i2c_stop
       i1_i2c_wait
   i1_lcd_backlight
     i1_mcp23017_ioa_send_byte
       i1_mcp23017_write_reg
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   i1_write_t1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      72       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     35      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     17      2A       8       52.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      72      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Sat Aug 16 14:04:45 2014

  __size_of_mcp23017_ioa_send_byte 0009                       _update_clock 00E6  
 __size_of_ds1307_set_day_of_month 0010                       lcd_data@data 007C  
                   ___bmul@product 0072                        __CFG_CP$OFF 0000  
                      _SSPSTATbits 0214                                 l21 0517  
                  i1_lcd_backlight 0C46                       ___awdiv@sign 0076  
                              l500 0695                                l174 0FA6  
                     __CFG_CPD$OFF 0000                       ___awmod@sign 0076  
                      lcd_goto@col 007D                       __CFG_BORV$LO 0000  
                              wreg 0009                        lcd_goto@row 0021  
                ??_ds1307_get_year 0078                       __CFG_LVP$OFF 0000  
                             l2089 0C26                               l2517 0709  
                             l2509 06F1                               l2731 069C  
                             l2733 069E                               l2725 0693  
                             l2743 06C3                               l2727 0698  
                             l2745 06CB                               l2729 069A  
                             l2737 06A3                               l2771 0473  
                             l2739 06B7                               l2843 0353  
                             l2757 043A                               l2837 0346  
                             l2767 0468                               l2759 0448  
                             STR_1 0638                               STR_2 063F  
                             STR_3 0646                               STR_4 0629  
                             STR_5 060A                               STR_6 061A  
                             u2215 043D                               u2305 0512  
                             u2235 0449                               u2245 045D  
                             u2255 0469                               u2295 04E5  
                             u1575 0D77                               u2607 07FD  
                             u2617 0D4C                               u2627 0FEB  
                             u2637 0FFA                               u2577 032F  
                             u2587 03A8                               u2597 03B6  
                     __CFG_WRT$OFF 0000                      __CFG_FCMEN$ON 0000  
         ?_mcp23017_set_slave_addr 0070           __size_of_keypad_read_key 0022  
                    _i2c_read_data 0CD1                  ?_i2c_send_address 00A0  
                             _g_bl 0055                    ??_lcd_backlight 00A6  
                             _main 0F7C                               _init 07BD  
            __size_ofi1__send_byte 0010                               fsr0h 0005  
                             fsr1h 0007                               fsr0l 0004  
                             indf0 0000                               indf1 0001  
                             fsr1l 0006                               btemp 007E  
                     lcd_goto@addr 0022                      __CFG_BOREN$ON 0000  
                             ltemp 007E                 ??_i2c_send_address 00A1  
                             start 00D4                               ttemp 007E  
                             wtemp 007E                      __CFG_IESO$OFF 0000  
             i2c_send_address@mode 00A0         ??i1_mcp23017_ioa_send_byte 0075  
                ??_ds1307_set_year 007A                  ?_ds1307_get_clock 0070  
                    ?_i2c_send_ack 0070                  ___bmul@multiplier 0073  
                ?_ds1307_get_hours 0070                      ??_i2c_restart 00A0  
                ?_ds1307_get_month 0070                      _i2c_send_data 0C4F  
               ??_ds1307_get_clock 00A3                 ??_ds1307_get_hours 0078  
               ??_ds1307_get_month 0078         __size_of_mcp23017_read_reg 0022  
     __size_of_ds1307_is_12hr_mode 0005                         i1_write_t1 0C2D  
                            ?_main 0070                              ?_init 00A2  
                  __end_of___awdiv 04CF                      __CFG_WDTE$OFF 0000  
                  __end_of___awmod 0690                    __end_of___lldiv 047C  
                  ___awdiv@divisor 0070                    __end_of___lwdiv 078B  
                  ??_lcd_flags_set 00AF                              i1l404 052D  
                  __end_of___lwmod 05D7                              i1l197 0118  
                ?_ds1307_read_addr 0070                    ___awdiv@counter 0075  
                            _TMR1H 0017                update_clock@up_down 002D  
                            _TMR1L 0016                      __CFG_PWRTE$ON 0000  
               ??_ds1307_read_addr 0073             _mcp23017_ioa_send_byte 0C58  
    __size_ofi1_mcp23017_write_reg 0015                       i1__send_byte 0CEF  
             __end_of__send_nibble 1000                __set_4bit_interface 0D3F  
                  __end_of_dpowers 060A                       ?_keypad_init 0070  
                     ?_keypad_scan 0070                    __end_of_isdigit 0CC3  
                      ?i1_i2c_wait 0070                        ?i1_i2c_stop 0070  
          ??_ds1307_switch_to_12hr 007D            ??_ds1307_switch_to_24hr 007D  
      __size_ofi1_i2c_send_address 000D                     ?_i2c_read_data 0070  
                            ltemp0 007E                              ltemp1 0082  
                            ltemp2 0086                              ltemp3 0080  
                ?_ds1307_set_clock 0070                  ?_ds1307_set_pm_am 0070  
                ?_ds1307_set_hours 0070                    __end_of_tmr_isr 00D4  
                            ttemp0 007E                              ttemp1 0081  
                            ttemp2 0084                              ttemp3 0087  
                            ttemp4 007F                  ?_ds1307_set_month 0070  
                            status 0003                              wtemp0 007E  
                            wtemp1 0080                              wtemp2 0082  
                            wtemp3 0084                              wtemp4 0086  
                            wtemp5 0088                              wtemp6 007F  
                  __end_of_sprintf 032A                 ??_ds1307_set_clock 0078  
               ??_ds1307_set_pm_am 0070                 ??_ds1307_set_hours 007A  
               ??_ds1307_set_month 007A        __size_ofi1_ds1307_get_clock 003E  
                    ??_ds1307_init 00A5                     ??_i2c_send_ack 00A0  
                     lcd_write@str 0020            __end_ofi1_lcd_backlight 0C4F  
                  update_clock@val 002E            mcp23017_write_reg@value 00A3  
                   ?_i2c_send_data 0070                     __CFG_MCLRE$OFF 0000  
              ds1307_set_year@year 007B                    __initialization 00D6  
             ?__set_4bit_interface 0070                       __end_of_main 0FA7  
                     __end_of_init 07EE                    _g_slave_addr_7b 00C8  
                 __end_of_i2c_init 051A                   __end_of_i2c_wait 0C2D  
                 __end_of_i2c_stop 0C00                    i1write_t1@value 0070  
              __end_of_i2c_restart 0BF6                             ??_main 00B6  
                           ??_init 00A5          i1mcp23017_write_reg@value 0073  
               _g_slave_address_7b 00C9            mcp23017_init@address_3b 00A2  
       __end_of_ds1307_set_hr_mode 0DAA                     __CFG_PLLEN$OFF 0000  
           __size_ofi1_lcd_command 0010         __end_of_ds1307_set_minutes 0C9B  
       __end_of_ds1307_set_seconds 0D72                   ___awdiv@dividend 0072  
                           i1l2115 0C18                             i1l2211 04A5  
                           i1l3005 0F2B                             i1l2221 04C0  
                           i1l2145 0D51                             i1l2225 04C8  
                           i1l2217 04B7                             i1l2209 0499  
                           i1l2241 065A                             i1l3041 001E  
                           i1l2251 066C                             i1l3043 0023  
                           i1l2149 0D57                             i1l2237 0653  
                           i1l3053 0038                             i1l3061 005A  
                           i1l2431 0769                             i1l2415 0CC1  
                           i1l2263 0689                             i1l2255 0678  
                           i1l3055 003D                             i1l3047 002D  
                           i1l3039 0019                             i1l2441 0784  
                           i1l2193 0486                             i1l2249 0660  
                           i1l3049 0030                             i1l2363 0E51  
                           i1l2259 0681                             i1l3059 0047  
                           i1l2437 077B                             i1l2429 075D  
                           i1l2453 05AF                             i1l2293 0DB4  
                           i1l2455 05BB                             i1l2463 05D0  
                           i1l2199 0491                             i1l2375 0E3D  
                           i1l3095 00CF                             i1l2625 0575  
                           i1l2385 0FC2                             i1l2459 05C7  
                           i1l2651 0278                             i1l2635 0243  
                           i1l2491 0ED3                             i1l2619 0565  
                           i1l2485 0EC7                             i1l2397 0DA3  
                           i1l2573 07A8                             i1l2901 0122  
                           i1l2655 027D                             i1l2647 0251  
                           i1l2495 0EDB                             i1l2591 052F  
                           i1l2911 0136                             i1l2681 02CD  
                           i1l2673 02AE                             i1l2657 0292  
                           i1l2649 0275                             i1l2497 0EDD  
                           i1l2921 017C                             i1l2913 0138  
                           i1l2667 02A8                             i1l2595 0534  
                           i1l2579 07B4                             i1l2923 0199  
                           i1l2907 012E                             i1l2685 02DA  
                           i1l2933 01FC                             i1l2925 01B7  
                           i1l2917 0142                             i1l2695 02E6  
                           i1l2599 053D                             i1l2791 0747  
                           i1l2783 0731                             i1l2927 01D5  
                           i1l2919 015F                             i1l2697 0221  
                           i1l2929 01F2                             i1l2937 0200  
                           i1l2699 0325                             i1l2971 03F3  
                           i1l2955 0EB6                             i1l2947 0EA8  
                           i1l2939 0218                             i1l2883 00EF  
                           i1l2957 0EBA                             i1l2981 0F06  
                           i1l2975 0402                             i1l2959 0EBB  
                           i1l2983 0F07                             i1l2895 0110  
                           i1l2985 0F09                             i1l2993 0F12  
                           i1l2987 0F0B                             i1l2995 0F20  
                           u213_25 02C3                             i1l2989 0F10  
                           u141_25 04A6                             u142_25 04B0  
                           u135_25 0D8F                             u143_25 04B8  
                           u151_25 0672                             u152_25 0679  
                           u171_25 076A                             u139_25 049C  
                           u172_25 0774                             u156_25 05A2  
                           u173_25 077C                             u181_25 0CF3  
                           u149_25 0663                             u176_25 05B2  
                           u264_27 0D1C            ??_ds1307_time_formatted 0035  
                           u169_25 0760                             u265_27 0D0C  
                           u178_25 05C1                             u266_27 0F68  
                           u179_25 05C8                             u267_27 0F76  
                           _SSPADD 0212                             _SSPBUF 0211  
            ds1307_get_hours@hours 0079                 __size_of_i2c_start 0005  
                    ?_ds1307_is_pm 0070                      dec_to_bcd@dec 0079  
                  i1_i2c_read_data 0CC3            _ds1307_set_day_of_month 0D1F  
                 __end_of_lcd_data 0D1F              ??__set_4bit_interface 00A9  
                ??_keypad_read_key 0076                   __end_of_lcd_goto 0F2A  
             __size_of_lcd_command 0012                             ___bmul 0D4F  
                        ??___awdiv 0074                     __CFG_STVREN$ON 0000  
                        ??___awmod 0074                          ??___lldiv 00A8  
                        ??___lwdiv 0074                          ??___lwmod 007C  
         ?_ds1307_get_day_of_month 0070                        ?i1_write_t1 0070  
                i1i2c_send_ack@ack 0070                __end_of_ds1307_init 0BCA  
              __size_ofi1_i2c_wait 0007                __size_ofi1_i2c_stop 0005  
                 ___awdiv@quotient 0077                    ___awmod@divisor 0070  
                  i1_i2c_send_data 0C1F            __size_ofi1__send_nibble 002B  
                  ___awmod@counter 0075                       ?i1_i2c_start 0070  
      __size_of_mcp23017_write_reg 0018                   _g_last_valid_key 0058  
                        ??_isdigit 0070                          ??_tmr_isr 003C  
                 ??_lcd_initialize 00B2                    ??_i2c_read_data 00A0  
                        ??_sprintf 0028                i1__send_nibble@data 0078  
                 __end_of_write_t1 0C81         __end_of_ds1307_start_clock 0DFD  
          __end_of__initialization 00E2         ds1307_switch_to_12hr@pm_am 0027  
               _ds1307_get_minutes 0BD8                 _ds1307_get_seconds 0C06  
                   ??_ds1307_is_pm 007A                    ??_i2c_send_data 00A0  
                   init@load_value 00A2                      i1_lcd_command 0CFF  
                 ?i1_lcd_backlight 0070                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070             __size_of_mcp23017_init 0006  
                      _i2c_restart 0BF1                ?_ds1307_get_minutes 0070  
              ?_ds1307_get_seconds 0070         ds1307_switch_to_24hr@pm_am 0027  
                  _ds1307_get_year 0BD3                 lcd_flags_set@flags 00AD  
                       _bcd_to_dec 0D84                 lcd_flags_set@index 00B1  
               lcd_flags_set@value 00AE                  __end_of_i2c_start 0BFB  
                _ds1307_stop_clock 0DFD              __size_of__send_nibble 002D  
               ?_ds1307_stop_clock 0070               __end_of_i2c_send_ack 0CB5  
             ??_ds1307_get_minutes 0078               ??_ds1307_get_seconds 0078  
                i1__send_byte@data 007A                 __size_of_lcd_write 0027  
                _ds1307_write_addr 0DBE                    _ds1307_set_year 0C9B  
                       _dec_to_bcd 057B                _ds1307_is_12hr_mode 0BDD  
                       __pbssBANK0 0055                         __pbssBANK1 00B7  
              ??_ds1307_stop_clock 0076                 ?_ds1307_write_addr 0073  
             __size_of_keypad_init 001B            __end_ofi1_i2c_read_data 0CD1  
             __size_of_keypad_scan 0004               i1lcd_command@command 007C  
                        ?_i2c_init 00AE                __size_ofi1_write_t1 0008  
                        ?_i2c_wait 0070                          ?_i2c_stop 0070  
                       _adjust_val 0EBD          ??_ds1307_set_day_of_month 007A  
                   ?i1_lcd_command 0070              _ds1307_date_formatted 05D7  
                       _g_counter1 0057    __end_of_ds1307_get_day_of_month 0C06  
              ??_ds1307_write_addr 0074                        _ds1307_init 0BC7  
                       __pmaintext 0F7C            __end_ofi1_i2c_send_data 0C26  
                       __send_byte 0D72               ds1307_read_addr@addr 0074  
                       _g_reg_data 00B7              __end_ofi1_i2c_restart 0BE7  
                          ?___bmul 0070                         _g_reg_ctrl 00C7  
                     __send_nibble 0FD3                         __pintentry 0004  
             ?_ds1307_is_12hr_mode 0070   __size_of_mcp23017_set_slave_addr 0008  
        __size_of_i2c_send_address 000F          __end_of_ds1307_stop_clock 0E13  
          ?_mcp23017_ioa_send_byte 0070                            _LCDPort 00C6  
        __size_of_ds1307_get_clock 0043          __size_of_ds1307_get_hours 0014  
        __size_of_ds1307_get_month 0005          __end_of_ds1307_write_addr 0DD2  
                    _mcp23017_init 0C0C                            _SSPCON1 0215  
                          _SSPCON2 0216                          ?_lcd_data 0070  
                     ??i1_i2c_wait 0070                          ?_lcd_goto 007D  
                     ??i1_i2c_stop 0070                         ??_i2c_init 00B2  
                       ??_i2c_wait 00A0     __size_of_ds1307_switch_to_12hr 0031  
                       ??_i2c_stop 00A0     __size_of_ds1307_switch_to_24hr 0032  
    __end_of_ds1307_switch_to_12hr 054B      __end_of_ds1307_switch_to_24hr 07BD  
        __size_of_ds1307_read_addr 0024              __end_of_lcd_backlight 0C6A  
     __end_ofi1_mcp23017_write_reg 0DE7            __end_of_ds1307_get_year 0BD8  
            ds1307_stop_clock@tsec 0077                    __size_of___bmul 0011  
                          ___awdiv 047C                            ___awmod 0649  
            ??_ds1307_is_12hr_mode 0070                  __end_of_lcd_write 0F51  
                          ___lldiv 0429                            ___lwdiv 0755  
                          ___lwmod 05A9            __size_ofi1_i2c_send_ack 000B  
         lcd_flags_set@instruction 00B0          __size_of_ds1307_set_clock 0030  
                   i1__send_nibble 0F51          __size_of_ds1307_set_pm_am 0019  
        __size_of_ds1307_set_hours 002C     __end_of_mcp23017_ioa_send_byte 0C61  
        __size_of_ds1307_set_month 0010                 __end_ofi1_i2c_wait 0C1F  
               __end_ofi1_i2c_stop 0BF1                        ?_bcd_to_dec 0070  
                          __ptext1 0C0C                            __ptext2 0C35  
                          __ptext3 032A                            __ptext4 0690  
                          __ptext5 07EE                            __ptext6 0D72  
                          __ptext7 0C61                            __ptext8 0D3F  
                          __ptext9 0FD3                          ?_write_t1 00A0  
            ds1307_set_pm_am@pm_am 0071                          _T1CONbits 0018  
          __end_of_ds1307_set_year 0CA8                            _dpowers 0600  
             __end_of_ds1307_is_pm 0E5E                            _isdigit 0CB5  
__size_ofi1_mcp23017_ioa_send_byte 0009               __size_ofi1_i2c_start 0005  
                 ___awmod@dividend 0072          ?i1_mcp23017_ioa_send_byte 0070  
            __end_of_lcd_flags_set 06D4                     ?_mcp23017_init 0070  
            ds1307_set_hours@hours 007C         __end_ofi1_i2c_send_address 0C8E  
                          _tmr_isr 0004                         ??_lcd_data 007B  
                          _sprintf 021B                            clrloop0 0C13  
                      ?_dec_to_bcd 0070                         ??_lcd_goto 0020  
             end_of_initialization 00E2                    _keypad_read_key 0E9B  
                 ?i1_i2c_read_data 0070         __end_ofi1_ds1307_get_clock 0755  
                      ?_adjust_val 0070                 _ds1307_set_hr_mode 0D97  
                  ??i1_lcd_command 007B     __size_of_ds1307_time_formatted 006D  
           ?_ds1307_date_formatted 0070      __end_of_ds1307_time_formatted 0429  
               _ds1307_set_minutes 0C8E                 _ds1307_set_seconds 0D60  
                  ___lldiv@divisor 00A0                    ___lldiv@counter 00AD  
            ds1307_set_minutes@min 007B              ds1307_set_seconds@sec 007C  
    mcp23017_write_reg@reg_address 00A4                ?_ds1307_set_hr_mode 0070  
                      ?__send_byte 0070                   ?i1_i2c_send_data 0070  
           __end_ofi1__send_nibble 0F7C                ?_ds1307_set_minutes 0070  
              ?_ds1307_set_seconds 0070                    adjust_val@value 0074  
                     __pstringtext 0600                       ??i1_write_t1 0072  
       __size_of_ds1307_stop_clock 0016            i2c_send_address@address 00A2  
                   _g_reload_value 00C4              __size_of_i2c_send_ack 000D  
            ds1307_set_month@month 007B                         ??_write_t1 00A2  
                 __CFG_FOSC$INTOSC 0000         __size_of_ds1307_write_addr 0014  
                        _TRISAbits 008C               ??_ds1307_set_hr_mode 0070  
 __size_of_ds1307_get_day_of_month 0006          i1i2c_send_address@address 0072  
             ??_ds1307_set_minutes 007A               ??_ds1307_set_seconds 007A  
                i2c_send_data@data 00A0        __end_of__set_4bit_interface 0D4F  
               __end_ofi1_write_t1 0C35                __size_of_bcd_to_dec 0013  
                    ??_lcd_command 00AB                    lcd_initialize@i 00B4  
                       lcd_write@i 007D                       _i2c_send_ack 0CA8  
                 ?_ds1307_get_year 0070                      ?_update_clock 0070  
                     ?_i2c_restart 0070    ds1307_date_formatted@p_str_date 003B  
          _mcp23017_set_slave_addr 0C35                    ?i1__send_nibble 0070  
               _ds1307_start_clock 0DE7                     __end_of___bmul 0D60  
       __end_of_mcp23017_write_reg 0E2B                __size_of_dec_to_bcd 002E  
                 _i2c_send_address 0CE0  mcp23017_set_slave_addr@address_3b 00A1  
              __size_of_adjust_val 0022                    ??_mcp23017_init 00A2  
              ?_ds1307_start_clock 0070                   ?_ds1307_set_year 0070  
                 _ds1307_get_clock 06D4            __end_of_keypad_read_key 0EBD  
              start_initialization 00D6                  ds1307_get_clock@r 00A4  
                 _ds1307_get_hours 0DAA                   _ds1307_get_month 0BCE  
                   update_clock@pm 002C                          _i2c_start 0BF6  
             i1_mcp23017_write_reg 0DD2                __size_of__send_byte 0012  
            __end_of_i2c_read_data 0CE0       mcp23017_read_reg@reg_address 0074  
               lcd_command@command 00AC                   _ds1307_read_addr 0EDF  
                      tmr_isr@date 003F                        tmr_isr@time 0049  
             ??_ds1307_start_clock 0076                  __size_of_i2c_init 004B  
                __size_of_i2c_wait 0007                  __size_of_i2c_stop 0005  
                     ?_ds1307_init 0070                     ??_update_clock 0029  
            __end_of_i2c_send_data 0C58                           ??___bmul 0071  
                   i1_i2c_send_ack 0C6A                __end_of_lcd_command 0800  
  ds1307_time_formatted@p_str_time 003B                   _ds1307_set_clock 054B  
            __size_of_ds1307_is_pm 001A                   _ds1307_set_pm_am 0E2B  
                 _ds1307_set_hours 0FA7                   _ds1307_set_month 0D2F  
  i1mcp23017_write_reg@reg_address 0074           __size_ofi1_lcd_backlight 0009  
                  i2c_send_ack@ack 00A0             ds1307_start_clock@tsec 0077  
                        ___latbits 0001                      __pcstackBANK0 0020  
                    __pcstackBANK1 00A0              ?i1_mcp23017_write_reg 0073  
                    ?i1__send_byte 0070                         ?_i2c_start 0070  
              __end_of__stringdata 0649                      ??_keypad_init 00A5  
                    ??_keypad_scan 0076        __size_of_ds1307_get_minutes 0005  
      __size_of_ds1307_get_seconds 0006                       _isdigit$1061 0070  
             i1lcd_backlight@state 0076                  __size_of_lcd_data 0010  
                __size_of_lcd_goto 0027                  ds1307_is_pm@is_pm 007C  
                      sprintf@_val 002E                        sprintf@flag 002C  
                      sprintf@prec 0033                          _g_clk_pos 0056  
                     _ds1307_is_pm 0E44          ??_mcp23017_set_slave_addr 00A0  
                    init@prescaler 00A4            __size_of_lcd_initialize 0092  
                 ___lwdiv@dividend 0072             __end_ofi1_i2c_send_ack 0C75  
                        _g_old_key 0059   __end_ofi1_mcp23017_ioa_send_byte 0C46  
                         ?___awdiv 0070                           ?___awmod 0070  
                         ?___lldiv 00A0                           ?___lwdiv 0070  
                         ?___lwmod 0078                       ??_bcd_to_dec 0074  
         i1i2c_read_data@read_data 0071                          _lcd_write 0F2A  
                         ?_isdigit 0070                  __size_of_write_t1 000C  
                 ?_keypad_read_key 0070                     ??i1__send_byte 0079  
          _ds1307_get_day_of_month 0C00                   ___lwdiv@quotient 0075  
                         ?_tmr_isr 0070                       ??_dec_to_bcd 0020  
                         ?_sprintf 0020             __size_ofi1_i2c_restart 0005  
         ?_ds1307_set_day_of_month 0070            ??_ds1307_date_formatted 0035  
                  __send_byte@data 00AA                       ??_adjust_val 0073  
              __end_of_keypad_init 0E79                __end_of_keypad_scan 0BCE  
                        clear_ram0 0C12                           _PIE1bits 0091  
      __end_of_ds1307_is_12hr_mode 0BE2                 __end_of_bcd_to_dec 0D97  
                      _lcd_command 07EE              _ds1307_switch_to_12hr 051A  
            _ds1307_switch_to_24hr 078B                 i1_i2c_send_address 0C81  
           ds1307_set_hr_mode@mode 0071                           _PIR1bits 0011  
                     ??__send_byte 00A9                    ?i1_i2c_send_ack 0070  
                         _SSP1CON2 0216                 i1_ds1307_get_clock 0717  
             __size_of_i2c_restart 0005                ?i1_i2c_send_address 0070  
               __end_of_dec_to_bcd 05A9                      ??i1_i2c_start 0070  
                      __stringdata 060A                         ?_lcd_write 0020  
               keypad_read_key@key 0077                ?i1_ds1307_get_clock 0070  
               __end_of_adjust_val 0EDF    __end_of_mcp23017_set_slave_addr 0C3D  
           ??i1_mcp23017_write_reg 0074             __size_of_lcd_backlight 0009  
                ds1307_set_clock@r 0079                  ??i1_lcd_backlight 0076  
             __end_of_update_clock 021B                        ??_i2c_start 00A0  
         ds1307_switch_to_12hr@hrs 0028           ds1307_switch_to_24hr@hrs 0028  
               __end_of__send_byte 0D84               ??i1_i2c_send_address 0071  
       ds1307_read_addr@read_value 0075           __end_of_i2c_send_address 0CEF  
                         _i2c_init 04CF                           _i2c_wait 0C26  
                         _i2c_stop 0BFB               ??i1_ds1307_get_clock 0073  
                 ??i1__send_nibble 0076              __end_ofi1_lcd_command 0D0F  
                       tmr_isr@pos 0053           __end_of_ds1307_get_clock 0717  
         __end_of_ds1307_get_hours 0DBE           __end_of_ds1307_get_month 0BD3  
            _ds1307_time_formatted 03BC             __size_of_lcd_flags_set 0044  
         __size_ofi1_i2c_read_data 000E               __size_of_ds1307_init 0003  
                    i1_i2c_restart 0BE2                   __size_of___awdiv 0053  
                 __size_of___awmod 0047                   __size_of___lldiv 0053  
                 __size_of___lwdiv 0036                   __size_of___lwmod 002E  
                 i2c_init@clock_hz 00AE           i1_mcp23017_ioa_send_byte 0C3D  
         __end_of_ds1307_read_addr 0F03                         _ANSELAbits 018C  
         __size_ofi1_i2c_send_data 0007          ??_ds1307_get_day_of_month 0078  
                    bcd_to_dec@bcd 0077    __end_of_ds1307_set_day_of_month 0D2F  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0070  
      __size_of_ds1307_set_hr_mode 0013                __end_ofi1_i2c_start 0BEC  
                  ___lwdiv@counter 0077                           __ptext10 0C58  
               _mcp23017_write_reg 0E13                           __ptext11 0E5E  
                         __ptext20 0BF6                           __ptext12 0E13  
                         __ptext21 0C4F                           __ptext13 07BD  
                         __ptext30 00E6                           __ptext22 0CE0  
                         __ptext14 0C75                           __ptext31 0717  
                         __ptext23 0CA8                           __ptext15 04CF  
                         __ptext40 0C8E                           __ptext32 078B  
                         __ptext24 0BF1                           __ptext16 0429  
                         __ptext41 0D1F                           __ptext33 051A  
                         __ptext25 0CD1                           __ptext17 0BC7  
                         __ptext50 0C6A                           __ptext42 057B  
                         __ptext34 0E2B                           __ptext26 0C26  
                         __ptext18 06D4                           __ptext51 0EBD  
                         __ptext43 0649                           __ptext35 0D97  
                         __ptext19 0BFB                           __ptext60 0E9B  
                         __ptext52 0F2A                           __ptext44 047C  
                         __ptext36 0FA7                           __ptext28 0C2D  
                         __ptext61 0BCA                           __ptext53 0D0F  
                         __ptext45 054B                           __ptext37 0C9B  
                         __ptext29 0C46                           __ptext70 03BC  
                         __ptext62 0E79                           __ptext54 0F03  
                         __ptext46 0DFD                           __ptext38 0D60  
                         __ptext71 0E44                           __ptext63 0BEC  
                         __ptext55 0CFF                           __ptext47 0DE7  
                         __ptext39 0D2F                           __ptext80 0755  
                         __ptext72 0DAA                           __ptext64 0BE7  
                         __ptext56 0CEF                           __ptext48 0DBE  
                         __ptext81 0BD3                           __ptext73 0BDD  
                         __ptext65 0C1F                           __ptext57 0F51  
                         __ptext49 0EDF                           __ptext82 0BCE  
                         __ptext74 0C06                           __ptext66 0C81  
                         __ptext58 0C3D                           __ptext83 0C00  
                         __ptext75 0BD8                           __ptext67 0BE2  
                         __ptext59 0DD2                           __ptext84 0D84  
                         __ptext76 05D7                           __ptext68 0CC3  
                         __ptext85 0D4F                           __ptext77 021B  
                         __ptext69 0C18                           __ptext78 0CB5  
                         __ptext79 05A9                       _SSP1CON2bits 0216  
                         _lcd_data 0D0F                        _keypad_init 0E5E  
                      _keypad_scan 0BCA        __size_of_ds1307_set_minutes 000D  
      __size_of_ds1307_set_seconds 0012                           _lcd_goto 0F03  
                 __size_of_tmr_isr 00D0                   __size_of_sprintf 010F  
         __end_of_ds1307_set_clock 057B           __end_of_ds1307_set_pm_am 0E44  
         __end_of_ds1307_set_hours 0FD3           __end_of_ds1307_set_month 0D3F  
              ?_mcp23017_write_reg 00A3                      __size_of_main 002B  
                    __size_of_init 0031             ?_ds1307_switch_to_12hr 0070  
           ?_ds1307_switch_to_24hr 0070                     _lcd_initialize 032A  
                    _lcd_backlight 0C61           ??_mcp23017_ioa_send_byte 00A5  
             __end_ofi1__send_byte 0CFF         ds1307_set_day_of_month@dom 007B  
                   ?i1_i2c_restart 0070       __size_of__set_4bit_interface 0010  
                    ?__send_nibble 0070                  __send_nibble@data 00A8  
              i1i2c_send_data@data 0070               ??_mcp23017_write_reg 00A4  
                _mcp23017_read_reg 0E79                        ??_lcd_write 0022  
                         _write_t1 0C75           __size_of_ds1307_get_year 0005  
           ds1307_write_addr@value 0073                 ?_mcp23017_read_reg 0070  
                       _INTCONbits 000B                  adjust_val@lim_dwn 0070  
            __end_of_mcp23017_init 0C12                      _lcd_flags_set 0690  
                         isdigit@c 0071                        pic14e$flags 007E  
                adjust_val@up_down 0072                 lcd_backlight@state 00A6  
              ??_mcp23017_read_reg 0073                           intlevel1 0000  
                        sprintf@ap 002D           __size_of_ds1307_set_year 000D  
                        sprintf@sp 0032                   ___lwmod@dividend 007A  
           __end_of_lcd_initialize 03BC                   ___lldiv@dividend 00A4  
                __CFG_CLKOUTEN$OFF 0000        __size_of_ds1307_start_clock 0016  
           ?_ds1307_time_formatted 0070                     ?_lcd_backlight 0070  
              i1ds1307_get_clock@r 0074                         _OSCCONbits 0099  
                   ??__send_nibble 00A6              ds1307_write_addr@addr 0074  
        __end_of_mcp23017_read_reg 0E9B                   adjust_val@lim_up 0071  
           __size_of_i2c_read_data 000F                        i1_i2c_start 0BE7  
            __size_of_update_clock 0135                  ??i1_i2c_read_data 0070  
                         sprintf@c 0034                           sprintf@f 0020  
                 ___lldiv@quotient 00A9                    ___lwmod@divisor 0078  
                   _display_config 00BE         __end_of_ds1307_get_minutes 0BDD  
       __end_of_ds1307_get_seconds 0C0C             mcp23017_read_reg@value 0075  
                  ___lwmod@counter 007D                     ?_lcd_flags_set 00AD  
           i2c_read_data@read_data 00A1             __size_of_i2c_send_data 0009  
                ??i1_i2c_send_data 0070                         i1_i2c_wait 0C18  
                       i1_i2c_stop 0BEC     __size_of_ds1307_date_formatted 0028  
    __end_of_ds1307_date_formatted 05FF                   ??i1_i2c_send_ack 0070  
                  ?_lcd_initialize 0070             i1i2c_send_address@mode 0070  
                     ?_lcd_command 0070                    ??i1_i2c_restart 0070  
                    write_t1@value 00A0  



Microchip Technology PIC PRO Macro Assembler V1.32 build 58300 
                                                                                               Tue Aug 05 20:46:35 2014

Microchip Technology Omniscient Code Generator (PRO mode) build 58300
     1                           	processor	12F1840
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	stringtext,global,reloc=256,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	intentry,global,class=CODE,delta=2
    13                           	psect	text28,local,class=CODE,merge=1,delta=2
    14                           	psect	text29,local,class=CODE,merge=1,delta=2
    15                           	psect	text37,local,class=CODE,merge=1,delta=2
    16                           	psect	text60,local,class=CODE,merge=1,delta=2
    17                           	psect	text76,local,class=CODE,merge=1,delta=2
    18                           	psect	pa_nodes,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  0011                     	;# 
    34  0012                     	;# 
    35  0015                     	;# 
    36  0016                     	;# 
    37  0016                     	;# 
    38  0017                     	;# 
    39  0018                     	;# 
    40  0019                     	;# 
    41  001A                     	;# 
    42  001B                     	;# 
    43  001C                     	;# 
    44  001E                     	;# 
    45  001F                     	;# 
    46  008C                     	;# 
    47  0091                     	;# 
    48  0092                     	;# 
    49  0095                     	;# 
    50  0096                     	;# 
    51  0097                     	;# 
    52  0098                     	;# 
    53  0099                     	;# 
    54  009A                     	;# 
    55  009B                     	;# 
    56  009B                     	;# 
    57  009C                     	;# 
    58  009D                     	;# 
    59  009E                     	;# 
    60  010C                     	;# 
    61  0111                     	;# 
    62  0112                     	;# 
    63  0115                     	;# 
    64  0116                     	;# 
    65  0117                     	;# 
    66  0118                     	;# 
    67  0119                     	;# 
    68  011A                     	;# 
    69  011B                     	;# 
    70  011D                     	;# 
    71  011D                     	;# 
    72  018C                     	;# 
    73  0191                     	;# 
    74  0191                     	;# 
    75  0192                     	;# 
    76  0193                     	;# 
    77  0193                     	;# 
    78  0193                     	;# 
    79  0194                     	;# 
    80  0195                     	;# 
    81  0196                     	;# 
    82  0197                     	;# 
    83  0199                     	;# 
    84  019A                     	;# 
    85  019B                     	;# 
    86  019B                     	;# 
    87  019B                     	;# 
    88  019B                     	;# 
    89  019C                     	;# 
    90  019C                     	;# 
    91  019D                     	;# 
    92  019E                     	;# 
    93  019F                     	;# 
    94  020C                     	;# 
    95  0211                     	;# 
    96  0211                     	;# 
    97  0212                     	;# 
    98  0212                     	;# 
    99  0213                     	;# 
   100  0213                     	;# 
   101  0214                     	;# 
   102  0214                     	;# 
   103  0215                     	;# 
   104  0215                     	;# 
   105  0215                     	;# 
   106  0216                     	;# 
   107  0216                     	;# 
   108  0217                     	;# 
   109  0217                     	;# 
   110  0291                     	;# 
   111  0291                     	;# 
   112  0292                     	;# 
   113  0293                     	;# 
   114  0294                     	;# 
   115  0295                     	;# 
   116  0295                     	;# 
   117  0296                     	;# 
   118  0391                     	;# 
   119  0392                     	;# 
   120  0393                     	;# 
   121  039A                     	;# 
   122  039C                     	;# 
   123  039D                     	;# 
   124  039E                     	;# 
   125  039F                     	;# 
   126  0FE4                     	;# 
   127  0FE5                     	;# 
   128  0FE6                     	;# 
   129  0FE7                     	;# 
   130  0FE8                     	;# 
   131  0FE9                     	;# 
   132  0FEA                     	;# 
   133  0FEB                     	;# 
   134  0FED                     	;# 
   135  0FEE                     	;# 
   136  0FEF                     	;# 
   137  0000                     	;# 
   138  0001                     	;# 
   139  0002                     	;# 
   140  0003                     	;# 
   141  0004                     	;# 
   142  0005                     	;# 
   143  0006                     	;# 
   144  0007                     	;# 
   145  0008                     	;# 
   146  0009                     	;# 
   147  000A                     	;# 
   148  000B                     	;# 
   149  000C                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0016                     	;# 
   155  0017                     	;# 
   156  0018                     	;# 
   157  0019                     	;# 
   158  001A                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  008C                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0095                     	;# 
   167  0096                     	;# 
   168  0097                     	;# 
   169  0098                     	;# 
   170  0099                     	;# 
   171  009A                     	;# 
   172  009B                     	;# 
   173  009B                     	;# 
   174  009C                     	;# 
   175  009D                     	;# 
   176  009E                     	;# 
   177  010C                     	;# 
   178  0111                     	;# 
   179  0112                     	;# 
   180  0115                     	;# 
   181  0116                     	;# 
   182  0117                     	;# 
   183  0118                     	;# 
   184  0119                     	;# 
   185  011A                     	;# 
   186  011B                     	;# 
   187  011D                     	;# 
   188  011D                     	;# 
   189  018C                     	;# 
   190  0191                     	;# 
   191  0191                     	;# 
   192  0192                     	;# 
   193  0193                     	;# 
   194  0193                     	;# 
   195  0193                     	;# 
   196  0194                     	;# 
   197  0195                     	;# 
   198  0196                     	;# 
   199  0197                     	;# 
   200  0199                     	;# 
   201  019A                     	;# 
   202  019B                     	;# 
   203  019B                     	;# 
   204  019B                     	;# 
   205  019B                     	;# 
   206  019C                     	;# 
   207  019C                     	;# 
   208  019D                     	;# 
   209  019E                     	;# 
   210  019F                     	;# 
   211  020C                     	;# 
   212  0211                     	;# 
   213  0211                     	;# 
   214  0212                     	;# 
   215  0212                     	;# 
   216  0213                     	;# 
   217  0213                     	;# 
   218  0214                     	;# 
   219  0214                     	;# 
   220  0215                     	;# 
   221  0215                     	;# 
   222  0215                     	;# 
   223  0216                     	;# 
   224  0216                     	;# 
   225  0217                     	;# 
   226  0217                     	;# 
   227  0291                     	;# 
   228  0291                     	;# 
   229  0292                     	;# 
   230  0293                     	;# 
   231  0294                     	;# 
   232  0295                     	;# 
   233  0295                     	;# 
   234  0296                     	;# 
   235  0391                     	;# 
   236  0392                     	;# 
   237  0393                     	;# 
   238  039A                     	;# 
   239  039C                     	;# 
   240  039D                     	;# 
   241  039E                     	;# 
   242  039F                     	;# 
   243  0FE4                     	;# 
   244  0FE5                     	;# 
   245  0FE6                     	;# 
   246  0FE7                     	;# 
   247  0FE8                     	;# 
   248  0FE9                     	;# 
   249  0FEA                     	;# 
   250  0FEB                     	;# 
   251  0FED                     	;# 
   252  0FEE                     	;# 
   253  0FEF                     	;# 
   254  0000                     	;# 
   255  0001                     	;# 
   256  0002                     	;# 
   257  0003                     	;# 
   258  0004                     	;# 
   259  0005                     	;# 
   260  0006                     	;# 
   261  0007                     	;# 
   262  0008                     	;# 
   263  0009                     	;# 
   264  000A                     	;# 
   265  000B                     	;# 
   266  000C                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  008C                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0095                     	;# 
   284  0096                     	;# 
   285  0097                     	;# 
   286  0098                     	;# 
   287  0099                     	;# 
   288  009A                     	;# 
   289  009B                     	;# 
   290  009B                     	;# 
   291  009C                     	;# 
   292  009D                     	;# 
   293  009E                     	;# 
   294  010C                     	;# 
   295  0111                     	;# 
   296  0112                     	;# 
   297  0115                     	;# 
   298  0116                     	;# 
   299  0117                     	;# 
   300  0118                     	;# 
   301  0119                     	;# 
   302  011A                     	;# 
   303  011B                     	;# 
   304  011D                     	;# 
   305  011D                     	;# 
   306  018C                     	;# 
   307  0191                     	;# 
   308  0191                     	;# 
   309  0192                     	;# 
   310  0193                     	;# 
   311  0193                     	;# 
   312  0193                     	;# 
   313  0194                     	;# 
   314  0195                     	;# 
   315  0196                     	;# 
   316  0197                     	;# 
   317  0199                     	;# 
   318  019A                     	;# 
   319  019B                     	;# 
   320  019B                     	;# 
   321  019B                     	;# 
   322  019B                     	;# 
   323  019C                     	;# 
   324  019C                     	;# 
   325  019D                     	;# 
   326  019E                     	;# 
   327  019F                     	;# 
   328  020C                     	;# 
   329  0211                     	;# 
   330  0211                     	;# 
   331  0212                     	;# 
   332  0212                     	;# 
   333  0213                     	;# 
   334  0213                     	;# 
   335  0214                     	;# 
   336  0214                     	;# 
   337  0215                     	;# 
   338  0215                     	;# 
   339  0215                     	;# 
   340  0216                     	;# 
   341  0216                     	;# 
   342  0217                     	;# 
   343  0217                     	;# 
   344  0291                     	;# 
   345  0291                     	;# 
   346  0292                     	;# 
   347  0293                     	;# 
   348  0294                     	;# 
   349  0295                     	;# 
   350  0295                     	;# 
   351  0296                     	;# 
   352  0391                     	;# 
   353  0392                     	;# 
   354  0393                     	;# 
   355  039A                     	;# 
   356  039C                     	;# 
   357  039D                     	;# 
   358  039E                     	;# 
   359  039F                     	;# 
   360  0FE4                     	;# 
   361  0FE5                     	;# 
   362  0FE6                     	;# 
   363  0FE7                     	;# 
   364  0FE8                     	;# 
   365  0FE9                     	;# 
   366  0FEA                     	;# 
   367  0FEB                     	;# 
   368  0FED                     	;# 
   369  0FEE                     	;# 
   370  0FEF                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0016                     	;# 
   389  0017                     	;# 
   390  0018                     	;# 
   391  0019                     	;# 
   392  001A                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001E                     	;# 
   396  001F                     	;# 
   397  008C                     	;# 
   398  0091                     	;# 
   399  0092                     	;# 
   400  0095                     	;# 
   401  0096                     	;# 
   402  0097                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009A                     	;# 
   406  009B                     	;# 
   407  009B                     	;# 
   408  009C                     	;# 
   409  009D                     	;# 
   410  009E                     	;# 
   411  010C                     	;# 
   412  0111                     	;# 
   413  0112                     	;# 
   414  0115                     	;# 
   415  0116                     	;# 
   416  0117                     	;# 
   417  0118                     	;# 
   418  0119                     	;# 
   419  011A                     	;# 
   420  011B                     	;# 
   421  011D                     	;# 
   422  011D                     	;# 
   423  018C                     	;# 
   424  0191                     	;# 
   425  0191                     	;# 
   426  0192                     	;# 
   427  0193                     	;# 
   428  0193                     	;# 
   429  0193                     	;# 
   430  0194                     	;# 
   431  0195                     	;# 
   432  0196                     	;# 
   433  0197                     	;# 
   434  0199                     	;# 
   435  019A                     	;# 
   436  019B                     	;# 
   437  019B                     	;# 
   438  019B                     	;# 
   439  019B                     	;# 
   440  019C                     	;# 
   441  019C                     	;# 
   442  019D                     	;# 
   443  019E                     	;# 
   444  019F                     	;# 
   445  020C                     	;# 
   446  0211                     	;# 
   447  0211                     	;# 
   448  0212                     	;# 
   449  0212                     	;# 
   450  0213                     	;# 
   451  0213                     	;# 
   452  0214                     	;# 
   453  0214                     	;# 
   454  0215                     	;# 
   455  0215                     	;# 
   456  0215                     	;# 
   457  0216                     	;# 
   458  0216                     	;# 
   459  0217                     	;# 
   460  0217                     	;# 
   461  0291                     	;# 
   462  0291                     	;# 
   463  0292                     	;# 
   464  0293                     	;# 
   465  0294                     	;# 
   466  0295                     	;# 
   467  0295                     	;# 
   468  0296                     	;# 
   469  0391                     	;# 
   470  0392                     	;# 
   471  0393                     	;# 
   472  039A                     	;# 
   473  039C                     	;# 
   474  039D                     	;# 
   475  039E                     	;# 
   476  039F                     	;# 
   477  0FE4                     	;# 
   478  0FE5                     	;# 
   479  0FE6                     	;# 
   480  0FE7                     	;# 
   481  0FE8                     	;# 
   482  0FE9                     	;# 
   483  0FEA                     	;# 
   484  0FEB                     	;# 
   485  0FED                     	;# 
   486  0FEE                     	;# 
   487  0FEF                     	;# 
   488  0000                     	;# 
   489  0001                     	;# 
   490  0002                     	;# 
   491  0003                     	;# 
   492  0004                     	;# 
   493  0005                     	;# 
   494  0006                     	;# 
   495  0007                     	;# 
   496  0008                     	;# 
   497  0009                     	;# 
   498  000A                     	;# 
   499  000B                     	;# 
   500  000C                     	;# 
   501  0011                     	;# 
   502  0012                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0016                     	;# 
   506  0017                     	;# 
   507  0018                     	;# 
   508  0019                     	;# 
   509  001A                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  008C                     	;# 
   515  0091                     	;# 
   516  0092                     	;# 
   517  0095                     	;# 
   518  0096                     	;# 
   519  0097                     	;# 
   520  0098                     	;# 
   521  0099                     	;# 
   522  009A                     	;# 
   523  009B                     	;# 
   524  009B                     	;# 
   525  009C                     	;# 
   526  009D                     	;# 
   527  009E                     	;# 
   528  010C                     	;# 
   529  0111                     	;# 
   530  0112                     	;# 
   531  0115                     	;# 
   532  0116                     	;# 
   533  0117                     	;# 
   534  0118                     	;# 
   535  0119                     	;# 
   536  011A                     	;# 
   537  011B                     	;# 
   538  011D                     	;# 
   539  011D                     	;# 
   540  018C                     	;# 
   541  0191                     	;# 
   542  0191                     	;# 
   543  0192                     	;# 
   544  0193                     	;# 
   545  0193                     	;# 
   546  0193                     	;# 
   547  0194                     	;# 
   548  0195                     	;# 
   549  0196                     	;# 
   550  0197                     	;# 
   551  0199                     	;# 
   552  019A                     	;# 
   553  019B                     	;# 
   554  019B                     	;# 
   555  019B                     	;# 
   556  019B                     	;# 
   557  019C                     	;# 
   558  019C                     	;# 
   559  019D                     	;# 
   560  019E                     	;# 
   561  019F                     	;# 
   562  020C                     	;# 
   563  0211                     	;# 
   564  0211                     	;# 
   565  0212                     	;# 
   566  0212                     	;# 
   567  0213                     	;# 
   568  0213                     	;# 
   569  0214                     	;# 
   570  0214                     	;# 
   571  0215                     	;# 
   572  0215                     	;# 
   573  0215                     	;# 
   574  0216                     	;# 
   575  0216                     	;# 
   576  0217                     	;# 
   577  0217                     	;# 
   578  0291                     	;# 
   579  0291                     	;# 
   580  0292                     	;# 
   581  0293                     	;# 
   582  0294                     	;# 
   583  0295                     	;# 
   584  0295                     	;# 
   585  0296                     	;# 
   586  0391                     	;# 
   587  0392                     	;# 
   588  0393                     	;# 
   589  039A                     	;# 
   590  039C                     	;# 
   591  039D                     	;# 
   592  039E                     	;# 
   593  039F                     	;# 
   594  0FE4                     	;# 
   595  0FE5                     	;# 
   596  0FE6                     	;# 
   597  0FE7                     	;# 
   598  0FE8                     	;# 
   599  0FE9                     	;# 
   600  0FEA                     	;# 
   601  0FEB                     	;# 
   602  0FED                     	;# 
   603  0FEE                     	;# 
   604  0FEF                     	;# 
   605                           
   606                           	psect	stringtext
   607  0800                     __pstringtext:	
   608  0800                     _dpowers:	
   609  0800  3401               	retlw	1
   610  0801  3400               	retlw	0
   611  0802  340A               	retlw	10
   612  0803  3400               	retlw	0
   613  0804  3464               	retlw	100
   614  0805  3400               	retlw	0
   615  0806  34E8               	retlw	232
   616  0807  3403               	retlw	3
   617  0808  3410               	retlw	16
   618  0809  3427               	retlw	39
   619  080A                     __end_of_dpowers:	
   620  000B                     _INTCONbits	set	11
   621  0011                     _PIR1bits	set	17
   622  0018                     _T1CONbits	set	24
   623  0017                     _TMR1H	set	23
   624  0016                     _TMR1L	set	22
   625  0099                     _OSCCONbits	set	153
   626  0091                     _PIE1bits	set	145
   627  008C                     _TRISAbits	set	140
   628  018C                     _ANSELAbits	set	396
   629  0216                     _SSP1CON2	set	534
   630  0216                     _SSP1CON2bits	set	534
   631  0212                     _SSPADD	set	530
   632  0211                     _SSPBUF	set	529
   633  0215                     _SSPCON1	set	533
   634  0216                     _SSPCON2	set	534
   635  0214                     _SSPSTATbits	set	532
   636  080A                     __stringdata:	
   637  080A                     STR_5:	
   638  080A  3425               	retlw	37	;'%'
   639  080B  342E               	retlw	46	;'.'
   640  080C  3432               	retlw	50	;'2'
   641  080D  3475               	retlw	117	;'u'
   642  080E  343A               	retlw	58	;':'
   643  080F  3425               	retlw	37	;'%'
   644  0810  342E               	retlw	46	;'.'
   645  0811  3432               	retlw	50	;'2'
   646  0812  3475               	retlw	117	;'u'
   647  0813  343A               	retlw	58	;':'
   648  0814  3425               	retlw	37	;'%'
   649  0815  342E               	retlw	46	;'.'
   650  0816  3432               	retlw	50	;'2'
   651  0817  3475               	retlw	117	;'u'
   652  0818  3420               	retlw	32	;' '
   653  0819  3400               	retlw	0
   654  081A                     STR_6:	
   655  081A  3425               	retlw	37	;'%'
   656  081B  342E               	retlw	46	;'.'
   657  081C  3432               	retlw	50	;'2'
   658  081D  3475               	retlw	117	;'u'
   659  081E  342F               	retlw	47	;'/'
   660  081F  3425               	retlw	37	;'%'
   661  0820  342E               	retlw	46	;'.'
   662  0821  3432               	retlw	50	;'2'
   663  0822  3475               	retlw	117	;'u'
   664  0823  342F               	retlw	47	;'/'
   665  0824  3425               	retlw	37	;'%'
   666  0825  342E               	retlw	46	;'.'
   667  0826  3432               	retlw	50	;'2'
   668  0827  3475               	retlw	117	;'u'
   669  0828  3400               	retlw	0
   670  0829                     STR_4:	
   671  0829  3425               	retlw	37	;'%'
   672  082A  342E               	retlw	46	;'.'
   673  082B  3432               	retlw	50	;'2'
   674  082C  3475               	retlw	117	;'u'
   675  082D  343A               	retlw	58	;':'
   676  082E  3425               	retlw	37	;'%'
   677  082F  342E               	retlw	46	;'.'
   678  0830  3432               	retlw	50	;'2'
   679  0831  3475               	retlw	117	;'u'
   680  0832  343A               	retlw	58	;':'
   681  0833  3425               	retlw	37	;'%'
   682  0834  342E               	retlw	46	;'.'
   683  0835  3432               	retlw	50	;'2'
   684  0836  3475               	retlw	117	;'u'
   685  0837  3400               	retlw	0
   686  0838                     STR_1:	
   687  0838  3454               	retlw	84	;'T'
   688  0839  3469               	retlw	105	;'i'
   689  083A  346D               	retlw	109	;'m'
   690  083B  3465               	retlw	101	;'e'
   691  083C  343A               	retlw	58	;':'
   692  083D  3420               	retlw	32	;' '
   693  083E  3400               	retlw	0
   694  083F                     STR_2:	
   695  083F  3444               	retlw	68	;'D'
   696  0840  3461               	retlw	97	;'a'
   697  0841  3474               	retlw	116	;'t'
   698  0842  3465               	retlw	101	;'e'
   699  0843  343A               	retlw	58	;':'
   700  0844  3420               	retlw	32	;' '
   701  0845  3400               	retlw	0
   702  0846                     STR_3:	
   703  0846  3425               	retlw	37	;'%'
   704  0847  3475               	retlw	117	;'u'
   705  0848  3400               	retlw	0
   706  0849                     __end_of__stringdata:	
   707                           
   708                           ; #config settings
   709  0000                     
   710                           	psect	cinit
   711  00A8                     start_initialization:	
   712  00A8                     __initialization:	
   713  00A8  30A0               	movlw	low __pbssBANK1
   714                           
   715                           ; Clear objects allocated to BANK0
   716  00A9  01CA               	clrf	__pbssBANK0& (0+127)
   717  00AA  01CB               	clrf	(__pbssBANK0+1)& (0+127)
   718  00AB  01CC               	clrf	(__pbssBANK0+2)& (0+127)
   719  00AC  01CD               	clrf	(__pbssBANK0+3)& (0+127)
   720  00AD  01CE               	clrf	(__pbssBANK0+4)& (0+127)
   721                           
   722                           ; Clear objects allocated to BANK1
   723  00AE  0084               	movwf	4
   724  00AF  3000               	movlw	high __pbssBANK1
   725  00B0  0085               	movwf	5
   726  00B1  3011               	movlw	17
   727  00B2  3187  27D4  3180   	fcall	clear_ram0
   728  00B5                     end_of_initialization:	
   729                           ;End of C runtime variable initialization code
   730                           
   731  00B5                     __end_of__initialization:	
   732  00B5  107E               	bcf	126,0	;clear compiler interrupt flag
   733  00B6  0020               	movlb	0
   734  00B7  28B8               	ljmp	_main	;jump to C main() function
   735  00B8                     __pmaintext:	
   736 ;;
   737 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   738 ;;
   739 ;; *************** function _main *****************
   740 ;; Defined at:
   741 ;;		line 80 in file "main.c"
   742 ;; Parameters:    Size  Location     Type
   743 ;;		None
   744 ;; Auto vars:     Size  Location     Type
   745 ;;		None
   746 ;; Return value:  Size  Location     Type
   747 ;;		None               void
   748 ;; Registers used:
   749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   750 ;; Tracked objects:
   751 ;;		On entry : 17F/0
   752 ;;		On exit  : 1F/0
   753 ;;		Unchanged: 0/0
   754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   755 ;;      Params:         0       0       0       0
   756 ;;      Locals:         0       0       0       0
   757 ;;      Temps:          0       0       0       0
   758 ;;      Totals:         0       0       0       0
   759 ;;Total ram usage:        0 bytes
   760 ;; Hardware stack levels required when called:   18
   761 ;; This function calls:
   762 ;;		_ds1307_init
   763 ;;		_i2c_init
   764 ;;		_init
   765 ;;		_keypad_init
   766 ;;		_lcd_initialize
   767 ;;		_mcp23017_init
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _main
   775  00B8                     _main:	
   776                           
   777                           ;main.c: 81: OSCCONbits.IRCF = 0b1110; OSCCONbits.SPLLEN = 1;
   778                           
   779                           ;incstack = 0
   780 ;; hardware stack exceeded
   781                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   782  00B8  0021               	movlb	1	; select bank1
   783  00B9  0819               	movf	25,w	;volatile
   784  00BA  3987               	andlw	-121
   785  00BB  3870               	iorlw	112
   786  00BC  0099               	movwf	25	;volatile
   787  00BD  1799               	bsf	25,7	;volatile
   788                           
   789                           ;main.c: 83: i2c_init(100000);
   790  00BE  3000               	movlw	0
   791  00BF  00C1               	movwf	(i2c_init@clock_hz+3)^(0+128)
   792  00C0  3001               	movlw	1
   793  00C1  00C0               	movwf	(i2c_init@clock_hz+2)^(0+128)
   794  00C2  3086               	movlw	134
   795  00C3  00BF               	movwf	(i2c_init@clock_hz+1)^(0+128)
   796  00C4  30A0               	movlw	160
   797  00C5  00BE               	movwf	i2c_init@clock_hz^(0+128)
   798  00C6  2253  3180         	fcall	_i2c_init
   799                           
   800                           ;main.c: 84: mcp23017_init(0b000);
   801  00C8  3000               	movlw	0
   802  00C9  2305  3180         	fcall	_mcp23017_init
   803                           
   804                           ;main.c: 85: keypad_init();
   805  00CB  20DB  3180         	fcall	_keypad_init
   806                           
   807                           ;main.c: 87: ds1307_init();
   808  00CD  2252  3180         	fcall	_ds1307_init
   809                           
   810                           ;main.c: 88: lcd_initialize();
   811  00CF  20EB  3180         	fcall	_lcd_initialize
   812                           
   813                           ;main.c: 89: init(50000, 3);
   814  00D1  3050               	movlw	80
   815  00D2  0021               	movlb	1	; select bank1
   816  00D3  00B3               	movwf	init@load_value^(0+128)
   817  00D4  30C3               	movlw	195
   818  00D5  00B4               	movwf	(init@load_value^(0+128)+1)
   819  00D6  3003               	movlw	3
   820  00D7  00B5               	movwf	init@prescaler^(0+128)
   821  00D8  22CD  3180         	fcall	_init
   822  00DA                     l174:	
   823                           ;main.c: 91: for (;;) {
   824                           
   825                           
   826                           ;main.c: 92: ;
   827                           ;main.c: 93: }
   828  00DA  28DA               	goto	l174
   829  00DB                     __end_of_main:	
   830  00DB                     __ptext11:	
   831 ;; *************** function _keypad_init *****************
   832 ;; Defined at:
   833 ;;		line 57 in file "keypad.c"
   834 ;; Parameters:    Size  Location     Type
   835 ;;		None
   836 ;; Auto vars:     Size  Location     Type
   837 ;;		None
   838 ;; Return value:  Size  Location     Type
   839 ;;		None               void
   840 ;; Registers used:
   841 ;;		wreg, status,2, status,0, pclath, cstack
   842 ;; Tracked objects:
   843 ;;		On entry : 17F/1
   844 ;;		On exit  : 1F/4
   845 ;;		Unchanged: 0/0
   846 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   847 ;;      Params:         0       0       0       0
   848 ;;      Locals:         0       0       0       0
   849 ;;      Temps:          0       0       0       0
   850 ;;      Totals:         0       0       0       0
   851 ;;Total ram usage:        0 bytes
   852 ;; Hardware stack levels used:    1
   853 ;; Hardware stack levels required when called:   12
   854 ;; This function calls:
   855 ;;		_mcp23017_write_reg
   856 ;; This function is called by:
   857 ;;		_main
   858 ;; This function uses a non-reentrant model
   859 ;;
   860                           
   861                           
   862                           ;psect for function _keypad_init
   863  00DB                     _keypad_init:	
   864                           
   865                           ;keypad.c: 58: mcp23017_write_reg(MCP23017_REG_IODIRB, 0xFF);
   866                           
   867                           ;incstack = 0
   868                           ; Regs used in _keypad_init: [wreg+status,2+status,0+pclath+cstack]
   869  00DB  30FF               	movlw	255
   870  00DC  00B3               	movwf	mcp23017_write_reg@value^(0+128)
   871  00DD  3001               	movlw	1
   872  00DE  21AA  3180         	fcall	_mcp23017_write_reg
   873                           
   874                           ;keypad.c: 59: mcp23017_write_reg(MCP23017_REG_GPPUB,0xFF);
   875  00E0  30FF               	movlw	255
   876  00E1  0021               	movlb	1	; select bank1
   877  00E2  00B3               	movwf	mcp23017_write_reg@value^(0+128)
   878  00E3  300D               	movlw	13
   879  00E4  21AA  3180         	fcall	_mcp23017_write_reg
   880                           
   881                           ;keypad.c: 60: mcp23017_write_reg(MCP23017_REG_IPOLB,0xFF);
   882  00E6  30FF               	movlw	255
   883  00E7  0021               	movlb	1	; select bank1
   884  00E8  00B3               	movwf	mcp23017_write_reg@value^(0+128)
   885  00E9  3003               	movlw	3
   886  00EA  29AA               	ljmp	_mcp23017_write_reg
   887  00EB                     __end_of_keypad_init:	
   888  00EB                     __ptext3:	
   889 ;; *************** function _lcd_initialize *****************
   890 ;; Defined at:
   891 ;;		line 144 in file "HD44780-IOE.c"
   892 ;; Parameters:    Size  Location     Type
   893 ;;		None
   894 ;; Auto vars:     Size  Location     Type
   895 ;;  i               1   16[BANK1 ] unsigned char 
   896 ;; Return value:  Size  Location     Type
   897 ;;		None               void
   898 ;; Registers used:
   899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   900 ;; Tracked objects:
   901 ;;		On entry : 1F/4
   902 ;;		On exit  : 0/0
   903 ;;		Unchanged: 0/0
   904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   905 ;;      Params:         0       0       0       0
   906 ;;      Locals:         0       0       1       0
   907 ;;      Temps:          0       0       2       0
   908 ;;      Totals:         0       0       3       0
   909 ;;Total ram usage:        3 bytes
   910 ;; Hardware stack levels used:    1
   911 ;; Hardware stack levels required when called:   17
   912 ;; This function calls:
   913 ;;		__set_4bit_interface
   914 ;;		_lcd_backlight
   915 ;;		_lcd_command
   916 ;;		_lcd_flags_set
   917 ;;		_mcp23017_write_reg
   918 ;; This function is called by:
   919 ;;		_main
   920 ;; This function uses a non-reentrant model
   921 ;;
   922                           
   923                           
   924                           ;psect for function _lcd_initialize
   925  00EB                     _lcd_initialize:	
   926                           
   927                           ;HD44780-IOE.c: 145: unsigned char i;
   928                           ;HD44780-IOE.c: 148: _delay((unsigned long)((10)*((32000000UL)/4000.0)));
   929                           
   930                           ;incstack = 0
   931 ;; hardware stack exceeded
   932                           ; Regs used in _lcd_initialize: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   933  00EB  3068               	movlw	104
   934  00EC  0021               	movlb	1	; select bank1
   935  00ED  00C0               	movwf	(??_lcd_initialize^(0+128)+1)
   936  00EE  30E4               	movlw	228
   937  00EF  00BF               	movwf	??_lcd_initialize^(0+128)
   938  00F0                     u1917:	
   939  00F0  0BBF               	decfsz	??_lcd_initialize^(0+128),f
   940  00F1  28F0               	goto	u1917
   941  00F2  0BC0               	decfsz	(??_lcd_initialize^(0+128)+1),f
   942  00F3  28F0               	goto	u1917
   943  00F4  0000               	nop
   944                           
   945                           ;HD44780-IOE.c: 151: mcp23017_write_reg(MCP23017_REG_IODIRA, 0x00);
   946  00F5  0021               	movlb	1	; select bank1
   947  00F6  3000               	movlw	0
   948  00F7  01B3               	clrf	mcp23017_write_reg@value^(0+128)
   949  00F8  21AA  3180         	fcall	_mcp23017_write_reg
   950                           
   951                           ;HD44780-IOE.c: 152: mcp23017_write_reg(MCP23017_REG_GPIOA, 0x00);
   952  00FA  0021               	movlb	1	; select bank1
   953  00FB  3012               	movlw	18
   954  00FC  01B3               	clrf	mcp23017_write_reg@value^(0+128)
   955  00FD  21AA  3180         	fcall	_mcp23017_write_reg
   956                           
   957                           ;HD44780-IOE.c: 155: for (i = 0; i < 6; i++) {
   958  00FF  0021               	movlb	1	; select bank1
   959  0100  01C1               	clrf	lcd_initialize@i^(0+128)
   960  0101                     l2679:	
   961                           
   962                           ;HD44780-IOE.c: 156: display_config[i] = 0x00;
   963  0101  0841               	movf	lcd_initialize@i^(0+128),w
   964  0102  3EA7               	addlw	_display_config& (0+255)
   965  0103  0086               	movwf	6
   966  0104  3006               	movlw	6
   967  0105  0187               	clrf	7
   968  0106  0181               	clrf	1
   969  0107  0AC1               	incf	lcd_initialize@i^(0+128),f
   970  0108  0241               	subwf	lcd_initialize@i^(0+128),w
   971  0109  1C03               	skipc
   972  010A  2901               	goto	l2679
   973                           
   974                           ;HD44780-IOE.c: 157: }
   975                           ;HD44780-IOE.c: 159: _set_4bit_interface();
   976  010B  21BB  3180         	fcall	__set_4bit_interface
   977                           
   978                           ;HD44780-IOE.c: 162: lcd_flags_set(0x20, 0x10 | 0x04, 0);
   979  010D  3014               	movlw	20
   980  010E  0021               	movlb	1	; select bank1
   981  010F  00BB               	movwf	lcd_flags_set@flags^(0+128)
   982  0110  3020               	movlw	32
   983  0111  01BC               	clrf	lcd_flags_set@value^(0+128)
   984  0112  215F  3180         	fcall	_lcd_flags_set
   985                           
   986                           ;HD44780-IOE.c: 163: lcd_flags_set(0x20, 0x08, 1);
   987  0114  3008               	movlw	8
   988  0115  0021               	movlb	1	; select bank1
   989  0116  00BB               	movwf	lcd_flags_set@flags^(0+128)
   990  0117  3020               	movlw	32
   991  0118  01BC               	clrf	lcd_flags_set@value^(0+128)
   992  0119  0ABC               	incf	lcd_flags_set@value^(0+128),f
   993  011A  215F  3180         	fcall	_lcd_flags_set
   994                           
   995                           ;HD44780-IOE.c: 165: lcd_backlight(1);
   996  011C  3001               	movlw	1
   997  011D  22F5  3180         	fcall	_lcd_backlight
   998                           
   999                           ;HD44780-IOE.c: 166: lcd_flags_set(0x08, 0x04, 1);
  1000  011F  3004               	movlw	4
  1001  0120  0021               	movlb	1	; select bank1
  1002  0121  00BB               	movwf	lcd_flags_set@flags^(0+128)
  1003  0122  3008               	movlw	8
  1004  0123  01BC               	clrf	lcd_flags_set@value^(0+128)
  1005  0124  0ABC               	incf	lcd_flags_set@value^(0+128),f
  1006  0125  215F  3180         	fcall	_lcd_flags_set
  1007                           
  1008                           ;HD44780-IOE.c: 167: lcd_flags_set(0x08, 0x02, 0);
  1009  0127  3002               	movlw	2
  1010  0128  0021               	movlb	1	; select bank1
  1011  0129  00BB               	movwf	lcd_flags_set@flags^(0+128)
  1012  012A  3008               	movlw	8
  1013  012B  01BC               	clrf	lcd_flags_set@value^(0+128)
  1014  012C  215F  3180         	fcall	_lcd_flags_set
  1015                           
  1016                           ;HD44780-IOE.c: 168: lcd_flags_set(0x08, 0x01, 0);
  1017  012E  0021               	movlb	1	; select bank1
  1018  012F  3008               	movlw	8
  1019  0130  01BB               	clrf	lcd_flags_set@flags^(0+128)
  1020  0131  0ABB               	incf	lcd_flags_set@flags^(0+128),f
  1021  0132  01BC               	clrf	lcd_flags_set@value^(0+128)
  1022  0133  215F  3180         	fcall	_lcd_flags_set
  1023                           
  1024                           ;HD44780-IOE.c: 170: lcd_flags_set(0x04, 0x02, 1);
  1025  0135  3002               	movlw	2
  1026  0136  0021               	movlb	1	; select bank1
  1027  0137  00BB               	movwf	lcd_flags_set@flags^(0+128)
  1028  0138  3004               	movlw	4
  1029  0139  01BC               	clrf	lcd_flags_set@value^(0+128)
  1030  013A  0ABC               	incf	lcd_flags_set@value^(0+128),f
  1031  013B  215F  3180         	fcall	_lcd_flags_set
  1032                           
  1033                           ;HD44780-IOE.c: 171: lcd_flags_set(0x04, 0x01, 0);
  1034  013D  0021               	movlb	1	; select bank1
  1035  013E  3004               	movlw	4
  1036  013F  01BB               	clrf	lcd_flags_set@flags^(0+128)
  1037  0140  0ABB               	incf	lcd_flags_set@flags^(0+128),f
  1038  0141  01BC               	clrf	lcd_flags_set@value^(0+128)
  1039  0142  215F  3180         	fcall	_lcd_flags_set
  1040                           
  1041                           ;HD44780-IOE.c: 173: lcd_command(0x01); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  1042  0144  3001               	movlw	1
  1043  0145  219A  3180         	fcall	_lcd_command
  1044  0147  3015               	movlw	21
  1045  0148  0021               	movlb	1	; select bank1
  1046  0149  00C0               	movwf	(??_lcd_initialize^(0+128)+1)
  1047  014A  30C6               	movlw	198
  1048  014B  00BF               	movwf	??_lcd_initialize^(0+128)
  1049  014C                     u1927:	
  1050  014C  0BBF               	decfsz	??_lcd_initialize^(0+128),f
  1051  014D  294C               	goto	u1927
  1052  014E  0BC0               	decfsz	(??_lcd_initialize^(0+128)+1),f
  1053  014F  294C               	goto	u1927
  1054  0150  0000               	nop
  1055                           
  1056                           ;HD44780-IOE.c: 174: lcd_command(0x02); _delay((unsigned long)((2)*((32000000UL)/4000.0)
      +                          ));
  1057  0151  3002               	movlw	2
  1058  0152  219A  3180         	fcall	_lcd_command
  1059  0154  3015               	movlw	21
  1060  0155  0021               	movlb	1	; select bank1
  1061  0156  00C0               	movwf	(??_lcd_initialize^(0+128)+1)
  1062  0157  30C6               	movlw	198
  1063  0158  00BF               	movwf	??_lcd_initialize^(0+128)
  1064  0159                     u1937:	
  1065  0159  0BBF               	decfsz	??_lcd_initialize^(0+128),f
  1066  015A  2959               	goto	u1937
  1067  015B  0BC0               	decfsz	(??_lcd_initialize^(0+128)+1),f
  1068  015C  2959               	goto	u1937
  1069  015D  0000               	nop
  1070  015E  0008               	return
  1071  015F                     __end_of_lcd_initialize:	
  1072  015F                     __ptext4:	
  1073 ;; *************** function _lcd_flags_set *****************
  1074 ;; Defined at:
  1075 ;;		line 193 in file "HD44780-IOE.c"
  1076 ;; Parameters:    Size  Location     Type
  1077 ;;  instruction     1    wreg     unsigned char 
  1078 ;;  flags           1   10[BANK1 ] unsigned char 
  1079 ;;  value           1   11[BANK1 ] unsigned char 
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;  instruction     1   12[BANK1 ] unsigned char 
  1082 ;;  index           1   13[BANK1 ] unsigned char 
  1083 ;; Return value:  Size  Location     Type
  1084 ;;		None               void
  1085 ;; Registers used:
  1086 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1087 ;; Tracked objects:
  1088 ;;		On entry : 1F/1
  1089 ;;		On exit  : 0/0
  1090 ;;		Unchanged: 0/0
  1091 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1092 ;;      Params:         0       0       2       0
  1093 ;;      Locals:         0       0       2       0
  1094 ;;      Temps:          0       0       0       0
  1095 ;;      Totals:         0       0       4       0
  1096 ;;Total ram usage:        4 bytes
  1097 ;; Hardware stack levels used:    1
  1098 ;; Hardware stack levels required when called:   16
  1099 ;; This function calls:
  1100 ;;		_lcd_command
  1101 ;; This function is called by:
  1102 ;;		_lcd_initialize
  1103 ;; This function uses a non-reentrant model
  1104 ;;
  1105                           
  1106                           
  1107                           ;psect for function _lcd_flags_set
  1108  015F                     _lcd_flags_set:	
  1109                           
  1110                           ;incstack = 0
  1111 ;; hardware stack exceeded
  1112                           ; Regs used in _lcd_flags_set: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  1113                           ;lcd_flags_set@instruction stored from wreg
  1114  015F  00BD               	movwf	lcd_flags_set@instruction^(0+128)
  1115                           
  1116                           ;HD44780-IOE.c: 196: unsigned char index;
  1117                           ;HD44780-IOE.c: 198: switch (instruction) {
  1118  0160  296F               	goto	l2583
  1119  0161                     l2571:	
  1120                           
  1121                           ;HD44780-IOE.c: 200: index = 0;
  1122  0161  01BE               	clrf	lcd_flags_set@index^(0+128)
  1123                           
  1124                           ;HD44780-IOE.c: 201: break;
  1125  0162  2983               	goto	l2585
  1126  0163                     l500:	
  1127                           ;HD44780-IOE.c: 202: case 0x08:
  1128                           
  1129                           
  1130                           ;HD44780-IOE.c: 203: index = 1;
  1131  0163  01BE               	clrf	lcd_flags_set@index^(0+128)
  1132  0164  0ABE               	incf	lcd_flags_set@index^(0+128),f
  1133                           
  1134                           ;HD44780-IOE.c: 204: break;
  1135  0165  2983               	goto	l2585
  1136  0166                     l2573:	
  1137                           
  1138                           ;HD44780-IOE.c: 206: index = 2;
  1139  0166  3002               	movlw	2
  1140  0167  296D               	goto	L3
  1141  0168                     l2575:	
  1142                           ;HD44780-IOE.c: 207: break;
  1143                           
  1144                           
  1145                           ;HD44780-IOE.c: 209: index = 3;
  1146  0168  3003               	movlw	3
  1147  0169  296D               	goto	L3
  1148  016A                     l2577:	
  1149                           ;HD44780-IOE.c: 210: break;
  1150                           
  1151                           
  1152                           ;HD44780-IOE.c: 212: index = 4;
  1153  016A  3004               	movlw	4
  1154  016B  296D               	goto	L3
  1155  016C                     l2579:	
  1156                           ;HD44780-IOE.c: 213: break;
  1157                           
  1158                           
  1159                           ;HD44780-IOE.c: 215: index = 5;
  1160  016C  3005               	movlw	5
  1161  016D                     L3:	
  1162  016D  00BE               	movwf	lcd_flags_set@index^(0+128)
  1163                           
  1164                           ;HD44780-IOE.c: 216: break;
  1165  016E  2983               	goto	l2585
  1166  016F                     l2583:	
  1167  016F  083D               	movf	lcd_flags_set@instruction^(0+128),w
  1168                           
  1169                           ; Switch size 1, requested type "space"
  1170                           ; Number of cases is 6, Range of values is 4 to 128
  1171                           ; switch strategies available:
  1172                           ; Name         Instructions Cycles
  1173                           ; simple_byte           19    10 (average)
  1174                           ; direct_byte          259     9 (fixed)
  1175                           ; jumptable            263     9 (fixed)
  1176                           ;	Chosen strategy is simple_byte
  1177  0170  3A04               	xorlw	4	; case 4
  1178  0171  1903               	skipnz
  1179  0172  2961               	goto	l2571
  1180  0173  3A0C               	xorlw	12	; case 8
  1181  0174  1903               	skipnz
  1182  0175  2963               	goto	l500
  1183  0176  3A18               	xorlw	24	; case 16
  1184  0177  1903               	skipnz
  1185  0178  2966               	goto	l2573
  1186  0179  3A30               	xorlw	48	; case 32
  1187  017A  1903               	skipnz
  1188  017B  2968               	goto	l2575
  1189  017C  3A60               	xorlw	96	; case 64
  1190  017D  1903               	skipnz
  1191  017E  296A               	goto	l2577
  1192  017F  3AC0               	xorlw	192	; case 128
  1193  0180  1903               	skipnz
  1194  0181  296C               	goto	l2579
  1195  0182  2983               	goto	l2585
  1196  0183                     l2585:	
  1197                           
  1198                           ;HD44780-IOE.c: 219: if (value == 0)
  1199  0183  08BC               	movf	lcd_flags_set@value^(0+128),f
  1200  0184  1D03               	skipz
  1201  0185  298D               	goto	l2589
  1202                           
  1203                           ;HD44780-IOE.c: 220: display_config[index] &= ~flags;
  1204  0186  083E               	movf	lcd_flags_set@index^(0+128),w
  1205  0187  3EA7               	addlw	_display_config& (0+255)
  1206  0188  0086               	movwf	6
  1207  0189  0187               	clrf	7
  1208  018A  093B               	comf	lcd_flags_set@flags^(0+128),w
  1209  018B  0581               	andwf	1,f
  1210  018C  2993               	goto	l2591
  1211  018D                     l2589:	
  1212                           
  1213                           ;HD44780-IOE.c: 221: else
  1214                           ;HD44780-IOE.c: 222: display_config[index] |= flags;
  1215  018D  083E               	movf	lcd_flags_set@index^(0+128),w
  1216  018E  3EA7               	addlw	_display_config& (0+255)
  1217  018F  0086               	movwf	6
  1218  0190  0187               	clrf	7
  1219  0191  083B               	movf	lcd_flags_set@flags^(0+128),w
  1220  0192  0481               	iorwf	1,f
  1221  0193                     l2591:	
  1222                           
  1223                           ;HD44780-IOE.c: 224: lcd_command(instruction | display_config[index]);
  1224  0193  083E               	movf	lcd_flags_set@index^(0+128),w
  1225  0194  3EA7               	addlw	_display_config& (0+255)
  1226  0195  0086               	movwf	6
  1227  0196  0187               	clrf	7
  1228  0197  0801               	movf	1,w
  1229  0198  043D               	iorwf	lcd_flags_set@instruction^(0+128),w
  1230  0199  299A               	ljmp	_lcd_command
  1231  019A                     __end_of_lcd_flags_set:	
  1232  019A                     __ptext5:	
  1233 ;; *************** function _lcd_command *****************
  1234 ;; Defined at:
  1235 ;;		line 177 in file "HD44780-IOE.c"
  1236 ;; Parameters:    Size  Location     Type
  1237 ;;  command         1    wreg     unsigned char 
  1238 ;; Auto vars:     Size  Location     Type
  1239 ;;  command         1    9[BANK1 ] unsigned char 
  1240 ;; Return value:  Size  Location     Type
  1241 ;;		None               void
  1242 ;; Registers used:
  1243 ;;		wreg, status,2, status,0, pclath, cstack
  1244 ;; Tracked objects:
  1245 ;;		On entry : 0/4
  1246 ;;		On exit  : 0/0
  1247 ;;		Unchanged: 0/0
  1248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1249 ;;      Params:         0       0       0       0
  1250 ;;      Locals:         0       0       1       0
  1251 ;;      Temps:          0       0       1       0
  1252 ;;      Totals:         0       0       2       0
  1253 ;;Total ram usage:        2 bytes
  1254 ;; Hardware stack levels used:    1
  1255 ;; Hardware stack levels required when called:   15
  1256 ;; This function calls:
  1257 ;;		__send_byte
  1258 ;;		_mcp23017_ioa_send_byte
  1259 ;; This function is called by:
  1260 ;;		_lcd_initialize
  1261 ;;		_lcd_flags_set
  1262 ;; This function uses a non-reentrant model
  1263 ;;
  1264                           
  1265                           
  1266                           ;psect for function _lcd_command
  1267  019A                     _lcd_command:	
  1268                           
  1269                           ;incstack = 0
  1270 ;; hardware stack exceeded
  1271                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
  1272                           ;lcd_command@command stored from wreg
  1273  019A  0021               	movlb	1	; select bank1
  1274  019B  00BA               	movwf	lcd_command@command^(0+128)
  1275                           
  1276                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  1277  019C  122F               	bcf	_LCDPort^(0+128),4
  1278                           
  1279                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  1280  019D  21EE  3180         	fcall	_mcp23017_ioa_send_byte
  1281                           
  1282                           ;HD44780-IOE.c: 180: __nop();
  1283  019F  0000               	nop
  1284                           
  1285                           ;HD44780-IOE.c: 181: _send_byte(command);
  1286  01A0  0021               	movlb	1	; select bank1
  1287  01A1  083A               	movf	lcd_command@command^(0+128),w
  1288  01A2  22FC  3180         	fcall	__send_byte
  1289                           
  1290                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  1291  01A4  3085               	movlw	133
  1292  01A5  0021               	movlb	1	; select bank1
  1293  01A6  00B9               	movwf	??_lcd_command^(0+128)
  1294  01A7                     u1947:	
  1295  01A7  0BB9               	decfsz	??_lcd_command^(0+128),f
  1296  01A8  29A7               	goto	u1947
  1297  01A9  0008               	return
  1298  01AA                     __end_of_lcd_command:	
  1299  01AA                     __ptext12:	
  1300 ;; *************** function _mcp23017_write_reg *****************
  1301 ;; Defined at:
  1302 ;;		line 60 in file "mcp23017.c"
  1303 ;; Parameters:    Size  Location     Type
  1304 ;;  reg_address     1    wreg     unsigned char 
  1305 ;;  value           1    2[BANK1 ] unsigned char 
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  reg_address     1    3[BANK1 ] unsigned char 
  1308 ;; Return value:  Size  Location     Type
  1309 ;;		None               void
  1310 ;; Registers used:
  1311 ;;		wreg, status,2, status,0, pclath, cstack
  1312 ;; Tracked objects:
  1313 ;;		On entry : 1F/1
  1314 ;;		On exit  : 1F/4
  1315 ;;		Unchanged: 0/0
  1316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1317 ;;      Params:         0       0       1       0
  1318 ;;      Locals:         0       0       1       0
  1319 ;;      Temps:          0       0       0       0
  1320 ;;      Totals:         0       0       2       0
  1321 ;;Total ram usage:        2 bytes
  1322 ;; Hardware stack levels used:    1
  1323 ;; Hardware stack levels required when called:   11
  1324 ;; This function calls:
  1325 ;;		_i2c_send_address
  1326 ;;		_i2c_send_data
  1327 ;;		_i2c_start
  1328 ;;		_i2c_stop
  1329 ;; This function is called by:
  1330 ;;		_mcp23017_ioa_send_byte
  1331 ;;		_lcd_initialize
  1332 ;;		_keypad_init
  1333 ;; This function uses a non-reentrant model
  1334 ;;
  1335                           
  1336                           
  1337                           ;psect for function _mcp23017_write_reg
  1338  01AA                     _mcp23017_write_reg:	
  1339                           
  1340                           ;incstack = 0
  1341                           ; Regs used in _mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  1342                           ;mcp23017_write_reg@reg_address stored from wreg
  1343  01AA  00B4               	movwf	mcp23017_write_reg@reg_address^(0+128)
  1344                           
  1345                           ;mcp23017.c: 62: i2c_start();
  1346  01AB  2249  3180         	fcall	_i2c_start
  1347                           
  1348                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  1349  01AD  0021               	movlb	1	; select bank1
  1350  01AE  01B1               	clrf	i2c_send_address@mode^(0+128)
  1351  01AF  0830               	movf	_g_slave_address_7b^(0+128),w
  1352  01B0  223F  3180         	fcall	_i2c_send_address
  1353                           
  1354                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  1355  01B2  0021               	movlb	1	; select bank1
  1356  01B3  0834               	movf	mcp23017_write_reg@reg_address^(0+128),w
  1357  01B4  21F2  3180         	fcall	_i2c_send_data
  1358                           
  1359                           ;mcp23017.c: 65: i2c_send_data(value);
  1360  01B6  0021               	movlb	1	; select bank1
  1361  01B7  0833               	movf	mcp23017_write_reg@value^(0+128),w
  1362  01B8  21F2  3180         	fcall	_i2c_send_data
  1363                           
  1364                           ;mcp23017.c: 66: i2c_stop();
  1365  01BA  2A4F               	ljmp	l1995
  1366  01BB                     __end_of_mcp23017_write_reg:	
  1367  01BB                     __ptext8:	
  1368 ;; *************** function __set_4bit_interface *****************
  1369 ;; Defined at:
  1370 ;;		line 86 in file "HD44780-IOE.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;		None
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;		None
  1375 ;; Return value:  Size  Location     Type
  1376 ;;		None               void
  1377 ;; Registers used:
  1378 ;;		wreg, status,2, status,0, pclath, cstack
  1379 ;; Tracked objects:
  1380 ;;		On entry : 1F/1
  1381 ;;		On exit  : 0/0
  1382 ;;		Unchanged: 0/0
  1383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1384 ;;      Params:         0       0       0       0
  1385 ;;      Locals:         0       0       0       0
  1386 ;;      Temps:          0       0       1       0
  1387 ;;      Totals:         0       0       1       0
  1388 ;;Total ram usage:        1 bytes
  1389 ;; Hardware stack levels used:    1
  1390 ;; Hardware stack levels required when called:   14
  1391 ;; This function calls:
  1392 ;;		__send_nibble
  1393 ;;		_mcp23017_ioa_send_byte
  1394 ;; This function is called by:
  1395 ;;		_lcd_initialize
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function __set_4bit_interface
  1401  01BB                     __set_4bit_interface:	
  1402                           
  1403                           ;HD44780-IOE.c: 87: LCDPort.A4 = 0;
  1404                           
  1405                           ;incstack = 0
  1406                           ; Regs used in __set_4bit_interface: [wreg+status,2+status,0+pclath+cstack]
  1407  01BB  122F               	bcf	_LCDPort^(0+128),4
  1408                           
  1409                           ;HD44780-IOE.c: 88: mcp23017_ioa_send_byte();
  1410  01BC  21EE  3180         	fcall	_mcp23017_ioa_send_byte
  1411                           
  1412                           ;HD44780-IOE.c: 89: __nop();
  1413  01BE  0000               	nop
  1414                           
  1415                           ;HD44780-IOE.c: 90: _send_nibble(0b0010);
  1416  01BF  3002               	movlw	2
  1417  01C0  21C8  3180         	fcall	__send_nibble
  1418                           
  1419                           ;HD44780-IOE.c: 91: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  1420  01C2  3085               	movlw	133
  1421  01C3  0021               	movlb	1	; select bank1
  1422  01C4  00B8               	movwf	??__set_4bit_interface^(0+128)
  1423  01C5                     u1957:	
  1424  01C5  0BB8               	decfsz	??__set_4bit_interface^(0+128),f
  1425  01C6  29C5               	goto	u1957
  1426  01C7  0008               	return
  1427  01C8                     __end_of__set_4bit_interface:	
  1428  01C8                     __ptext9:	
  1429 ;; *************** function __send_nibble *****************
  1430 ;; Defined at:
  1431 ;;		line 65 in file "HD44780-IOE.c"
  1432 ;; Parameters:    Size  Location     Type
  1433 ;;  data            1    wreg     unsigned char 
  1434 ;; Auto vars:     Size  Location     Type
  1435 ;;  data            1    6[BANK1 ] unsigned char 
  1436 ;; Return value:  Size  Location     Type
  1437 ;;		None               void
  1438 ;; Registers used:
  1439 ;;		wreg, status,2, status,0, pclath, cstack
  1440 ;; Tracked objects:
  1441 ;;		On entry : 0/1
  1442 ;;		On exit  : 0/0
  1443 ;;		Unchanged: 0/0
  1444 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1445 ;;      Params:         0       0       0       0
  1446 ;;      Locals:         0       0       1       0
  1447 ;;      Temps:          0       0       2       0
  1448 ;;      Totals:         0       0       3       0
  1449 ;;Total ram usage:        3 bytes
  1450 ;; Hardware stack levels used:    1
  1451 ;; Hardware stack levels required when called:   13
  1452 ;; This function calls:
  1453 ;;		_mcp23017_ioa_send_byte
  1454 ;; This function is called by:
  1455 ;;		__send_byte
  1456 ;;		__set_4bit_interface
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function __send_nibble
  1462  01C8                     __send_nibble:	
  1463                           
  1464                           ;incstack = 0
  1465 ;; hardware stack exceeded
  1466                           ; Regs used in __send_nibble: [wreg+status,2+status,0+pclath+cstack]
  1467                           ;__send_nibble@data stored from wreg
  1468  01C8  0021               	movlb	1	; select bank1
  1469  01C9  00B7               	movwf	__send_nibble@data^(0+128)
  1470                           
  1471                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  1472  01CA  30F0               	movlw	240
  1473  01CB  05AF               	andwf	_LCDPort^(0+128),f
  1474                           
  1475                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  1476  01CC  0837               	movf	__send_nibble@data^(0+128),w
  1477  01CD  390F               	andlw	15
  1478  01CE  04AF               	iorwf	_LCDPort^(0+128),f
  1479                           
  1480                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  1481  01CF  21EE  3180         	fcall	_mcp23017_ioa_send_byte
  1482                           
  1483                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  1484  01D1  0021               	movlb	1	; select bank1
  1485  01D2  16AF               	bsf	_LCDPort^(0+128),5
  1486                           
  1487                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  1488  01D3  21EE  3180         	fcall	_mcp23017_ioa_send_byte
  1489                           
  1490                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  1491  01D5  3003               	movlw	3
  1492  01D6  0021               	movlb	1	; select bank1
  1493  01D7  00B6               	movwf	(??__send_nibble^(0+128)+1)
  1494  01D8  3097               	movlw	151
  1495  01D9  00B5               	movwf	??__send_nibble^(0+128)
  1496  01DA                     u1967:	
  1497  01DA  0BB5               	decfsz	??__send_nibble^(0+128),f
  1498  01DB  29DA               	goto	u1967
  1499  01DC  0BB6               	decfsz	(??__send_nibble^(0+128)+1),f
  1500  01DD  29DA               	goto	u1967
  1501  01DE  3200               	nop2
  1502                           
  1503                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  1504  01DF  0021               	movlb	1	; select bank1
  1505  01E0  12AF               	bcf	_LCDPort^(0+128),5
  1506                           
  1507                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  1508  01E1  21EE  3180         	fcall	_mcp23017_ioa_send_byte
  1509                           
  1510                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  1511  01E3  3003               	movlw	3
  1512  01E4  0021               	movlb	1	; select bank1
  1513  01E5  00B6               	movwf	(??__send_nibble^(0+128)+1)
  1514  01E6  3097               	movlw	151
  1515  01E7  00B5               	movwf	??__send_nibble^(0+128)
  1516  01E8                     u1977:	
  1517  01E8  0BB5               	decfsz	??__send_nibble^(0+128),f
  1518  01E9  29E8               	goto	u1977
  1519  01EA  0BB6               	decfsz	(??__send_nibble^(0+128)+1),f
  1520  01EB  29E8               	goto	u1977
  1521  01EC  3200               	nop2
  1522  01ED  0008               	return
  1523  01EE                     __end_of__send_nibble:	
  1524  01EE                     __ptext10:	
  1525 ;; *************** function _mcp23017_ioa_send_byte *****************
  1526 ;; Defined at:
  1527 ;;		line 59 in file "HD44780-IOE.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;		None               void
  1534 ;; Registers used:
  1535 ;;		wreg, status,2, status,0, pclath, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 1F/1
  1538 ;;		On exit  : 1F/4
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1541 ;;      Params:         0       0       0       0
  1542 ;;      Locals:         0       0       0       0
  1543 ;;      Temps:          0       0       0       0
  1544 ;;      Totals:         0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:   12
  1548 ;; This function calls:
  1549 ;;		_mcp23017_write_reg
  1550 ;; This function is called by:
  1551 ;;		__send_nibble
  1552 ;;		__set_4bit_interface
  1553 ;;		_lcd_command
  1554 ;;		_lcd_backlight
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           
  1559                           ;psect for function _mcp23017_ioa_send_byte
  1560  01EE                     _mcp23017_ioa_send_byte:	
  1561  01EE                     l2039:	
  1562                           ;incstack = 0
  1563                           ; Regs used in _mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  1564                           
  1565                           
  1566                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  1567  01EE  082F               	movf	_LCDPort^(0+128),w
  1568  01EF  00B3               	movwf	mcp23017_write_reg@value^(0+128)
  1569  01F0  3012               	movlw	18
  1570  01F1  29AA               	ljmp	_mcp23017_write_reg
  1571  01F2                     __end_of_mcp23017_ioa_send_byte:	
  1572  01F2                     __ptext21:	
  1573 ;; *************** function _i2c_send_data *****************
  1574 ;; Defined at:
  1575 ;;		line 115 in file "pic12f1840_i2c.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;  data            1    wreg     unsigned char 
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;  data            1    0[BANK1 ] unsigned char 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;		None               void
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 1A/1
  1586 ;;		On exit  : 1F/4
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1589 ;;      Params:         0       0       0       0
  1590 ;;      Locals:         0       0       1       0
  1591 ;;      Temps:          0       0       0       0
  1592 ;;      Totals:         0       0       1       0
  1593 ;;Total ram usage:        1 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:   10
  1596 ;; This function calls:
  1597 ;;		_i2c_wait
  1598 ;; This function is called by:
  1599 ;;		_mcp23017_write_reg
  1600 ;;		_ds1307_get_clock
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           
  1604                           
  1605                           ;psect for function _i2c_send_data
  1606  01F2                     _i2c_send_data:	
  1607                           
  1608                           ;incstack = 0
  1609                           ; Regs used in _i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  1610                           ;i2c_send_data@data stored from wreg
  1611  01F2  0021               	movlb	1	; select bank1
  1612  01F3  00B1               	movwf	i2c_send_data@data^(0+128)
  1613                           
  1614                           ;pic12f1840_i2c.c: 116: i2c_wait();
  1615  01F4  2237               	fcall	_i2c_wait
  1616                           
  1617                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  1618  01F5  0021               	movlb	1	; select bank1
  1619  01F6  0831               	movf	i2c_send_data@data^(0+128),w
  1620  01F7  0024               	movlb	4	; select bank4
  1621  01F8  0091               	movwf	17	;volatile
  1622  01F9  0008               	return
  1623  01FA                     __end_of_i2c_send_data:	
  1624  01FA                     __ptext18:	
  1625 ;; *************** function _ds1307_get_clock *****************
  1626 ;; Defined at:
  1627 ;;		line 140 in file "ds1307.c"
  1628 ;; Parameters:    Size  Location     Type
  1629 ;;		None
  1630 ;; Auto vars:     Size  Location     Type
  1631 ;;  r               1    2[BANK1 ] unsigned char 
  1632 ;; Return value:  Size  Location     Type
  1633 ;;		None               void
  1634 ;; Registers used:
  1635 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1636 ;; Tracked objects:
  1637 ;;		On entry : 1F/4
  1638 ;;		On exit  : 1F/4
  1639 ;;		Unchanged: 0/0
  1640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1641 ;;      Params:         0       0       0       0
  1642 ;;      Locals:         0       0       1       0
  1643 ;;      Temps:          0       0       0       0
  1644 ;;      Totals:         0       0       1       0
  1645 ;;Total ram usage:        1 bytes
  1646 ;; Hardware stack levels used:    1
  1647 ;; Hardware stack levels required when called:   11
  1648 ;; This function calls:
  1649 ;;		_i2c_read_data
  1650 ;;		_i2c_restart
  1651 ;;		_i2c_send_ack
  1652 ;;		_i2c_send_address
  1653 ;;		_i2c_send_data
  1654 ;;		_i2c_start
  1655 ;;		_i2c_stop
  1656 ;; This function is called by:
  1657 ;;		_ds1307_init
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function _ds1307_get_clock
  1663  01FA                     _ds1307_get_clock:	
  1664  01FA                     l2355:	
  1665                           ;incstack = 0
  1666                           ; Regs used in _ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1667                           
  1668                           
  1669                           ;ds1307.c: 143: i2c_start();
  1670  01FA  2249  3180         	fcall	_i2c_start
  1671                           
  1672                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  1673  01FC  0021               	movlb	1	; select bank1
  1674  01FD  3068               	movlw	104
  1675  01FE  01B1               	clrf	i2c_send_address@mode^(0+128)
  1676  01FF  223F  3180         	fcall	_i2c_send_address
  1677                           
  1678                           ;ds1307.c: 145: i2c_send_data(0x00);
  1679  0201  3000               	movlw	0
  1680  0202  21F2  3180         	fcall	_i2c_send_data
  1681                           
  1682                           ;ds1307.c: 146: i2c_restart();
  1683  0204  224C  3180         	fcall	_i2c_restart
  1684                           
  1685                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  1686  0206  0021               	movlb	1	; select bank1
  1687  0207  3068               	movlw	104
  1688  0208  01B1               	clrf	i2c_send_address@mode^(0+128)
  1689  0209  0AB1               	incf	i2c_send_address@mode^(0+128),f
  1690  020A  223F  3180         	fcall	_i2c_send_address
  1691                           
  1692                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  1693  020C  0021               	movlb	1	; select bank1
  1694  020D  01B3               	clrf	ds1307_get_clock@r^(0+128)
  1695  020E                     l2363:	
  1696                           
  1697                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  1698  020E  0833               	movf	ds1307_get_clock@r^(0+128),w
  1699  020F  3EA0               	addlw	_g_reg_data& (0+255)
  1700  0210  0086               	movwf	6
  1701  0211  0187               	clrf	7
  1702  0212  2224  3180         	fcall	_i2c_read_data
  1703  0214  0081               	movwf	1
  1704                           
  1705                           ;ds1307.c: 151: i2c_send_ack(0);
  1706  0215  3000               	movlw	0
  1707  0216  222C  3180         	fcall	_i2c_send_ack
  1708  0218  0021               	movlb	1	; select bank1
  1709  0219  3007               	movlw	7
  1710  021A  0AB3               	incf	ds1307_get_clock@r^(0+128),f
  1711  021B  0233               	subwf	ds1307_get_clock@r^(0+128),w
  1712  021C  1C03               	skipc
  1713  021D  2A0E               	goto	l2363
  1714                           
  1715                           ;ds1307.c: 152: }
  1716                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  1717  021E  2224  3180         	fcall	_i2c_read_data
  1718                           
  1719                           ;ds1307.c: 154: i2c_send_ack(1);
  1720  0220  3001               	movlw	1
  1721  0221  222C  3180         	fcall	_i2c_send_ack
  1722                           
  1723                           ;ds1307.c: 155: i2c_stop();
  1724  0223  2A4F               	ljmp	l1995
  1725  0224                     __end_of_ds1307_get_clock:	
  1726  0224                     __ptext25:	
  1727 ;; *************** function _i2c_read_data *****************
  1728 ;; Defined at:
  1729 ;;		line 120 in file "pic12f1840_i2c.c"
  1730 ;; Parameters:    Size  Location     Type
  1731 ;;		None
  1732 ;; Auto vars:     Size  Location     Type
  1733 ;;  read_data       1    0[BANK1 ] unsigned char 
  1734 ;; Return value:  Size  Location     Type
  1735 ;;                  1    wreg      unsigned char 
  1736 ;; Registers used:
  1737 ;;		wreg, status,2, status,0, pclath, cstack
  1738 ;; Tracked objects:
  1739 ;;		On entry : 1F/1
  1740 ;;		On exit  : 1F/1
  1741 ;;		Unchanged: 0/0
  1742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1743 ;;      Params:         0       0       0       0
  1744 ;;      Locals:         0       0       1       0
  1745 ;;      Temps:          0       0       0       0
  1746 ;;      Totals:         0       0       1       0
  1747 ;;Total ram usage:        1 bytes
  1748 ;; Hardware stack levels used:    1
  1749 ;; Hardware stack levels required when called:   10
  1750 ;; This function calls:
  1751 ;;		_i2c_wait
  1752 ;; This function is called by:
  1753 ;;		_ds1307_get_clock
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           
  1758                           ;psect for function _i2c_read_data
  1759  0224                     _i2c_read_data:	
  1760                           
  1761                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  1762                           ;pic12f1840_i2c.c: 123: i2c_wait();
  1763                           
  1764                           ;incstack = 0
  1765                           ; Regs used in _i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  1766  0224  2237  3180         	fcall	_i2c_wait
  1767                           
  1768                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  1769  0226  1596               	bsf	22,3	;volatile
  1770                           
  1771                           ;pic12f1840_i2c.c: 125: i2c_wait();
  1772  0227  2237               	fcall	_i2c_wait
  1773                           
  1774                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  1775  0228  0811               	movf	17,w	;volatile
  1776  0229  0021               	movlb	1	; select bank1
  1777  022A  00B1               	movwf	i2c_read_data@read_data^(0+128)
  1778                           
  1779                           ;pic12f1840_i2c.c: 128: return read_data;
  1780  022B  0008               	return
  1781  022C                     __end_of_i2c_read_data:	
  1782  022C                     __ptext23:	
  1783 ;; *************** function _i2c_send_ack *****************
  1784 ;; Defined at:
  1785 ;;		line 97 in file "pic12f1840_i2c.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;  ack             1    wreg     unsigned char 
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;  ack             1    0[BANK1 ] unsigned char 
  1790 ;; Return value:  Size  Location     Type
  1791 ;;		None               void
  1792 ;; Registers used:
  1793 ;;		wreg, status,2, status,0, pclath, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 1F/1
  1796 ;;		On exit  : 1F/4
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1799 ;;      Params:         0       0       0       0
  1800 ;;      Locals:         0       0       1       0
  1801 ;;      Temps:          0       0       0       0
  1802 ;;      Totals:         0       0       1       0
  1803 ;;Total ram usage:        1 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:   10
  1806 ;; This function calls:
  1807 ;;		_i2c_wait
  1808 ;; This function is called by:
  1809 ;;		_ds1307_get_clock
  1810 ;; This function uses a non-reentrant model
  1811 ;;
  1812                           
  1813                           
  1814                           ;psect for function _i2c_send_ack
  1815  022C                     _i2c_send_ack:	
  1816                           
  1817                           ;incstack = 0
  1818                           ; Regs used in _i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  1819                           ;i2c_send_ack@ack stored from wreg
  1820  022C  00B1               	movwf	i2c_send_ack@ack^(0+128)
  1821                           
  1822                           ;pic12f1840_i2c.c: 98: i2c_wait();
  1823  022D  2237               	fcall	_i2c_wait
  1824                           
  1825                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  1826  022E  0021               	movlb	1	; select bank1
  1827  022F  0831               	movf	i2c_send_ack@ack^(0+128),w
  1828  0230  0024               	movlb	4	; select bank4
  1829  0231  1D03               	skipz
  1830  0232  1696               	bsf	22,5	;volatile
  1831  0233  1903               	skipnz
  1832  0234  1296               	bcf	22,5	;volatile
  1833                           
  1834                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  1835  0235  1616               	bsf	22,4	;volatile
  1836  0236  0008               	return
  1837  0237                     __end_of_i2c_send_ack:	
  1838  0237                     __ptext26:	
  1839 ;; *************** function _i2c_wait *****************
  1840 ;; Defined at:
  1841 ;;		line 76 in file "pic12f1840_i2c.c"
  1842 ;; Parameters:    Size  Location     Type
  1843 ;;		None
  1844 ;; Auto vars:     Size  Location     Type
  1845 ;;		None
  1846 ;; Return value:  Size  Location     Type
  1847 ;;		None               void
  1848 ;; Registers used:
  1849 ;;		wreg, status,2
  1850 ;; Tracked objects:
  1851 ;;		On entry : 1A/4
  1852 ;;		On exit  : 1F/4
  1853 ;;		Unchanged: 0/0
  1854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1855 ;;      Params:         0       0       0       0
  1856 ;;      Locals:         0       0       0       0
  1857 ;;      Temps:          0       0       0       0
  1858 ;;      Totals:         0       0       0       0
  1859 ;;Total ram usage:        0 bytes
  1860 ;; Hardware stack levels used:    1
  1861 ;; Hardware stack levels required when called:    9
  1862 ;; This function calls:
  1863 ;;		Nothing
  1864 ;; This function is called by:
  1865 ;;		_i2c_start
  1866 ;;		_i2c_restart
  1867 ;;		_i2c_stop
  1868 ;;		_i2c_send_ack
  1869 ;;		_i2c_send_address
  1870 ;;		_i2c_send_data
  1871 ;;		_i2c_read_data
  1872 ;; This function uses a non-reentrant model
  1873 ;;
  1874                           
  1875                           
  1876                           ;psect for function _i2c_wait
  1877  0237                     _i2c_wait:	
  1878  0237                     l1987:	
  1879                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  1880                           
  1881                           ;incstack = 0
  1882                           ; Regs used in _i2c_wait: [wreg+status,2]
  1883                           
  1884  0237  0024               	movlb	4	; select bank4
  1885  0238  0816               	movf	22,w	;volatile
  1886  0239  391F               	andlw	31
  1887  023A  1D03               	btfss	3,2
  1888  023B  2A37               	goto	l1987
  1889  023C  1D14               	btfss	20,2	;volatile
  1890  023D  0008               	return
  1891  023E  2A37               	goto	l1987
  1892  023F                     __end_of_i2c_wait:	
  1893  023F                     __ptext22:	
  1894 ;; *************** function _i2c_send_address *****************
  1895 ;; Defined at:
  1896 ;;		line 108 in file "pic12f1840_i2c.c"
  1897 ;; Parameters:    Size  Location     Type
  1898 ;;  address         1    wreg     unsigned char 
  1899 ;;  mode            1    0[BANK1 ] unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  address         1    1[BANK1 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;		None               void
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 1F/1
  1908 ;;		On exit  : 1F/4
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1911 ;;      Params:         0       0       1       0
  1912 ;;      Locals:         0       0       1       0
  1913 ;;      Temps:          0       0       0       0
  1914 ;;      Totals:         0       0       2       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:   10
  1918 ;; This function calls:
  1919 ;;		_i2c_wait
  1920 ;; This function is called by:
  1921 ;;		_mcp23017_write_reg
  1922 ;;		_ds1307_get_clock
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _i2c_send_address
  1928  023F                     _i2c_send_address:	
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  1932                           ;i2c_send_address@address stored from wreg
  1933  023F  00B2               	movwf	i2c_send_address@address^(0+128)
  1934                           
  1935                           ;pic12f1840_i2c.c: 109: i2c_wait();
  1936  0240  2237               	fcall	_i2c_wait
  1937                           
  1938                           ;pic12f1840_i2c.c: 110: address <<= 1;
  1939  0241  0021               	movlb	1	; select bank1
  1940  0242  35B2               	lslf	i2c_send_address@address^(0+128),f
  1941                           
  1942                           ;pic12f1840_i2c.c: 111: address += mode;
  1943  0243  0831               	movf	i2c_send_address@mode^(0+128),w
  1944  0244  07B2               	addwf	i2c_send_address@address^(0+128),f
  1945                           
  1946                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  1947  0245  0832               	movf	i2c_send_address@address^(0+128),w
  1948  0246  0024               	movlb	4	; select bank4
  1949  0247  0091               	movwf	17	;volatile
  1950  0248  0008               	return
  1951  0249                     __end_of_i2c_send_address:	
  1952  0249                     __ptext20:	
  1953 ;; *************** function _i2c_start *****************
  1954 ;; Defined at:
  1955 ;;		line 82 in file "pic12f1840_i2c.c"
  1956 ;; Parameters:    Size  Location     Type
  1957 ;;		None
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;		None
  1960 ;; Return value:  Size  Location     Type
  1961 ;;		None               void
  1962 ;; Registers used:
  1963 ;;		wreg, status,2, status,0, pclath, cstack
  1964 ;; Tracked objects:
  1965 ;;		On entry : 1A/1
  1966 ;;		On exit  : 1F/4
  1967 ;;		Unchanged: 0/0
  1968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1969 ;;      Params:         0       0       0       0
  1970 ;;      Locals:         0       0       0       0
  1971 ;;      Temps:          0       0       0       0
  1972 ;;      Totals:         0       0       0       0
  1973 ;;Total ram usage:        0 bytes
  1974 ;; Hardware stack levels used:    1
  1975 ;; Hardware stack levels required when called:   10
  1976 ;; This function calls:
  1977 ;;		_i2c_wait
  1978 ;; This function is called by:
  1979 ;;		_mcp23017_write_reg
  1980 ;;		_ds1307_get_clock
  1981 ;; This function uses a non-reentrant model
  1982 ;;
  1983                           
  1984                           
  1985                           ;psect for function _i2c_start
  1986  0249                     _i2c_start:	
  1987                           
  1988                           ;pic12f1840_i2c.c: 83: i2c_wait();
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in _i2c_start: [wreg+status,2+status,0+pclath+cstack]
  1992  0249  2237               	fcall	_i2c_wait
  1993                           
  1994                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  1995  024A  1416               	bsf	22,0	;volatile
  1996  024B  0008               	return
  1997  024C                     __end_of_i2c_start:	
  1998  024C                     __ptext24:	
  1999 ;; *************** function _i2c_restart *****************
  2000 ;; Defined at:
  2001 ;;		line 87 in file "pic12f1840_i2c.c"
  2002 ;; Parameters:    Size  Location     Type
  2003 ;;		None
  2004 ;; Auto vars:     Size  Location     Type
  2005 ;;		None
  2006 ;; Return value:  Size  Location     Type
  2007 ;;		None               void
  2008 ;; Registers used:
  2009 ;;		wreg, status,2, status,0, pclath, cstack
  2010 ;; Tracked objects:
  2011 ;;		On entry : 1F/4
  2012 ;;		On exit  : 1F/4
  2013 ;;		Unchanged: 0/0
  2014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2015 ;;      Params:         0       0       0       0
  2016 ;;      Locals:         0       0       0       0
  2017 ;;      Temps:          0       0       0       0
  2018 ;;      Totals:         0       0       0       0
  2019 ;;Total ram usage:        0 bytes
  2020 ;; Hardware stack levels used:    1
  2021 ;; Hardware stack levels required when called:   10
  2022 ;; This function calls:
  2023 ;;		_i2c_wait
  2024 ;; This function is called by:
  2025 ;;		_ds1307_get_clock
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _i2c_restart
  2031  024C                     _i2c_restart:	
  2032                           
  2033                           ;pic12f1840_i2c.c: 88: i2c_wait();
  2034                           
  2035                           ;incstack = 0
  2036                           ; Regs used in _i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  2037  024C  2237               	fcall	_i2c_wait
  2038                           
  2039                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  2040  024D  1496               	bsf	22,1	;volatile
  2041  024E  0008               	return
  2042  024F                     __end_of_i2c_restart:	
  2043  024F                     __ptext19:	
  2044 ;; *************** function _i2c_stop *****************
  2045 ;; Defined at:
  2046 ;;		line 92 in file "pic12f1840_i2c.c"
  2047 ;; Parameters:    Size  Location     Type
  2048 ;;		None
  2049 ;; Auto vars:     Size  Location     Type
  2050 ;;		None
  2051 ;; Return value:  Size  Location     Type
  2052 ;;		None               void
  2053 ;; Registers used:
  2054 ;;		wreg, status,2, status,0, pclath, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 1F/4
  2057 ;;		On exit  : 1F/4
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2060 ;;      Params:         0       0       0       0
  2061 ;;      Locals:         0       0       0       0
  2062 ;;      Temps:          0       0       0       0
  2063 ;;      Totals:         0       0       0       0
  2064 ;;Total ram usage:        0 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:   10
  2067 ;; This function calls:
  2068 ;;		_i2c_wait
  2069 ;; This function is called by:
  2070 ;;		_mcp23017_write_reg
  2071 ;;		_ds1307_get_clock
  2072 ;; This function uses a non-reentrant model
  2073 ;;
  2074                           
  2075                           
  2076                           ;psect for function _i2c_stop
  2077  024F                     _i2c_stop:	
  2078  024F                     l1995:	
  2079                           ;incstack = 0
  2080                           ; Regs used in _i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  2081                           
  2082                           
  2083                           ;pic12f1840_i2c.c: 93: i2c_wait();
  2084  024F  2237               	fcall	_i2c_wait
  2085                           
  2086                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  2087  0250  1516               	bsf	22,2	;volatile
  2088  0251  0008               	return
  2089  0252                     __end_of_i2c_stop:	
  2090  0252                     __ptext17:	
  2091 ;; *************** function _ds1307_init *****************
  2092 ;; Defined at:
  2093 ;;		line 81 in file "ds1307.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;		None               void
  2100 ;; Registers used:
  2101 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2102 ;; Tracked objects:
  2103 ;;		On entry : 1F/4
  2104 ;;		On exit  : 1F/4
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2107 ;;      Params:         0       0       0       0
  2108 ;;      Locals:         0       0       0       0
  2109 ;;      Temps:          0       0       0       0
  2110 ;;      Totals:         0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:   12
  2114 ;; This function calls:
  2115 ;;		_ds1307_get_clock
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           
  2122                           ;psect for function _ds1307_init
  2123  0252                     _ds1307_init:	
  2124                           
  2125                           ;ds1307.c: 83: ds1307_get_clock();
  2126                           
  2127                           ;incstack = 0
  2128                           ; Regs used in _ds1307_init: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2129  0252  29FA               	ljmp	l2355
  2130  0253                     __end_of_ds1307_init:	
  2131  0253                     __ptext15:	
  2132 ;; *************** function _i2c_init *****************
  2133 ;; Defined at:
  2134 ;;		line 51 in file "pic12f1840_i2c.c"
  2135 ;; Parameters:    Size  Location     Type
  2136 ;;  clock_hz        4   13[BANK1 ] unsigned long 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;		None               void
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, pclath, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 17F/1
  2145 ;;		On exit  : 17F/4
  2146 ;;		Unchanged: 160/0
  2147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2148 ;;      Params:         0       0       4       0
  2149 ;;      Locals:         0       0       0       0
  2150 ;;      Temps:          0       0       0       0
  2151 ;;      Totals:         0       0       4       0
  2152 ;;Total ram usage:        4 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:   10
  2155 ;; This function calls:
  2156 ;;		___lldiv
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;; This function uses a non-reentrant model
  2160 ;;
  2161                           
  2162                           
  2163                           ;psect for function _i2c_init
  2164  0253                     _i2c_init:	
  2165                           
  2166                           ;pic12f1840_i2c.c: 53: ANSELAbits.ANSA1 = 0; TRISAbits.TRISA1 = 1;
  2167                           
  2168                           ;incstack = 0
  2169                           ; Regs used in _i2c_init: [wreg+status,2+status,0+pclath+cstack]
  2170  0253  0023               	movlb	3	; select bank3
  2171  0254  108C               	bcf	12,1	;volatile
  2172  0255  0021               	movlb	1	; select bank1
  2173  0256  148C               	bsf	12,1	;volatile
  2174                           
  2175                           ;pic12f1840_i2c.c: 54: ANSELAbits.ANSA2 = 0; TRISAbits.TRISA2 = 1;
  2176  0257  0023               	movlb	3	; select bank3
  2177  0258  110C               	bcf	12,2	;volatile
  2178  0259  0021               	movlb	1	; select bank1
  2179  025A  150C               	bsf	12,2	;volatile
  2180                           
  2181                           ;pic12f1840_i2c.c: 57: SSPCON1 = 0b00101000;
  2182  025B  3028               	movlw	40
  2183  025C  0024               	movlb	4	; select bank4
  2184  025D  0095               	movwf	21	;volatile
  2185                           
  2186                           ;pic12f1840_i2c.c: 58: SSPCON2 = 0x00;
  2187  025E  0196               	clrf	22	;volatile
  2188                           
  2189                           ;pic12f1840_i2c.c: 64: SSPADD = (uint8_t) ((32000000UL) / (4 * clock_hz)) - 1;
  2190  025F  0021               	movlb	1	; select bank1
  2191  0260  0841               	movf	(i2c_init@clock_hz+3)^(0+128),w
  2192  0261  00B4               	movwf	(___lldiv@divisor+3)^(0+128)
  2193  0262  0840               	movf	(i2c_init@clock_hz+2)^(0+128),w
  2194  0263  00B3               	movwf	(___lldiv@divisor+2)^(0+128)
  2195  0264  083F               	movf	(i2c_init@clock_hz+1)^(0+128),w
  2196  0265  00B2               	movwf	(___lldiv@divisor+1)^(0+128)
  2197  0266  083E               	movf	i2c_init@clock_hz^(0+128),w
  2198  0267  00B1               	movwf	___lldiv@divisor^(0+128)
  2199  0268  3002               	movlw	2
  2200  0269                     u1685:	
  2201  0269  35B1               	lslf	___lldiv@divisor^(0+128),f
  2202  026A  0DB2               	rlf	(___lldiv@divisor+1)^(0+128),f
  2203  026B  0DB3               	rlf	(___lldiv@divisor+2)^(0+128),f
  2204  026C  0DB4               	rlf	(___lldiv@divisor+3)^(0+128),f
  2205  026D  0B89               	decfsz	9,f
  2206  026E  2A69               	goto	u1685
  2207  026F  3001               	movlw	1
  2208  0270  00B8               	movwf	(___lldiv@dividend+3)^(0+128)
  2209  0271  30E8               	movlw	232
  2210  0272  00B7               	movwf	(___lldiv@dividend+2)^(0+128)
  2211  0273  3048               	movlw	72
  2212  0274  00B6               	movwf	(___lldiv@dividend+1)^(0+128)
  2213  0275  01B5               	clrf	___lldiv@dividend^(0+128)
  2214  0276  228E  3180         	fcall	___lldiv
  2215  0278  0831               	movf	?___lldiv^(0+128),w
  2216  0279  3EFF               	addlw	255
  2217  027A  0024               	movlb	4	; select bank4
  2218  027B  0092               	movwf	18	;volatile
  2219                           
  2220                           ;pic12f1840_i2c.c: 69: if (clock_hz == 400000) {
  2221  027C  0021               	movlb	1	; select bank1
  2222  027D  0840               	movf	(i2c_init@clock_hz+2)^(0+128),w
  2223  027E  3A06               	xorlw	6
  2224  027F  3080               	movlw	128
  2225  0280  1903               	skipnz
  2226  0281  063E               	xorwf	i2c_init@clock_hz^(0+128),w
  2227  0282  301A               	movlw	26
  2228  0283  1903               	skipnz
  2229  0284  063F               	xorwf	(i2c_init@clock_hz+1)^(0+128),w
  2230  0285  0441               	iorwf	(i2c_init@clock_hz+3)^(0+128),w
  2231  0286  1D03               	skipz
  2232  0287  2A8B               	goto	l21
  2233                           
  2234                           ;pic12f1840_i2c.c: 70: SSPSTATbits.SMP = 0;
  2235  0288  0024               	movlb	4	; select bank4
  2236  0289  1394               	bcf	20,7	;volatile
  2237                           
  2238                           ;pic12f1840_i2c.c: 71: } else {
  2239  028A  0008               	return
  2240  028B                     l21:	
  2241                           
  2242                           ;pic12f1840_i2c.c: 72: SSPSTATbits.SMP = 1;
  2243  028B  0024               	movlb	4	; select bank4
  2244  028C  1794               	bsf	20,7	;volatile
  2245  028D  0008               	return
  2246  028E                     __end_of_i2c_init:	
  2247  028E                     __ptext16:	
  2248 ;; *************** function ___lldiv *****************
  2249 ;; Defined at:
  2250 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lldiv.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  divisor         4    0[BANK1 ] unsigned long 
  2253 ;;  dividend        4    4[BANK1 ] unsigned long 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  quotient        4    8[BANK1 ] unsigned long 
  2256 ;;  counter         1   12[BANK1 ] unsigned char 
  2257 ;; Return value:  Size  Location     Type
  2258 ;;                  4    0[BANK1 ] unsigned long 
  2259 ;; Registers used:
  2260 ;;		wreg, status,2, status,0
  2261 ;; Tracked objects:
  2262 ;;		On entry : 17F/1
  2263 ;;		On exit  : 17F/1
  2264 ;;		Unchanged: 160/0
  2265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2266 ;;      Params:         0       0       8       0
  2267 ;;      Locals:         0       0       5       0
  2268 ;;      Temps:          0       0       0       0
  2269 ;;      Totals:         0       0      13       0
  2270 ;;Total ram usage:       13 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:    9
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_i2c_init
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           
  2281                           ;psect for function ___lldiv
  2282  028E                     ___lldiv:	
  2283                           
  2284                           ;incstack = 0
  2285                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2286  028E  01B9               	clrf	___lldiv@quotient^(0+128)
  2287  028F  01BA               	clrf	(___lldiv@quotient+1)^(0+128)
  2288  0290  01BB               	clrf	(___lldiv@quotient+2)^(0+128)
  2289  0291  01BC               	clrf	(___lldiv@quotient+3)^(0+128)
  2290  0292  0834               	movf	(___lldiv@divisor+3)^(0+128),w
  2291  0293  0433               	iorwf	(___lldiv@divisor+2)^(0+128),w
  2292  0294  0432               	iorwf	(___lldiv@divisor+1)^(0+128),w
  2293  0295  0431               	iorwf	___lldiv@divisor^(0+128),w
  2294  0296  1903               	skipnz
  2295  0297  2AC4               	goto	l2619
  2296  0298  01BD               	clrf	___lldiv@counter^(0+128)
  2297  0299                     L4:	
  2298  0299  0ABD               	incf	___lldiv@counter^(0+128),f
  2299  029A  1BB4               	btfsc	(___lldiv@divisor+3)^(0+128),7
  2300  029B  2AA1               	goto	l2607
  2301  029C  35B1               	lslf	___lldiv@divisor^(0+128),f
  2302  029D  0DB2               	rlf	(___lldiv@divisor+1)^(0+128),f
  2303  029E  0DB3               	rlf	(___lldiv@divisor+2)^(0+128),f
  2304  029F  0DB4               	rlf	(___lldiv@divisor+3)^(0+128),f
  2305  02A0  2A99               	goto	L4
  2306  02A1                     l2607:	
  2307  02A1  35B9               	lslf	___lldiv@quotient^(0+128),f
  2308  02A2  0DBA               	rlf	(___lldiv@quotient+1)^(0+128),f
  2309  02A3  0DBB               	rlf	(___lldiv@quotient+2)^(0+128),f
  2310  02A4  0DBC               	rlf	(___lldiv@quotient+3)^(0+128),f
  2311  02A5  0834               	movf	(___lldiv@divisor+3)^(0+128),w
  2312  02A6  0238               	subwf	(___lldiv@dividend+3)^(0+128),w
  2313  02A7  1D03               	skipz
  2314  02A8  2AB3               	goto	u1655
  2315  02A9  0833               	movf	(___lldiv@divisor+2)^(0+128),w
  2316  02AA  0237               	subwf	(___lldiv@dividend+2)^(0+128),w
  2317  02AB  1D03               	skipz
  2318  02AC  2AB3               	goto	u1655
  2319  02AD  0832               	movf	(___lldiv@divisor+1)^(0+128),w
  2320  02AE  0236               	subwf	(___lldiv@dividend+1)^(0+128),w
  2321  02AF  1D03               	skipz
  2322  02B0  2AB3               	goto	u1655
  2323  02B1  0831               	movf	___lldiv@divisor^(0+128),w
  2324  02B2  0235               	subwf	___lldiv@dividend^(0+128),w
  2325  02B3                     u1655:	
  2326  02B3  1C03               	skipc
  2327  02B4  2ABE               	goto	l2615
  2328  02B5  0831               	movf	___lldiv@divisor^(0+128),w
  2329  02B6  02B5               	subwf	___lldiv@dividend^(0+128),f
  2330  02B7  0832               	movf	(___lldiv@divisor+1)^(0+128),w
  2331  02B8  3BB6               	subwfb	(___lldiv@dividend+1)^(0+128),f
  2332  02B9  0833               	movf	(___lldiv@divisor+2)^(0+128),w
  2333  02BA  3BB7               	subwfb	(___lldiv@dividend+2)^(0+128),f
  2334  02BB  0834               	movf	(___lldiv@divisor+3)^(0+128),w
  2335  02BC  3BB8               	subwfb	(___lldiv@dividend+3)^(0+128),f
  2336  02BD  1439               	bsf	___lldiv@quotient^(0+128),0
  2337  02BE                     l2615:	
  2338  02BE  36B4               	lsrf	(___lldiv@divisor+3)^(0+128),f
  2339  02BF  0CB3               	rrf	(___lldiv@divisor+2)^(0+128),f
  2340  02C0  0CB2               	rrf	(___lldiv@divisor+1)^(0+128),f
  2341  02C1  0CB1               	rrf	___lldiv@divisor^(0+128),f
  2342  02C2  0BBD               	decfsz	___lldiv@counter^(0+128),f
  2343  02C3  2AA1               	goto	l2607
  2344  02C4                     l2619:	
  2345  02C4  083C               	movf	(___lldiv@quotient+3)^(0+128),w
  2346  02C5  00B4               	movwf	(?___lldiv+3)^(0+128)
  2347  02C6  083B               	movf	(___lldiv@quotient+2)^(0+128),w
  2348  02C7  00B3               	movwf	(?___lldiv+2)^(0+128)
  2349  02C8  083A               	movf	(___lldiv@quotient+1)^(0+128),w
  2350  02C9  00B2               	movwf	(?___lldiv+1)^(0+128)
  2351  02CA  0839               	movf	___lldiv@quotient^(0+128),w
  2352  02CB  00B1               	movwf	?___lldiv^(0+128)
  2353  02CC  0008               	return
  2354  02CD                     __end_of___lldiv:	
  2355  02CD                     __ptext13:	
  2356 ;; *************** function _init *****************
  2357 ;; Defined at:
  2358 ;;		line 96 in file "main.c"
  2359 ;; Parameters:    Size  Location     Type
  2360 ;;  load_value      2    2[BANK1 ] unsigned int 
  2361 ;;  prescaler       1    4[BANK1 ] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;		None               void
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0, pclath, cstack
  2368 ;; Tracked objects:
  2369 ;;		On entry : 1F/1
  2370 ;;		On exit  : 1F/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2373 ;;      Params:         0       0       3       0
  2374 ;;      Locals:         0       0       0       0
  2375 ;;      Temps:          0       0       1       0
  2376 ;;      Totals:         0       0       4       0
  2377 ;;Total ram usage:        4 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:   10
  2380 ;; This function calls:
  2381 ;;		_write_t1
  2382 ;; This function is called by:
  2383 ;;		_main
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _init
  2389  02CD                     _init:	
  2390                           
  2391                           ;main.c: 98: INTCONbits.GIE = 0;
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in _init: [wreg+status,2+status,0+pclath+cstack]
  2395  02CD  138B               	bcf	11,7	;volatile
  2396                           
  2397                           ;main.c: 99: PIR1bits.TMR1IF = 0;
  2398  02CE  0020               	movlb	0	; select bank0
  2399  02CF  1011               	bcf	17,0	;volatile
  2400                           
  2401                           ;main.c: 100: PIE1bits.TMR1IE = 1;
  2402  02D0  0021               	movlb	1	; select bank1
  2403  02D1  1411               	bsf	17,0	;volatile
  2404                           
  2405                           ;main.c: 101: INTCONbits.PEIE = 1;
  2406  02D2  170B               	bsf	11,6	;volatile
  2407                           
  2408                           ;main.c: 102: INTCONbits.GIE = 1;
  2409  02D3  178B               	bsf	11,7	;volatile
  2410                           
  2411                           ;main.c: 105: T1CONbits.TMR1ON = 0;
  2412  02D4  0020               	movlb	0	; select bank0
  2413  02D5  1018               	bcf	24,0	;volatile
  2414                           
  2415                           ;main.c: 106: T1CONbits.TMR1CS = 00;
  2416  02D6  303F               	movlw	-193
  2417  02D7  0598               	andwf	24,f	;volatile
  2418                           
  2419                           ;main.c: 107: T1CONbits.T1CKPS = prescaler;
  2420  02D8  0021               	movlb	1	; select bank1
  2421  02D9  0835               	movf	init@prescaler^(0+128),w
  2422  02DA  00B6               	movwf	??_init^(0+128)
  2423  02DB  0EB6               	swapf	??_init^(0+128),f
  2424  02DC  0020               	movlb	0	; select bank0
  2425  02DD  0818               	movf	24,w	;volatile
  2426  02DE  0021               	movlb	1	; select bank1
  2427  02DF  0636               	xorwf	??_init^(0+128),w
  2428  02E0  39CF               	andlw	-49
  2429  02E1  0636               	xorwf	??_init^(0+128),w
  2430  02E2  0020               	movlb	0	; select bank0
  2431  02E3  0098               	movwf	24	;volatile
  2432                           
  2433                           ;main.c: 108: g_reload_value = 65536 - load_value;
  2434  02E4  0021               	movlb	1	; select bank1
  2435  02E5  01AD               	clrf	_g_reload_value^(0+128)
  2436  02E6  01AE               	clrf	(_g_reload_value+1)^(0+128)
  2437  02E7  0833               	movf	init@load_value^(0+128),w
  2438  02E8  02AD               	subwf	_g_reload_value^(0+128),f
  2439  02E9  0834               	movf	(init@load_value+1)^(0+128),w
  2440  02EA  3BAE               	subwfb	(_g_reload_value+1)^(0+128),f
  2441                           
  2442                           ;main.c: 109: write_t1(g_reload_value);
  2443  02EB  082E               	movf	(_g_reload_value+1)^(0+128),w
  2444  02EC  00B2               	movwf	(write_t1@value+1)^(0+128)
  2445  02ED  082D               	movf	_g_reload_value^(0+128),w
  2446  02EE  00B1               	movwf	write_t1@value^(0+128)
  2447  02EF  2308               	fcall	_write_t1
  2448                           
  2449                           ;main.c: 110: T1CONbits.TMR1ON = 1;
  2450  02F0  1418               	bsf	24,0	;volatile
  2451                           
  2452                           ;main.c: 112: g_bl = 0;
  2453  02F1  01CA               	clrf	_g_bl
  2454                           
  2455                           ;main.c: 113: g_clk_pos = CLK_POS_HR;
  2456  02F2  01CB               	clrf	_g_clk_pos
  2457  02F3  0ACB               	incf	_g_clk_pos,f
  2458  02F4  0008               	return
  2459  02F5                     __end_of_init:	
  2460  02F5                     __ptext7:	
  2461 ;; *************** function _lcd_backlight *****************
  2462 ;; Defined at:
  2463 ;;		line 227 in file "HD44780-IOE.c"
  2464 ;; Parameters:    Size  Location     Type
  2465 ;;  state           1    wreg     unsigned char 
  2466 ;; Auto vars:     Size  Location     Type
  2467 ;;  state           1    4[BANK1 ] unsigned char 
  2468 ;; Return value:  Size  Location     Type
  2469 ;;		None               void
  2470 ;; Registers used:
  2471 ;;		wreg, status,2, status,0, pclath, cstack
  2472 ;; Tracked objects:
  2473 ;;		On entry : 0/1
  2474 ;;		On exit  : 1F/4
  2475 ;;		Unchanged: 0/0
  2476 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2477 ;;      Params:         0       0       0       0
  2478 ;;      Locals:         0       0       1       0
  2479 ;;      Temps:          0       0       0       0
  2480 ;;      Totals:         0       0       1       0
  2481 ;;Total ram usage:        1 bytes
  2482 ;; Hardware stack levels used:    1
  2483 ;; Hardware stack levels required when called:   13
  2484 ;; This function calls:
  2485 ;;		_mcp23017_ioa_send_byte
  2486 ;; This function is called by:
  2487 ;;		_lcd_initialize
  2488 ;; This function uses a non-reentrant model
  2489 ;;
  2490                           
  2491                           
  2492                           ;psect for function _lcd_backlight
  2493  02F5                     _lcd_backlight:	
  2494                           
  2495                           ;incstack = 0
  2496                           ; Regs used in _lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  2497                           ;lcd_backlight@state stored from wreg
  2498  02F5  0021               	movlb	1	; select bank1
  2499  02F6  00B5               	movwf	lcd_backlight@state^(0+128)
  2500                           
  2501                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  2502  02F7  0835               	movf	lcd_backlight@state^(0+128),w
  2503  02F8  132F               	bcf	_LCDPort^(0+128),6
  2504  02F9  1D03               	skipz
  2505  02FA  172F               	bsf	_LCDPort^(0+128),6
  2506                           
  2507                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  2508  02FB  29EE               	ljmp	l2039
  2509  02FC                     __end_of_lcd_backlight:	
  2510  02FC                     __ptext6:	
  2511 ;; *************** function __send_byte *****************
  2512 ;; Defined at:
  2513 ;;		line 81 in file "HD44780-IOE.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  data            1    wreg     unsigned char 
  2516 ;; Auto vars:     Size  Location     Type
  2517 ;;  data            1    7[BANK1 ] unsigned char 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;		None               void
  2520 ;; Registers used:
  2521 ;;		wreg, status,2, status,0, pclath, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 1F/1
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2527 ;;      Params:         0       0       0       0
  2528 ;;      Locals:         0       0       1       0
  2529 ;;      Temps:          0       0       0       0
  2530 ;;      Totals:         0       0       1       0
  2531 ;;Total ram usage:        1 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:   14
  2534 ;; This function calls:
  2535 ;;		__send_nibble
  2536 ;; This function is called by:
  2537 ;;		_lcd_command
  2538 ;; This function uses a non-reentrant model
  2539 ;;
  2540                           
  2541                           
  2542                           ;psect for function __send_byte
  2543  02FC                     __send_byte:	
  2544                           
  2545                           ;incstack = 0
  2546 ;; hardware stack exceeded
  2547                           ; Regs used in __send_byte: [wreg+status,2+status,0+pclath+cstack]
  2548                           ;__send_byte@data stored from wreg
  2549  02FC  00B8               	movwf	__send_byte@data^(0+128)
  2550                           
  2551                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  2552  02FD  0E38               	swapf	__send_byte@data^(0+128),w
  2553  02FE  390F               	andlw	15
  2554  02FF  21C8  3180         	fcall	__send_nibble
  2555                           
  2556                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  2557  0301  0021               	movlb	1	; select bank1
  2558  0302  0838               	movf	__send_byte@data^(0+128),w
  2559  0303  390F               	andlw	15
  2560  0304  29C8               	ljmp	__send_nibble
  2561  0305                     __end_of__send_byte:	
  2562  0305                     __ptext1:	
  2563 ;; *************** function _mcp23017_init *****************
  2564 ;; Defined at:
  2565 ;;		line 50 in file "mcp23017.c"
  2566 ;; Parameters:    Size  Location     Type
  2567 ;;  address_3b      1    wreg     unsigned char 
  2568 ;; Auto vars:     Size  Location     Type
  2569 ;;  address_3b      1    1[BANK1 ] unsigned char 
  2570 ;; Return value:  Size  Location     Type
  2571 ;;		None               void
  2572 ;; Registers used:
  2573 ;;		wreg, status,2, status,0, pclath, cstack
  2574 ;; Tracked objects:
  2575 ;;		On entry : 17F/4
  2576 ;;		On exit  : 17F/1
  2577 ;;		Unchanged: 160/0
  2578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2579 ;;      Params:         0       0       0       0
  2580 ;;      Locals:         0       0       1       0
  2581 ;;      Temps:          0       0       0       0
  2582 ;;      Totals:         0       0       1       0
  2583 ;;Total ram usage:        1 bytes
  2584 ;; Hardware stack levels used:    1
  2585 ;; Hardware stack levels required when called:   10
  2586 ;; This function calls:
  2587 ;;		_mcp23017_set_slave_addr
  2588 ;; This function is called by:
  2589 ;;		_main
  2590 ;; This function uses a non-reentrant model
  2591 ;;
  2592                           
  2593                           
  2594                           ;psect for function _mcp23017_init
  2595  0305                     _mcp23017_init:	
  2596                           
  2597                           ;incstack = 0
  2598                           ; Regs used in _mcp23017_init: [wreg+status,2+status,0+pclath+cstack]
  2599                           ;mcp23017_init@address_3b stored from wreg
  2600  0305  0021               	movlb	1	; select bank1
  2601  0306  00B2               	movwf	mcp23017_init@address_3b^(0+128)
  2602                           
  2603                           ;mcp23017.c: 52: mcp23017_set_slave_addr(address_3b);
  2604  0307  2B14               	ljmp	_mcp23017_set_slave_addr
  2605  0308                     __end_of_mcp23017_init:	
  2606  0308                     __ptext14:	
  2607 ;; *************** function _write_t1 *****************
  2608 ;; Defined at:
  2609 ;;		line 116 in file "main.c"
  2610 ;; Parameters:    Size  Location     Type
  2611 ;;  value           2    0[BANK1 ] unsigned int 
  2612 ;; Auto vars:     Size  Location     Type
  2613 ;;		None
  2614 ;; Return value:  Size  Location     Type
  2615 ;;		None               void
  2616 ;; Registers used:
  2617 ;;		wreg
  2618 ;; Tracked objects:
  2619 ;;		On entry : 1F/1
  2620 ;;		On exit  : 1F/0
  2621 ;;		Unchanged: 0/0
  2622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2623 ;;      Params:         0       0       2       0
  2624 ;;      Locals:         0       0       0       0
  2625 ;;      Temps:          0       0       0       0
  2626 ;;      Totals:         0       0       2       0
  2627 ;;Total ram usage:        2 bytes
  2628 ;; Hardware stack levels used:    1
  2629 ;; Hardware stack levels required when called:    9
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_init
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function _write_t1
  2639  0308                     _write_t1:	
  2640                           
  2641                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  2642                           
  2643                           ;incstack = 0
  2644                           ; Regs used in _write_t1: [wreg]
  2645  0308  0020               	movlb	0	; select bank0
  2646  0309  1018               	bcf	24,0	;volatile
  2647                           
  2648                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  2649  030A  0021               	movlb	1	; select bank1
  2650  030B  0832               	movf	(write_t1@value+1)^(0+128),w
  2651  030C  0020               	movlb	0	; select bank0
  2652  030D  0097               	movwf	23	;volatile
  2653                           
  2654                           ;main.c: 121: TMR1L = (uint8_t) value;
  2655  030E  0021               	movlb	1	; select bank1
  2656  030F  0831               	movf	write_t1@value^(0+128),w
  2657  0310  0020               	movlb	0	; select bank0
  2658  0311  0096               	movwf	22	;volatile
  2659                           
  2660                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  2661  0312  1418               	bsf	24,0	;volatile
  2662  0313  0008               	return
  2663  0314                     __end_of_write_t1:	
  2664  0314                     __ptext2:	
  2665 ;; *************** function _mcp23017_set_slave_addr *****************
  2666 ;; Defined at:
  2667 ;;		line 55 in file "mcp23017.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  address_3b      1    wreg     unsigned char 
  2670 ;; Auto vars:     Size  Location     Type
  2671 ;;  address_3b      1    0[BANK1 ] unsigned char 
  2672 ;; Return value:  Size  Location     Type
  2673 ;;		None               void
  2674 ;; Registers used:
  2675 ;;		wreg, status,2
  2676 ;; Tracked objects:
  2677 ;;		On entry : 17F/1
  2678 ;;		On exit  : 17F/1
  2679 ;;		Unchanged: 160/0
  2680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2681 ;;      Params:         0       0       0       0
  2682 ;;      Locals:         0       0       1       0
  2683 ;;      Temps:          0       0       0       0
  2684 ;;      Totals:         0       0       1       0
  2685 ;;Total ram usage:        1 bytes
  2686 ;; Hardware stack levels used:    1
  2687 ;; Hardware stack levels required when called:    9
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_mcp23017_init
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           
  2695                           
  2696                           ;psect for function _mcp23017_set_slave_addr
  2697  0314                     _mcp23017_set_slave_addr:	
  2698                           
  2699                           ;incstack = 0
  2700                           ; Regs used in _mcp23017_set_slave_addr: [wreg+status,2]
  2701                           ;mcp23017_set_slave_addr@address_3b stored from wreg
  2702  0314  00B1               	movwf	mcp23017_set_slave_addr@address_3b^(0+128)
  2703                           
  2704                           ;mcp23017.c: 57: g_slave_address_7b = (0b0100 << 3) | address_3b;
  2705  0315  3820               	iorlw	32
  2706  0316  00B0               	movwf	_g_slave_address_7b^(0+128)
  2707  0317  0008               	return
  2708  0318                     __end_of_mcp23017_set_slave_addr:	
  2709                           
  2710                           	psect	bssBANK0
  2711  004A                     __pbssBANK0:	
  2712  004A                     _g_bl:	
  2713  004A                     	ds	1
  2714  004B                     _g_clk_pos:	
  2715  004B                     	ds	1
  2716  004C                     _g_counter1:	
  2717  004C                     	ds	1
  2718  004D                     _g_last_valid_key:	
  2719  004D                     	ds	1
  2720  004E                     _g_old_key:	
  2721  004E                     	ds	1
  2722                           
  2723                           	psect	bssBANK1
  2724  00A0                     __pbssBANK1:	
  2725  00A0                     _g_reg_data:	
  2726  00A0                     	ds	7
  2727  00A7                     _display_config:	
  2728  00A7                     	ds	6
  2729  00AD                     _g_reload_value:	
  2730  00AD                     	ds	2
  2731  00AF                     _LCDPort:	
  2732  00AF                     	ds	1
  2733  00B0                     _g_slave_address_7b:	
  2734  00B0                     	ds	1
  2735                           
  2736                           	psect	clrtext
  2737  07D4                     clear_ram0:	
  2738                           ;	Called with FSR0 containing the base address, and
  2739                           ;	WREG with the size to clear
  2740                           
  2741  07D4  0064               	clrwdt	;clear the watchdog before getting into this loop
  2742  07D5                     clrloop0:	
  2743  07D5  0180               	clrf	0	;clear RAM location pointed to by FSR
  2744  07D6  3101               	addfsr 0,1
  2745  07D7  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2746  07D8  2FD5               	goto	clrloop0	;have we reached the end yet?
  2747  07D9  3400               	retlw	0	;all done for this memory range, return
  2748                           
  2749                           	psect	cstackBANK1
  2750  00B1                     __pcstackBANK1:	
  2751  00B1                     ??_mcp23017_set_slave_addr:	
  2752  00B1                     ?_write_t1:	
  2753                           ; 0 bytes @ 0x0
  2754                           
  2755  00B1                     ??_i2c_wait:	
  2756                           ; 0 bytes @ 0x0
  2757                           
  2758  00B1                     ??_i2c_start:	
  2759                           ; 0 bytes @ 0x0
  2760                           
  2761  00B1                     ??_i2c_restart:	
  2762                           ; 0 bytes @ 0x0
  2763                           
  2764  00B1                     ??_i2c_stop:	
  2765                           ; 0 bytes @ 0x0
  2766                           
  2767  00B1                     ??_i2c_send_ack:	
  2768                           ; 0 bytes @ 0x0
  2769                           
  2770  00B1                     ?_i2c_send_address:	
  2771                           ; 0 bytes @ 0x0
  2772                           
  2773  00B1                     ??_i2c_send_data:	
  2774                           ; 0 bytes @ 0x0
  2775                           
  2776  00B1                     ??_i2c_read_data:	
  2777                           ; 0 bytes @ 0x0
  2778                           
  2779  00B1                     ?___lldiv:	
  2780                           ; 0 bytes @ 0x0
  2781                           
  2782  00B1                     i2c_send_ack@ack:	
  2783                           ; 4 bytes @ 0x0
  2784                           
  2785  00B1                     i2c_send_address@mode:	
  2786                           ; 1 bytes @ 0x0
  2787                           
  2788  00B1                     i2c_send_data@data:	
  2789                           ; 1 bytes @ 0x0
  2790                           
  2791  00B1                     i2c_read_data@read_data:	
  2792                           ; 1 bytes @ 0x0
  2793                           
  2794  00B1                     mcp23017_set_slave_addr@address_3b:	
  2795                           ; 1 bytes @ 0x0
  2796                           
  2797  00B1                     write_t1@value:	
  2798                           ; 1 bytes @ 0x0
  2799                           
  2800  00B1                     ___lldiv@divisor:	
  2801                           ; 2 bytes @ 0x0
  2802                           
  2803                           
  2804                           ; 4 bytes @ 0x0
  2805  00B1                     	ds	1
  2806  00B2                     ??_i2c_send_address:	
  2807  00B2                     ??_mcp23017_init:	
  2808                           ; 0 bytes @ 0x1
  2809                           
  2810  00B2                     i2c_send_address@address:	
  2811                           ; 0 bytes @ 0x1
  2812                           
  2813  00B2                     mcp23017_init@address_3b:	
  2814                           ; 1 bytes @ 0x1
  2815                           
  2816                           
  2817                           ; 1 bytes @ 0x1
  2818  00B2                     	ds	1
  2819  00B3                     ?_init:	
  2820  00B3                     ??_write_t1:	
  2821                           ; 0 bytes @ 0x2
  2822                           
  2823  00B3                     ??_ds1307_get_clock:	
  2824                           ; 0 bytes @ 0x2
  2825                           
  2826  00B3                     ?_mcp23017_write_reg:	
  2827                           ; 0 bytes @ 0x2
  2828                           
  2829  00B3                     mcp23017_write_reg@value:	
  2830                           ; 0 bytes @ 0x2
  2831                           
  2832  00B3                     ds1307_get_clock@r:	
  2833                           ; 1 bytes @ 0x2
  2834                           
  2835  00B3                     init@load_value:	
  2836                           ; 1 bytes @ 0x2
  2837                           
  2838                           
  2839                           ; 2 bytes @ 0x2
  2840  00B3                     	ds	1
  2841  00B4                     ??_ds1307_init:	
  2842  00B4                     ??_mcp23017_write_reg:	
  2843                           ; 0 bytes @ 0x3
  2844                           
  2845  00B4                     mcp23017_write_reg@reg_address:	
  2846                           ; 0 bytes @ 0x3
  2847                           
  2848                           
  2849                           ; 1 bytes @ 0x3
  2850  00B4                     	ds	1
  2851  00B5                     ??_keypad_init:	
  2852  00B5                     ??_lcd_backlight:	
  2853                           ; 0 bytes @ 0x4
  2854                           
  2855  00B5                     ??_mcp23017_ioa_send_byte:	
  2856                           ; 0 bytes @ 0x4
  2857                           
  2858  00B5                     ??__send_nibble:	
  2859                           ; 0 bytes @ 0x4
  2860                           
  2861  00B5                     init@prescaler:	
  2862                           ; 0 bytes @ 0x4
  2863                           
  2864  00B5                     lcd_backlight@state:	
  2865                           ; 1 bytes @ 0x4
  2866                           
  2867  00B5                     ___lldiv@dividend:	
  2868                           ; 1 bytes @ 0x4
  2869                           
  2870                           
  2871                           ; 4 bytes @ 0x4
  2872  00B5                     	ds	1
  2873  00B6                     ??_init:	
  2874                           
  2875                           ; 0 bytes @ 0x5
  2876  00B6                     	ds	1
  2877  00B7                     __send_nibble@data:	
  2878                           
  2879                           ; 1 bytes @ 0x6
  2880  00B7                     	ds	1
  2881  00B8                     ??__send_byte:	
  2882  00B8                     ??__set_4bit_interface:	
  2883                           ; 0 bytes @ 0x7
  2884                           
  2885  00B8                     __send_byte@data:	
  2886                           ; 0 bytes @ 0x7
  2887                           
  2888                           
  2889                           ; 1 bytes @ 0x7
  2890  00B8                     	ds	1
  2891  00B9                     ??_lcd_command:	
  2892  00B9                     ??___lldiv:	
  2893                           ; 0 bytes @ 0x8
  2894                           
  2895  00B9                     ___lldiv@quotient:	
  2896                           ; 0 bytes @ 0x8
  2897                           
  2898                           
  2899                           ; 4 bytes @ 0x8
  2900  00B9                     	ds	1
  2901  00BA                     lcd_command@command:	
  2902                           
  2903                           ; 1 bytes @ 0x9
  2904  00BA                     	ds	1
  2905  00BB                     ?_lcd_flags_set:	
  2906  00BB                     lcd_flags_set@flags:	
  2907                           ; 0 bytes @ 0xA
  2908                           
  2909                           
  2910                           ; 1 bytes @ 0xA
  2911  00BB                     	ds	1
  2912  00BC                     lcd_flags_set@value:	
  2913                           
  2914                           ; 1 bytes @ 0xB
  2915  00BC                     	ds	1
  2916  00BD                     ??_lcd_flags_set:	
  2917  00BD                     lcd_flags_set@instruction:	
  2918                           ; 0 bytes @ 0xC
  2919                           
  2920  00BD                     ___lldiv@counter:	
  2921                           ; 1 bytes @ 0xC
  2922                           
  2923                           
  2924                           ; 1 bytes @ 0xC
  2925  00BD                     	ds	1
  2926  00BE                     ?_i2c_init:	
  2927  00BE                     lcd_flags_set@index:	
  2928                           ; 0 bytes @ 0xD
  2929                           
  2930  00BE                     i2c_init@clock_hz:	
  2931                           ; 1 bytes @ 0xD
  2932                           
  2933                           
  2934                           ; 4 bytes @ 0xD
  2935  00BE                     	ds	1
  2936  00BF                     ??_lcd_initialize:	
  2937                           
  2938                           ; 0 bytes @ 0xE
  2939  00BF                     	ds	2
  2940  00C1                     lcd_initialize@i:	
  2941                           
  2942                           ; 1 bytes @ 0x10
  2943  00C1                     	ds	1
  2944  00C2                     ??_i2c_init:	
  2945  00C2                     ??_main:	
  2946                           ; 0 bytes @ 0x11
  2947                           
  2948                           
  2949                           	psect	cstackCOMMON
  2950  0070                     __pcstackCOMMON:	
  2951                           ; 0 bytes @ 0x11
  2952                           
  2953  0070                     ?_mcp23017_set_slave_addr:	
  2954  0070                     ?_keypad_init:	
  2955                           ; 0 bytes @ 0x0
  2956                           
  2957  0070                     ?_ds1307_init:	
  2958                           ; 0 bytes @ 0x0
  2959                           
  2960  0070                     ?_lcd_initialize:	
  2961                           ; 0 bytes @ 0x0
  2962                           
  2963  0070                     ?_ds1307_stop_clock:	
  2964                           ; 0 bytes @ 0x0
  2965                           
  2966  0070                     ?_ds1307_get_clock:	
  2967                           ; 0 bytes @ 0x0
  2968                           
  2969  0070                     ??_ds1307_is_12hr_mode:	
  2970                           ; 0 bytes @ 0x0
  2971                           
  2972  0070                     ?_ds1307_set_pm_am:	
  2973                           ; 0 bytes @ 0x0
  2974                           
  2975  0070                     ??_ds1307_set_pm_am:	
  2976                           ; 0 bytes @ 0x0
  2977                           
  2978  0070                     ?_ds1307_set_hours:	
  2979                           ; 0 bytes @ 0x0
  2980                           
  2981  0070                     ?_ds1307_set_minutes:	
  2982                           ; 0 bytes @ 0x0
  2983                           
  2984  0070                     ?_ds1307_set_seconds:	
  2985                           ; 0 bytes @ 0x0
  2986                           
  2987  0070                     ?_ds1307_set_month:	
  2988                           ; 0 bytes @ 0x0
  2989                           
  2990  0070                     ?_ds1307_set_day_of_month:	
  2991                           ; 0 bytes @ 0x0
  2992                           
  2993  0070                     ?_ds1307_set_year:	
  2994                           ; 0 bytes @ 0x0
  2995                           
  2996  0070                     ?_ds1307_switch_to_24hr:	
  2997                           ; 0 bytes @ 0x0
  2998                           
  2999  0070                     ?_ds1307_switch_to_12hr:	
  3000                           ; 0 bytes @ 0x0
  3001                           
  3002  0070                     ?_ds1307_set_clock:	
  3003                           ; 0 bytes @ 0x0
  3004                           
  3005  0070                     ?_ds1307_time_formatted:	
  3006                           ; 0 bytes @ 0x0
  3007                           
  3008  0070                     ?_ds1307_date_formatted:	
  3009                           ; 0 bytes @ 0x0
  3010                           
  3011  0070                     ?_lcd_backlight:	
  3012                           ; 0 bytes @ 0x0
  3013                           
  3014  0070                     ?_lcd_data:	
  3015                           ; 0 bytes @ 0x0
  3016                           
  3017  0070                     ?_lcd_command:	
  3018                           ; 0 bytes @ 0x0
  3019                           
  3020  0070                     ?_isdigit:	
  3021                           ; 0 bytes @ 0x0
  3022                           
  3023  0070                     ??_isdigit:	
  3024                           ; 1 bit 
  3025                           
  3026  0070                     ?_i2c_wait:	
  3027                           ; 0 bytes @ 0x0
  3028                           
  3029  0070                     ?_i2c_start:	
  3030                           ; 0 bytes @ 0x0
  3031                           
  3032  0070                     ?_i2c_restart:	
  3033                           ; 0 bytes @ 0x0
  3034                           
  3035  0070                     ?_i2c_stop:	
  3036                           ; 0 bytes @ 0x0
  3037                           
  3038  0070                     ?_i2c_send_ack:	
  3039                           ; 0 bytes @ 0x0
  3040                           
  3041  0070                     ?_i2c_send_data:	
  3042                           ; 0 bytes @ 0x0
  3043                           
  3044  0070                     ?_mcp23017_init:	
  3045                           ; 0 bytes @ 0x0
  3046                           
  3047  0070                     ?_main:	
  3048                           ; 0 bytes @ 0x0
  3049                           
  3050  0070                     ?_update_clock:	
  3051                           ; 0 bytes @ 0x0
  3052                           
  3053  0070                     ?_tmr_isr:	
  3054                           ; 0 bytes @ 0x0
  3055                           
  3056  0070                     ?_ds1307_start_clock:	
  3057                           ; 0 bytes @ 0x0
  3058                           
  3059  0070                     ?_ds1307_set_hr_mode:	
  3060                           ; 0 bytes @ 0x0
  3061                           
  3062  0070                     ??_ds1307_set_hr_mode:	
  3063                           ; 0 bytes @ 0x0
  3064                           
  3065  0070                     ?_mcp23017_ioa_send_byte:	
  3066                           ; 0 bytes @ 0x0
  3067                           
  3068  0070                     ?__send_nibble:	
  3069                           ; 0 bytes @ 0x0
  3070                           
  3071  0070                     ?__send_byte:	
  3072                           ; 0 bytes @ 0x0
  3073                           
  3074  0070                     ?__set_4bit_interface:	
  3075                           ; 0 bytes @ 0x0
  3076                           
  3077  0070                     ?i1_i2c_wait:	
  3078                           ; 0 bytes @ 0x0
  3079                           
  3080  0070                     ??i1_i2c_wait:	
  3081                           ; 0 bytes @ 0x0
  3082                           
  3083  0070                     ?i1_i2c_start:	
  3084                           ; 0 bytes @ 0x0
  3085                           
  3086  0070                     ??i1_i2c_start:	
  3087                           ; 0 bytes @ 0x0
  3088                           
  3089  0070                     ?i1_i2c_restart:	
  3090                           ; 0 bytes @ 0x0
  3091                           
  3092  0070                     ??i1_i2c_restart:	
  3093                           ; 0 bytes @ 0x0
  3094                           
  3095  0070                     ?i1_i2c_stop:	
  3096                           ; 0 bytes @ 0x0
  3097                           
  3098  0070                     ??i1_i2c_stop:	
  3099                           ; 0 bytes @ 0x0
  3100                           
  3101  0070                     ?i1_i2c_send_ack:	
  3102                           ; 0 bytes @ 0x0
  3103                           
  3104  0070                     ??i1_i2c_send_ack:	
  3105                           ; 0 bytes @ 0x0
  3106                           
  3107  0070                     ?i1_i2c_send_address:	
  3108                           ; 0 bytes @ 0x0
  3109                           
  3110  0070                     ?i1_i2c_send_data:	
  3111                           ; 0 bytes @ 0x0
  3112                           
  3113  0070                     ??i1_i2c_send_data:	
  3114                           ; 0 bytes @ 0x0
  3115                           
  3116  0070                     ??i1_i2c_read_data:	
  3117                           ; 0 bytes @ 0x0
  3118                           
  3119  0070                     ?i1_write_t1:	
  3120                           ; 0 bytes @ 0x0
  3121                           
  3122  0070                     ?i1_ds1307_get_clock:	
  3123                           ; 0 bytes @ 0x0
  3124                           
  3125  0070                     ?i1_mcp23017_ioa_send_byte:	
  3126                           ; 0 bytes @ 0x0
  3127                           
  3128  0070                     ?i1__send_nibble:	
  3129                           ; 0 bytes @ 0x0
  3130                           
  3131  0070                     ?i1__send_byte:	
  3132                           ; 0 bytes @ 0x0
  3133                           
  3134  0070                     ?i1_lcd_command:	
  3135                           ; 0 bytes @ 0x0
  3136                           
  3137  0070                     ?i1_lcd_backlight:	
  3138                           ; 0 bytes @ 0x0
  3139                           
  3140  0070                     ?_ds1307_is_12hr_mode:	
  3141                           ; 0 bytes @ 0x0
  3142                           
  3143  0070                     ?_ds1307_get_hours:	
  3144                           ; 1 bytes @ 0x0
  3145                           
  3146  0070                     ?_ds1307_is_pm:	
  3147                           ; 1 bytes @ 0x0
  3148                           
  3149  0070                     ?_ds1307_get_minutes:	
  3150                           ; 1 bytes @ 0x0
  3151                           
  3152  0070                     ?_ds1307_get_seconds:	
  3153                           ; 1 bytes @ 0x0
  3154                           
  3155  0070                     ?_ds1307_get_month:	
  3156                           ; 1 bytes @ 0x0
  3157                           
  3158  0070                     ?_ds1307_get_day_of_month:	
  3159                           ; 1 bytes @ 0x0
  3160                           
  3161  0070                     ?_ds1307_get_year:	
  3162                           ; 1 bytes @ 0x0
  3163                           
  3164  0070                     ?_keypad_read_key:	
  3165                           ; 1 bytes @ 0x0
  3166                           
  3167  0070                     ?_i2c_read_data:	
  3168                           ; 1 bytes @ 0x0
  3169                           
  3170  0070                     ?_mcp23017_read_reg:	
  3171                           ; 1 bytes @ 0x0
  3172                           
  3173  0070                     ?_adjust_val:	
  3174                           ; 1 bytes @ 0x0
  3175                           
  3176  0070                     ?_dec_to_bcd:	
  3177                           ; 1 bytes @ 0x0
  3178                           
  3179  0070                     ?_bcd_to_dec:	
  3180                           ; 1 bytes @ 0x0
  3181                           
  3182  0070                     ?_ds1307_read_addr:	
  3183                           ; 1 bytes @ 0x0
  3184                           
  3185  0070                     ?_keypad_scan:	
  3186                           ; 1 bytes @ 0x0
  3187                           
  3188  0070                     ?___bmul:	
  3189                           ; 1 bytes @ 0x0
  3190                           
  3191  0070                     ?___lbdiv:	
  3192                           ; 1 bytes @ 0x0
  3193                           
  3194  0070                     ?___lbmod:	
  3195                           ; 1 bytes @ 0x0
  3196                           
  3197  0070                     ?i1_i2c_read_data:	
  3198                           ; 1 bytes @ 0x0
  3199                           
  3200  0070                     ?___lwdiv:	
  3201                           ; 1 bytes @ 0x0
  3202                           
  3203  0070                     adjust_val@lim_dwn:	
  3204                           ; 2 bytes @ 0x0
  3205                           
  3206  0070                     ds1307_set_pm_am@pm_am:	
  3207                           ; 1 bytes @ 0x0
  3208                           
  3209  0070                     ds1307_set_hr_mode@mode:	
  3210                           ; 1 bytes @ 0x0
  3211                           
  3212  0070                     ___bmul@multiplicand:	
  3213                           ; 1 bytes @ 0x0
  3214                           
  3215  0070                     _isdigit$1061:	
  3216                           ; 1 bytes @ 0x0
  3217                           
  3218  0070                     ___lbdiv@divisor:	
  3219                           ; 1 bytes @ 0x0
  3220                           
  3221  0070                     ___lbmod@divisor:	
  3222                           ; 1 bytes @ 0x0
  3223                           
  3224  0070                     i1i2c_send_ack@ack:	
  3225                           ; 1 bytes @ 0x0
  3226                           
  3227  0070                     i1i2c_send_address@mode:	
  3228                           ; 1 bytes @ 0x0
  3229                           
  3230  0070                     i1i2c_send_data@data:	
  3231                           ; 1 bytes @ 0x0
  3232                           
  3233  0070                     i1i2c_read_data@read_data:	
  3234                           ; 1 bytes @ 0x0
  3235                           
  3236  0070                     ___lwdiv@divisor:	
  3237                           ; 1 bytes @ 0x0
  3238                           
  3239  0070                     i1write_t1@value:	
  3240                           ; 2 bytes @ 0x0
  3241                           
  3242                           
  3243                           ; 2 bytes @ 0x0
  3244  0070                     	ds	1
  3245  0071                     ??___bmul:	
  3246  0071                     ??___lbdiv:	
  3247                           ; 0 bytes @ 0x1
  3248                           
  3249  0071                     ??___lbmod:	
  3250                           ; 0 bytes @ 0x1
  3251                           
  3252  0071                     ??i1_i2c_send_address:	
  3253                           ; 0 bytes @ 0x1
  3254                           
  3255  0071                     adjust_val@lim_up:	
  3256                           ; 0 bytes @ 0x1
  3257                           
  3258  0071                     ___bmul@product:	
  3259                           ; 1 bytes @ 0x1
  3260                           
  3261  0071                     isdigit@c:	
  3262                           ; 1 bytes @ 0x1
  3263                           
  3264  0071                     ___lbdiv@dividend:	
  3265                           ; 1 bytes @ 0x1
  3266                           
  3267  0071                     i1i2c_send_address@address:	
  3268                           ; 1 bytes @ 0x1
  3269                           
  3270                           
  3271                           ; 1 bytes @ 0x1
  3272  0071                     	ds	1
  3273  0072                     ??_mcp23017_read_reg:	
  3274  0072                     ??_ds1307_read_addr:	
  3275                           ; 0 bytes @ 0x2
  3276                           
  3277  0072                     ?_ds1307_write_addr:	
  3278                           ; 0 bytes @ 0x2
  3279                           
  3280  0072                     ?i1_mcp23017_write_reg:	
  3281                           ; 0 bytes @ 0x2
  3282                           
  3283  0072                     ??i1_write_t1:	
  3284                           ; 0 bytes @ 0x2
  3285                           
  3286  0072                     ??i1_ds1307_get_clock:	
  3287                           ; 0 bytes @ 0x2
  3288                           
  3289  0072                     mcp23017_read_reg@reg_address:	
  3290                           ; 0 bytes @ 0x2
  3291                           
  3292  0072                     adjust_val@up_down:	
  3293                           ; 1 bytes @ 0x2
  3294                           
  3295  0072                     ds1307_read_addr@addr:	
  3296                           ; 1 bytes @ 0x2
  3297                           
  3298  0072                     ds1307_write_addr@value:	
  3299                           ; 1 bytes @ 0x2
  3300                           
  3301  0072                     ___bmul@multiplier:	
  3302                           ; 1 bytes @ 0x2
  3303                           
  3304  0072                     ___lbdiv@counter:	
  3305                           ; 1 bytes @ 0x2
  3306                           
  3307  0072                     ___lbmod@dividend:	
  3308                           ; 1 bytes @ 0x2
  3309                           
  3310  0072                     i1mcp23017_write_reg@value:	
  3311                           ; 1 bytes @ 0x2
  3312                           
  3313  0072                     i1ds1307_get_clock@r:	
  3314                           ; 1 bytes @ 0x2
  3315                           
  3316  0072                     ___lwdiv@dividend:	
  3317                           ; 1 bytes @ 0x2
  3318                           
  3319                           
  3320                           ; 2 bytes @ 0x2
  3321  0072                     	ds	1
  3322  0073                     ??_adjust_val:	
  3323  0073                     ??_bcd_to_dec:	
  3324                           ; 0 bytes @ 0x3
  3325                           
  3326  0073                     ??_ds1307_write_addr:	
  3327                           ; 0 bytes @ 0x3
  3328                           
  3329  0073                     ??i1_mcp23017_write_reg:	
  3330                           ; 0 bytes @ 0x3
  3331                           
  3332  0073                     mcp23017_read_reg@value:	
  3333                           ; 0 bytes @ 0x3
  3334                           
  3335  0073                     adjust_val@value:	
  3336                           ; 1 bytes @ 0x3
  3337                           
  3338  0073                     ds1307_read_addr@read_value:	
  3339                           ; 1 bytes @ 0x3
  3340                           
  3341  0073                     ds1307_write_addr@addr:	
  3342                           ; 1 bytes @ 0x3
  3343                           
  3344  0073                     ___lbdiv@quotient:	
  3345                           ; 1 bytes @ 0x3
  3346                           
  3347  0073                     ___lbmod@counter:	
  3348                           ; 1 bytes @ 0x3
  3349                           
  3350  0073                     i1mcp23017_write_reg@reg_address:	
  3351                           ; 1 bytes @ 0x3
  3352                           
  3353                           
  3354                           ; 1 bytes @ 0x3
  3355  0073                     	ds	1
  3356  0074                     ??_ds1307_stop_clock:	
  3357  0074                     ??_keypad_read_key:	
  3358                           ; 0 bytes @ 0x4
  3359                           
  3360  0074                     ??_ds1307_start_clock:	
  3361                           ; 0 bytes @ 0x4
  3362                           
  3363  0074                     ??_keypad_scan:	
  3364                           ; 0 bytes @ 0x4
  3365                           
  3366  0074                     ??___lwdiv:	
  3367                           ; 0 bytes @ 0x4
  3368                           
  3369  0074                     ??i1_mcp23017_ioa_send_byte:	
  3370                           ; 0 bytes @ 0x4
  3371                           
  3372  0074                     ??i1__send_nibble:	
  3373                           ; 0 bytes @ 0x4
  3374                           
  3375  0074                     ??i1_lcd_backlight:	
  3376                           ; 0 bytes @ 0x4
  3377                           
  3378  0074                     bcd_to_dec@bcd:	
  3379                           ; 0 bytes @ 0x4
  3380                           
  3381  0074                     ds1307_stop_clock@tsec:	
  3382                           ; 1 bytes @ 0x4
  3383                           
  3384  0074                     ds1307_start_clock@tsec:	
  3385                           ; 1 bytes @ 0x4
  3386                           
  3387  0074                     keypad_read_key@key:	
  3388                           ; 1 bytes @ 0x4
  3389                           
  3390  0074                     ___lbmod@rem:	
  3391                           ; 1 bytes @ 0x4
  3392                           
  3393  0074                     i1lcd_backlight@state:	
  3394                           ; 1 bytes @ 0x4
  3395                           
  3396  0074                     ___lwdiv@quotient:	
  3397                           ; 1 bytes @ 0x4
  3398                           
  3399                           
  3400                           ; 2 bytes @ 0x4
  3401  0074                     	ds	1
  3402  0075                     ??_ds1307_get_hours:	
  3403  0075                     ??_ds1307_get_minutes:	
  3404                           ; 0 bytes @ 0x5
  3405                           
  3406  0075                     ??_ds1307_get_seconds:	
  3407                           ; 0 bytes @ 0x5
  3408                           
  3409  0075                     ??_ds1307_get_month:	
  3410                           ; 0 bytes @ 0x5
  3411                           
  3412  0075                     ??_ds1307_get_day_of_month:	
  3413                           ; 0 bytes @ 0x5
  3414                           
  3415  0075                     ??_ds1307_get_year:	
  3416                           ; 0 bytes @ 0x5
  3417                           
  3418  0075                     ??_ds1307_set_clock:	
  3419                           ; 0 bytes @ 0x5
  3420                           
  3421  0075                     ??_dec_to_bcd:	
  3422                           ; 0 bytes @ 0x5
  3423                           
  3424  0075                     ds1307_set_clock@r:	
  3425                           ; 0 bytes @ 0x5
  3426                           
  3427  0075                     ds1307_get_hours@hours:	
  3428                           ; 1 bytes @ 0x5
  3429                           
  3430                           
  3431                           ; 1 bytes @ 0x5
  3432  0075                     	ds	1
  3433  0076                     ??_ds1307_is_pm:	
  3434  0076                     dec_to_bcd@dec:	
  3435                           ; 0 bytes @ 0x6
  3436                           
  3437  0076                     ___lwdiv@counter:	
  3438                           ; 1 bytes @ 0x6
  3439                           
  3440  0076                     i1__send_nibble@data:	
  3441                           ; 1 bytes @ 0x6
  3442                           
  3443                           
  3444                           ; 1 bytes @ 0x6
  3445  0076                     	ds	1
  3446  0077                     ??_ds1307_set_hours:	
  3447  0077                     ??_ds1307_set_minutes:	
  3448                           ; 0 bytes @ 0x7
  3449                           
  3450  0077                     ??_ds1307_set_seconds:	
  3451                           ; 0 bytes @ 0x7
  3452                           
  3453  0077                     ??_ds1307_set_month:	
  3454                           ; 0 bytes @ 0x7
  3455                           
  3456  0077                     ??_ds1307_set_day_of_month:	
  3457                           ; 0 bytes @ 0x7
  3458                           
  3459  0077                     ??_ds1307_set_year:	
  3460                           ; 0 bytes @ 0x7
  3461                           
  3462  0077                     ??i1__send_byte:	
  3463                           ; 0 bytes @ 0x7
  3464                           
  3465  0077                     ?___lwmod:	
  3466                           ; 0 bytes @ 0x7
  3467                           
  3468  0077                     ds1307_set_minutes@min:	
  3469                           ; 2 bytes @ 0x7
  3470                           
  3471  0077                     ds1307_set_day_of_month@dom:	
  3472                           ; 1 bytes @ 0x7
  3473                           
  3474  0077                     ds1307_set_month@month:	
  3475                           ; 1 bytes @ 0x7
  3476                           
  3477  0077                     ds1307_set_year@year:	
  3478                           ; 1 bytes @ 0x7
  3479                           
  3480  0077                     ds1307_is_pm@is_pm:	
  3481                           ; 1 bytes @ 0x7
  3482                           
  3483  0077                     i1__send_byte@data:	
  3484                           ; 1 bytes @ 0x7
  3485                           
  3486  0077                     ___lwmod@divisor:	
  3487                           ; 1 bytes @ 0x7
  3488                           
  3489                           
  3490                           ; 2 bytes @ 0x7
  3491  0077                     	ds	1
  3492  0078                     ??_lcd_data:	
  3493  0078                     ??i1_lcd_command:	
  3494                           ; 0 bytes @ 0x8
  3495                           
  3496  0078                     ds1307_set_seconds@sec:	
  3497                           ; 0 bytes @ 0x8
  3498                           
  3499  0078                     ds1307_set_hours@hours:	
  3500                           ; 1 bytes @ 0x8
  3501                           
  3502                           
  3503                           ; 1 bytes @ 0x8
  3504  0078                     	ds	1
  3505  0079                     ??_ds1307_switch_to_24hr:	
  3506  0079                     ??_ds1307_switch_to_12hr:	
  3507                           ; 0 bytes @ 0x9
  3508                           
  3509  0079                     ds1307_switch_to_12hr@pm_am:	
  3510                           ; 0 bytes @ 0x9
  3511                           
  3512  0079                     ds1307_switch_to_24hr@pm_am:	
  3513                           ; 1 bytes @ 0x9
  3514                           
  3515  0079                     lcd_data@data:	
  3516                           ; 1 bytes @ 0x9
  3517                           
  3518  0079                     i1lcd_command@command:	
  3519                           ; 1 bytes @ 0x9
  3520                           
  3521  0079                     ___lwmod@dividend:	
  3522                           ; 1 bytes @ 0x9
  3523                           
  3524                           
  3525                           ; 2 bytes @ 0x9
  3526  0079                     	ds	1
  3527  007A                     ?_lcd_goto:	
  3528  007A                     ?_lcd_write:	
  3529                           ; 0 bytes @ 0xA
  3530                           
  3531  007A                     ds1307_switch_to_12hr@hrs:	
  3532                           ; 0 bytes @ 0xA
  3533                           
  3534  007A                     ds1307_switch_to_24hr@hrs:	
  3535                           ; 1 bytes @ 0xA
  3536                           
  3537  007A                     lcd_goto@col:	
  3538                           ; 1 bytes @ 0xA
  3539                           
  3540  007A                     lcd_write@str:	
  3541                           ; 1 bytes @ 0xA
  3542                           
  3543                           
  3544                           ; 2 bytes @ 0xA
  3545  007A                     	ds	1
  3546  007B                     ??_lcd_goto:	
  3547  007B                     ??_update_clock:	
  3548                           ; 0 bytes @ 0xB
  3549                           
  3550  007B                     ??___lwmod:	
  3551                           ; 0 bytes @ 0xB
  3552                           
  3553  007B                     update_clock@pm:	
  3554                           ; 0 bytes @ 0xB
  3555                           
  3556  007B                     lcd_goto@row:	
  3557                           ; 1 bytes @ 0xB
  3558                           
  3559  007B                     ___lwmod@counter:	
  3560                           ; 1 bytes @ 0xB
  3561                           
  3562                           
  3563                           ; 1 bytes @ 0xB
  3564  007B                     	ds	1
  3565  007C                     ??_ds1307_time_formatted:	
  3566  007C                     ??_ds1307_date_formatted:	
  3567                           ; 0 bytes @ 0xC
  3568                           
  3569  007C                     ??_lcd_write:	
  3570                           ; 0 bytes @ 0xC
  3571                           
  3572  007C                     update_clock@up_down:	
  3573                           ; 0 bytes @ 0xC
  3574                           
  3575  007C                     ds1307_time_formatted@p_str_time:	
  3576                           ; 1 bytes @ 0xC
  3577                           
  3578  007C                     ds1307_date_formatted@p_str_date:	
  3579                           ; 1 bytes @ 0xC
  3580                           
  3581  007C                     lcd_goto@addr:	
  3582                           ; 1 bytes @ 0xC
  3583                           
  3584                           
  3585                           ; 1 bytes @ 0xC
  3586  007C                     	ds	1
  3587  007D                     update_clock@val:	
  3588                           
  3589                           ; 1 bytes @ 0xD
  3590  007D                     	ds	1
  3591  007E                     ??_tmr_isr:	
  3592                           
  3593                           	psect	cstackBANK0
  3594  0020                     __pcstackBANK0:	
  3595                           ; 0 bytes @ 0xE
  3596                           
  3597  0020                     ?_sprintf:	
  3598  0020                     lcd_write@i:	
  3599                           ; 2 bytes @ 0x0
  3600                           
  3601  0020                     sprintf@f:	
  3602                           ; 1 bytes @ 0x0
  3603                           
  3604                           
  3605                           ; 2 bytes @ 0x0
  3606  0020                     	ds	8
  3607  0028                     ??_sprintf:	
  3608                           
  3609                           ; 0 bytes @ 0x8
  3610  0028                     	ds	4
  3611  002C                     sprintf@ap:	
  3612                           
  3613                           ; 1 bytes @ 0xC
  3614  002C                     	ds	1
  3615  002D                     sprintf@_val:	
  3616                           
  3617                           ; 4 bytes @ 0xD
  3618  002D                     	ds	4
  3619  0031                     sprintf@sp:	
  3620                           
  3621                           ; 1 bytes @ 0x11
  3622  0031                     	ds	1
  3623  0032                     sprintf@prec:	
  3624                           
  3625                           ; 1 bytes @ 0x12
  3626  0032                     	ds	1
  3627  0033                     sprintf@c:	
  3628                           
  3629                           ; 1 bytes @ 0x13
  3630  0033                     	ds	1
  3631  0034                     tmr_isr@date:	
  3632                           
  3633                           ; 10 bytes @ 0x14
  3634  0034                     	ds	10
  3635  003E                     tmr_isr@time:	
  3636                           
  3637                           ; 10 bytes @ 0x1E
  3638  003E                     	ds	10
  3639  0048                     tmr_isr@pos:	
  3640                           
  3641                           ; 2 bytes @ 0x28
  3642  0048                     	ds	2
  3643                           
  3644                           	psect	intentry
  3645  0004                     __pintentry:	
  3646 ;; *************** function _tmr_isr *****************
  3647 ;; Defined at:
  3648 ;;		line 208 in file "main.c"
  3649 ;; Parameters:    Size  Location     Type
  3650 ;;		None
  3651 ;; Auto vars:     Size  Location     Type
  3652 ;;  time           10   30[BANK0 ] unsigned char [10]
  3653 ;;  date           10   20[BANK0 ] unsigned char [10]
  3654 ;;  pos             2   40[BANK0 ] unsigned char [2]
  3655 ;; Return value:  Size  Location     Type
  3656 ;;		None               void
  3657 ;; Registers used:
  3658 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 1F/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3664 ;;      Params:         0       0       0       0
  3665 ;;      Locals:         0      22       0       0
  3666 ;;      Temps:          0       0       0       0
  3667 ;;      Totals:         0      22       0       0
  3668 ;;Total ram usage:       22 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:    8
  3671 ;; This function calls:
  3672 ;;		_ds1307_date_formatted
  3673 ;;		_ds1307_time_formatted
  3674 ;;		_keypad_read_key
  3675 ;;		_lcd_goto
  3676 ;;		_lcd_write
  3677 ;;		_sprintf
  3678 ;;		_update_clock
  3679 ;;		i1_ds1307_get_clock
  3680 ;;		i1_lcd_backlight
  3681 ;;		i1_write_t1
  3682 ;; This function is called by:
  3683 ;;		Interrupt level 1
  3684 ;; This function uses a non-reentrant model
  3685 ;;
  3686                           
  3687  0004                     _tmr_isr:	
  3688                           
  3689                           ;incstack = 0
  3690 ;; hardware stack exceeded
  3691                           ; Regs used in _tmr_isr: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3692  0004  147E               	bsf	126,0	;set compiler interrupt flag
  3693  0005  3180               	pagesel	$
  3694                           
  3695                           ;main.c: 209: write_t1(g_reload_value);
  3696  0006  0021               	movlb	1	; select bank1
  3697  0007  082E               	movf	(_g_reload_value+1)^(0+128),w
  3698  0008  00F1               	movwf	i1write_t1@value+1
  3699  0009  082D               	movf	_g_reload_value^(0+128),w
  3700  000A  00F0               	movwf	i1write_t1@value
  3701  000B  3187  27CC  3180   	fcall	i1_write_t1
  3702                           
  3703                           ;main.c: 210: g_counter1++;
  3704  000E  0ACC               	incf	_g_counter1,f
  3705                           
  3706                           ;main.c: 213: switch (keypad_read_key()) {
  3707  000F  282E               	goto	i1l2903
  3708  0010                     i1l2883:	
  3709                           
  3710                           ;main.c: 215: update_clock(1);
  3711  0010  3001               	movlw	1
  3712  0011  3183  23C1  3180   	fcall	_update_clock
  3713                           
  3714                           ;main.c: 216: break;
  3715  0014  2841               	goto	i1l2905
  3716  0015                     i1l2885:	
  3717                           
  3718                           ;main.c: 218: update_clock(0);
  3719  0015  3000               	movlw	0
  3720  0016  3183  23C1  3180   	fcall	_update_clock
  3721                           
  3722                           ;main.c: 219: break;
  3723  0019  2841               	goto	i1l2905
  3724  001A                     i1l2887:	
  3725                           
  3726                           ;main.c: 221: if (g_clk_pos == CLK_POS_HR) {
  3727  001A  0B4B               	decfsz	_g_clk_pos,w
  3728  001B  281F               	goto	i1l2891
  3729                           
  3730                           ;main.c: 222: g_clk_pos = CLK_POS_HR_MOD;
  3731  001C  3007               	movlw	7
  3732  001D  00CB               	movwf	_g_clk_pos
  3733                           
  3734                           ;main.c: 223: } else {
  3735  001E  2841               	goto	i1l2905
  3736  001F                     i1l2891:	
  3737                           
  3738                           ;main.c: 224: g_clk_pos--;
  3739  001F  03CB               	decf	_g_clk_pos,f
  3740  0020  2841               	goto	i1l2905
  3741  0021                     i1l2893:	
  3742                           
  3743                           ;main.c: 228: if (g_clk_pos == CLK_POS_HR_MOD) {
  3744  0021  084B               	movf	_g_clk_pos,w
  3745  0022  3A07               	xorlw	7
  3746  0023  1903               	btfsc	3,2
  3747                           
  3748                           ;main.c: 229: g_clk_pos = CLK_POS_HR;
  3749  0024  01CB               	clrf	_g_clk_pos
  3750                           
  3751                           ;main.c: 231: g_clk_pos++;
  3752                           
  3753                           ;main.c: 230: } else {
  3754  0025  0ACB               	incf	_g_clk_pos,f
  3755  0026  2841               	goto	i1l2905
  3756  0027                     i1l2899:	
  3757                           
  3758                           ;main.c: 235: g_bl = !g_bl;
  3759  0027  084A               	movf	_g_bl,w
  3760  0028  3A00               	xorlw	0
  3761  0029  3000               	movlw	0
  3762  002A  1903               	skipnz
  3763  002B  3001               	movlw	1
  3764  002C  00CA               	movwf	_g_bl
  3765                           
  3766                           ;main.c: 236: break;
  3767  002D  2841               	goto	i1l2905
  3768  002E                     i1l2903:	
  3769  002E  3187  27AE  3180   	fcall	_keypad_read_key
  3770                           
  3771                           ; Switch size 1, requested type "space"
  3772                           ; Number of cases is 5, Range of values is 1 to 16
  3773                           ; switch strategies available:
  3774                           ; Name         Instructions Cycles
  3775                           ; simple_byte           16     9 (average)
  3776                           ; direct_byte           41     9 (fixed)
  3777                           ; jumptable            263     9 (fixed)
  3778                           ;	Chosen strategy is simple_byte
  3779  0031  3A01               	xorlw	1	; case 1
  3780  0032  1903               	skipnz
  3781  0033  2810               	goto	i1l2883
  3782  0034  3A03               	xorlw	3	; case 2
  3783  0035  1903               	skipnz
  3784  0036  2815               	goto	i1l2885
  3785  0037  3A06               	xorlw	6	; case 4
  3786  0038  1903               	skipnz
  3787  0039  281A               	goto	i1l2887
  3788  003A  3A0C               	xorlw	12	; case 8
  3789  003B  1903               	skipnz
  3790  003C  2821               	goto	i1l2893
  3791  003D  3A18               	xorlw	24	; case 16
  3792  003E  1903               	skipnz
  3793  003F  2827               	goto	i1l2899
  3794  0040  2841               	goto	i1l2905
  3795  0041                     i1l2905:	
  3796                           
  3797                           ;main.c: 240: if (g_counter1 == 10) {
  3798  0041  0020               	movlb	0	; select bank0
  3799  0042  084C               	movf	_g_counter1,w
  3800  0043  3A0A               	xorlw	10
  3801  0044  1D03               	skipz
  3802  0045  28A3               	goto	i1l2939
  3803                           
  3804                           ;main.c: 241: uint8_t time[10], date[10], pos[2];
  3805                           ;main.c: 243: ds1307_get_clock();
  3806  0046  3186  2629  3180   	fcall	i1_ds1307_get_clock
  3807                           
  3808                           ;main.c: 244: ds1307_time_formatted(time);
  3809  0049  303E               	movlw	tmr_isr@time& (0+255)
  3810  004A  3183  237D  3180   	fcall	_ds1307_time_formatted
  3811                           
  3812                           ;main.c: 245: ds1307_date_formatted(date);
  3813  004D  3034               	movlw	tmr_isr@date& (0+255)
  3814  004E  3183  2318  3180   	fcall	_ds1307_date_formatted
  3815  0051  3001               	movlw	1
  3816                           
  3817                           ;main.c: 246: lcd_goto(1, 1);
  3818  0052  01FA               	clrf	lcd_goto@col
  3819  0053  0AFA               	incf	lcd_goto@col,f
  3820  0054  3187  271D  3180   	fcall	_lcd_goto
  3821                           
  3822                           ;main.c: 247: lcd_write((uint8_t *) "Time: ");
  3823  0057  3038               	movlw	low (STR_1| (0+32768))
  3824  0058  00FA               	movwf	lcd_write@str
  3825  0059  3088               	movlw	high (STR_1| (0+32768))
  3826  005A  00FB               	movwf	lcd_write@str+1
  3827  005B  3187  273D  3180   	fcall	_lcd_write
  3828                           
  3829                           ;main.c: 248: lcd_goto(1, 7);
  3830  005E  3007               	movlw	7
  3831  005F  00FA               	movwf	lcd_goto@col
  3832  0060  3001               	movlw	1
  3833  0061  3187  271D  3180   	fcall	_lcd_goto
  3834                           
  3835                           ;main.c: 249: lcd_write(time);
  3836  0064  303E               	movlw	low tmr_isr@time
  3837  0065  00FA               	movwf	lcd_write@str
  3838  0066  3000               	movlw	high tmr_isr@time
  3839  0067  00FB               	movwf	lcd_write@str+1
  3840  0068  3187  273D  3180   	fcall	_lcd_write
  3841  006B  3002               	movlw	2
  3842                           
  3843                           ;main.c: 250: lcd_goto(2, 1);
  3844  006C  01FA               	clrf	lcd_goto@col
  3845  006D  0AFA               	incf	lcd_goto@col,f
  3846  006E  3187  271D  3180   	fcall	_lcd_goto
  3847                           
  3848                           ;main.c: 251: lcd_write((uint8_t *) "Date: ");
  3849  0071  303F               	movlw	low (STR_2| (0+32768))
  3850  0072  00FA               	movwf	lcd_write@str
  3851  0073  3088               	movlw	high (STR_2| (0+32768))
  3852  0074  00FB               	movwf	lcd_write@str+1
  3853  0075  3187  273D  3180   	fcall	_lcd_write
  3854                           
  3855                           ;main.c: 252: lcd_goto(2, 7);
  3856  0078  3007               	movlw	7
  3857  0079  00FA               	movwf	lcd_goto@col
  3858  007A  3002               	movlw	2
  3859  007B  3187  271D  3180   	fcall	_lcd_goto
  3860                           
  3861                           ;main.c: 253: lcd_write(date);
  3862  007E  3034               	movlw	low tmr_isr@date
  3863  007F  00FA               	movwf	lcd_write@str
  3864  0080  3000               	movlw	high tmr_isr@date
  3865  0081  00FB               	movwf	lcd_write@str+1
  3866  0082  3187  273D  3180   	fcall	_lcd_write
  3867                           
  3868                           ;main.c: 254: lcd_goto(2, 16);
  3869  0085  3010               	movlw	16
  3870  0086  00FA               	movwf	lcd_goto@col
  3871  0087  3002               	movlw	2
  3872  0088  3187  271D  3180   	fcall	_lcd_goto
  3873                           
  3874                           ;main.c: 255: sprintf(pos, "%u", g_clk_pos);
  3875  008B  3046               	movlw	low (STR_3| (0+32768))
  3876  008C  0020               	movlb	0	; select bank0
  3877  008D  00A0               	movwf	sprintf@f
  3878  008E  3088               	movlw	high (STR_3| (0+32768))
  3879  008F  00A1               	movwf	sprintf@f+1
  3880  0090  084B               	movf	_g_clk_pos,w
  3881  0091  00A2               	movwf	?_sprintf+2
  3882  0092  3048               	movlw	tmr_isr@pos& (0+255)
  3883  0093  01A3               	clrf	?_sprintf+3
  3884  0094  3185  2517  3180   	fcall	_sprintf
  3885                           
  3886                           ;main.c: 256: lcd_write(pos);
  3887  0097  3048               	movlw	low tmr_isr@pos
  3888  0098  00FA               	movwf	lcd_write@str
  3889  0099  3000               	movlw	high tmr_isr@pos
  3890  009A  00FB               	movwf	lcd_write@str+1
  3891  009B  3187  273D  3180   	fcall	_lcd_write
  3892                           
  3893                           ;main.c: 258: lcd_backlight(g_bl);
  3894  009E  084A               	movf	_g_bl,w
  3895  009F  3187  2715         	fcall	i1_lcd_backlight
  3896                           
  3897                           ;main.c: 259: g_counter1 = 0;
  3898  00A1  0020               	movlb	0	; select bank0
  3899  00A2  01CC               	clrf	_g_counter1
  3900  00A3                     i1l2939:	
  3901                           
  3902                           ;main.c: 260: }
  3903                           ;main.c: 262: PIR1bits.TMR1IF = 0;
  3904  00A3  1011               	bcf	17,0	;volatile
  3905  00A4  107E               	bcf	126,0	;clear compiler interrupt flag
  3906  00A5  0009               	retfie
  3907  00A6                     __end_of_tmr_isr:	
  3908                           
  3909                           	psect	text28
  3910  07CC                     __ptext28:	
  3911 ;; *************** function i1_write_t1 *****************
  3912 ;; Defined at:
  3913 ;;		line 116 in file "main.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  value           2    0[COMMON] unsigned int 
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;		None               void
  3920 ;; Registers used:
  3921 ;;		wreg
  3922 ;; Tracked objects:
  3923 ;;		On entry : 1F/1
  3924 ;;		On exit  : 1F/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3927 ;;      Params:         2       0       0       0
  3928 ;;      Locals:         0       0       0       0
  3929 ;;      Temps:          0       0       0       0
  3930 ;;      Totals:         2       0       0       0
  3931 ;;Total ram usage:        2 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_tmr_isr
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           
  3941                           ;psect for function i1_write_t1
  3942  07CC                     i1_write_t1:	
  3943                           
  3944                           ;main.c: 117: T1CONbits.TMR1ON = 0;
  3945                           
  3946                           ;incstack = 0
  3947                           ; Regs used in i1_write_t1: [wreg]
  3948  07CC  0020               	movlb	0	; select bank0
  3949  07CD  1018               	bcf	24,0	;volatile
  3950                           
  3951                           ;main.c: 120: TMR1H = (uint8_t) (value >> 8);
  3952  07CE  0871               	movf	i1write_t1@value+1,w
  3953  07CF  0097               	movwf	23	;volatile
  3954                           
  3955                           ;main.c: 121: TMR1L = (uint8_t) value;
  3956  07D0  0870               	movf	i1write_t1@value,w
  3957  07D1  0096               	movwf	22	;volatile
  3958                           
  3959                           ;main.c: 123: T1CONbits.TMR1ON = 1;
  3960  07D2  1418               	bsf	24,0	;volatile
  3961  07D3  0008               	return
  3962  07D4                     __end_ofi1_write_t1:	
  3963                           
  3964                           	psect	text29
  3965  0715                     __ptext29:	
  3966 ;; *************** function i1_lcd_backlight *****************
  3967 ;; Defined at:
  3968 ;;		line 227 in file "HD44780-IOE.c"
  3969 ;; Parameters:    Size  Location     Type
  3970 ;;  state           1    wreg     unsigned char 
  3971 ;; Auto vars:     Size  Location     Type
  3972 ;;  state           1    4[COMMON] unsigned char 
  3973 ;; Return value:  Size  Location     Type
  3974 ;;		None               void
  3975 ;; Registers used:
  3976 ;;		wreg, status,2, status,0, pclath, cstack
  3977 ;; Tracked objects:
  3978 ;;		On entry : 1F/0
  3979 ;;		On exit  : 1F/4
  3980 ;;		Unchanged: 0/0
  3981 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3982 ;;      Params:         0       0       0       0
  3983 ;;      Locals:         1       0       0       0
  3984 ;;      Temps:          0       0       0       0
  3985 ;;      Totals:         1       0       0       0
  3986 ;;Total ram usage:        1 bytes
  3987 ;; Hardware stack levels used:    1
  3988 ;; Hardware stack levels required when called:    4
  3989 ;; This function calls:
  3990 ;;		i1_mcp23017_ioa_send_byte
  3991 ;; This function is called by:
  3992 ;;		_tmr_isr
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           
  3997                           ;psect for function i1_lcd_backlight
  3998  0715                     i1_lcd_backlight:	
  3999                           
  4000                           ;incstack = 0
  4001                           ; Regs used in i1_lcd_backlight: [wreg+status,2+status,0+pclath+cstack]
  4002                           ;i1lcd_backlight@state stored from wreg
  4003  0715  00F4               	movwf	i1lcd_backlight@state
  4004                           
  4005                           ;HD44780-IOE.c: 228: LCDPort.A6 = state;
  4006  0716  0874               	movf	i1lcd_backlight@state,w
  4007  0717  0021               	movlb	1	; select bank1
  4008  0718  132F               	bcf	_LCDPort^(0+128),6
  4009  0719  1D03               	skipz
  4010  071A  172F               	bsf	_LCDPort^(0+128),6
  4011                           
  4012                           ;HD44780-IOE.c: 229: mcp23017_ioa_send_byte();
  4013  071B  27A8               	fcall	i1_mcp23017_ioa_send_byte
  4014  071C  0008               	return
  4015  071D                     __end_ofi1_lcd_backlight:	
  4016  071D                     __ptext54:	
  4017 ;; *************** function _lcd_goto *****************
  4018 ;; Defined at:
  4019 ;;		line 111 in file "HD44780-IOE.c"
  4020 ;; Parameters:    Size  Location     Type
  4021 ;;  row             1    wreg     unsigned char 
  4022 ;;  col             1   10[COMMON] unsigned char 
  4023 ;; Auto vars:     Size  Location     Type
  4024 ;;  row             1   11[COMMON] unsigned char 
  4025 ;;  addr            1   12[COMMON] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;		None               void
  4028 ;; Registers used:
  4029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 1F/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4035 ;;      Params:         1       0       0       0
  4036 ;;      Locals:         2       0       0       0
  4037 ;;      Temps:          0       0       0       0
  4038 ;;      Totals:         3       0       0       0
  4039 ;;Total ram usage:        3 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    7
  4042 ;; This function calls:
  4043 ;;		i1_lcd_command
  4044 ;; This function is called by:
  4045 ;;		_tmr_isr
  4046 ;; This function uses a non-reentrant model
  4047 ;;
  4048                           
  4049                           
  4050                           ;psect for function _lcd_goto
  4051  071D                     _lcd_goto:	
  4052                           
  4053                           ;incstack = 0
  4054 ;; hardware stack exceeded
  4055                           ; Regs used in _lcd_goto: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4056                           ;lcd_goto@row stored from wreg
  4057  071D  00FB               	movwf	lcd_goto@row
  4058                           
  4059                           ;HD44780-IOE.c: 112: unsigned char addr;
  4060                           ;HD44780-IOE.c: 114: switch (row) {
  4061  071E  2F28               	goto	i1l2839
  4062  071F                     i1l2827:	
  4063  071F  01FC               	clrf	lcd_goto@addr
  4064                           
  4065                           ;HD44780-IOE.c: 116: break;
  4066  0720  2F36               	goto	i1l2841
  4067  0721                     i1l2829:	
  4068  0721  3040               	movlw	64
  4069  0722  2F26               	goto	L8
  4070  0723                     i1l2831:	
  4071                           ;HD44780-IOE.c: 118: break;
  4072                           
  4073  0723  3014               	movlw	20
  4074  0724  2F26               	goto	L8
  4075  0725                     i1l2833:	
  4076                           ;HD44780-IOE.c: 120: break;
  4077                           
  4078  0725  3054               	movlw	84
  4079  0726                     L8:	
  4080  0726  00FC               	movwf	lcd_goto@addr
  4081                           
  4082                           ;HD44780-IOE.c: 122: break;
  4083  0727  2F36               	goto	i1l2841
  4084  0728                     i1l2839:	
  4085  0728  087B               	movf	lcd_goto@row,w
  4086                           
  4087                           ; Switch size 1, requested type "space"
  4088                           ; Number of cases is 4, Range of values is 1 to 4
  4089                           ; switch strategies available:
  4090                           ; Name         Instructions Cycles
  4091                           ; simple_byte           13     7 (average)
  4092                           ; direct_byte           17     9 (fixed)
  4093                           ; jumptable            263     9 (fixed)
  4094                           ;	Chosen strategy is simple_byte
  4095  0729  3A01               	xorlw	1	; case 1
  4096  072A  1903               	skipnz
  4097  072B  2F1F               	goto	i1l2827
  4098  072C  3A03               	xorlw	3	; case 2
  4099  072D  1903               	skipnz
  4100  072E  2F21               	goto	i1l2829
  4101  072F  3A01               	xorlw	1	; case 3
  4102  0730  1903               	skipnz
  4103  0731  2F23               	goto	i1l2831
  4104  0732  3A07               	xorlw	7	; case 4
  4105  0733  1903               	skipnz
  4106  0734  2F25               	goto	i1l2833
  4107  0735  2F1F               	goto	i1l2827
  4108  0736                     i1l2841:	
  4109                           
  4110                           ;HD44780-IOE.c: 126: addr += col - 1;
  4111  0736  087A               	movf	lcd_goto@col,w
  4112  0737  3EFF               	addlw	255
  4113  0738  07FC               	addwf	lcd_goto@addr,f
  4114                           
  4115                           ;HD44780-IOE.c: 127: lcd_command(0x80 | addr);
  4116  0739  087C               	movf	lcd_goto@addr,w
  4117  073A  3880               	iorlw	128
  4118  073B  276D               	fcall	i1_lcd_command
  4119  073C  0008               	return
  4120  073D                     __end_of_lcd_goto:	
  4121  073D                     __ptext52:	
  4122 ;; *************** function _lcd_write *****************
  4123 ;; Defined at:
  4124 ;;		line 101 in file "HD44780-IOE.c"
  4125 ;; Parameters:    Size  Location     Type
  4126 ;;  str             2   10[COMMON] PTR unsigned char 
  4127 ;;		 -> tmr_isr@pos(2), STR_2(7), STR_1(7), tmr_isr@date(10), 
  4128 ;;		 -> tmr_isr@time(10), 
  4129 ;; Auto vars:     Size  Location     Type
  4130 ;;  i               1    0[BANK0 ] unsigned char 
  4131 ;; Return value:  Size  Location     Type
  4132 ;;		None               void
  4133 ;; Registers used:
  4134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  4135 ;; Tracked objects:
  4136 ;;		On entry : 0/0
  4137 ;;		On exit  : 1F/0
  4138 ;;		Unchanged: 0/0
  4139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4140 ;;      Params:         2       0       0       0
  4141 ;;      Locals:         0       1       0       0
  4142 ;;      Temps:          2       0       0       0
  4143 ;;      Totals:         4       1       0       0
  4144 ;;Total ram usage:        5 bytes
  4145 ;; Hardware stack levels used:    1
  4146 ;; Hardware stack levels required when called:    7
  4147 ;; This function calls:
  4148 ;;		_lcd_data
  4149 ;; This function is called by:
  4150 ;;		_tmr_isr
  4151 ;; This function uses a non-reentrant model
  4152 ;;
  4153                           
  4154                           
  4155                           ;psect for function _lcd_write
  4156  073D                     _lcd_write:	
  4157                           
  4158                           ;HD44780-IOE.c: 102: unsigned char i = 0;
  4159                           
  4160                           ;incstack = 0
  4161 ;; hardware stack exceeded
  4162                           ; Regs used in _lcd_write: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  4163  073D  0020               	movlb	0	; select bank0
  4164  073E  01A0               	clrf	lcd_write@i
  4165  073F                     i1l2851:	
  4166                           ;HD44780-IOE.c: 104: while (str[i] != '\0')
  4167                           
  4168  073F  087B               	movf	lcd_write@str+1,w
  4169  0740  00FD               	movwf	??_lcd_write+1
  4170  0741  087A               	movf	lcd_write@str,w
  4171  0742  00FC               	movwf	??_lcd_write
  4172  0743  0820               	movf	lcd_write@i,w
  4173  0744  077C               	addwf	??_lcd_write,w
  4174  0745  0084               	movwf	4
  4175  0746  087D               	movf	??_lcd_write+1,w
  4176  0747  1803               	skipnc
  4177  0748  0A7D               	incf	??_lcd_write+1,w
  4178  0749  0085               	movwf	5
  4179  074A  0800               	movf	0,w	;code access
  4180  074B  3800               	iorlw	0
  4181  074C  1903               	btfsc	3,2
  4182  074D  0008               	return
  4183                           
  4184                           ;HD44780-IOE.c: 105: lcd_data(str[i++]);
  4185  074E  087B               	movf	lcd_write@str+1,w
  4186  074F  00FD               	movwf	??_lcd_write+1
  4187  0750  087A               	movf	lcd_write@str,w
  4188  0751  00FC               	movwf	??_lcd_write
  4189  0752  0820               	movf	lcd_write@i,w
  4190  0753  077C               	addwf	??_lcd_write,w
  4191  0754  0084               	movwf	4
  4192  0755  087D               	movf	??_lcd_write+1,w
  4193  0756  1803               	skipnc
  4194  0757  0A7D               	incf	??_lcd_write+1,w
  4195  0758  0085               	movwf	5
  4196  0759  0800               	movf	0,w	;code access
  4197  075A  275F  3187         	fcall	_lcd_data
  4198  075C  0020               	movlb	0	; select bank0
  4199  075D  0AA0               	incf	lcd_write@i,f
  4200  075E  2F3F               	goto	i1l2851
  4201  075F                     __end_of_lcd_write:	
  4202  075F                     __ptext53:	
  4203 ;; *************** function _lcd_data *****************
  4204 ;; Defined at:
  4205 ;;		line 185 in file "HD44780-IOE.c"
  4206 ;; Parameters:    Size  Location     Type
  4207 ;;  data            1    wreg     unsigned char 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  data            1    9[COMMON] unsigned char 
  4210 ;; Return value:  Size  Location     Type
  4211 ;;		None               void
  4212 ;; Registers used:
  4213 ;;		wreg, status,2, status,0, pclath, cstack
  4214 ;; Tracked objects:
  4215 ;;		On entry : 1F/0
  4216 ;;		On exit  : 0/0
  4217 ;;		Unchanged: 0/0
  4218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4219 ;;      Params:         0       0       0       0
  4220 ;;      Locals:         1       0       0       0
  4221 ;;      Temps:          1       0       0       0
  4222 ;;      Totals:         2       0       0       0
  4223 ;;Total ram usage:        2 bytes
  4224 ;; Hardware stack levels used:    1
  4225 ;; Hardware stack levels required when called:    6
  4226 ;; This function calls:
  4227 ;;		i1__send_byte
  4228 ;;		i1_mcp23017_ioa_send_byte
  4229 ;; This function is called by:
  4230 ;;		_lcd_write
  4231 ;; This function uses a non-reentrant model
  4232 ;;
  4233                           
  4234                           
  4235                           ;psect for function _lcd_data
  4236  075F                     _lcd_data:	
  4237                           
  4238                           ;incstack = 0
  4239 ;; hardware stack exceeded
  4240                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
  4241                           ;lcd_data@data stored from wreg
  4242  075F  00F9               	movwf	lcd_data@data
  4243                           
  4244                           ;HD44780-IOE.c: 186: LCDPort.A4 = 1;
  4245  0760  0021               	movlb	1	; select bank1
  4246  0761  162F               	bsf	_LCDPort^(0+128),4
  4247                           
  4248                           ;HD44780-IOE.c: 187: mcp23017_ioa_send_byte();
  4249  0762  27A8  3187         	fcall	i1_mcp23017_ioa_send_byte
  4250                           
  4251                           ;HD44780-IOE.c: 188: __nop();
  4252  0764  0000               	nop
  4253                           
  4254                           ;HD44780-IOE.c: 189: _send_byte(data);
  4255  0765  0879               	movf	lcd_data@data,w
  4256  0766  277B  3187         	fcall	i1__send_byte
  4257                           
  4258                           ;HD44780-IOE.c: 190: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  4259  0768  3085               	movlw	133
  4260  0769  00F8               	movwf	??_lcd_data
  4261  076A                     u198_27:	
  4262  076A  0BF8               	decfsz	??_lcd_data,f
  4263  076B  2F6A               	goto	u198_27
  4264  076C  0008               	return
  4265  076D                     __end_of_lcd_data:	
  4266  076D                     __ptext55:	
  4267 ;; *************** function i1_lcd_command *****************
  4268 ;; Defined at:
  4269 ;;		line 177 in file "HD44780-IOE.c"
  4270 ;; Parameters:    Size  Location     Type
  4271 ;;  command         1    wreg     unsigned char 
  4272 ;; Auto vars:     Size  Location     Type
  4273 ;;  command         1    9[COMMON] unsigned char 
  4274 ;; Return value:  Size  Location     Type
  4275 ;;		None               void
  4276 ;; Registers used:
  4277 ;;		wreg, status,2, status,0, pclath, cstack
  4278 ;; Tracked objects:
  4279 ;;		On entry : 1F/0
  4280 ;;		On exit  : 0/0
  4281 ;;		Unchanged: 0/0
  4282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4283 ;;      Params:         0       0       0       0
  4284 ;;      Locals:         1       0       0       0
  4285 ;;      Temps:          1       0       0       0
  4286 ;;      Totals:         2       0       0       0
  4287 ;;Total ram usage:        2 bytes
  4288 ;; Hardware stack levels used:    1
  4289 ;; Hardware stack levels required when called:    6
  4290 ;; This function calls:
  4291 ;;		i1__send_byte
  4292 ;;		i1_mcp23017_ioa_send_byte
  4293 ;; This function is called by:
  4294 ;;		_lcd_goto
  4295 ;; This function uses a non-reentrant model
  4296 ;;
  4297                           
  4298                           
  4299                           ;psect for function i1_lcd_command
  4300  076D                     i1_lcd_command:	
  4301                           
  4302                           ;incstack = 0
  4303 ;; hardware stack exceeded
  4304                           ; Regs used in i1_lcd_command: [wreg+status,2+status,0+pclath+cstack]
  4305                           ;i1lcd_command@command stored from wreg
  4306  076D  00F9               	movwf	i1lcd_command@command
  4307                           
  4308                           ;HD44780-IOE.c: 178: LCDPort.A4 = 0;
  4309  076E  0021               	movlb	1	; select bank1
  4310  076F  122F               	bcf	_LCDPort^(0+128),4
  4311                           
  4312                           ;HD44780-IOE.c: 179: mcp23017_ioa_send_byte();
  4313  0770  27A8  3187         	fcall	i1_mcp23017_ioa_send_byte
  4314                           
  4315                           ;HD44780-IOE.c: 180: __nop();
  4316  0772  0000               	nop
  4317                           
  4318                           ;HD44780-IOE.c: 181: _send_byte(command);
  4319  0773  0879               	movf	i1lcd_command@command,w
  4320  0774  277B  3187         	fcall	i1__send_byte
  4321                           
  4322                           ;HD44780-IOE.c: 182: _delay((unsigned long)((50)*((32000000UL)/4000000.0)));
  4323  0776  3085               	movlw	133
  4324  0777  00F8               	movwf	??i1_lcd_command
  4325  0778                     u199_27:	
  4326  0778  0BF8               	decfsz	??i1_lcd_command,f
  4327  0779  2F78               	goto	u199_27
  4328  077A  0008               	return
  4329  077B                     __end_ofi1_lcd_command:	
  4330  077B                     __ptext56:	
  4331 ;; *************** function i1__send_byte *****************
  4332 ;; Defined at:
  4333 ;;		line 81 in file "HD44780-IOE.c"
  4334 ;; Parameters:    Size  Location     Type
  4335 ;;  data            1    wreg     unsigned char 
  4336 ;; Auto vars:     Size  Location     Type
  4337 ;;  data            1    7[COMMON] unsigned char 
  4338 ;; Return value:  Size  Location     Type
  4339 ;;		None               void
  4340 ;; Registers used:
  4341 ;;		wreg, status,2, status,0, pclath, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/4
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4347 ;;      Params:         0       0       0       0
  4348 ;;      Locals:         1       0       0       0
  4349 ;;      Temps:          0       0       0       0
  4350 ;;      Totals:         1       0       0       0
  4351 ;;Total ram usage:        1 bytes
  4352 ;; Hardware stack levels used:    1
  4353 ;; Hardware stack levels required when called:    5
  4354 ;; This function calls:
  4355 ;;		i1__send_nibble
  4356 ;; This function is called by:
  4357 ;;		_lcd_data
  4358 ;;		i1_lcd_command
  4359 ;; This function uses a non-reentrant model
  4360 ;;
  4361                           
  4362                           
  4363                           ;psect for function i1__send_byte
  4364  077B                     i1__send_byte:	
  4365                           
  4366                           ;incstack = 0
  4367 ;; hardware stack exceeded
  4368                           ; Regs used in i1__send_byte: [wreg+status,2+status,0+pclath+cstack]
  4369                           ;i1__send_byte@data stored from wreg
  4370  077B  00F7               	movwf	i1__send_byte@data
  4371                           
  4372                           ;HD44780-IOE.c: 82: _send_nibble(data >> 4);
  4373  077C  0E77               	swapf	i1__send_byte@data,w
  4374  077D  390F               	andlw	15
  4375  077E  2784  3187         	fcall	i1__send_nibble
  4376                           
  4377                           ;HD44780-IOE.c: 83: _send_nibble(data & 0x0F);
  4378  0780  0877               	movf	i1__send_byte@data,w
  4379  0781  390F               	andlw	15
  4380  0782  2784               	fcall	i1__send_nibble
  4381  0783  0008               	return
  4382  0784                     __end_ofi1__send_byte:	
  4383  0784                     __ptext57:	
  4384 ;; *************** function i1__send_nibble *****************
  4385 ;; Defined at:
  4386 ;;		line 65 in file "HD44780-IOE.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  data            1    wreg     unsigned char 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  data            1    6[COMMON] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;		None               void
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, pclath, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/4
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4400 ;;      Params:         0       0       0       0
  4401 ;;      Locals:         1       0       0       0
  4402 ;;      Temps:          2       0       0       0
  4403 ;;      Totals:         3       0       0       0
  4404 ;;Total ram usage:        3 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    4
  4407 ;; This function calls:
  4408 ;;		i1_mcp23017_ioa_send_byte
  4409 ;; This function is called by:
  4410 ;;		i1__send_byte
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           
  4415                           ;psect for function i1__send_nibble
  4416  0784                     i1__send_nibble:	
  4417                           
  4418                           ;incstack = 0
  4419 ;; hardware stack exceeded
  4420                           ; Regs used in i1__send_nibble: [wreg+status,2+status,0+pclath+cstack]
  4421                           ;i1__send_nibble@data stored from wreg
  4422  0784  00F6               	movwf	i1__send_nibble@data
  4423                           
  4424                           ;HD44780-IOE.c: 69: LCDPort.LCD_DATA &= ~0b00001111;
  4425  0785  30F0               	movlw	240
  4426  0786  0021               	movlb	1	; select bank1
  4427  0787  05AF               	andwf	_LCDPort^(0+128),f
  4428                           
  4429                           ;HD44780-IOE.c: 70: LCDPort.LCD_DATA |= 0b00001111 & data;
  4430  0788  0876               	movf	i1__send_nibble@data,w
  4431  0789  390F               	andlw	15
  4432  078A  04AF               	iorwf	_LCDPort^(0+128),f
  4433                           
  4434                           ;HD44780-IOE.c: 71: mcp23017_ioa_send_byte();
  4435  078B  27A8  3187         	fcall	i1_mcp23017_ioa_send_byte
  4436                           
  4437                           ;HD44780-IOE.c: 73: LCDPort.A5 = 1;
  4438  078D  0021               	movlb	1	; select bank1
  4439  078E  16AF               	bsf	_LCDPort^(0+128),5
  4440                           
  4441                           ;HD44780-IOE.c: 74: mcp23017_ioa_send_byte();
  4442  078F  27A8  3187         	fcall	i1_mcp23017_ioa_send_byte
  4443                           
  4444                           ;HD44780-IOE.c: 75: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  4445  0791  3003               	movlw	3
  4446  0792  00F5               	movwf	??i1__send_nibble+1
  4447  0793  3097               	movlw	151
  4448  0794  00F4               	movwf	??i1__send_nibble
  4449  0795                     u200_27:	
  4450  0795  0BF4               	decfsz	??i1__send_nibble,f
  4451  0796  2F95               	goto	u200_27
  4452  0797  0BF5               	decfsz	??i1__send_nibble+1,f
  4453  0798  2F95               	goto	u200_27
  4454  0799  3200               	nop2
  4455                           
  4456                           ;HD44780-IOE.c: 76: LCDPort.A5 = 0;
  4457  079A  0021               	movlb	1	; select bank1
  4458  079B  12AF               	bcf	_LCDPort^(0+128),5
  4459                           
  4460                           ;HD44780-IOE.c: 77: mcp23017_ioa_send_byte();
  4461  079C  27A8  3187         	fcall	i1_mcp23017_ioa_send_byte
  4462                           
  4463                           ;HD44780-IOE.c: 78: _delay((unsigned long)((250)*((32000000UL)/4000000.0)));
  4464  079E  3003               	movlw	3
  4465  079F  00F5               	movwf	??i1__send_nibble+1
  4466  07A0  3097               	movlw	151
  4467  07A1  00F4               	movwf	??i1__send_nibble
  4468  07A2                     u201_27:	
  4469  07A2  0BF4               	decfsz	??i1__send_nibble,f
  4470  07A3  2FA2               	goto	u201_27
  4471  07A4  0BF5               	decfsz	??i1__send_nibble+1,f
  4472  07A5  2FA2               	goto	u201_27
  4473  07A6  3200               	nop2
  4474  07A7  0008               	return
  4475  07A8                     __end_ofi1__send_nibble:	
  4476  07A8                     __ptext58:	
  4477 ;; *************** function i1_mcp23017_ioa_send_byte *****************
  4478 ;; Defined at:
  4479 ;;		line 59 in file "HD44780-IOE.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;		None
  4482 ;; Auto vars:     Size  Location     Type
  4483 ;;		None
  4484 ;; Return value:  Size  Location     Type
  4485 ;;		None               void
  4486 ;; Registers used:
  4487 ;;		wreg, status,2, status,0, pclath, cstack
  4488 ;; Tracked objects:
  4489 ;;		On entry : 1F/1
  4490 ;;		On exit  : 1F/4
  4491 ;;		Unchanged: 0/0
  4492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4493 ;;      Params:         0       0       0       0
  4494 ;;      Locals:         0       0       0       0
  4495 ;;      Temps:          0       0       0       0
  4496 ;;      Totals:         0       0       0       0
  4497 ;;Total ram usage:        0 bytes
  4498 ;; Hardware stack levels used:    1
  4499 ;; Hardware stack levels required when called:    3
  4500 ;; This function calls:
  4501 ;;		i1_mcp23017_write_reg
  4502 ;; This function is called by:
  4503 ;;		_lcd_data
  4504 ;;		i1__send_nibble
  4505 ;;		i1_lcd_command
  4506 ;;		i1_lcd_backlight
  4507 ;; This function uses a non-reentrant model
  4508 ;;
  4509                           
  4510                           
  4511                           ;psect for function i1_mcp23017_ioa_send_byte
  4512  07A8                     i1_mcp23017_ioa_send_byte:	
  4513                           
  4514                           ;HD44780-IOE.c: 60: mcp23017_write_reg(MCP23017_REG_GPIOA, LCDPort.LCD_DATA);
  4515                           
  4516                           ;incstack = 0
  4517                           ; Regs used in i1_mcp23017_ioa_send_byte: [wreg+status,2+status,0+pclath+cstack]
  4518  07A8  082F               	movf	_LCDPort^(0+128),w
  4519  07A9  00F2               	movwf	i1mcp23017_write_reg@value
  4520  07AA  3012               	movlw	18
  4521  07AB  3185  25CA         	fcall	i1_mcp23017_write_reg
  4522  07AD  0008               	return
  4523  07AE                     __end_ofi1_mcp23017_ioa_send_byte:	
  4524                           
  4525                           	psect	text37
  4526  0F84                     __ptext37:	
  4527 ;; *************** function _ds1307_set_year *****************
  4528 ;; Defined at:
  4529 ;;		line 275 in file "ds1307.c"
  4530 ;; Parameters:    Size  Location     Type
  4531 ;;  year            1    wreg     unsigned char 
  4532 ;; Auto vars:     Size  Location     Type
  4533 ;;  year            1    7[COMMON] unsigned char 
  4534 ;; Return value:  Size  Location     Type
  4535 ;;		None               void
  4536 ;; Registers used:
  4537 ;;		wreg, status,2, status,0, pclath, cstack
  4538 ;; Tracked objects:
  4539 ;;		On entry : 1E/0
  4540 ;;		On exit  : 1E/0
  4541 ;;		Unchanged: 0/0
  4542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4543 ;;      Params:         0       0       0       0
  4544 ;;      Locals:         1       0       0       0
  4545 ;;      Temps:          0       0       0       0
  4546 ;;      Totals:         1       0       0       0
  4547 ;;Total ram usage:        1 bytes
  4548 ;; Hardware stack levels used:    1
  4549 ;; Hardware stack levels required when called:    2
  4550 ;; This function calls:
  4551 ;;		_dec_to_bcd
  4552 ;; This function is called by:
  4553 ;;		_update_clock
  4554 ;; This function uses a non-reentrant model
  4555 ;;
  4556                           
  4557                           
  4558                           ;psect for function _ds1307_set_year
  4559  0F84                     _ds1307_set_year:	
  4560                           
  4561                           ;incstack = 0
  4562                           ; Regs used in _ds1307_set_year: [wreg+status,2+status,0+pclath+cstack]
  4563                           ;ds1307_set_year@year stored from wreg
  4564  0F84  00F7               	movwf	ds1307_set_year@year
  4565                           
  4566                           ;ds1307.c: 276: if (year < 100) {
  4567  0F85  3064               	movlw	100
  4568  0F86  0277               	subwf	ds1307_set_year@year,w
  4569  0F87  1803               	skipnc
  4570  0F88  0008               	return
  4571                           
  4572                           ;ds1307.c: 277: g_reg_data[DS1307_REG_YEAR] = dec_to_bcd(year);
  4573  0F89  0877               	movf	ds1307_set_year@year,w
  4574  0F8A  27C1               	fcall	_dec_to_bcd
  4575  0F8B  0021               	movlb	1	; select bank1
  4576  0F8C  00A6               	movwf	(_g_reg_data^(0+128)+6)
  4577  0F8D  0008               	return
  4578  0F8E                     __end_of_ds1307_set_year:	
  4579  0F8E                     __ptext40:	
  4580 ;; *************** function _ds1307_set_minutes *****************
  4581 ;; Defined at:
  4582 ;;		line 204 in file "ds1307.c"
  4583 ;; Parameters:    Size  Location     Type
  4584 ;;  min             1    wreg     unsigned char 
  4585 ;; Auto vars:     Size  Location     Type
  4586 ;;  min             1    7[COMMON] unsigned char 
  4587 ;; Return value:  Size  Location     Type
  4588 ;;		None               void
  4589 ;; Registers used:
  4590 ;;		wreg, status,2, status,0, pclath, cstack
  4591 ;; Tracked objects:
  4592 ;;		On entry : 1E/0
  4593 ;;		On exit  : 1E/0
  4594 ;;		Unchanged: 0/0
  4595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4596 ;;      Params:         0       0       0       0
  4597 ;;      Locals:         1       0       0       0
  4598 ;;      Temps:          0       0       0       0
  4599 ;;      Totals:         1       0       0       0
  4600 ;;Total ram usage:        1 bytes
  4601 ;; Hardware stack levels used:    1
  4602 ;; Hardware stack levels required when called:    2
  4603 ;; This function calls:
  4604 ;;		_dec_to_bcd
  4605 ;; This function is called by:
  4606 ;;		_update_clock
  4607 ;; This function uses a non-reentrant model
  4608 ;;
  4609                           
  4610                           
  4611                           ;psect for function _ds1307_set_minutes
  4612  0F8E                     _ds1307_set_minutes:	
  4613                           
  4614                           ;incstack = 0
  4615                           ; Regs used in _ds1307_set_minutes: [wreg+status,2+status,0+pclath+cstack]
  4616                           ;ds1307_set_minutes@min stored from wreg
  4617  0F8E  00F7               	movwf	ds1307_set_minutes@min
  4618                           
  4619                           ;ds1307.c: 206: if (min < 60) {
  4620  0F8F  303C               	movlw	60
  4621  0F90  0277               	subwf	ds1307_set_minutes@min,w
  4622  0F91  1803               	skipnc
  4623  0F92  0008               	return
  4624                           
  4625                           ;ds1307.c: 207: g_reg_data[DS1307_REG_MINUTES] = dec_to_bcd(min);
  4626  0F93  0877               	movf	ds1307_set_minutes@min,w
  4627  0F94  27C1               	fcall	_dec_to_bcd
  4628  0F95  0021               	movlb	1	; select bank1
  4629  0F96  00A1               	movwf	(_g_reg_data^(0+128)+1)
  4630  0F97  0008               	return
  4631  0F98                     __end_of_ds1307_set_minutes:	
  4632  0F98                     __ptext39:	
  4633 ;; *************** function _ds1307_set_month *****************
  4634 ;; Defined at:
  4635 ;;		line 264 in file "ds1307.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;  month           1    wreg     unsigned char 
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;  month           1    7[COMMON] unsigned char 
  4640 ;; Return value:  Size  Location     Type
  4641 ;;		None               void
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0, pclath, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 1E/0
  4646 ;;		On exit  : 1E/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4649 ;;      Params:         0       0       0       0
  4650 ;;      Locals:         1       0       0       0
  4651 ;;      Temps:          0       0       0       0
  4652 ;;      Totals:         1       0       0       0
  4653 ;;Total ram usage:        1 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		_dec_to_bcd
  4658 ;; This function is called by:
  4659 ;;		_update_clock
  4660 ;; This function uses a non-reentrant model
  4661 ;;
  4662                           
  4663                           
  4664                           ;psect for function _ds1307_set_month
  4665  0F98                     _ds1307_set_month:	
  4666                           
  4667                           ;incstack = 0
  4668                           ; Regs used in _ds1307_set_month: [wreg+status,2+status,0+pclath+cstack]
  4669                           ;ds1307_set_month@month stored from wreg
  4670  0F98  00F7               	movwf	ds1307_set_month@month
  4671                           
  4672                           ;ds1307.c: 265: if ((month > 0) && (month < 13)) {
  4673  0F99  0877               	movf	ds1307_set_month@month,w
  4674  0F9A  1903               	btfsc	3,2
  4675  0F9B  0008               	return
  4676  0F9C  300D               	movlw	13
  4677  0F9D  0277               	subwf	ds1307_set_month@month,w
  4678  0F9E  1803               	skipnc
  4679  0F9F  0008               	return
  4680                           
  4681                           ;ds1307.c: 266: g_reg_data[DS1307_REG_MONTH] = dec_to_bcd(month);
  4682  0FA0  0877               	movf	ds1307_set_month@month,w
  4683  0FA1  27C1               	fcall	_dec_to_bcd
  4684  0FA2  0021               	movlb	1	; select bank1
  4685  0FA3  00A5               	movwf	(_g_reg_data^(0+128)+5)
  4686  0FA4  0008               	return
  4687  0FA5                     __end_of_ds1307_set_month:	
  4688  0FA5                     __ptext41:	
  4689 ;; *************** function _ds1307_set_day_of_month *****************
  4690 ;; Defined at:
  4691 ;;		line 254 in file "ds1307.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  dom             1    wreg     unsigned char 
  4694 ;; Auto vars:     Size  Location     Type
  4695 ;;  dom             1    7[COMMON] unsigned char 
  4696 ;; Return value:  Size  Location     Type
  4697 ;;		None               void
  4698 ;; Registers used:
  4699 ;;		wreg, status,2, status,0, pclath, cstack
  4700 ;; Tracked objects:
  4701 ;;		On entry : 1E/0
  4702 ;;		On exit  : 1E/0
  4703 ;;		Unchanged: 0/0
  4704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4705 ;;      Params:         0       0       0       0
  4706 ;;      Locals:         1       0       0       0
  4707 ;;      Temps:          0       0       0       0
  4708 ;;      Totals:         1       0       0       0
  4709 ;;Total ram usage:        1 bytes
  4710 ;; Hardware stack levels used:    1
  4711 ;; Hardware stack levels required when called:    2
  4712 ;; This function calls:
  4713 ;;		_dec_to_bcd
  4714 ;; This function is called by:
  4715 ;;		_update_clock
  4716 ;; This function uses a non-reentrant model
  4717 ;;
  4718                           
  4719                           
  4720                           ;psect for function _ds1307_set_day_of_month
  4721  0FA5                     _ds1307_set_day_of_month:	
  4722                           
  4723                           ;incstack = 0
  4724                           ; Regs used in _ds1307_set_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  4725                           ;ds1307_set_day_of_month@dom stored from wreg
  4726  0FA5  00F7               	movwf	ds1307_set_day_of_month@dom
  4727                           
  4728                           ;ds1307.c: 255: if ((dom > 0) && (dom < 32)) {
  4729  0FA6  0877               	movf	ds1307_set_day_of_month@dom,w
  4730  0FA7  1903               	btfsc	3,2
  4731  0FA8  0008               	return
  4732  0FA9  3020               	movlw	32
  4733  0FAA  0277               	subwf	ds1307_set_day_of_month@dom,w
  4734  0FAB  1803               	skipnc
  4735  0FAC  0008               	return
  4736                           
  4737                           ;ds1307.c: 256: g_reg_data[DS1307_REG_DAY_OM] = dec_to_bcd(dom);
  4738  0FAD  0877               	movf	ds1307_set_day_of_month@dom,w
  4739  0FAE  27C1               	fcall	_dec_to_bcd
  4740  0FAF  0021               	movlb	1	; select bank1
  4741  0FB0  00A4               	movwf	(_g_reg_data^(0+128)+4)
  4742  0FB1  0008               	return
  4743  0FB2                     __end_of_ds1307_set_day_of_month:	
  4744  0FB2                     __ptext38:	
  4745 ;; *************** function _ds1307_set_seconds *****************
  4746 ;; Defined at:
  4747 ;;		line 192 in file "ds1307.c"
  4748 ;; Parameters:    Size  Location     Type
  4749 ;;  sec             1    wreg     unsigned char 
  4750 ;; Auto vars:     Size  Location     Type
  4751 ;;  sec             1    8[COMMON] unsigned char 
  4752 ;; Return value:  Size  Location     Type
  4753 ;;		None               void
  4754 ;; Registers used:
  4755 ;;		wreg, status,2, status,0, pclath, cstack
  4756 ;; Tracked objects:
  4757 ;;		On entry : 1E/0
  4758 ;;		On exit  : 1E/0
  4759 ;;		Unchanged: 0/0
  4760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4761 ;;      Params:         0       0       0       0
  4762 ;;      Locals:         1       0       0       0
  4763 ;;      Temps:          1       0       0       0
  4764 ;;      Totals:         2       0       0       0
  4765 ;;Total ram usage:        2 bytes
  4766 ;; Hardware stack levels used:    1
  4767 ;; Hardware stack levels required when called:    2
  4768 ;; This function calls:
  4769 ;;		_dec_to_bcd
  4770 ;; This function is called by:
  4771 ;;		_update_clock
  4772 ;; This function uses a non-reentrant model
  4773 ;;
  4774                           
  4775                           
  4776                           ;psect for function _ds1307_set_seconds
  4777  0FB2                     _ds1307_set_seconds:	
  4778                           
  4779                           ;incstack = 0
  4780                           ; Regs used in _ds1307_set_seconds: [wreg+status,2+status,0+pclath+cstack]
  4781                           ;ds1307_set_seconds@sec stored from wreg
  4782  0FB2  00F8               	movwf	ds1307_set_seconds@sec
  4783                           
  4784                           ;ds1307.c: 194: if (sec < 60) {
  4785  0FB3  303C               	movlw	60
  4786  0FB4  0278               	subwf	ds1307_set_seconds@sec,w
  4787  0FB5  1803               	skipnc
  4788  0FB6  0008               	return
  4789                           
  4790                           ;ds1307.c: 196: g_reg_data[DS1307_REG_SECONDS] = dec_to_bcd(sec) | (g_reg_data[DS1307_RE
      +                          G_SECONDS] & 0x80);
  4791  0FB7  3080               	movlw	128
  4792  0FB8  0021               	movlb	1	; select bank1
  4793  0FB9  0520               	andwf	_g_reg_data^(0+128),w
  4794  0FBA  00F7               	movwf	??_ds1307_set_seconds
  4795  0FBB  0878               	movf	ds1307_set_seconds@sec,w
  4796  0FBC  27C1               	fcall	_dec_to_bcd
  4797  0FBD  0477               	iorwf	??_ds1307_set_seconds,w
  4798  0FBE  0021               	movlb	1	; select bank1
  4799  0FBF  00A0               	movwf	_g_reg_data^(0+128)
  4800  0FC0  0008               	return
  4801  0FC1                     __end_of_ds1307_set_seconds:	
  4802  0FC1                     __ptext42:	
  4803 ;; *************** function _dec_to_bcd *****************
  4804 ;; Defined at:
  4805 ;;		line 67 in file "ds1307.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  dec             1    wreg     unsigned char 
  4808 ;; Auto vars:     Size  Location     Type
  4809 ;;  dec             1    6[COMMON] unsigned char 
  4810 ;; Return value:  Size  Location     Type
  4811 ;;                  1    wreg      unsigned char 
  4812 ;; Registers used:
  4813 ;;		wreg, status,2, status,0, pclath, cstack
  4814 ;; Tracked objects:
  4815 ;;		On entry : 0/1
  4816 ;;		On exit  : 0/0
  4817 ;;		Unchanged: 0/0
  4818 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4819 ;;      Params:         0       0       0       0
  4820 ;;      Locals:         1       0       0       0
  4821 ;;      Temps:          1       0       0       0
  4822 ;;      Totals:         2       0       0       0
  4823 ;;Total ram usage:        2 bytes
  4824 ;; Hardware stack levels used:    1
  4825 ;; Hardware stack levels required when called:    1
  4826 ;; This function calls:
  4827 ;;		___lbdiv
  4828 ;;		___lbmod
  4829 ;; This function is called by:
  4830 ;;		_ds1307_set_seconds
  4831 ;;		_ds1307_set_minutes
  4832 ;;		_ds1307_set_hours
  4833 ;;		_ds1307_set_day_of_month
  4834 ;;		_ds1307_set_month
  4835 ;;		_ds1307_set_year
  4836 ;; This function uses a non-reentrant model
  4837 ;;
  4838                           
  4839                           
  4840                           ;psect for function _dec_to_bcd
  4841  0FC1                     _dec_to_bcd:	
  4842                           
  4843                           ;incstack = 0
  4844                           ; Regs used in _dec_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  4845                           ;dec_to_bcd@dec stored from wreg
  4846  0FC1  00F6               	movwf	dec_to_bcd@dec
  4847                           
  4848                           ;ds1307.c: 70: return (((uint8_t) (dec / 10) << 4) | (dec % 10));
  4849  0FC2  300A               	movlw	10
  4850  0FC3  00F0               	movwf	___lbmod@divisor
  4851  0FC4  0876               	movf	dec_to_bcd@dec,w
  4852  0FC5  27D0  318F         	fcall	___lbmod
  4853  0FC7  00F5               	movwf	??_dec_to_bcd
  4854  0FC8  300A               	movlw	10
  4855  0FC9  00F0               	movwf	___lbdiv@divisor
  4856  0FCA  0876               	movf	dec_to_bcd@dec,w
  4857  0FCB  27E8               	fcall	___lbdiv
  4858  0FCC  0E89               	swapf	9,f
  4859  0FCD  39F0               	andlw	240
  4860  0FCE  0475               	iorwf	??_dec_to_bcd,w
  4861  0FCF  0008               	return
  4862  0FD0                     __end_of_dec_to_bcd:	
  4863  0FD0                     __ptext43:	
  4864 ;; *************** function ___lbmod *****************
  4865 ;; Defined at:
  4866 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lbmod.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  dividend        1    wreg     unsigned char 
  4869 ;;  divisor         1    0[COMMON] unsigned char 
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  dividend        1    2[COMMON] unsigned char 
  4872 ;;  rem             1    4[COMMON] unsigned char 
  4873 ;;  counter         1    3[COMMON] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;                  1    wreg      unsigned char 
  4876 ;; Registers used:
  4877 ;;		wreg, status,2, status,0
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/1
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4883 ;;      Params:         1       0       0       0
  4884 ;;      Locals:         3       0       0       0
  4885 ;;      Temps:          1       0       0       0
  4886 ;;      Totals:         5       0       0       0
  4887 ;;Total ram usage:        5 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; This function calls:
  4890 ;;		Nothing
  4891 ;; This function is called by:
  4892 ;;		_dec_to_bcd
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           
  4897                           ;psect for function ___lbmod
  4898  0FD0                     ___lbmod:	
  4899                           
  4900                           ;incstack = 0
  4901                           ; Regs used in ___lbmod: [wreg+status,2+status,0]
  4902                           ;___lbmod@dividend stored from wreg
  4903  0FD0  00F2               	movwf	___lbmod@dividend
  4904  0FD1  3008               	movlw	8
  4905  0FD2  00F3               	movwf	___lbmod@counter
  4906  0FD3  01F4               	clrf	___lbmod@rem
  4907  0FD4                     i1l2111:	
  4908  0FD4  0872               	movf	___lbmod@dividend,w
  4909  0FD5  00F1               	movwf	??___lbmod
  4910  0FD6  3007               	movlw	7
  4911  0FD7                     u106_25:	
  4912  0FD7  36F1               	lsrf	??___lbmod,f
  4913  0FD8  0B89               	decfsz	9,f
  4914  0FD9  2FD7               	goto	u106_25
  4915  0FDA  3574               	lslf	___lbmod@rem,w
  4916  0FDB  0471               	iorwf	??___lbmod,w
  4917  0FDC  00F4               	movwf	___lbmod@rem
  4918  0FDD  35F2               	lslf	___lbmod@dividend,f
  4919  0FDE  0870               	movf	___lbmod@divisor,w
  4920  0FDF  0274               	subwf	___lbmod@rem,w
  4921  0FE0  1C03               	skipc
  4922  0FE1  2FE4               	goto	i1l2119
  4923  0FE2  0870               	movf	___lbmod@divisor,w
  4924  0FE3  02F4               	subwf	___lbmod@rem,f
  4925  0FE4                     i1l2119:	
  4926  0FE4  0BF3               	decfsz	___lbmod@counter,f
  4927  0FE5  2FD4               	goto	i1l2111
  4928  0FE6  0874               	movf	___lbmod@rem,w
  4929  0FE7  0008               	return
  4930  0FE8                     __end_of___lbmod:	
  4931  0FE8                     __ptext44:	
  4932 ;; *************** function ___lbdiv *****************
  4933 ;; Defined at:
  4934 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lbdiv.c"
  4935 ;; Parameters:    Size  Location     Type
  4936 ;;  dividend        1    wreg     unsigned char 
  4937 ;;  divisor         1    0[COMMON] unsigned char 
  4938 ;; Auto vars:     Size  Location     Type
  4939 ;;  dividend        1    1[COMMON] unsigned char 
  4940 ;;  quotient        1    3[COMMON] unsigned char 
  4941 ;;  counter         1    2[COMMON] unsigned char 
  4942 ;; Return value:  Size  Location     Type
  4943 ;;                  1    wreg      unsigned char 
  4944 ;; Registers used:
  4945 ;;		wreg, status,2, status,0
  4946 ;; Tracked objects:
  4947 ;;		On entry : 0/1
  4948 ;;		On exit  : 0/0
  4949 ;;		Unchanged: 0/0
  4950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4951 ;;      Params:         1       0       0       0
  4952 ;;      Locals:         3       0       0       0
  4953 ;;      Temps:          0       0       0       0
  4954 ;;      Totals:         4       0       0       0
  4955 ;;Total ram usage:        4 bytes
  4956 ;; Hardware stack levels used:    1
  4957 ;; This function calls:
  4958 ;;		Nothing
  4959 ;; This function is called by:
  4960 ;;		_dec_to_bcd
  4961 ;; This function uses a non-reentrant model
  4962 ;;
  4963                           
  4964                           
  4965                           ;psect for function ___lbdiv
  4966  0FE8                     ___lbdiv:	
  4967                           
  4968                           ;incstack = 0
  4969                           ; Regs used in ___lbdiv: [wreg+status,2+status,0]
  4970                           ;___lbdiv@dividend stored from wreg
  4971  0FE8  00F1               	movwf	___lbdiv@dividend
  4972  0FE9  01F3               	clrf	___lbdiv@quotient
  4973  0FEA  0870               	movf	___lbdiv@divisor,w
  4974  0FEB  1903               	btfsc	3,2
  4975  0FEC  2FFE               	goto	i1l2103
  4976  0FED  01F2               	clrf	___lbdiv@counter
  4977  0FEE                     i1l2089:	
  4978  0FEE  0AF2               	incf	___lbdiv@counter,f
  4979  0FEF  1BF0               	btfsc	___lbdiv@divisor,7
  4980  0FF0  2FF3               	goto	i1l914
  4981  0FF1  35F0               	lslf	___lbdiv@divisor,f
  4982  0FF2  2FEE               	goto	i1l2089
  4983  0FF3                     i1l914:	
  4984  0FF3  35F3               	lslf	___lbdiv@quotient,f
  4985  0FF4  0870               	movf	___lbdiv@divisor,w
  4986  0FF5  0271               	subwf	___lbdiv@dividend,w
  4987  0FF6  1C03               	skipc
  4988  0FF7  2FFB               	goto	i1l2099
  4989  0FF8  0870               	movf	___lbdiv@divisor,w
  4990  0FF9  02F1               	subwf	___lbdiv@dividend,f
  4991  0FFA  1473               	bsf	___lbdiv@quotient,0
  4992  0FFB                     i1l2099:	
  4993  0FFB  36F0               	lsrf	___lbdiv@divisor,f
  4994  0FFC  0BF2               	decfsz	___lbdiv@counter,f
  4995  0FFD  2FF3               	goto	i1l914
  4996  0FFE                     i1l2103:	
  4997  0FFE  0873               	movf	___lbdiv@quotient,w
  4998  0FFF  0008               	return
  4999  1000                     __end_of___lbdiv:	
  5000                           
  5001                           	psect	text60
  5002  07AE                     __ptext60:	
  5003 ;; *************** function _keypad_read_key *****************
  5004 ;; Defined at:
  5005 ;;		line 63 in file "keypad.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;  key             1    4[COMMON] unsigned char 
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      unsigned char 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2, status,0, pclath, cstack
  5014 ;; Tracked objects:
  5015 ;;		On entry : 1F/0
  5016 ;;		On exit  : 1F/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5019 ;;      Params:         0       0       0       0
  5020 ;;      Locals:         1       0       0       0
  5021 ;;      Temps:          0       0       0       0
  5022 ;;      Totals:         1       0       0       0
  5023 ;;Total ram usage:        1 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; Hardware stack levels required when called:    4
  5026 ;; This function calls:
  5027 ;;		_keypad_scan
  5028 ;; This function is called by:
  5029 ;;		_tmr_isr
  5030 ;; This function uses a non-reentrant model
  5031 ;;
  5032                           
  5033                           
  5034                           ;psect for function _keypad_read_key
  5035  07AE                     _keypad_read_key:	
  5036                           
  5037                           ;keypad.c: 64: uint8_t key;
  5038                           ;keypad.c: 66: key = keypad_scan();
  5039                           
  5040                           ;incstack = 0
  5041                           ; Regs used in _keypad_read_key: [wreg+status,2+status,0+pclath+cstack]
  5042  07AE  27C9  3187         	fcall	_keypad_scan
  5043  07B0  00F4               	movwf	keypad_read_key@key
  5044                           
  5045                           ;keypad.c: 67: if (key == (0)) {
  5046  07B1  08F4               	movf	keypad_read_key@key,f
  5047  07B2  1D03               	skipz
  5048  07B3  2FB8               	goto	i1l2793
  5049                           
  5050                           ;keypad.c: 69: g_old_key = (0);
  5051  07B4  0020               	movlb	0	; select bank0
  5052  07B5  01CE               	clrf	_g_old_key
  5053                           
  5054                           ;keypad.c: 70: g_last_valid_key = (0);
  5055  07B6  01CD               	clrf	_g_last_valid_key
  5056                           
  5057                           ;keypad.c: 71: } else if (key == g_old_key) {
  5058  07B7  2FC7               	goto	i1l2805
  5059  07B8                     i1l2793:	
  5060  07B8  0874               	movf	keypad_read_key@key,w
  5061  07B9  0020               	movlb	0	; select bank0
  5062  07BA  064E               	xorwf	_g_old_key,w
  5063  07BB  1D03               	skipz
  5064  07BC  2FC4               	goto	i1l2801
  5065                           
  5066                           ;keypad.c: 73: if (key != g_last_valid_key) {
  5067  07BD  0874               	movf	keypad_read_key@key,w
  5068  07BE  064D               	xorwf	_g_last_valid_key,w
  5069  07BF  1903               	skipnz
  5070  07C0  2FC6               	goto	i1l2799
  5071                           
  5072                           ;keypad.c: 75: g_last_valid_key = key;
  5073  07C1  0874               	movf	keypad_read_key@key,w
  5074  07C2  00CD               	movwf	_g_last_valid_key
  5075                           
  5076                           ;keypad.c: 76: }
  5077  07C3  2FC7               	goto	i1l2805
  5078  07C4                     i1l2801:	
  5079                           
  5080                           ;keypad.c: 81: g_old_key = key;
  5081  07C4  0874               	movf	keypad_read_key@key,w
  5082  07C5  00CE               	movwf	_g_old_key
  5083  07C6                     i1l2799:	
  5084                           
  5085                           ;keypad.c: 77: else{
  5086                           ;keypad.c: 78: key = (0);
  5087  07C6  01F4               	clrf	keypad_read_key@key
  5088  07C7                     i1l2805:	
  5089                           
  5090                           ;keypad.c: 83: }
  5091                           ;keypad.c: 84: return key;
  5092  07C7  0874               	movf	keypad_read_key@key,w
  5093  07C8  0008               	return
  5094  07C9                     __end_of_keypad_read_key:	
  5095  07C9                     __ptext61:	
  5096 ;; *************** function _keypad_scan *****************
  5097 ;; Defined at:
  5098 ;;		line 51 in file "keypad.c"
  5099 ;; Parameters:    Size  Location     Type
  5100 ;;		None
  5101 ;; Auto vars:     Size  Location     Type
  5102 ;;		None
  5103 ;; Return value:  Size  Location     Type
  5104 ;;                  1    wreg      unsigned char 
  5105 ;; Registers used:
  5106 ;;		wreg, status,2, status,0, pclath, cstack
  5107 ;; Tracked objects:
  5108 ;;		On entry : 1F/0
  5109 ;;		On exit  : 1F/4
  5110 ;;		Unchanged: 0/0
  5111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5112 ;;      Params:         0       0       0       0
  5113 ;;      Locals:         0       0       0       0
  5114 ;;      Temps:          0       0       0       0
  5115 ;;      Totals:         0       0       0       0
  5116 ;;Total ram usage:        0 bytes
  5117 ;; Hardware stack levels used:    1
  5118 ;; Hardware stack levels required when called:    3
  5119 ;; This function calls:
  5120 ;;		_mcp23017_read_reg
  5121 ;; This function is called by:
  5122 ;;		_keypad_read_key
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           
  5127                           ;psect for function _keypad_scan
  5128  07C9                     _keypad_scan:	
  5129                           
  5130                           ;keypad.c: 53: return mcp23017_read_reg(MCP23017_REG_GPIOB);
  5131                           
  5132                           ;incstack = 0
  5133                           ; Regs used in _keypad_scan: [wreg+status,2+status,0+pclath+cstack]
  5134  07C9  3013               	movlw	19
  5135  07CA  3185  2DF6         	ljmp	_mcp23017_read_reg
  5136  07CC                     __end_of_keypad_scan:	
  5137                           
  5138                           	psect	text76
  5139  0318                     __ptext76:	
  5140 ;; *************** function _ds1307_date_formatted *****************
  5141 ;; Defined at:
  5142 ;;		line 391 in file "ds1307.c"
  5143 ;; Parameters:    Size  Location     Type
  5144 ;;  p_str_date      1    wreg     PTR unsigned char 
  5145 ;;		 -> tmr_isr@date(10), 
  5146 ;; Auto vars:     Size  Location     Type
  5147 ;;  p_str_date      1   12[COMMON] PTR unsigned char 
  5148 ;;		 -> tmr_isr@date(10), 
  5149 ;; Return value:  Size  Location     Type
  5150 ;;		None               void
  5151 ;; Registers used:
  5152 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/4
  5155 ;;		On exit  : 1F/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5158 ;;      Params:         0       0       0       0
  5159 ;;      Locals:         1       0       0       0
  5160 ;;      Temps:          0       0       0       0
  5161 ;;      Totals:         1       0       0       0
  5162 ;;Total ram usage:        1 bytes
  5163 ;; Hardware stack levels used:    1
  5164 ;; Hardware stack levels required when called:    3
  5165 ;; This function calls:
  5166 ;;		_ds1307_get_day_of_month
  5167 ;;		_ds1307_get_month
  5168 ;;		_ds1307_get_year
  5169 ;;		_sprintf
  5170 ;; This function is called by:
  5171 ;;		_tmr_isr
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           
  5176                           ;psect for function _ds1307_date_formatted
  5177  0318                     _ds1307_date_formatted:	
  5178                           
  5179                           ;incstack = 0
  5180                           ; Regs used in _ds1307_date_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5181                           ;ds1307_date_formatted@p_str_date stored from wreg
  5182  0318  00FC               	movwf	ds1307_date_formatted@p_str_date
  5183                           
  5184                           ;ds1307.c: 393: sprintf(p_str_date, "%.2u/%.2u/%.2u", ds1307_get_month(), ds1307_get_day
      +                          _of_month(), ds1307_get_year());
  5185  0319  301A               	movlw	low (STR_6| (0+32768))
  5186  031A  0020               	movlb	0	; select bank0
  5187  031B  00A0               	movwf	sprintf@f
  5188  031C  3088               	movlw	high (STR_6| (0+32768))
  5189  031D  00A1               	movwf	sprintf@f+1
  5190  031E  268E  3183         	fcall	_ds1307_get_month
  5191  0320  0020               	movlb	0	; select bank0
  5192  0321  00A2               	movwf	?_sprintf+2
  5193  0322  01A3               	clrf	?_sprintf+3
  5194  0323  268A  3183         	fcall	_ds1307_get_day_of_month
  5195  0325  0020               	movlb	0	; select bank0
  5196  0326  00A4               	movwf	?_sprintf+4
  5197  0327  01A5               	clrf	?_sprintf+5
  5198  0328  2691  3183         	fcall	_ds1307_get_year
  5199  032A  0020               	movlb	0	; select bank0
  5200  032B  00A6               	movwf	?_sprintf+6
  5201  032C  01A7               	clrf	?_sprintf+7
  5202  032D  087C               	movf	ds1307_date_formatted@p_str_date,w
  5203  032E  2D17               	ljmp	_sprintf
  5204  032F                     __end_of_ds1307_date_formatted:	
  5205  032F                     __ptext47:	
  5206 ;; *************** function _ds1307_start_clock *****************
  5207 ;; Defined at:
  5208 ;;		line 125 in file "ds1307.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;		None
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  tsec            1    4[COMMON] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;		None               void
  5215 ;; Registers used:
  5216 ;;		wreg, status,2, status,0, pclath, cstack
  5217 ;; Tracked objects:
  5218 ;;		On entry : 1F/4
  5219 ;;		On exit  : 1F/1
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5222 ;;      Params:         0       0       0       0
  5223 ;;      Locals:         1       0       0       0
  5224 ;;      Temps:          0       0       0       0
  5225 ;;      Totals:         1       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used:    1
  5228 ;; Hardware stack levels required when called:    3
  5229 ;; This function calls:
  5230 ;;		_ds1307_read_addr
  5231 ;;		_ds1307_write_addr
  5232 ;; This function is called by:
  5233 ;;		_ds1307_set_clock
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           
  5238                           ;psect for function _ds1307_start_clock
  5239  032F                     _ds1307_start_clock:	
  5240  032F                     i1l2249:	
  5241                           ;incstack = 0
  5242                           ; Regs used in _ds1307_start_clock: [wreg+status,2+status,0+pclath+cstack]
  5243                           
  5244                           
  5245                           ;ds1307.c: 130: uint8_t tsec;
  5246                           ;ds1307.c: 131: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  5247  032F  3000               	movlw	0
  5248  0330  260F  3183         	fcall	_ds1307_read_addr
  5249  0332  00F4               	movwf	ds1307_start_clock@tsec
  5250                           
  5251                           ;ds1307.c: 132: ds1307_write_addr(DS1307_REG_SECONDS, (tsec & 0x7F));
  5252  0333  00F2               	movwf	ds1307_write_addr@value
  5253  0334  3000               	movlw	0
  5254  0335  13F2               	bcf	ds1307_write_addr@value,7
  5255  0336  25BB               	fcall	_ds1307_write_addr
  5256                           
  5257                           ;ds1307.c: 133: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] & 0x7F;
  5258  0337  0021               	movlb	1	; select bank1
  5259  0338  13A0               	bcf	_g_reg_data^(0+128),7
  5260  0339  0008               	return
  5261  033A                     __end_of_ds1307_start_clock:	
  5262  033A                     __ptext33:	
  5263 ;; *************** function _ds1307_switch_to_12hr *****************
  5264 ;; Defined at:
  5265 ;;		line 316 in file "ds1307.c"
  5266 ;; Parameters:    Size  Location     Type
  5267 ;;		None
  5268 ;; Auto vars:     Size  Location     Type
  5269 ;;  hrs             1   10[COMMON] unsigned char 
  5270 ;;  pm_am           1    9[COMMON] unsigned char 
  5271 ;; Return value:  Size  Location     Type
  5272 ;;		None               void
  5273 ;; Registers used:
  5274 ;;		wreg, status,2, status,0, pclath, cstack
  5275 ;; Tracked objects:
  5276 ;;		On entry : 1F/1
  5277 ;;		On exit  : 1F/1
  5278 ;;		Unchanged: 0/0
  5279 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5280 ;;      Params:         0       0       0       0
  5281 ;;      Locals:         2       0       0       0
  5282 ;;      Temps:          0       0       0       0
  5283 ;;      Totals:         2       0       0       0
  5284 ;;Total ram usage:        2 bytes
  5285 ;; Hardware stack levels used:    1
  5286 ;; Hardware stack levels required when called:    3
  5287 ;; This function calls:
  5288 ;;		_ds1307_get_hours
  5289 ;;		_ds1307_is_12hr_mode
  5290 ;;		_ds1307_set_hours
  5291 ;;		_ds1307_set_hr_mode
  5292 ;;		_ds1307_set_pm_am
  5293 ;; This function is called by:
  5294 ;;		_update_clock
  5295 ;; This function uses a non-reentrant model
  5296 ;;
  5297                           
  5298                           
  5299                           ;psect for function _ds1307_switch_to_12hr
  5300  033A                     _ds1307_switch_to_12hr:	
  5301                           
  5302                           ;ds1307.c: 317: if (ds1307_is_12hr_mode() == 0) {
  5303                           
  5304                           ;incstack = 0
  5305                           ; Regs used in _ds1307_switch_to_12hr: [wreg+status,2+status,0+pclath+cstack]
  5306  033A  24A4  3183         	fcall	_ds1307_is_12hr_mode
  5307  033C  3800               	iorlw	0
  5308  033D  1D03               	skipz
  5309  033E  0008               	return
  5310                           
  5311                           ;ds1307.c: 318: uint8_t hrs;
  5312                           ;ds1307.c: 319: bool pm_am;
  5313                           ;ds1307.c: 320: hrs = ds1307_get_hours();
  5314  033F  24A9  3183         	fcall	_ds1307_get_hours
  5315  0341  00FA               	movwf	ds1307_switch_to_12hr@hrs
  5316                           
  5317                           ;ds1307.c: 321: if (hrs < 12) {
  5318  0342  300C               	movlw	12
  5319  0343  027A               	subwf	ds1307_switch_to_12hr@hrs,w
  5320                           
  5321                           ;ds1307.c: 322: pm_am = 0x00;
  5322  0344  01F9               	clrf	ds1307_switch_to_12hr@pm_am
  5323  0345  1803               	skipnc
  5324                           
  5325                           ;ds1307.c: 324: pm_am = 0x01;
  5326                           
  5327                           ;ds1307.c: 323: } else {
  5328  0346  0AF9               	incf	ds1307_switch_to_12hr@pm_am,f
  5329                           
  5330                           ;ds1307.c: 325: }
  5331                           ;ds1307.c: 326: if (hrs == 0) {
  5332  0347  08FA               	movf	ds1307_switch_to_12hr@hrs,f
  5333  0348  1D03               	skipz
  5334  0349  2B4D               	goto	i1l2449
  5335                           
  5336                           ;ds1307.c: 328: hrs = 12;
  5337  034A  300C               	movlw	12
  5338  034B  00FA               	movwf	ds1307_switch_to_12hr@hrs
  5339                           
  5340                           ;ds1307.c: 329: } else if (hrs > 12) {
  5341  034C  2B53               	goto	i1l2453
  5342  034D                     i1l2449:	
  5343  034D  300D               	movlw	13
  5344  034E  027A               	subwf	ds1307_switch_to_12hr@hrs,w
  5345  034F  1C03               	skipc
  5346  0350  2B53               	goto	i1l2453
  5347                           
  5348                           ;ds1307.c: 331: hrs = hrs - 12;
  5349  0351  30F4               	movlw	244
  5350  0352  07FA               	addwf	ds1307_switch_to_12hr@hrs,f
  5351  0353                     i1l2453:	
  5352                           
  5353                           ;ds1307.c: 332: }
  5354                           ;ds1307.c: 335: ds1307_set_hr_mode(0x01);
  5355  0353  3001               	movlw	1
  5356  0354  24F4  3183         	fcall	_ds1307_set_hr_mode
  5357                           
  5358                           ;ds1307.c: 336: ds1307_set_pm_am(pm_am);
  5359  0356  0879               	movf	ds1307_switch_to_12hr@pm_am,w
  5360  0357  24FF  3183         	fcall	_ds1307_set_pm_am
  5361                           
  5362                           ;ds1307.c: 337: ds1307_set_hours(hrs);
  5363  0359  087A               	movf	ds1307_switch_to_12hr@hrs,w
  5364  035A  2CD3               	ljmp	_ds1307_set_hours
  5365  035B                     __end_of_ds1307_switch_to_12hr:	
  5366  035B                     __ptext32:	
  5367 ;; *************** function _ds1307_switch_to_24hr *****************
  5368 ;; Defined at:
  5369 ;;		line 341 in file "ds1307.c"
  5370 ;; Parameters:    Size  Location     Type
  5371 ;;		None
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;  hrs             1   10[COMMON] unsigned char 
  5374 ;;  pm_am           1    9[COMMON] unsigned char 
  5375 ;; Return value:  Size  Location     Type
  5376 ;;		None               void
  5377 ;; Registers used:
  5378 ;;		wreg, status,2, status,0, pclath, cstack
  5379 ;; Tracked objects:
  5380 ;;		On entry : 1F/1
  5381 ;;		On exit  : 1F/1
  5382 ;;		Unchanged: 0/0
  5383 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5384 ;;      Params:         0       0       0       0
  5385 ;;      Locals:         2       0       0       0
  5386 ;;      Temps:          0       0       0       0
  5387 ;;      Totals:         2       0       0       0
  5388 ;;Total ram usage:        2 bytes
  5389 ;; Hardware stack levels used:    1
  5390 ;; Hardware stack levels required when called:    4
  5391 ;; This function calls:
  5392 ;;		_ds1307_get_hours
  5393 ;;		_ds1307_is_12hr_mode
  5394 ;;		_ds1307_is_pm
  5395 ;;		_ds1307_set_hours
  5396 ;;		_ds1307_set_hr_mode
  5397 ;; This function is called by:
  5398 ;;		_update_clock
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           
  5403                           ;psect for function _ds1307_switch_to_24hr
  5404  035B                     _ds1307_switch_to_24hr:	
  5405                           
  5406                           ;ds1307.c: 342: if (ds1307_is_12hr_mode() == 1) {
  5407                           
  5408                           ;incstack = 0
  5409                           ; Regs used in _ds1307_switch_to_24hr: [wreg+status,2+status,0+pclath+cstack]
  5410  035B  24A4  3183         	fcall	_ds1307_is_12hr_mode
  5411  035D  3A01               	xorlw	1
  5412  035E  1D03               	skipz
  5413  035F  0008               	return
  5414                           
  5415                           ;ds1307.c: 343: uint8_t hrs;
  5416                           ;ds1307.c: 344: bool pm_am;
  5417                           ;ds1307.c: 345: pm_am = ds1307_is_pm();
  5418  0360  24BF  3183         	fcall	_ds1307_is_pm
  5419  0362  00F9               	movwf	ds1307_switch_to_24hr@pm_am
  5420                           
  5421                           ;ds1307.c: 346: hrs = ds1307_get_hours();
  5422  0363  24A9  3183         	fcall	_ds1307_get_hours
  5423  0365  00FA               	movwf	ds1307_switch_to_24hr@hrs
  5424                           
  5425                           ;ds1307.c: 347: if ((!pm_am) && (hrs == 12)) {
  5426  0366  08F9               	movf	ds1307_switch_to_24hr@pm_am,f
  5427  0367  1D03               	skipz
  5428  0368  2B6F               	goto	i1l2427
  5429  0369  087A               	movf	ds1307_switch_to_24hr@hrs,w
  5430  036A  3A0C               	xorlw	12
  5431  036B  1D03               	skipz
  5432  036C  2B6F               	goto	i1l2427
  5433                           
  5434                           ;ds1307.c: 349: hrs = 0;
  5435  036D  01FA               	clrf	ds1307_switch_to_24hr@hrs
  5436                           
  5437                           ;ds1307.c: 350: } else if (pm_am && (hrs < 12)) {
  5438  036E  2B78               	goto	i1l2433
  5439  036F                     i1l2427:	
  5440  036F  0879               	movf	ds1307_switch_to_24hr@pm_am,w
  5441  0370  1903               	btfsc	3,2
  5442  0371  2B78               	goto	i1l2433
  5443  0372  300C               	movlw	12
  5444  0373  027A               	subwf	ds1307_switch_to_24hr@hrs,w
  5445  0374  1803               	skipnc
  5446  0375  2B78               	goto	i1l2433
  5447                           
  5448                           ;ds1307.c: 352: hrs = hrs + 12;
  5449  0376  300C               	movlw	12
  5450  0377  07FA               	addwf	ds1307_switch_to_24hr@hrs,f
  5451  0378                     i1l2433:	
  5452                           
  5453                           ;ds1307.c: 353: }
  5454                           ;ds1307.c: 355: ds1307_set_hr_mode(0x00);
  5455  0378  3000               	movlw	0
  5456  0379  24F4  3183         	fcall	_ds1307_set_hr_mode
  5457                           
  5458                           ;ds1307.c: 356: ds1307_set_hours(hrs);
  5459  037B  087A               	movf	ds1307_switch_to_24hr@hrs,w
  5460  037C  2CD3               	ljmp	_ds1307_set_hours
  5461  037D                     __end_of_ds1307_switch_to_24hr:	
  5462  037D                     __ptext70:	
  5463 ;; *************** function _ds1307_time_formatted *****************
  5464 ;; Defined at:
  5465 ;;		line 375 in file "ds1307.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;  p_str_time      1    wreg     PTR unsigned char 
  5468 ;;		 -> tmr_isr@time(10), 
  5469 ;; Auto vars:     Size  Location     Type
  5470 ;;  p_str_time      1   12[COMMON] PTR unsigned char 
  5471 ;;		 -> tmr_isr@time(10), 
  5472 ;; Return value:  Size  Location     Type
  5473 ;;		None               void
  5474 ;; Registers used:
  5475 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5476 ;; Tracked objects:
  5477 ;;		On entry : 1F/4
  5478 ;;		On exit  : 1E/0
  5479 ;;		Unchanged: 0/0
  5480 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5481 ;;      Params:         0       0       0       0
  5482 ;;      Locals:         1       0       0       0
  5483 ;;      Temps:          0       0       0       0
  5484 ;;      Totals:         1       0       0       0
  5485 ;;Total ram usage:        1 bytes
  5486 ;; Hardware stack levels used:    1
  5487 ;; Hardware stack levels required when called:    4
  5488 ;; This function calls:
  5489 ;;		_ds1307_get_hours
  5490 ;;		_ds1307_get_minutes
  5491 ;;		_ds1307_get_seconds
  5492 ;;		_ds1307_is_12hr_mode
  5493 ;;		_ds1307_is_pm
  5494 ;;		_sprintf
  5495 ;; This function is called by:
  5496 ;;		_tmr_isr
  5497 ;; This function uses a non-reentrant model
  5498 ;;
  5499                           
  5500                           
  5501                           ;psect for function _ds1307_time_formatted
  5502  037D                     _ds1307_time_formatted:	
  5503                           
  5504                           ;incstack = 0
  5505                           ; Regs used in _ds1307_time_formatted: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5506                           ;ds1307_time_formatted@p_str_time stored from wreg
  5507  037D  00FC               	movwf	ds1307_time_formatted@p_str_time
  5508                           
  5509                           ;ds1307.c: 376: if (ds1307_is_12hr_mode()) {
  5510  037E  24A4  3183         	fcall	_ds1307_is_12hr_mode
  5511  0380  3A00               	xorlw	0
  5512  0381  1903               	skipnz
  5513  0382  2BAD               	goto	i1l2821
  5514                           
  5515                           ;ds1307.c: 378: sprintf(p_str_time, "%.2u:%.2u:%.2u", ds1307_get_hours(), ds1307_get_min
      +                          utes(), ds1307_get_seconds());
  5516  0383  3029               	movlw	low (STR_4| (0+32768))
  5517  0384  0020               	movlb	0	; select bank0
  5518  0385  00A0               	movwf	sprintf@f
  5519  0386  3088               	movlw	high (STR_4| (0+32768))
  5520  0387  00A1               	movwf	sprintf@f+1
  5521  0388  24A9  3183         	fcall	_ds1307_get_hours
  5522  038A  0020               	movlb	0	; select bank0
  5523  038B  00A2               	movwf	?_sprintf+2
  5524  038C  01A3               	clrf	?_sprintf+3
  5525  038D  24B8  3183         	fcall	_ds1307_get_minutes
  5526  038F  0020               	movlb	0	; select bank0
  5527  0390  00A4               	movwf	?_sprintf+4
  5528  0391  01A5               	clrf	?_sprintf+5
  5529  0392  24BB  3183         	fcall	_ds1307_get_seconds
  5530  0394  26FE  3183         	fcall	PL10	;call to abstracted procedure
  5531  0396  2517  3183         	fcall	_sprintf
  5532                           
  5533                           ;ds1307.c: 379: if (ds1307_is_pm()) {
  5534  0398  24BF  3183         	fcall	_ds1307_is_pm
  5535  039A  3A00               	xorlw	0
  5536  039B  1903               	skipnz
  5537  039C  2BA2               	goto	i1l2817
  5538                           
  5539                           ;ds1307.c: 380: p_str_time[8] = 'P';
  5540  039D  087C               	movf	ds1307_time_formatted@p_str_time,w
  5541  039E  3E08               	addlw	8
  5542  039F  0086               	movwf	6
  5543  03A0  3050               	movlw	80
  5544  03A1  2BA6               	goto	L9
  5545  03A2                     i1l2817:	
  5546                           ;ds1307.c: 381: } else {
  5547                           
  5548                           
  5549                           ;ds1307.c: 382: p_str_time[8] = 'A';
  5550  03A2  087C               	movf	ds1307_time_formatted@p_str_time,w
  5551  03A3  3E08               	addlw	8
  5552  03A4  0086               	movwf	6
  5553  03A5  3041               	movlw	65
  5554  03A6                     L9:	
  5555  03A6  0187               	clrf	7
  5556  03A7  0081               	movwf	1
  5557                           
  5558                           ;ds1307.c: 383: }
  5559                           ;ds1307.c: 384: p_str_time[9] = (0);
  5560  03A8  087C               	movf	ds1307_time_formatted@p_str_time,w
  5561  03A9  3E09               	addlw	9
  5562  03AA  0086               	movwf	6
  5563  03AB  0181               	clrf	1
  5564                           
  5565                           ;ds1307.c: 385: } else {
  5566  03AC  0008               	return
  5567  03AD                     i1l2821:	
  5568                           
  5569                           ;ds1307.c: 387: sprintf(p_str_time, "%.2u:%.2u:%.2u ", ds1307_get_hours(), ds1307_get_mi
      +                          nutes(), ds1307_get_seconds());
  5570  03AD  300A               	movlw	low (STR_5| (0+32768))
  5571  03AE  0020               	movlb	0	; select bank0
  5572  03AF  00A0               	movwf	sprintf@f
  5573  03B0  3088               	movlw	high (STR_5| (0+32768))
  5574  03B1  00A1               	movwf	sprintf@f+1
  5575  03B2  24A9  3183         	fcall	_ds1307_get_hours
  5576  03B4  0020               	movlb	0	; select bank0
  5577  03B5  00A2               	movwf	?_sprintf+2
  5578  03B6  01A3               	clrf	?_sprintf+3
  5579  03B7  24B8  3183         	fcall	_ds1307_get_minutes
  5580  03B9  0020               	movlb	0	; select bank0
  5581  03BA  00A4               	movwf	?_sprintf+4
  5582  03BB  01A5               	clrf	?_sprintf+5
  5583  03BC  24BB  3183         	fcall	_ds1307_get_seconds
  5584  03BE  26FE  3183         	fcall	PL10	;call to abstracted procedure
  5585  03C0  2D17               	ljmp	_sprintf
  5586  03C1                     __end_of_ds1307_time_formatted:	
  5587  03C1                     __ptext30:	
  5588 ;; *************** function _update_clock *****************
  5589 ;; Defined at:
  5590 ;;		line 139 in file "main.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  up_down         1    wreg     unsigned char 
  5593 ;; Auto vars:     Size  Location     Type
  5594 ;;  up_down         1   12[COMMON] unsigned char 
  5595 ;;  val             1   13[COMMON] unsigned char 
  5596 ;;  pm              1   11[COMMON] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;		None               void
  5599 ;; Registers used:
  5600 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 1F/1
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5606 ;;      Params:         0       0       0       0
  5607 ;;      Locals:         3       0       0       0
  5608 ;;      Temps:          0       0       0       0
  5609 ;;      Totals:         3       0       0       0
  5610 ;;Total ram usage:        3 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    5
  5613 ;; This function calls:
  5614 ;;		_adjust_val
  5615 ;;		_ds1307_get_day_of_month
  5616 ;;		_ds1307_get_hours
  5617 ;;		_ds1307_get_minutes
  5618 ;;		_ds1307_get_month
  5619 ;;		_ds1307_get_seconds
  5620 ;;		_ds1307_get_year
  5621 ;;		_ds1307_is_12hr_mode
  5622 ;;		_ds1307_is_pm
  5623 ;;		_ds1307_set_clock
  5624 ;;		_ds1307_set_day_of_month
  5625 ;;		_ds1307_set_hours
  5626 ;;		_ds1307_set_minutes
  5627 ;;		_ds1307_set_month
  5628 ;;		_ds1307_set_pm_am
  5629 ;;		_ds1307_set_seconds
  5630 ;;		_ds1307_set_year
  5631 ;;		_ds1307_stop_clock
  5632 ;;		_ds1307_switch_to_12hr
  5633 ;;		_ds1307_switch_to_24hr
  5634 ;;		i1_ds1307_get_clock
  5635 ;; This function is called by:
  5636 ;;		_tmr_isr
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           
  5641                           ;psect for function _update_clock
  5642  03C1                     _update_clock:	
  5643                           
  5644                           ;incstack = 0
  5645                           ; Regs used in _update_clock: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5646                           ;update_clock@up_down stored from wreg
  5647  03C1  00FC               	movwf	update_clock@up_down
  5648                           
  5649                           ;main.c: 140: uint8_t val;
  5650                           ;main.c: 141: bool pm;
  5651                           ;main.c: 143: ds1307_stop_clock();
  5652  03C2  267F  3183         	fcall	_ds1307_stop_clock
  5653                           
  5654                           ;main.c: 144: ds1307_get_clock();
  5655  03C4  2629  3183         	fcall	i1_ds1307_get_clock
  5656                           
  5657                           ;main.c: 145: switch (g_clk_pos) {
  5658  03C6  2C70               	goto	i1l2783
  5659  03C7                     i1l2729:	
  5660                           
  5661                           ;main.c: 148: if (ds1307_is_12hr_mode()) {
  5662  03C7  24A4  3183         	fcall	_ds1307_is_12hr_mode
  5663  03C9  3A00               	xorlw	0
  5664  03CA  1903               	skipnz
  5665  03CB  2C03               	goto	i1l2763
  5666                           
  5667                           ;main.c: 149: val = ds1307_get_hours();
  5668  03CC  24A9  3183         	fcall	_ds1307_get_hours
  5669  03CE  00FD               	movwf	update_clock@val
  5670                           
  5671                           ;main.c: 150: pm = ds1307_is_pm();
  5672  03CF  24BF  3183         	fcall	_ds1307_is_pm
  5673  03D1  00FB               	movwf	update_clock@pm
  5674                           
  5675                           ;main.c: 151: if (((val == 12) && (!up_down)) || ((val == 11) && up_down)) {
  5676  03D2  087D               	movf	update_clock@val,w
  5677  03D3  3A0C               	xorlw	12
  5678  03D4  1903               	btfsc	3,2
  5679  03D5  087C               	movf	update_clock@up_down,w
  5680  03D6  1903               	btfsc	3,2
  5681  03D7  2BDF               	goto	i1l2741
  5682  03D8  087D               	movf	update_clock@val,w
  5683  03D9  3A0B               	xorlw	11
  5684  03DA  1D03               	skipz
  5685  03DB  2BE5               	goto	i1l197
  5686  03DC  087C               	movf	update_clock@up_down,w
  5687  03DD  1903               	btfsc	3,2
  5688  03DE  2BE5               	goto	i1l197
  5689  03DF                     i1l2741:	
  5690                           
  5691                           ;main.c: 152: pm = !pm;
  5692  03DF  087B               	movf	update_clock@pm,w
  5693  03E0  3A00               	xorlw	0
  5694  03E1  3000               	movlw	0
  5695  03E2  1903               	skipnz
  5696  03E3  3001               	movlw	1
  5697  03E4  00FB               	movwf	update_clock@pm
  5698  03E5                     i1l197:	
  5699                           
  5700                           ;main.c: 153: }
  5701                           ;main.c: 154: if ((val == 12) && (up_down)) {
  5702  03E5  087D               	movf	update_clock@val,w
  5703  03E6  3A0C               	xorlw	12
  5704  03E7  1D03               	skipz
  5705  03E8  2BEE               	goto	i1l2747
  5706  03E9  087C               	movf	update_clock@up_down,w
  5707  03EA  1903               	btfsc	3,2
  5708  03EB  2BEE               	goto	i1l2747
  5709                           
  5710                           ;main.c: 155: val = 1;
  5711  03EC  01FD               	clrf	update_clock@val
  5712  03ED  2BF9               	goto	i1l2755
  5713  03EE                     i1l2747:	
  5714                           ;main.c: 156: } else if ((val == 1) && (!up_down)) {
  5715                           
  5716  03EE  0B7D               	decfsz	update_clock@val,w
  5717  03EF  2BF6               	goto	i1l2753
  5718  03F0  08FC               	movf	update_clock@up_down,f
  5719  03F1  1D03               	skipz
  5720  03F2  2BF6               	goto	i1l2753
  5721                           
  5722                           ;main.c: 157: val = 12;
  5723  03F3  300C               	movlw	12
  5724  03F4  00FD               	movwf	update_clock@val
  5725                           
  5726                           ;main.c: 158: } else if (up_down) {
  5727  03F5  2BFC               	goto	i1l2759
  5728  03F6                     i1l2753:	
  5729  03F6  087C               	movf	update_clock@up_down,w
  5730  03F7  1903               	btfsc	3,2
  5731  03F8  2BFB               	goto	i1l2757
  5732  03F9                     i1l2755:	
  5733                           
  5734                           ;main.c: 159: val++;
  5735  03F9  0AFD               	incf	update_clock@val,f
  5736                           
  5737                           ;main.c: 160: } else {
  5738  03FA  2BFC               	goto	i1l2759
  5739  03FB                     i1l2757:	
  5740                           
  5741                           ;main.c: 161: val--;
  5742  03FB  03FD               	decf	update_clock@val,f
  5743  03FC                     i1l2759:	
  5744                           
  5745                           ;main.c: 162: }
  5746                           ;main.c: 163: ds1307_set_pm_am(pm);
  5747  03FC  087B               	movf	update_clock@pm,w
  5748  03FD  24FF  3183         	fcall	_ds1307_set_pm_am
  5749                           
  5750                           ;main.c: 164: ds1307_set_hours(val);
  5751  03FF  087D               	movf	update_clock@val,w
  5752  0400  24D3  3183         	fcall	_ds1307_set_hours
  5753                           
  5754                           ;main.c: 165: } else {
  5755  0402  2C88               	goto	i1l2785
  5756  0403                     i1l2763:	
  5757                           
  5758                           ;main.c: 166: val = ds1307_get_hours();
  5759  0403  24A9  3183         	fcall	_ds1307_get_hours
  5760  0405  00FD               	movwf	update_clock@val
  5761  0406  3017               	movlw	23
  5762                           
  5763                           ;main.c: 167: val = adjust_val(val, 0, 23, up_down);
  5764  0407  01F0               	clrf	adjust_val@lim_dwn
  5765  0408  00F1               	movwf	adjust_val@lim_up
  5766  0409  087C               	movf	update_clock@up_down,w
  5767  040A  00F2               	movwf	adjust_val@up_down
  5768  040B  087D               	movf	update_clock@val,w
  5769  040C  2489  3183         	fcall	_adjust_val
  5770  040E  00FD               	movwf	update_clock@val
  5771                           
  5772                           ;main.c: 168: ds1307_set_hours(val);
  5773  040F  087D               	movf	update_clock@val,w
  5774  0410  24D3  3183         	fcall	_ds1307_set_hours
  5775  0412  2C88               	goto	i1l2785
  5776  0413                     i1l2765:	
  5777                           
  5778                           ;main.c: 172: val = ds1307_get_minutes();
  5779  0413  24B8  3183         	fcall	_ds1307_get_minutes
  5780  0415  00FD               	movwf	update_clock@val
  5781  0416  303B               	movlw	59
  5782                           
  5783                           ;main.c: 173: val = adjust_val(val, 0, 59, up_down);
  5784  0417  01F0               	clrf	adjust_val@lim_dwn
  5785  0418  00F1               	movwf	adjust_val@lim_up
  5786  0419  087C               	movf	update_clock@up_down,w
  5787  041A  00F2               	movwf	adjust_val@up_down
  5788  041B  087D               	movf	update_clock@val,w
  5789  041C  2489               	fcall	_adjust_val
  5790  041D  00FD               	movwf	update_clock@val
  5791                           
  5792                           ;main.c: 174: ds1307_set_minutes(val);
  5793  041E  087D               	movf	update_clock@val,w
  5794  041F  318F  278E  3183   	fcall	_ds1307_set_minutes
  5795                           
  5796                           ;main.c: 175: break;
  5797  0422  2C88               	goto	i1l2785
  5798  0423                     i1l2767:	
  5799                           
  5800                           ;main.c: 177: val = ds1307_get_seconds();
  5801  0423  24BB  3183         	fcall	_ds1307_get_seconds
  5802  0425  00FD               	movwf	update_clock@val
  5803  0426  303B               	movlw	59
  5804                           
  5805                           ;main.c: 178: val = adjust_val(val, 0, 59, up_down);
  5806  0427  01F0               	clrf	adjust_val@lim_dwn
  5807  0428  00F1               	movwf	adjust_val@lim_up
  5808  0429  087C               	movf	update_clock@up_down,w
  5809  042A  00F2               	movwf	adjust_val@up_down
  5810  042B  087D               	movf	update_clock@val,w
  5811  042C  2489               	fcall	_adjust_val
  5812  042D  00FD               	movwf	update_clock@val
  5813                           
  5814                           ;main.c: 179: ds1307_set_seconds(val);
  5815  042E  087D               	movf	update_clock@val,w
  5816  042F  318F  27B2  3183   	fcall	_ds1307_set_seconds
  5817                           
  5818                           ;main.c: 180: break;
  5819  0432  2C88               	goto	i1l2785
  5820  0433                     i1l2769:	
  5821                           
  5822                           ;main.c: 182: val = ds1307_get_month();
  5823  0433  268E  3183         	fcall	_ds1307_get_month
  5824  0435  00FD               	movwf	update_clock@val
  5825  0436  300C               	movlw	12
  5826                           
  5827                           ;main.c: 183: val = adjust_val(val, 1, 12, up_down);
  5828  0437  01F0               	clrf	adjust_val@lim_dwn
  5829  0438  0AF0               	incf	adjust_val@lim_dwn,f
  5830  0439  00F1               	movwf	adjust_val@lim_up
  5831  043A  087C               	movf	update_clock@up_down,w
  5832  043B  00F2               	movwf	adjust_val@up_down
  5833  043C  087D               	movf	update_clock@val,w
  5834  043D  2489               	fcall	_adjust_val
  5835  043E  00FD               	movwf	update_clock@val
  5836                           
  5837                           ;main.c: 184: ds1307_set_month(val);
  5838  043F  087D               	movf	update_clock@val,w
  5839  0440  318F  2798  3183   	fcall	_ds1307_set_month
  5840                           
  5841                           ;main.c: 185: break;
  5842  0443  2C88               	goto	i1l2785
  5843  0444                     i1l2771:	
  5844                           
  5845                           ;main.c: 187: val = ds1307_get_day_of_month();
  5846  0444  268A  3183         	fcall	_ds1307_get_day_of_month
  5847  0446  00FD               	movwf	update_clock@val
  5848  0447  301F               	movlw	31
  5849                           
  5850                           ;main.c: 188: val = adjust_val(val, 1, 31, up_down);
  5851  0448  01F0               	clrf	adjust_val@lim_dwn
  5852  0449  0AF0               	incf	adjust_val@lim_dwn,f
  5853  044A  00F1               	movwf	adjust_val@lim_up
  5854  044B  087C               	movf	update_clock@up_down,w
  5855  044C  00F2               	movwf	adjust_val@up_down
  5856  044D  087D               	movf	update_clock@val,w
  5857  044E  2489               	fcall	_adjust_val
  5858  044F  00FD               	movwf	update_clock@val
  5859                           
  5860                           ;main.c: 189: ds1307_set_day_of_month(val);
  5861  0450  087D               	movf	update_clock@val,w
  5862  0451  318F  27A5  3183   	fcall	_ds1307_set_day_of_month
  5863                           
  5864                           ;main.c: 190: break;
  5865  0454  2C88               	goto	i1l2785
  5866  0455                     i1l2773:	
  5867                           
  5868                           ;main.c: 192: val = ds1307_get_year();
  5869  0455  2691  3183         	fcall	_ds1307_get_year
  5870  0457  00FD               	movwf	update_clock@val
  5871  0458  3063               	movlw	99
  5872                           
  5873                           ;main.c: 193: val = adjust_val(val, 0, 99, up_down);
  5874  0459  01F0               	clrf	adjust_val@lim_dwn
  5875  045A  00F1               	movwf	adjust_val@lim_up
  5876  045B  087C               	movf	update_clock@up_down,w
  5877  045C  00F2               	movwf	adjust_val@up_down
  5878  045D  087D               	movf	update_clock@val,w
  5879  045E  2489               	fcall	_adjust_val
  5880  045F  00FD               	movwf	update_clock@val
  5881                           
  5882                           ;main.c: 194: ds1307_set_year(val);
  5883  0460  087D               	movf	update_clock@val,w
  5884  0461  318F  2784  3183   	fcall	_ds1307_set_year
  5885                           
  5886                           ;main.c: 195: break;
  5887  0464  2C88               	goto	i1l2785
  5888  0465                     i1l2775:	
  5889                           
  5890                           ;main.c: 197: if (ds1307_is_12hr_mode() == 1) {
  5891  0465  24A4  3183         	fcall	_ds1307_is_12hr_mode
  5892  0467  3A01               	xorlw	1
  5893  0468  1D03               	skipz
  5894  0469  2C6D               	goto	i1l2779
  5895                           
  5896                           ;main.c: 198: ds1307_switch_to_24hr();
  5897  046A  235B  3183         	fcall	_ds1307_switch_to_24hr
  5898                           
  5899                           ;main.c: 199: } else {
  5900  046C  2C88               	goto	i1l2785
  5901  046D                     i1l2779:	
  5902                           
  5903                           ;main.c: 200: ds1307_switch_to_12hr();
  5904  046D  233A  3183         	fcall	_ds1307_switch_to_12hr
  5905  046F  2C88               	goto	i1l2785
  5906  0470                     i1l2783:	
  5907  0470  0020               	movlb	0	; select bank0
  5908  0471  084B               	movf	_g_clk_pos,w
  5909                           
  5910                           ; Switch size 1, requested type "space"
  5911                           ; Number of cases is 7, Range of values is 1 to 7
  5912                           ; switch strategies available:
  5913                           ; Name         Instructions Cycles
  5914                           ; simple_byte           22    12 (average)
  5915                           ; direct_byte           23     9 (fixed)
  5916                           ; jumptable            263     9 (fixed)
  5917                           ;	Chosen strategy is simple_byte
  5918  0472  3A01               	xorlw	1	; case 1
  5919  0473  1903               	skipnz
  5920  0474  2BC7               	goto	i1l2729
  5921  0475  3A03               	xorlw	3	; case 2
  5922  0476  1903               	skipnz
  5923  0477  2C13               	goto	i1l2765
  5924  0478  3A01               	xorlw	1	; case 3
  5925  0479  1903               	skipnz
  5926  047A  2C23               	goto	i1l2767
  5927  047B  3A07               	xorlw	7	; case 4
  5928  047C  1903               	skipnz
  5929  047D  2C33               	goto	i1l2769
  5930  047E  3A01               	xorlw	1	; case 5
  5931  047F  1903               	skipnz
  5932  0480  2C44               	goto	i1l2771
  5933  0481  3A03               	xorlw	3	; case 6
  5934  0482  1903               	skipnz
  5935  0483  2C55               	goto	i1l2773
  5936  0484  3A01               	xorlw	1	; case 7
  5937  0485  1903               	skipnz
  5938  0486  2C65               	goto	i1l2775
  5939  0487  2C88               	goto	i1l2785
  5940  0488                     i1l2785:	
  5941                           
  5942                           ;main.c: 204: ds1307_set_clock();
  5943  0488  2DDA               	ljmp	i1l2459
  5944  0489                     __end_of_update_clock:	
  5945  0489                     __ptext51:	
  5946 ;; *************** function _adjust_val *****************
  5947 ;; Defined at:
  5948 ;;		line 126 in file "main.c"
  5949 ;; Parameters:    Size  Location     Type
  5950 ;;  value           1    wreg     unsigned char 
  5951 ;;  lim_dwn         1    0[COMMON] unsigned char 
  5952 ;;  lim_up          1    1[COMMON] unsigned char 
  5953 ;;  up_down         1    2[COMMON] unsigned char 
  5954 ;; Auto vars:     Size  Location     Type
  5955 ;;  value           1    3[COMMON] unsigned char 
  5956 ;; Return value:  Size  Location     Type
  5957 ;;                  1    wreg      unsigned char 
  5958 ;; Registers used:
  5959 ;;		wreg, status,2, status,0
  5960 ;; Tracked objects:
  5961 ;;		On entry : 1E/1
  5962 ;;		On exit  : 1E/0
  5963 ;;		Unchanged: 1E/0
  5964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5965 ;;      Params:         3       0       0       0
  5966 ;;      Locals:         1       0       0       0
  5967 ;;      Temps:          0       0       0       0
  5968 ;;      Totals:         4       0       0       0
  5969 ;;Total ram usage:        4 bytes
  5970 ;; Hardware stack levels used:    1
  5971 ;; This function calls:
  5972 ;;		Nothing
  5973 ;; This function is called by:
  5974 ;;		_update_clock
  5975 ;; This function uses a non-reentrant model
  5976 ;;
  5977                           
  5978                           
  5979                           ;psect for function _adjust_val
  5980  0489                     _adjust_val:	
  5981                           
  5982                           ;incstack = 0
  5983                           ; Regs used in _adjust_val: [wreg+status,2+status,0]
  5984                           ;adjust_val@value stored from wreg
  5985  0489  00F3               	movwf	adjust_val@value
  5986                           
  5987                           ;main.c: 127: if ((value == lim_up) && (up_down)) {
  5988  048A  0671               	xorwf	adjust_val@lim_up,w
  5989  048B  1D03               	skipz
  5990  048C  2C92               	goto	i1l2339
  5991  048D  0872               	movf	adjust_val@up_down,w
  5992  048E  1903               	btfsc	3,2
  5993  048F  2C92               	goto	i1l2339
  5994                           
  5995                           ;main.c: 128: value = lim_dwn;
  5996  0490  0870               	movf	adjust_val@lim_dwn,w
  5997  0491  2C9A               	goto	L6
  5998  0492                     i1l2339:	
  5999                           ;main.c: 129: } else if ((value == lim_dwn) && (!up_down)) {
  6000                           
  6001  0492  0873               	movf	adjust_val@value,w
  6002  0493  0670               	xorwf	adjust_val@lim_dwn,w
  6003  0494  1D03               	skipz
  6004  0495  2C9C               	goto	i1l2345
  6005  0496  08F2               	movf	adjust_val@up_down,f
  6006  0497  1D03               	skipz
  6007  0498  2C9C               	goto	i1l2345
  6008                           
  6009                           ;main.c: 130: value = lim_up;
  6010  0499  0871               	movf	adjust_val@lim_up,w
  6011  049A                     L6:	
  6012  049A  00F3               	movwf	adjust_val@value
  6013                           
  6014                           ;main.c: 131: } else if (up_down) {
  6015  049B  2CA2               	goto	i1l2351
  6016  049C                     i1l2345:	
  6017  049C  0872               	movf	adjust_val@up_down,w
  6018  049D  1903               	btfsc	3,2
  6019  049E  2CA1               	goto	i1l2349
  6020                           
  6021                           ;main.c: 132: value++;
  6022  049F  0AF3               	incf	adjust_val@value,f
  6023                           
  6024                           ;main.c: 133: } else {
  6025  04A0  2CA2               	goto	i1l2351
  6026  04A1                     i1l2349:	
  6027                           
  6028                           ;main.c: 134: value--;
  6029  04A1  03F3               	decf	adjust_val@value,f
  6030  04A2                     i1l2351:	
  6031                           
  6032                           ;main.c: 135: }
  6033                           ;main.c: 136: return value;
  6034  04A2  0873               	movf	adjust_val@value,w
  6035  04A3  0008               	return
  6036  04A4                     __end_of_adjust_val:	
  6037  04A4                     __ptext73:	
  6038 ;; *************** function _ds1307_is_12hr_mode *****************
  6039 ;; Defined at:
  6040 ;;		line 182 in file "ds1307.c"
  6041 ;; Parameters:    Size  Location     Type
  6042 ;;		None
  6043 ;; Auto vars:     Size  Location     Type
  6044 ;;		None
  6045 ;; Return value:  Size  Location     Type
  6046 ;;                  1    wreg      unsigned char 
  6047 ;; Registers used:
  6048 ;;		wreg
  6049 ;; Tracked objects:
  6050 ;;		On entry : 0/0
  6051 ;;		On exit  : 1F/1
  6052 ;;		Unchanged: 0/0
  6053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6054 ;;      Params:         0       0       0       0
  6055 ;;      Locals:         0       0       0       0
  6056 ;;      Temps:          0       0       0       0
  6057 ;;      Totals:         0       0       0       0
  6058 ;;Total ram usage:        0 bytes
  6059 ;; Hardware stack levels used:    1
  6060 ;; This function calls:
  6061 ;;		Nothing
  6062 ;; This function is called by:
  6063 ;;		_update_clock
  6064 ;;		_ds1307_get_hours
  6065 ;;		_ds1307_set_hours
  6066 ;;		_ds1307_is_pm
  6067 ;;		_ds1307_set_pm_am
  6068 ;;		_ds1307_switch_to_12hr
  6069 ;;		_ds1307_switch_to_24hr
  6070 ;;		_ds1307_time_formatted
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           
  6075                           ;psect for function _ds1307_is_12hr_mode
  6076  04A4                     _ds1307_is_12hr_mode:	
  6077                           
  6078                           ;ds1307.c: 185: return ((g_reg_data[DS1307_REG_HOURS] & 0x40) == 0x40);
  6079                           
  6080                           ;incstack = 0
  6081                           ; Regs used in _ds1307_is_12hr_mode: [wreg]
  6082  04A4  3000               	movlw	0
  6083  04A5  0021               	movlb	1	; select bank1
  6084  04A6  1B22               	btfsc	(_g_reg_data^(0+128)+2),6
  6085  04A7  3001               	movlw	1
  6086  04A8  0008               	return
  6087  04A9                     __end_of_ds1307_is_12hr_mode:	
  6088  04A9                     __ptext72:	
  6089 ;; *************** function _ds1307_get_hours *****************
  6090 ;; Defined at:
  6091 ;;		line 211 in file "ds1307.c"
  6092 ;; Parameters:    Size  Location     Type
  6093 ;;		None
  6094 ;; Auto vars:     Size  Location     Type
  6095 ;;  hours           1    5[COMMON] unsigned char 
  6096 ;; Return value:  Size  Location     Type
  6097 ;;                  1    wreg      unsigned char 
  6098 ;; Registers used:
  6099 ;;		wreg, status,2, status,0, pclath, cstack
  6100 ;; Tracked objects:
  6101 ;;		On entry : 1E/1
  6102 ;;		On exit  : 1E/0
  6103 ;;		Unchanged: 0/0
  6104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6105 ;;      Params:         0       0       0       0
  6106 ;;      Locals:         1       0       0       0
  6107 ;;      Temps:          0       0       0       0
  6108 ;;      Totals:         1       0       0       0
  6109 ;;Total ram usage:        1 bytes
  6110 ;; Hardware stack levels used:    1
  6111 ;; Hardware stack levels required when called:    2
  6112 ;; This function calls:
  6113 ;;		_bcd_to_dec
  6114 ;;		_ds1307_is_12hr_mode
  6115 ;; This function is called by:
  6116 ;;		_update_clock
  6117 ;;		_ds1307_is_pm
  6118 ;;		_ds1307_switch_to_12hr
  6119 ;;		_ds1307_switch_to_24hr
  6120 ;;		_ds1307_time_formatted
  6121 ;; This function uses a non-reentrant model
  6122 ;;
  6123                           
  6124                           
  6125                           ;psect for function _ds1307_get_hours
  6126  04A9                     _ds1307_get_hours:	
  6127                           
  6128                           ;ds1307.c: 212: uint8_t hours;
  6129                           ;ds1307.c: 213: if (ds1307_is_12hr_mode()) {
  6130                           
  6131                           ;incstack = 0
  6132                           ; Regs used in _ds1307_get_hours: [wreg+status,2+status,0+pclath+cstack]
  6133  04A9  24A4  3183         	fcall	_ds1307_is_12hr_mode
  6134  04AB  3A00               	xorlw	0
  6135  04AC  1903               	skipnz
  6136  04AD  2CB2               	goto	i1l2153
  6137                           
  6138                           ;ds1307.c: 215: hours = g_reg_data[DS1307_REG_HOURS] & 0x1F;
  6139  04AE  0822               	movf	(_g_reg_data^(0+128)+2),w
  6140  04AF  00F5               	movwf	ds1307_get_hours@hours
  6141  04B0  301F               	movlw	31
  6142  04B1  2CB5               	goto	L10
  6143  04B2                     i1l2153:	
  6144                           ;ds1307.c: 216: } else {
  6145                           
  6146                           
  6147                           ;ds1307.c: 218: hours = g_reg_data[DS1307_REG_HOURS] & 0x3F;
  6148  04B2  0822               	movf	(_g_reg_data^(0+128)+2),w
  6149  04B3  00F5               	movwf	ds1307_get_hours@hours
  6150  04B4  303F               	movlw	63
  6151  04B5                     L10:	
  6152  04B5  05F5               	andwf	ds1307_get_hours@hours,f
  6153                           
  6154                           ;ds1307.c: 219: }
  6155                           ;ds1307.c: 220: return bcd_to_dec(hours);
  6156  04B6  0875               	movf	ds1307_get_hours@hours,w
  6157  04B7  2D0D               	ljmp	_bcd_to_dec
  6158  04B8                     __end_of_ds1307_get_hours:	
  6159  04B8                     __ptext75:	
  6160 ;; *************** function _ds1307_get_minutes *****************
  6161 ;; Defined at:
  6162 ;;		line 200 in file "ds1307.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;		None
  6165 ;; Auto vars:     Size  Location     Type
  6166 ;;		None
  6167 ;; Return value:  Size  Location     Type
  6168 ;;                  1    wreg      unsigned char 
  6169 ;; Registers used:
  6170 ;;		wreg, status,2, status,0, pclath, cstack
  6171 ;; Tracked objects:
  6172 ;;		On entry : 1F/0
  6173 ;;		On exit  : 1E/0
  6174 ;;		Unchanged: 0/0
  6175 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6176 ;;      Params:         0       0       0       0
  6177 ;;      Locals:         0       0       0       0
  6178 ;;      Temps:          0       0       0       0
  6179 ;;      Totals:         0       0       0       0
  6180 ;;Total ram usage:        0 bytes
  6181 ;; Hardware stack levels used:    1
  6182 ;; Hardware stack levels required when called:    2
  6183 ;; This function calls:
  6184 ;;		_bcd_to_dec
  6185 ;; This function is called by:
  6186 ;;		_update_clock
  6187 ;;		_ds1307_time_formatted
  6188 ;; This function uses a non-reentrant model
  6189 ;;
  6190                           
  6191                           
  6192                           ;psect for function _ds1307_get_minutes
  6193  04B8                     _ds1307_get_minutes:	
  6194                           
  6195                           ;ds1307.c: 201: return bcd_to_dec(g_reg_data[DS1307_REG_MINUTES]);
  6196                           
  6197                           ;incstack = 0
  6198                           ; Regs used in _ds1307_get_minutes: [wreg+status,2+status,0+pclath+cstack]
  6199  04B8  0021               	movlb	1	; select bank1
  6200  04B9  0821               	movf	(_g_reg_data^(0+128)+1),w
  6201  04BA  2D0D               	ljmp	_bcd_to_dec
  6202  04BB                     __end_of_ds1307_get_minutes:	
  6203  04BB                     __ptext74:	
  6204 ;; *************** function _ds1307_get_seconds *****************
  6205 ;; Defined at:
  6206 ;;		line 188 in file "ds1307.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;		None
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;		None
  6211 ;; Return value:  Size  Location     Type
  6212 ;;                  1    wreg      unsigned char 
  6213 ;; Registers used:
  6214 ;;		wreg, status,2, status,0, pclath, cstack
  6215 ;; Tracked objects:
  6216 ;;		On entry : 1F/0
  6217 ;;		On exit  : 1E/0
  6218 ;;		Unchanged: 0/0
  6219 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6220 ;;      Params:         0       0       0       0
  6221 ;;      Locals:         0       0       0       0
  6222 ;;      Temps:          0       0       0       0
  6223 ;;      Totals:         0       0       0       0
  6224 ;;Total ram usage:        0 bytes
  6225 ;; Hardware stack levels used:    1
  6226 ;; Hardware stack levels required when called:    2
  6227 ;; This function calls:
  6228 ;;		_bcd_to_dec
  6229 ;; This function is called by:
  6230 ;;		_update_clock
  6231 ;;		_ds1307_time_formatted
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           
  6236                           ;psect for function _ds1307_get_seconds
  6237  04BB                     _ds1307_get_seconds:	
  6238                           
  6239                           ;ds1307.c: 189: return bcd_to_dec(g_reg_data[DS1307_REG_SECONDS] & 0x7F);
  6240                           
  6241                           ;incstack = 0
  6242                           ; Regs used in _ds1307_get_seconds: [wreg+status,2+status,0+pclath+cstack]
  6243  04BB  0021               	movlb	1	; select bank1
  6244  04BC  0820               	movf	_g_reg_data^(0+128),w
  6245  04BD  397F               	andlw	127
  6246  04BE  2D0D               	ljmp	_bcd_to_dec
  6247  04BF                     __end_of_ds1307_get_seconds:	
  6248  04BF                     __ptext71:	
  6249 ;; *************** function _ds1307_is_pm *****************
  6250 ;; Defined at:
  6251 ;;		line 281 in file "ds1307.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;  is_pm           1    7[COMMON] unsigned char 
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      unsigned char 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2, status,0, pclath, cstack
  6260 ;; Tracked objects:
  6261 ;;		On entry : 1E/1
  6262 ;;		On exit  : 1E/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6265 ;;      Params:         0       0       0       0
  6266 ;;      Locals:         1       0       0       0
  6267 ;;      Temps:          1       0       0       0
  6268 ;;      Totals:         2       0       0       0
  6269 ;;Total ram usage:        2 bytes
  6270 ;; Hardware stack levels used:    1
  6271 ;; Hardware stack levels required when called:    3
  6272 ;; This function calls:
  6273 ;;		_ds1307_get_hours
  6274 ;;		_ds1307_is_12hr_mode
  6275 ;; This function is called by:
  6276 ;;		_update_clock
  6277 ;;		_ds1307_switch_to_24hr
  6278 ;;		_ds1307_time_formatted
  6279 ;; This function uses a non-reentrant model
  6280 ;;
  6281                           
  6282                           
  6283                           ;psect for function _ds1307_is_pm
  6284  04BF                     _ds1307_is_pm:	
  6285                           
  6286                           ;ds1307.c: 282: bool is_pm;
  6287                           ;ds1307.c: 283: if (ds1307_is_12hr_mode()) {
  6288                           
  6289                           ;incstack = 0
  6290                           ; Regs used in _ds1307_is_pm: [wreg+status,2+status,0+pclath+cstack]
  6291  04BF  24A4  3183         	fcall	_ds1307_is_12hr_mode
  6292  04C1  3A00               	xorlw	0
  6293  04C2  1903               	skipnz
  6294  04C3  2CC9               	goto	i1l2225
  6295                           
  6296                           ;ds1307.c: 285: is_pm = ((g_reg_data[DS1307_REG_HOURS] & 0x20) == 0x20);
  6297  04C4  3000               	movlw	0
  6298  04C5  1AA2               	btfsc	(_g_reg_data^(0+128)+2),5
  6299  04C6  3001               	movlw	1
  6300  04C7  00F7               	movwf	ds1307_is_pm@is_pm
  6301                           
  6302                           ;ds1307.c: 286: } else {
  6303  04C8  2CD1               	goto	i1l2227
  6304  04C9                     i1l2225:	
  6305                           
  6306                           ;ds1307.c: 289: is_pm = (ds1307_get_hours() > 11);
  6307  04C9  24A9               	fcall	_ds1307_get_hours
  6308  04CA  00F6               	movwf	??_ds1307_is_pm
  6309  04CB  300C               	movlw	12
  6310  04CC  0276               	subwf	??_ds1307_is_pm,w
  6311  04CD  3000               	movlw	0
  6312  04CE  1803               	skipnc
  6313  04CF  3001               	movlw	1
  6314  04D0  00F7               	movwf	ds1307_is_pm@is_pm
  6315  04D1                     i1l2227:	
  6316                           
  6317                           ;ds1307.c: 290: }
  6318                           ;ds1307.c: 291: return is_pm;
  6319  04D1  0877               	movf	ds1307_is_pm@is_pm,w
  6320  04D2  0008               	return
  6321  04D3                     __end_of_ds1307_is_pm:	
  6322  04D3                     __ptext36:	
  6323 ;; *************** function _ds1307_set_hours *****************
  6324 ;; Defined at:
  6325 ;;		line 223 in file "ds1307.c"
  6326 ;; Parameters:    Size  Location     Type
  6327 ;;  hours           1    wreg     unsigned char 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  hours           1    8[COMMON] unsigned char 
  6330 ;; Return value:  Size  Location     Type
  6331 ;;		None               void
  6332 ;; Registers used:
  6333 ;;		wreg, status,2, status,0, pclath, cstack
  6334 ;; Tracked objects:
  6335 ;;		On entry : 1E/1
  6336 ;;		On exit  : 1F/1
  6337 ;;		Unchanged: 0/0
  6338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6339 ;;      Params:         0       0       0       0
  6340 ;;      Locals:         1       0       0       0
  6341 ;;      Temps:          1       0       0       0
  6342 ;;      Totals:         2       0       0       0
  6343 ;;Total ram usage:        2 bytes
  6344 ;; Hardware stack levels used:    1
  6345 ;; Hardware stack levels required when called:    2
  6346 ;; This function calls:
  6347 ;;		_dec_to_bcd
  6348 ;;		_ds1307_is_12hr_mode
  6349 ;; This function is called by:
  6350 ;;		_update_clock
  6351 ;;		_ds1307_switch_to_12hr
  6352 ;;		_ds1307_switch_to_24hr
  6353 ;; This function uses a non-reentrant model
  6354 ;;
  6355                           
  6356                           
  6357                           ;psect for function _ds1307_set_hours
  6358  04D3                     _ds1307_set_hours:	
  6359                           
  6360                           ;incstack = 0
  6361                           ; Regs used in _ds1307_set_hours: [wreg+status,2+status,0+pclath+cstack]
  6362                           ;ds1307_set_hours@hours stored from wreg
  6363  04D3  00F8               	movwf	ds1307_set_hours@hours
  6364                           
  6365                           ;ds1307.c: 224: if (ds1307_is_12hr_mode()) {
  6366  04D4  24A4  3183         	fcall	_ds1307_is_12hr_mode
  6367  04D6  3A00               	xorlw	0
  6368  04D7  1903               	skipnz
  6369  04D8  2CE8               	goto	i1l2245
  6370                           
  6371                           ;ds1307.c: 226: if ((hours > 0) && (hours < 13)) {
  6372  04D9  0878               	movf	ds1307_set_hours@hours,w
  6373  04DA  1903               	btfsc	3,2
  6374  04DB  0008               	return
  6375  04DC  300D               	movlw	13
  6376  04DD  0278               	subwf	ds1307_set_hours@hours,w
  6377  04DE  1803               	skipnc
  6378  04DF  0008               	return
  6379                           
  6380                           ;ds1307.c: 228: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x60);
  6381  04E0  3060               	movlw	96
  6382  04E1  0522               	andwf	(_g_reg_data^(0+128)+2),w
  6383  04E2  00F7               	movwf	??_ds1307_set_hours
  6384  04E3  0878               	movf	ds1307_set_hours@hours,w
  6385  04E4  318F  27C1  3183   	fcall	_dec_to_bcd
  6386  04E7  2F03               	ljmp	PL12	;call to abstracted procedure
  6387  04E8                     i1l2245:	
  6388                           
  6389                           ;ds1307.c: 231: if (hours < 24) {
  6390  04E8  3018               	movlw	24
  6391  04E9  0278               	subwf	ds1307_set_hours@hours,w
  6392  04EA  1803               	skipnc
  6393  04EB  0008               	return
  6394                           
  6395                           ;ds1307.c: 233: g_reg_data[DS1307_REG_HOURS] = dec_to_bcd(hours) | (g_reg_data[DS1307_RE
      +                          G_HOURS] & 0x40);
  6396  04EC  3040               	movlw	64
  6397  04ED  0522               	andwf	(_g_reg_data^(0+128)+2),w
  6398  04EE  00F7               	movwf	??_ds1307_set_hours
  6399  04EF  0878               	movf	ds1307_set_hours@hours,w
  6400  04F0  318F  27C1  3183   	fcall	_dec_to_bcd
  6401  04F3  2F03               	ljmp	PL12	;call to abstracted procedure
  6402  04F4                     __end_of_ds1307_set_hours:	
  6403  04F4                     __ptext35:	
  6404 ;; *************** function _ds1307_set_hr_mode *****************
  6405 ;; Defined at:
  6406 ;;		line 306 in file "ds1307.c"
  6407 ;; Parameters:    Size  Location     Type
  6408 ;;  mode            1    wreg     unsigned char 
  6409 ;; Auto vars:     Size  Location     Type
  6410 ;;  mode            1    0[COMMON] unsigned char 
  6411 ;; Return value:  Size  Location     Type
  6412 ;;		None               void
  6413 ;; Registers used:
  6414 ;;		wreg, status,2
  6415 ;; Tracked objects:
  6416 ;;		On entry : 1E/1
  6417 ;;		On exit  : 1F/1
  6418 ;;		Unchanged: 0/0
  6419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6420 ;;      Params:         0       0       0       0
  6421 ;;      Locals:         1       0       0       0
  6422 ;;      Temps:          0       0       0       0
  6423 ;;      Totals:         1       0       0       0
  6424 ;;Total ram usage:        1 bytes
  6425 ;; Hardware stack levels used:    1
  6426 ;; This function calls:
  6427 ;;		Nothing
  6428 ;; This function is called by:
  6429 ;;		_ds1307_switch_to_12hr
  6430 ;;		_ds1307_switch_to_24hr
  6431 ;; This function uses a non-reentrant model
  6432 ;;
  6433                           
  6434                           
  6435                           ;psect for function _ds1307_set_hr_mode
  6436  04F4                     _ds1307_set_hr_mode:	
  6437                           
  6438                           ;incstack = 0
  6439                           ; Regs used in _ds1307_set_hr_mode: [wreg+status,2]
  6440                           ;ds1307_set_hr_mode@mode stored from wreg
  6441  04F4  00F0               	movwf	ds1307_set_hr_mode@mode
  6442                           
  6443                           ;ds1307.c: 309: if (mode == 1) {
  6444  04F5  0B70               	decfsz	ds1307_set_hr_mode@mode,w
  6445  04F6  2CFC               	goto	i1l398
  6446                           
  6447                           ;ds1307.c: 310: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b01000000
      +                          ;
  6448  04F7  0021               	movlb	1	; select bank1
  6449  04F8  0822               	movf	(_g_reg_data^(0+128)+2),w
  6450  04F9  3840               	iorlw	64
  6451  04FA  00A2               	movwf	(_g_reg_data^(0+128)+2)
  6452                           
  6453                           ;ds1307.c: 311: } else {
  6454  04FB  0008               	return
  6455  04FC                     i1l398:	
  6456                           
  6457                           ;ds1307.c: 312: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b10111111
      +                          ;
  6458  04FC  0021               	movlb	1	; select bank1
  6459  04FD  1322               	bcf	(_g_reg_data^(0+128)+2),6
  6460  04FE  0008               	return
  6461  04FF                     __end_of_ds1307_set_hr_mode:	
  6462  04FF                     __ptext34:	
  6463 ;; *************** function _ds1307_set_pm_am *****************
  6464 ;; Defined at:
  6465 ;;		line 294 in file "ds1307.c"
  6466 ;; Parameters:    Size  Location     Type
  6467 ;;  pm_am           1    wreg     unsigned char 
  6468 ;; Auto vars:     Size  Location     Type
  6469 ;;  pm_am           1    0[COMMON] unsigned char 
  6470 ;; Return value:  Size  Location     Type
  6471 ;;		None               void
  6472 ;; Registers used:
  6473 ;;		wreg, status,2, pclath, cstack
  6474 ;; Tracked objects:
  6475 ;;		On entry : 0/1
  6476 ;;		On exit  : 1F/1
  6477 ;;		Unchanged: 0/0
  6478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6479 ;;      Params:         0       0       0       0
  6480 ;;      Locals:         1       0       0       0
  6481 ;;      Temps:          0       0       0       0
  6482 ;;      Totals:         1       0       0       0
  6483 ;;Total ram usage:        1 bytes
  6484 ;; Hardware stack levels used:    1
  6485 ;; Hardware stack levels required when called:    1
  6486 ;; This function calls:
  6487 ;;		_ds1307_is_12hr_mode
  6488 ;; This function is called by:
  6489 ;;		_update_clock
  6490 ;;		_ds1307_switch_to_12hr
  6491 ;; This function uses a non-reentrant model
  6492 ;;
  6493                           
  6494                           
  6495                           ;psect for function _ds1307_set_pm_am
  6496  04FF                     _ds1307_set_pm_am:	
  6497                           
  6498                           ;incstack = 0
  6499                           ; Regs used in _ds1307_set_pm_am: [wreg+status,2+pclath+cstack]
  6500                           ;ds1307_set_pm_am@pm_am stored from wreg
  6501  04FF  00F0               	movwf	ds1307_set_pm_am@pm_am
  6502                           
  6503                           ;ds1307.c: 295: if (ds1307_is_12hr_mode()) {
  6504  0500  24A4  3183         	fcall	_ds1307_is_12hr_mode
  6505  0502  3A00               	xorlw	0
  6506  0503  1903               	skipnz
  6507  0504  0008               	return
  6508                           
  6509                           ;ds1307.c: 296: if (pm_am == 0x01) {
  6510  0505  0B70               	decfsz	ds1307_set_pm_am@pm_am,w
  6511  0506  2D0B               	goto	i1l393
  6512                           
  6513                           ;ds1307.c: 298: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] | 0b00100000
      +                          ;
  6514  0507  0822               	movf	(_g_reg_data^(0+128)+2),w
  6515  0508  3820               	iorlw	32
  6516  0509  00A2               	movwf	(_g_reg_data^(0+128)+2)
  6517                           
  6518                           ;ds1307.c: 299: } else {
  6519  050A  0008               	return
  6520  050B                     i1l393:	
  6521                           
  6522                           ;ds1307.c: 301: g_reg_data[DS1307_REG_HOURS] = g_reg_data[DS1307_REG_HOURS] & 0b11011111
      +                          ;
  6523  050B  12A2               	bcf	(_g_reg_data^(0+128)+2),5
  6524  050C  0008               	return
  6525  050D                     __end_of_ds1307_set_pm_am:	
  6526  050D                     __ptext84:	
  6527 ;; *************** function _bcd_to_dec *****************
  6528 ;; Defined at:
  6529 ;;		line 73 in file "ds1307.c"
  6530 ;; Parameters:    Size  Location     Type
  6531 ;;  bcd             1    wreg     unsigned char 
  6532 ;; Auto vars:     Size  Location     Type
  6533 ;;  bcd             1    4[COMMON] unsigned char 
  6534 ;; Return value:  Size  Location     Type
  6535 ;;                  1    wreg      unsigned char 
  6536 ;; Registers used:
  6537 ;;		wreg, status,2, status,0, pclath, cstack
  6538 ;; Tracked objects:
  6539 ;;		On entry : 1F/1
  6540 ;;		On exit  : 1E/0
  6541 ;;		Unchanged: 1E/0
  6542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6543 ;;      Params:         0       0       0       0
  6544 ;;      Locals:         1       0       0       0
  6545 ;;      Temps:          1       0       0       0
  6546 ;;      Totals:         2       0       0       0
  6547 ;;Total ram usage:        2 bytes
  6548 ;; Hardware stack levels used:    1
  6549 ;; Hardware stack levels required when called:    1
  6550 ;; This function calls:
  6551 ;;		___bmul
  6552 ;; This function is called by:
  6553 ;;		_ds1307_get_seconds
  6554 ;;		_ds1307_get_minutes
  6555 ;;		_ds1307_get_hours
  6556 ;;		_ds1307_get_day_of_month
  6557 ;;		_ds1307_get_month
  6558 ;;		_ds1307_get_year
  6559 ;; This function uses a non-reentrant model
  6560 ;;
  6561                           
  6562                           
  6563                           ;psect for function _bcd_to_dec
  6564  050D                     _bcd_to_dec:	
  6565                           
  6566                           ;incstack = 0
  6567                           ; Regs used in _bcd_to_dec: [wreg+status,2+status,0+pclath+cstack]
  6568                           ;bcd_to_dec@bcd stored from wreg
  6569  050D  00F4               	movwf	bcd_to_dec@bcd
  6570                           
  6571                           ;ds1307.c: 77: return (((bcd >> 4)*10) + (bcd & 0x0F));
  6572  050E  390F               	andlw	15
  6573  050F  00F3               	movwf	??_bcd_to_dec
  6574  0510  300A               	movlw	10
  6575  0511  00F0               	movwf	___bmul@multiplicand
  6576  0512  0E74               	swapf	bcd_to_dec@bcd,w
  6577  0513  390F               	andlw	15
  6578  0514  25AF               	fcall	___bmul
  6579  0515  0773               	addwf	??_bcd_to_dec,w
  6580  0516  0008               	return
  6581  0517                     __end_of_bcd_to_dec:	
  6582  0517                     __ptext77:	
  6583 ;; *************** function _sprintf *****************
  6584 ;; Defined at:
  6585 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\doprnt.c"
  6586 ;; Parameters:    Size  Location     Type
  6587 ;;  sp              1    wreg     PTR unsigned char 
  6588 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  6589 ;;  f               2    0[BANK0 ] PTR const unsigned char 
  6590 ;;		 -> STR_6(15), STR_5(16), STR_4(15), STR_3(3), 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;  sp              1   17[BANK0 ] PTR unsigned char 
  6593 ;;		 -> tmr_isr@pos(2), tmr_isr@date(10), tmr_isr@time(10), 
  6594 ;;  _val            4   13[BANK0 ] struct .
  6595 ;;  c               1   19[BANK0 ] char 
  6596 ;;  prec            1   18[BANK0 ] char 
  6597 ;;  ap              1   12[BANK0 ] PTR void [1]
  6598 ;;		 -> ?_sprintf(2), 
  6599 ;;  flag            1    0        unsigned char 
  6600 ;; Return value:  Size  Location     Type
  6601 ;;                  2    0[BANK0 ] int 
  6602 ;; Registers used:
  6603 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6604 ;; Tracked objects:
  6605 ;;		On entry : 1F/0
  6606 ;;		On exit  : 1F/0
  6607 ;;		Unchanged: 0/0
  6608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6609 ;;      Params:         0       8       0       0
  6610 ;;      Locals:         0       8       0       0
  6611 ;;      Temps:          0       4       0       0
  6612 ;;      Totals:         0      20       0       0
  6613 ;;Total ram usage:       20 bytes
  6614 ;; Hardware stack levels used:    1
  6615 ;; Hardware stack levels required when called:    1
  6616 ;; This function calls:
  6617 ;;		___bmul
  6618 ;;		___lwdiv
  6619 ;;		___lwmod
  6620 ;;		_isdigit
  6621 ;; This function is called by:
  6622 ;;		_tmr_isr
  6623 ;;		_ds1307_time_formatted
  6624 ;;		_ds1307_date_formatted
  6625 ;; This function uses a non-reentrant model
  6626 ;;
  6627                           
  6628                           
  6629                           ;psect for function _sprintf
  6630  0517                     _sprintf:	
  6631                           
  6632                           ;incstack = 0
  6633                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6634                           ;sprintf@sp stored from wreg
  6635  0517  00B1               	movwf	sprintf@sp
  6636                           
  6637                           ;doprnt.c: 494: va_list ap;
  6638                           ;doprnt.c: 499: signed char c;
  6639                           ;doprnt.c: 506: signed char prec;
  6640                           ;doprnt.c: 508: unsigned char flag;
  6641                           ;doprnt.c: 527: union {
  6642                           ;doprnt.c: 528: unsigned int _val;
  6643                           ;doprnt.c: 529: struct {
  6644                           ;doprnt.c: 530: const char * _cp;
  6645                           ;doprnt.c: 531: unsigned _len;
  6646                           ;doprnt.c: 532: } _str;
  6647                           ;doprnt.c: 533: } _val;
  6648                           ;doprnt.c: 542: *ap = __va_start();
  6649  0518  3022               	movlw	(?_sprintf+2)& (0+255)
  6650  0519  00AC               	movwf	sprintf@ap
  6651  051A                     i1l2543:	
  6652                           ;doprnt.c: 545: while(c = *f++) {
  6653                           
  6654  051A  26D9  3183         	fcall	PL2	;call to abstracted procedure
  6655  051C  08B3               	movf	sprintf@c,f
  6656  051D  1903               	btfsc	3,2
  6657  051E  2DAA               	goto	i1l2545
  6658                           
  6659                           ;doprnt.c: 547: if(c != '%')
  6660  051F  0833               	movf	sprintf@c,w
  6661  0520  3A25               	xorlw	37
  6662  0521  1903               	skipnz
  6663  0522  2D27               	goto	i1l2485
  6664                           
  6665                           ;doprnt.c: 549: {
  6666                           ;doprnt.c: 550: ((*sp++ = (c)));
  6667  0523  0831               	movf	sprintf@sp,w
  6668  0524  26F2  3183         	fcall	PL6	;call to abstracted procedure
  6669                           
  6670                           ;doprnt.c: 551: continue;
  6671  0526  2D1A               	goto	i1l2543
  6672  0527                     i1l2485:	
  6673                           
  6674                           ;doprnt.c: 620: if(*f == '.') {
  6675  0527  26F8  3183         	fcall	PL8	;call to abstracted procedure
  6676  0529  3A2E               	xorlw	46
  6677  052A  1D03               	skipz
  6678  052B  2D49               	goto	i1l2497
  6679                           
  6680                           ;doprnt.c: 622: f++;
  6681  052C  0AA0               	incf	sprintf@f,f
  6682  052D  1903               	skipnz
  6683  052E  0AA1               	incf	sprintf@f+1,f
  6684                           
  6685                           ;doprnt.c: 629: {
  6686                           ;doprnt.c: 630: prec = 0;
  6687  052F  01B2               	clrf	sprintf@prec
  6688  0530                     i1l2495:	
  6689                           ;doprnt.c: 631: while(isdigit((unsigned)*f))
  6690                           
  6691  0530  26F8  3183         	fcall	PL8	;call to abstracted procedure
  6692  0532  2707  3183         	fcall	_isdigit
  6693  0534  1C03               	btfss	3,0
  6694  0535  2D4A               	goto	i1l2501
  6695                           
  6696                           ;doprnt.c: 632: prec = prec*10 + *f++ - '0';
  6697  0536  0820               	movf	sprintf@f,w
  6698  0537  0084               	movwf	4
  6699  0538  0821               	movf	sprintf@f+1,w
  6700  0539  0085               	movwf	5
  6701  053A  0800               	movf	0,w	;code access
  6702  053B  00A8               	movwf	??_sprintf
  6703  053C  300A               	movlw	10
  6704  053D  00F0               	movwf	___bmul@multiplicand
  6705  053E  0832               	movf	sprintf@prec,w
  6706  053F  25AF  3183         	fcall	___bmul
  6707  0541  0020               	movlb	0	; select bank0
  6708  0542  0728               	addwf	??_sprintf,w
  6709  0543  3ED0               	addlw	-48
  6710  0544  00B2               	movwf	sprintf@prec
  6711  0545  0AA0               	incf	sprintf@f,f
  6712  0546  1903               	skipnz
  6713  0547  0AA1               	incf	sprintf@f+1,f
  6714  0548  2D30               	goto	i1l2495
  6715  0549                     i1l2497:	
  6716                           
  6717                           ;doprnt.c: 635: prec = 0;
  6718  0549  01B2               	clrf	sprintf@prec
  6719  054A                     i1l2501:	
  6720  054A  26D9  3183         	fcall	PL2	;call to abstracted procedure
  6721                           
  6722                           ; Switch size 1, requested type "space"
  6723                           ; Number of cases is 2, Range of values is 0 to 117
  6724                           ; switch strategies available:
  6725                           ; Name         Instructions Cycles
  6726                           ; simple_byte            7     4 (average)
  6727                           ; direct_byte          242     6 (fixed)
  6728                           ; jumptable            260     6 (fixed)
  6729                           ;	Chosen strategy is simple_byte
  6730  054C  3A00               	xorlw	0	; case 0
  6731  054D  1903               	skipnz
  6732  054E  2DAA               	goto	i1l2545
  6733  054F  3A75               	xorlw	117	; case 117
  6734  0550  1903               	skipnz
  6735  0551  2D53               	goto	i1l2503
  6736  0552  2D1A               	goto	i1l2543
  6737  0553                     i1l2503:	
  6738                           
  6739                           ;doprnt.c: 1282: {
  6740                           ;doprnt.c: 1295: _val._val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6741  0553  082C               	movf	sprintf@ap,w
  6742  0554  0086               	movwf	6
  6743  0555  0187               	clrf	7
  6744  0556  3F40               	moviw [0]fsr1
  6745  0557  00AD               	movwf	sprintf@_val
  6746  0558  3F41               	moviw [1]fsr1
  6747  0559  00AE               	movwf	sprintf@_val+1
  6748  055A  0AAC               	incf	sprintf@ap,f
  6749  055B  0AAC               	incf	sprintf@ap,f
  6750                           
  6751                           ;doprnt.c: 1296: }
  6752                           ;doprnt.c: 1299: if(prec == 0 && _val._val == 0)
  6753  055C  08B2               	movf	sprintf@prec,f
  6754  055D  1D03               	skipz
  6755  055E  2D64               	goto	i1l2513
  6756  055F  082E               	movf	sprintf@_val+1,w
  6757  0560  042D               	iorwf	sprintf@_val,w
  6758  0561  1D03               	skipz
  6759  0562  2D64               	goto	i1l2513
  6760                           
  6761                           ;doprnt.c: 1300: prec++;
  6762  0563  0AB2               	incf	sprintf@prec,f
  6763  0564                     i1l2513:	
  6764                           
  6765                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6766  0564  01B3               	clrf	sprintf@c
  6767  0565  0AB3               	incf	sprintf@c,f
  6768  0566                     i1l2519:	
  6769                           
  6770                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  6771  0566  0833               	movf	sprintf@c,w
  6772  0567  26E6  3183         	fcall	PL4	;call to abstracted procedure
  6773  0569  00AA               	movwf	??_sprintf+2
  6774  056A  3F01               	moviw [1]fsr0
  6775  056B  00AB               	movwf	??_sprintf+3
  6776  056C  022E               	subwf	sprintf@_val+1,w
  6777  056D  1D03               	skipz
  6778  056E  2D71               	goto	u156_25
  6779  056F  082A               	movf	??_sprintf+2,w
  6780  0570  022D               	subwf	sprintf@_val,w
  6781  0571                     u156_25:	
  6782  0571  1C03               	btfss	3,0
  6783  0572  2D78               	goto	i1l2527
  6784  0573  0AB3               	incf	sprintf@c,f
  6785  0574  0833               	movf	sprintf@c,w
  6786  0575  3A05               	xorlw	5
  6787  0576  1D03               	skipz
  6788  0577  2D66               	goto	i1l2519
  6789  0578                     i1l2527:	
  6790                           
  6791                           ;doprnt.c: 1348: if(c < prec)
  6792  0578  0833               	movf	sprintf@c,w
  6793  0579  3A80               	xorlw	128
  6794  057A  00A8               	movwf	??_sprintf
  6795  057B  0832               	movf	sprintf@prec,w
  6796  057C  3A80               	xorlw	128
  6797  057D  02A8               	subwf	??_sprintf,f
  6798  057E  1C03               	btfss	3,0
  6799  057F  2DA6               	goto	i1l2541
  6800                           
  6801                           ;doprnt.c: 1350: else if(prec < c)
  6802  0580  0832               	movf	sprintf@prec,w
  6803  0581  3A80               	xorlw	128
  6804  0582  00A8               	movwf	??_sprintf
  6805  0583  0833               	movf	sprintf@c,w
  6806  0584  3A80               	xorlw	128
  6807  0585  02A8               	subwf	??_sprintf,f
  6808  0586  1803               	skipnc
  6809  0587  2DA6               	goto	i1l2541
  6810                           
  6811                           ;doprnt.c: 1351: prec = c;
  6812  0588  0833               	movf	sprintf@c,w
  6813  0589  00B2               	movwf	sprintf@prec
  6814  058A  2DA6               	goto	i1l2541
  6815  058B                     i1l2535:	
  6816                           
  6817                           ;doprnt.c: 1487: {
  6818                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  6819  058B  300A               	movlw	10
  6820  058C  00F7               	movwf	___lwmod@divisor
  6821  058D  01F8               	clrf	___lwmod@divisor+1
  6822  058E  0832               	movf	sprintf@prec,w
  6823  058F  26E6  3183         	fcall	PL4	;call to abstracted procedure
  6824  0591  00F0               	movwf	___lwdiv@divisor
  6825  0592  3F01               	moviw [1]fsr0
  6826  0593  00F1               	movwf	___lwdiv@divisor+1
  6827  0594  082E               	movf	sprintf@_val+1,w
  6828  0595  00F3               	movwf	___lwdiv@dividend+1
  6829  0596  082D               	movf	sprintf@_val,w
  6830  0597  00F2               	movwf	___lwdiv@dividend
  6831  0598  2694  3183         	fcall	___lwdiv
  6832  059A  0871               	movf	?___lwdiv+1,w
  6833  059B  00FA               	movwf	___lwmod@dividend+1
  6834  059C  0870               	movf	?___lwdiv,w
  6835  059D  00F9               	movwf	___lwmod@dividend
  6836  059E  26B9  3183         	fcall	___lwmod
  6837  05A0  0877               	movf	?___lwmod,w
  6838  05A1  3E30               	addlw	48
  6839  05A2  00B3               	movwf	sprintf@c
  6840                           
  6841                           ;doprnt.c: 1532: }
  6842                           ;doprnt.c: 1533: ((*sp++ = (c)));
  6843  05A3  0831               	movf	sprintf@sp,w
  6844  05A4  26F2  3183         	fcall	PL6	;call to abstracted procedure
  6845  05A6                     i1l2541:	
  6846  05A6  03B2               	decf	sprintf@prec,f
  6847  05A7  0F32               	incfsz	sprintf@prec,w
  6848  05A8  2D8B               	goto	i1l2535
  6849  05A9  2D1A               	goto	i1l2543
  6850  05AA                     i1l2545:	
  6851                           
  6852                           ;doprnt.c: 1547: *sp = 0;
  6853  05AA  0831               	movf	sprintf@sp,w
  6854  05AB  0086               	movwf	6
  6855  05AC  0187               	clrf	7
  6856  05AD  0181               	clrf	1
  6857  05AE  0008               	return
  6858  05AF                     __end_of_sprintf:	
  6859  05AF                     __ptext85:	
  6860 ;; *************** function ___bmul *****************
  6861 ;; Defined at:
  6862 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\Umul8.c"
  6863 ;; Parameters:    Size  Location     Type
  6864 ;;  multiplier      1    wreg     unsigned char 
  6865 ;;  multiplicand    1    0[COMMON] unsigned char 
  6866 ;; Auto vars:     Size  Location     Type
  6867 ;;  multiplier      1    2[COMMON] unsigned char 
  6868 ;;  product         1    1[COMMON] unsigned char 
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      unsigned char 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0
  6873 ;; Tracked objects:
  6874 ;;		On entry : 1E/0
  6875 ;;		On exit  : 1E/0
  6876 ;;		Unchanged: 1E/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6878 ;;      Params:         1       0       0       0
  6879 ;;      Locals:         2       0       0       0
  6880 ;;      Temps:          0       0       0       0
  6881 ;;      Totals:         3       0       0       0
  6882 ;;Total ram usage:        3 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; This function calls:
  6885 ;;		Nothing
  6886 ;; This function is called by:
  6887 ;;		_bcd_to_dec
  6888 ;;		_sprintf
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           
  6892                           
  6893                           ;psect for function ___bmul
  6894  05AF                     ___bmul:	
  6895                           
  6896                           ;incstack = 0
  6897                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  6898                           ;___bmul@multiplier stored from wreg
  6899  05AF  00F2               	movwf	___bmul@multiplier
  6900  05B0  01F1               	clrf	___bmul@product
  6901  05B1                     i1l2043:	
  6902  05B1  0870               	movf	___bmul@multiplicand,w
  6903  05B2  1872               	btfsc	___bmul@multiplier,0
  6904  05B3  07F1               	addwf	___bmul@product,f
  6905  05B4  35F0               	lslf	___bmul@multiplicand,f
  6906  05B5  36F2               	lsrf	___bmul@multiplier,f
  6907  05B6  08F2               	movf	___bmul@multiplier,f
  6908  05B7  1D03               	skipz
  6909  05B8  2DB1               	goto	i1l2043
  6910  05B9  0871               	movf	___bmul@product,w
  6911  05BA  0008               	return
  6912  05BB                     __end_of___bmul:	
  6913  007E                     btemp	set	126	;btemp
  6914  007E                     pic14e$flags	set	126
  6915  007E                     wtemp	set	126
  6916  007E                     wtemp0	set	126
  6917  0080                     wtemp1	set	128
  6918  0082                     wtemp2	set	130
  6919  0084                     wtemp3	set	132
  6920  0086                     wtemp4	set	134
  6921  0088                     wtemp5	set	136
  6922  007F                     wtemp6	set	127
  6923  007E                     ttemp	set	126
  6924  007E                     ttemp0	set	126
  6925  0081                     ttemp1	set	129
  6926  0084                     ttemp2	set	132
  6927  0087                     ttemp3	set	135
  6928  007F                     ttemp4	set	127
  6929  007E                     ltemp	set	126
  6930  007E                     ltemp0	set	126
  6931  0082                     ltemp1	set	130
  6932  0086                     ltemp2	set	134
  6933  0080                     ltemp3	set	128
  6934  05BB                     __ptext48:	
  6935 ;; *************** function _ds1307_write_addr *****************
  6936 ;; Defined at:
  6937 ;;		line 103 in file "ds1307.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;  addr            1    wreg     unsigned char 
  6940 ;;  value           1    2[COMMON] unsigned char 
  6941 ;; Auto vars:     Size  Location     Type
  6942 ;;  addr            1    3[COMMON] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;		None               void
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, pclath, cstack
  6947 ;; Tracked objects:
  6948 ;;		On entry : 1F/4
  6949 ;;		On exit  : 1F/4
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6952 ;;      Params:         1       0       0       0
  6953 ;;      Locals:         1       0       0       0
  6954 ;;      Temps:          0       0       0       0
  6955 ;;      Totals:         2       0       0       0
  6956 ;;Total ram usage:        2 bytes
  6957 ;; Hardware stack levels used:    1
  6958 ;; Hardware stack levels required when called:    2
  6959 ;; This function calls:
  6960 ;;		i1_i2c_send_address
  6961 ;;		i1_i2c_send_data
  6962 ;;		i1_i2c_start
  6963 ;;		i1_i2c_stop
  6964 ;; This function is called by:
  6965 ;;		_ds1307_stop_clock
  6966 ;;		_ds1307_start_clock
  6967 ;; This function uses a non-reentrant model
  6968 ;;
  6969                           
  6970                           
  6971                           ;psect for function _ds1307_write_addr
  6972  05BB                     _ds1307_write_addr:	
  6973                           
  6974                           ;incstack = 0
  6975                           ; Regs used in _ds1307_write_addr: [wreg+status,2+status,0+pclath+cstack]
  6976                           ;ds1307_write_addr@addr stored from wreg
  6977  05BB  00F3               	movwf	ds1307_write_addr@addr
  6978                           
  6979                           ;ds1307.c: 107: i2c_start();
  6980  05BC  2679  3183         	fcall	i1_i2c_start
  6981  05BE  3068               	movlw	104
  6982                           
  6983                           ;ds1307.c: 108: i2c_send_address(0b01101000, 0);
  6984  05BF  01F0               	clrf	i1i2c_send_address@mode
  6985  05C0  2658  3183         	fcall	i1_i2c_send_address
  6986                           
  6987                           ;ds1307.c: 109: i2c_send_data(addr);
  6988  05C2  0873               	movf	ds1307_write_addr@addr,w
  6989  05C3  2674  3183         	fcall	i1_i2c_send_data
  6990                           
  6991                           ;ds1307.c: 110: i2c_send_data(value);
  6992  05C5  0872               	movf	ds1307_write_addr@value,w
  6993  05C6  2674  3183         	fcall	i1_i2c_send_data
  6994                           
  6995                           ;ds1307.c: 111: i2c_stop();
  6996  05C8  267C               	fcall	i1_i2c_stop
  6997  05C9  0008               	return
  6998  05CA                     __end_of_ds1307_write_addr:	
  6999  05CA                     __ptext59:	
  7000 ;; *************** function i1_mcp23017_write_reg *****************
  7001 ;; Defined at:
  7002 ;;		line 60 in file "mcp23017.c"
  7003 ;; Parameters:    Size  Location     Type
  7004 ;;  reg_address     1    wreg     unsigned char 
  7005 ;;  value           1    2[COMMON] unsigned char 
  7006 ;; Auto vars:     Size  Location     Type
  7007 ;;  reg_address     1    3[COMMON] unsigned char 
  7008 ;; Return value:  Size  Location     Type
  7009 ;;		None               void
  7010 ;; Registers used:
  7011 ;;		wreg, status,2, status,0, pclath, cstack
  7012 ;; Tracked objects:
  7013 ;;		On entry : 1F/1
  7014 ;;		On exit  : 1F/4
  7015 ;;		Unchanged: 0/0
  7016 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7017 ;;      Params:         1       0       0       0
  7018 ;;      Locals:         1       0       0       0
  7019 ;;      Temps:          0       0       0       0
  7020 ;;      Totals:         2       0       0       0
  7021 ;;Total ram usage:        2 bytes
  7022 ;; Hardware stack levels used:    1
  7023 ;; Hardware stack levels required when called:    2
  7024 ;; This function calls:
  7025 ;;		i1_i2c_send_address
  7026 ;;		i1_i2c_send_data
  7027 ;;		i1_i2c_start
  7028 ;;		i1_i2c_stop
  7029 ;; This function is called by:
  7030 ;;		i1_mcp23017_ioa_send_byte
  7031 ;; This function uses a non-reentrant model
  7032 ;;
  7033                           
  7034                           
  7035                           ;psect for function i1_mcp23017_write_reg
  7036  05CA                     i1_mcp23017_write_reg:	
  7037                           
  7038                           ;incstack = 0
  7039                           ; Regs used in i1_mcp23017_write_reg: [wreg+status,2+status,0+pclath+cstack]
  7040                           ;i1mcp23017_write_reg@reg_address stored from wreg
  7041  05CA  00F3               	movwf	i1mcp23017_write_reg@reg_address
  7042                           
  7043                           ;mcp23017.c: 62: i2c_start();
  7044  05CB  2679  3183         	fcall	i1_i2c_start
  7045                           
  7046                           ;mcp23017.c: 63: i2c_send_address(g_slave_address_7b, 0);
  7047  05CD  01F0               	clrf	i1i2c_send_address@mode
  7048  05CE  0021               	movlb	1	; select bank1
  7049  05CF  0830               	movf	_g_slave_address_7b^(0+128),w
  7050  05D0  2658  3183         	fcall	i1_i2c_send_address
  7051                           
  7052                           ;mcp23017.c: 64: i2c_send_data(reg_address);
  7053  05D2  0873               	movf	i1mcp23017_write_reg@reg_address,w
  7054  05D3  2674  3183         	fcall	i1_i2c_send_data
  7055                           
  7056                           ;mcp23017.c: 65: i2c_send_data(value);
  7057  05D5  0872               	movf	i1mcp23017_write_reg@value,w
  7058  05D6  2674  3183         	fcall	i1_i2c_send_data
  7059                           
  7060                           ;mcp23017.c: 66: i2c_stop();
  7061  05D8  267C               	fcall	i1_i2c_stop
  7062  05D9  0008               	return
  7063  05DA                     __end_ofi1_mcp23017_write_reg:	
  7064  05DA                     __ptext45:	
  7065 ;; *************** function _ds1307_set_clock *****************
  7066 ;; Defined at:
  7067 ;;		line 158 in file "ds1307.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;  r               1    5[COMMON] unsigned char 
  7072 ;; Return value:  Size  Location     Type
  7073 ;;		None               void
  7074 ;; Registers used:
  7075 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/1
  7078 ;;		On exit  : 1F/1
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7081 ;;      Params:         0       0       0       0
  7082 ;;      Locals:         1       0       0       0
  7083 ;;      Temps:          0       0       0       0
  7084 ;;      Totals:         1       0       0       0
  7085 ;;Total ram usage:        1 bytes
  7086 ;; Hardware stack levels used:    1
  7087 ;; Hardware stack levels required when called:    4
  7088 ;; This function calls:
  7089 ;;		_ds1307_start_clock
  7090 ;;		_ds1307_stop_clock
  7091 ;;		i1_i2c_send_address
  7092 ;;		i1_i2c_send_data
  7093 ;;		i1_i2c_start
  7094 ;;		i1_i2c_stop
  7095 ;; This function is called by:
  7096 ;;		_update_clock
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           
  7101                           ;psect for function _ds1307_set_clock
  7102  05DA                     _ds1307_set_clock:	
  7103  05DA                     i1l2459:	
  7104                           ;incstack = 0
  7105                           ; Regs used in _ds1307_set_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7106                           
  7107                           
  7108                           ;ds1307.c: 162: ds1307_stop_clock();
  7109  05DA  267F  3183         	fcall	_ds1307_stop_clock
  7110                           
  7111                           ;ds1307.c: 163: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  7112  05DC  17A0               	bsf	_g_reg_data^(0+128),7
  7113                           
  7114                           ;ds1307.c: 164: i2c_start();
  7115  05DD  2679  3183         	fcall	i1_i2c_start
  7116  05DF  3068               	movlw	104
  7117                           
  7118                           ;ds1307.c: 165: i2c_send_address(0b01101000, 0);
  7119  05E0  01F0               	clrf	i1i2c_send_address@mode
  7120  05E1  2658  3183         	fcall	i1_i2c_send_address
  7121                           
  7122                           ;ds1307.c: 166: i2c_send_data(0x00);
  7123  05E3  3000               	movlw	0
  7124  05E4  2674  3183         	fcall	i1_i2c_send_data
  7125                           
  7126                           ;ds1307.c: 167: for (uint8_t r = 0x00; r < 0x07; r++) {
  7127  05E6  01F5               	clrf	ds1307_set_clock@r
  7128  05E7                     i1l2469:	
  7129                           
  7130                           ;ds1307.c: 168: i2c_send_data(g_reg_data[r]);
  7131  05E7  0875               	movf	ds1307_set_clock@r,w
  7132  05E8  3EA0               	addlw	_g_reg_data& (0+255)
  7133  05E9  0086               	movwf	6
  7134  05EA  0187               	clrf	7
  7135  05EB  0801               	movf	1,w
  7136  05EC  2674  3183         	fcall	i1_i2c_send_data
  7137  05EE  3007               	movlw	7
  7138  05EF  0AF5               	incf	ds1307_set_clock@r,f
  7139  05F0  0275               	subwf	ds1307_set_clock@r,w
  7140  05F1  1C03               	skipc
  7141  05F2  2DE7               	goto	i1l2469
  7142                           
  7143                           ;ds1307.c: 169: }
  7144                           ;ds1307.c: 170: i2c_stop();
  7145  05F3  267C  3183         	fcall	i1_i2c_stop
  7146                           
  7147                           ;ds1307.c: 171: ds1307_start_clock();
  7148  05F5  2B2F               	ljmp	i1l2249
  7149  05F6                     __end_of_ds1307_set_clock:	
  7150  05F6                     __ptext62:	
  7151 ;; *************** function _mcp23017_read_reg *****************
  7152 ;; Defined at:
  7153 ;;		line 69 in file "mcp23017.c"
  7154 ;; Parameters:    Size  Location     Type
  7155 ;;  reg_address     1    wreg     unsigned char 
  7156 ;; Auto vars:     Size  Location     Type
  7157 ;;  reg_address     1    2[COMMON] unsigned char 
  7158 ;;  value           1    3[COMMON] unsigned char 
  7159 ;; Return value:  Size  Location     Type
  7160 ;;                  1    wreg      unsigned char 
  7161 ;; Registers used:
  7162 ;;		wreg, status,2, status,0, pclath, cstack
  7163 ;; Tracked objects:
  7164 ;;		On entry : 1F/0
  7165 ;;		On exit  : 1F/4
  7166 ;;		Unchanged: 0/0
  7167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7168 ;;      Params:         0       0       0       0
  7169 ;;      Locals:         2       0       0       0
  7170 ;;      Temps:          0       0       0       0
  7171 ;;      Totals:         2       0       0       0
  7172 ;;Total ram usage:        2 bytes
  7173 ;; Hardware stack levels used:    1
  7174 ;; Hardware stack levels required when called:    2
  7175 ;; This function calls:
  7176 ;;		i1_i2c_read_data
  7177 ;;		i1_i2c_restart
  7178 ;;		i1_i2c_send_address
  7179 ;;		i1_i2c_send_data
  7180 ;;		i1_i2c_start
  7181 ;;		i1_i2c_stop
  7182 ;; This function is called by:
  7183 ;;		_keypad_scan
  7184 ;; This function uses a non-reentrant model
  7185 ;;
  7186                           
  7187                           
  7188                           ;psect for function _mcp23017_read_reg
  7189  05F6                     _mcp23017_read_reg:	
  7190                           
  7191                           ;incstack = 0
  7192                           ; Regs used in _mcp23017_read_reg: [wreg+status,2+status,0+pclath+cstack]
  7193                           ;mcp23017_read_reg@reg_address stored from wreg
  7194  05F6  00F2               	movwf	mcp23017_read_reg@reg_address
  7195                           
  7196                           ;mcp23017.c: 70: uint8_t value;
  7197                           ;mcp23017.c: 73: i2c_start();
  7198  05F7  2679  3183         	fcall	i1_i2c_start
  7199                           
  7200                           ;mcp23017.c: 74: i2c_send_address(g_slave_address_7b, 0);
  7201  05F9  01F0               	clrf	i1i2c_send_address@mode
  7202  05FA  0021               	movlb	1	; select bank1
  7203  05FB  0830               	movf	_g_slave_address_7b^(0+128),w
  7204  05FC  2658  3183         	fcall	i1_i2c_send_address
  7205                           
  7206                           ;mcp23017.c: 75: i2c_send_data(reg_address);
  7207  05FE  0872               	movf	mcp23017_read_reg@reg_address,w
  7208  05FF  2674  3183         	fcall	i1_i2c_send_data
  7209                           
  7210                           ;mcp23017.c: 76: i2c_restart();
  7211  0601  2669  3183         	fcall	i1_i2c_restart
  7212                           
  7213                           ;mcp23017.c: 77: i2c_send_address(g_slave_address_7b, 1);
  7214  0603  01F0               	clrf	i1i2c_send_address@mode
  7215  0604  0AF0               	incf	i1i2c_send_address@mode,f
  7216  0605  0021               	movlb	1	; select bank1
  7217  0606  0830               	movf	_g_slave_address_7b^(0+128),w
  7218  0607  2658  3183         	fcall	i1_i2c_send_address
  7219                           
  7220                           ;mcp23017.c: 78: value = i2c_read_data();
  7221  0609  2651  3183         	fcall	i1_i2c_read_data
  7222  060B  00F3               	movwf	mcp23017_read_reg@value
  7223                           
  7224                           ;mcp23017.c: 79: i2c_stop();
  7225  060C  267C               	fcall	i1_i2c_stop
  7226                           
  7227                           ;mcp23017.c: 81: return value;
  7228  060D  0873               	movf	mcp23017_read_reg@value,w
  7229  060E  0008               	return
  7230  060F                     __end_of_mcp23017_read_reg:	
  7231  060F                     __ptext49:	
  7232 ;; *************** function _ds1307_read_addr *****************
  7233 ;; Defined at:
  7234 ;;		line 86 in file "ds1307.c"
  7235 ;; Parameters:    Size  Location     Type
  7236 ;;  addr            1    wreg     unsigned char 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  addr            1    2[COMMON] unsigned char 
  7239 ;;  read_value      1    3[COMMON] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      unsigned char 
  7242 ;; Registers used:
  7243 ;;		wreg, status,2, status,0, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 1F/4
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7249 ;;      Params:         0       0       0       0
  7250 ;;      Locals:         2       0       0       0
  7251 ;;      Temps:          0       0       0       0
  7252 ;;      Totals:         2       0       0       0
  7253 ;;Total ram usage:        2 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    2
  7256 ;; This function calls:
  7257 ;;		i1_i2c_read_data
  7258 ;;		i1_i2c_restart
  7259 ;;		i1_i2c_send_ack
  7260 ;;		i1_i2c_send_address
  7261 ;;		i1_i2c_send_data
  7262 ;;		i1_i2c_start
  7263 ;;		i1_i2c_stop
  7264 ;; This function is called by:
  7265 ;;		_ds1307_stop_clock
  7266 ;;		_ds1307_start_clock
  7267 ;; This function uses a non-reentrant model
  7268 ;;
  7269                           
  7270                           
  7271                           ;psect for function _ds1307_read_addr
  7272  060F                     _ds1307_read_addr:	
  7273                           
  7274                           ;incstack = 0
  7275                           ; Regs used in _ds1307_read_addr: [wreg+status,2+status,0+pclath+cstack]
  7276                           ;ds1307_read_addr@addr stored from wreg
  7277  060F  00F2               	movwf	ds1307_read_addr@addr
  7278                           
  7279                           ;ds1307.c: 87: uint8_t read_value;
  7280                           ;ds1307.c: 91: i2c_start();
  7281  0610  2679  3183         	fcall	i1_i2c_start
  7282  0612  3068               	movlw	104
  7283                           
  7284                           ;ds1307.c: 92: i2c_send_address(0b01101000, 0);
  7285  0613  01F0               	clrf	i1i2c_send_address@mode
  7286  0614  2658  3183         	fcall	i1_i2c_send_address
  7287                           
  7288                           ;ds1307.c: 93: i2c_send_data(addr);
  7289  0616  0872               	movf	ds1307_read_addr@addr,w
  7290  0617  2674  3183         	fcall	i1_i2c_send_data
  7291                           
  7292                           ;ds1307.c: 94: i2c_restart();
  7293  0619  2669  3183         	fcall	i1_i2c_restart
  7294  061B  3068               	movlw	104
  7295                           
  7296                           ;ds1307.c: 95: i2c_send_address(0b01101000, 1);
  7297  061C  01F0               	clrf	i1i2c_send_address@mode
  7298  061D  0AF0               	incf	i1i2c_send_address@mode,f
  7299  061E  2658  3183         	fcall	i1_i2c_send_address
  7300                           
  7301                           ;ds1307.c: 96: read_value = i2c_read_data();
  7302  0620  2651  3183         	fcall	i1_i2c_read_data
  7303  0622  00F3               	movwf	ds1307_read_addr@read_value
  7304                           
  7305                           ;ds1307.c: 97: i2c_send_ack(1);
  7306  0623  3001               	movlw	1
  7307  0624  2660  3183         	fcall	i1_i2c_send_ack
  7308                           
  7309                           ;ds1307.c: 98: i2c_stop();
  7310  0626  267C               	fcall	i1_i2c_stop
  7311                           
  7312                           ;ds1307.c: 100: return read_value;
  7313  0627  0873               	movf	ds1307_read_addr@read_value,w
  7314  0628  0008               	return
  7315  0629                     __end_of_ds1307_read_addr:	
  7316  0629                     __ptext31:	
  7317 ;; *************** function i1_ds1307_get_clock *****************
  7318 ;; Defined at:
  7319 ;;		line 140 in file "ds1307.c"
  7320 ;; Parameters:    Size  Location     Type
  7321 ;;		None
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  ds1307_get_c    1    2[COMMON] unsigned char 
  7324 ;; Return value:  Size  Location     Type
  7325 ;;		None               void
  7326 ;; Registers used:
  7327 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7328 ;; Tracked objects:
  7329 ;;		On entry : 1E/0
  7330 ;;		On exit  : 1F/4
  7331 ;;		Unchanged: 0/0
  7332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7333 ;;      Params:         0       0       0       0
  7334 ;;      Locals:         1       0       0       0
  7335 ;;      Temps:          0       0       0       0
  7336 ;;      Totals:         1       0       0       0
  7337 ;;Total ram usage:        1 bytes
  7338 ;; Hardware stack levels used:    1
  7339 ;; Hardware stack levels required when called:    2
  7340 ;; This function calls:
  7341 ;;		i1_i2c_read_data
  7342 ;;		i1_i2c_restart
  7343 ;;		i1_i2c_send_ack
  7344 ;;		i1_i2c_send_address
  7345 ;;		i1_i2c_send_data
  7346 ;;		i1_i2c_start
  7347 ;;		i1_i2c_stop
  7348 ;; This function is called by:
  7349 ;;		_update_clock
  7350 ;;		_tmr_isr
  7351 ;; This function uses a non-reentrant model
  7352 ;;
  7353                           
  7354                           
  7355                           ;psect for function i1_ds1307_get_clock
  7356  0629                     i1_ds1307_get_clock:	
  7357                           
  7358                           ;ds1307.c: 143: i2c_start();
  7359                           
  7360                           ;incstack = 0
  7361                           ; Regs used in i1_ds1307_get_clock: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  7362  0629  2679  3183         	fcall	i1_i2c_start
  7363  062B  3068               	movlw	104
  7364                           
  7365                           ;ds1307.c: 144: i2c_send_address(0b01101000, 0);
  7366  062C  01F0               	clrf	i1i2c_send_address@mode
  7367  062D  2658  3183         	fcall	i1_i2c_send_address
  7368                           
  7369                           ;ds1307.c: 145: i2c_send_data(0x00);
  7370  062F  3000               	movlw	0
  7371  0630  2674  3183         	fcall	i1_i2c_send_data
  7372                           
  7373                           ;ds1307.c: 146: i2c_restart();
  7374  0632  2669  3183         	fcall	i1_i2c_restart
  7375  0634  3068               	movlw	104
  7376                           
  7377                           ;ds1307.c: 147: i2c_send_address(0b01101000, 1);
  7378  0635  01F0               	clrf	i1i2c_send_address@mode
  7379  0636  0AF0               	incf	i1i2c_send_address@mode,f
  7380  0637  2658  3183         	fcall	i1_i2c_send_address
  7381                           
  7382                           ;ds1307.c: 148: for (uint8_t r = 0x00; r < 0x07; r++) {
  7383  0639  01F2               	clrf	i1ds1307_get_clock@r
  7384  063A                     i1l2627:	
  7385  063A  3007               	movlw	7
  7386  063B  0272               	subwf	i1ds1307_get_clock@r,w
  7387  063C  1803               	btfsc	3,0
  7388  063D  2E4A               	goto	i1l2639
  7389                           
  7390                           ;ds1307.c: 150: g_reg_data[r] = i2c_read_data();
  7391  063E  0872               	movf	i1ds1307_get_clock@r,w
  7392  063F  3EA0               	addlw	_g_reg_data& (0+255)
  7393  0640  0086               	movwf	6
  7394  0641  0187               	clrf	7
  7395  0642  2651  3183         	fcall	i1_i2c_read_data
  7396  0644  0081               	movwf	1
  7397                           
  7398                           ;ds1307.c: 151: i2c_send_ack(0);
  7399  0645  3000               	movlw	0
  7400  0646  2660  3183         	fcall	i1_i2c_send_ack
  7401  0648  0AF2               	incf	i1ds1307_get_clock@r,f
  7402  0649  2E3A               	goto	i1l2627
  7403  064A                     i1l2639:	
  7404                           
  7405                           ;ds1307.c: 152: }
  7406                           ;ds1307.c: 153: g_reg_ctrl.byte = i2c_read_data();
  7407  064A  2651  3183         	fcall	i1_i2c_read_data
  7408                           
  7409                           ;ds1307.c: 154: i2c_send_ack(1);
  7410  064C  3001               	movlw	1
  7411  064D  2660  3183         	fcall	i1_i2c_send_ack
  7412                           
  7413                           ;ds1307.c: 155: i2c_stop();
  7414  064F  267C               	fcall	i1_i2c_stop
  7415  0650  0008               	return
  7416  0651                     __end_ofi1_ds1307_get_clock:	
  7417  0651                     __ptext68:	
  7418 ;; *************** function i1_i2c_read_data *****************
  7419 ;; Defined at:
  7420 ;;		line 120 in file "pic12f1840_i2c.c"
  7421 ;; Parameters:    Size  Location     Type
  7422 ;;		None
  7423 ;; Auto vars:     Size  Location     Type
  7424 ;;  i2c_read_dat    1    0[COMMON] unsigned char 
  7425 ;; Return value:  Size  Location     Type
  7426 ;;                  1    wreg      unsigned char 
  7427 ;; Registers used:
  7428 ;;		wreg, status,2, status,0, pclath, cstack
  7429 ;; Tracked objects:
  7430 ;;		On entry : 1A/4
  7431 ;;		On exit  : 1F/4
  7432 ;;		Unchanged: 0/0
  7433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7434 ;;      Params:         0       0       0       0
  7435 ;;      Locals:         1       0       0       0
  7436 ;;      Temps:          0       0       0       0
  7437 ;;      Totals:         1       0       0       0
  7438 ;;Total ram usage:        1 bytes
  7439 ;; Hardware stack levels used:    1
  7440 ;; Hardware stack levels required when called:    1
  7441 ;; This function calls:
  7442 ;;		i1_i2c_wait
  7443 ;; This function is called by:
  7444 ;;		_mcp23017_read_reg
  7445 ;;		_ds1307_read_addr
  7446 ;;		i1_ds1307_get_clock
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           
  7451                           ;psect for function i1_i2c_read_data
  7452  0651                     i1_i2c_read_data:	
  7453                           
  7454                           ;pic12f1840_i2c.c: 121: uint8_t read_data;
  7455                           ;pic12f1840_i2c.c: 123: i2c_wait();
  7456                           
  7457                           ;incstack = 0
  7458                           ; Regs used in i1_i2c_read_data: [wreg+status,2+status,0+pclath+cstack]
  7459  0651  266C  3183         	fcall	i1_i2c_wait
  7460                           
  7461                           ;pic12f1840_i2c.c: 124: SSP1CON2bits.RCEN = 1;
  7462  0653  1596               	bsf	22,3	;volatile
  7463                           
  7464                           ;pic12f1840_i2c.c: 125: i2c_wait();
  7465  0654  266C               	fcall	i1_i2c_wait
  7466                           
  7467                           ;pic12f1840_i2c.c: 126: read_data = SSPBUF;
  7468  0655  0811               	movf	17,w	;volatile
  7469  0656  00F0               	movwf	i1i2c_read_data@read_data
  7470                           
  7471                           ;pic12f1840_i2c.c: 128: return read_data;
  7472  0657  0008               	return
  7473  0658                     __end_ofi1_i2c_read_data:	
  7474  0658                     __ptext66:	
  7475 ;; *************** function i1_i2c_send_address *****************
  7476 ;; Defined at:
  7477 ;;		line 108 in file "pic12f1840_i2c.c"
  7478 ;; Parameters:    Size  Location     Type
  7479 ;;  address         1    wreg     unsigned char 
  7480 ;;  mode            1    0[COMMON] unsigned char 
  7481 ;; Auto vars:     Size  Location     Type
  7482 ;;  address         1    1[COMMON] unsigned char 
  7483 ;; Return value:  Size  Location     Type
  7484 ;;		None               void
  7485 ;; Registers used:
  7486 ;;		wreg, status,2, status,0, pclath, cstack
  7487 ;; Tracked objects:
  7488 ;;		On entry : 1A/4
  7489 ;;		On exit  : 1F/4
  7490 ;;		Unchanged: 0/0
  7491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7492 ;;      Params:         1       0       0       0
  7493 ;;      Locals:         1       0       0       0
  7494 ;;      Temps:          0       0       0       0
  7495 ;;      Totals:         2       0       0       0
  7496 ;;Total ram usage:        2 bytes
  7497 ;; Hardware stack levels used:    1
  7498 ;; Hardware stack levels required when called:    1
  7499 ;; This function calls:
  7500 ;;		i1_i2c_wait
  7501 ;; This function is called by:
  7502 ;;		_mcp23017_read_reg
  7503 ;;		_ds1307_read_addr
  7504 ;;		_ds1307_write_addr
  7505 ;;		_ds1307_set_clock
  7506 ;;		i1_mcp23017_write_reg
  7507 ;;		i1_ds1307_get_clock
  7508 ;; This function uses a non-reentrant model
  7509 ;;
  7510                           
  7511                           
  7512                           ;psect for function i1_i2c_send_address
  7513  0658                     i1_i2c_send_address:	
  7514                           
  7515                           ;incstack = 0
  7516                           ; Regs used in i1_i2c_send_address: [wreg+status,2+status,0+pclath+cstack]
  7517                           ;i1i2c_send_address@address stored from wreg
  7518  0658  00F1               	movwf	i1i2c_send_address@address
  7519                           
  7520                           ;pic12f1840_i2c.c: 109: i2c_wait();
  7521  0659  266C               	fcall	i1_i2c_wait
  7522                           
  7523                           ;pic12f1840_i2c.c: 110: address <<= 1;
  7524  065A  35F1               	lslf	i1i2c_send_address@address,f
  7525                           
  7526                           ;pic12f1840_i2c.c: 111: address += mode;
  7527  065B  0870               	movf	i1i2c_send_address@mode,w
  7528  065C  07F1               	addwf	i1i2c_send_address@address,f
  7529                           
  7530                           ;pic12f1840_i2c.c: 112: SSPBUF = address;
  7531  065D  0871               	movf	i1i2c_send_address@address,w
  7532  065E  0091               	movwf	17	;volatile
  7533  065F  0008               	return
  7534  0660                     __end_ofi1_i2c_send_address:	
  7535  0660                     __ptext50:	
  7536 ;; *************** function i1_i2c_send_ack *****************
  7537 ;; Defined at:
  7538 ;;		line 97 in file "pic12f1840_i2c.c"
  7539 ;; Parameters:    Size  Location     Type
  7540 ;;  ack             1    wreg     unsigned char 
  7541 ;; Auto vars:     Size  Location     Type
  7542 ;;  ack             1    0[COMMON] unsigned char 
  7543 ;; Return value:  Size  Location     Type
  7544 ;;		None               void
  7545 ;; Registers used:
  7546 ;;		wreg, status,2, status,0, pclath, cstack
  7547 ;; Tracked objects:
  7548 ;;		On entry : 1F/4
  7549 ;;		On exit  : 1F/4
  7550 ;;		Unchanged: 0/0
  7551 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7552 ;;      Params:         0       0       0       0
  7553 ;;      Locals:         1       0       0       0
  7554 ;;      Temps:          0       0       0       0
  7555 ;;      Totals:         1       0       0       0
  7556 ;;Total ram usage:        1 bytes
  7557 ;; Hardware stack levels used:    1
  7558 ;; Hardware stack levels required when called:    1
  7559 ;; This function calls:
  7560 ;;		i1_i2c_wait
  7561 ;; This function is called by:
  7562 ;;		_ds1307_read_addr
  7563 ;;		i1_ds1307_get_clock
  7564 ;; This function uses a non-reentrant model
  7565 ;;
  7566                           
  7567                           
  7568                           ;psect for function i1_i2c_send_ack
  7569  0660                     i1_i2c_send_ack:	
  7570                           
  7571                           ;incstack = 0
  7572                           ; Regs used in i1_i2c_send_ack: [wreg+status,2+status,0+pclath+cstack]
  7573                           ;i1i2c_send_ack@ack stored from wreg
  7574  0660  00F0               	movwf	i1i2c_send_ack@ack
  7575                           
  7576                           ;pic12f1840_i2c.c: 98: i2c_wait();
  7577  0661  266C               	fcall	i1_i2c_wait
  7578                           
  7579                           ;pic12f1840_i2c.c: 99: SSP1CON2bits.ACKDT = ack;
  7580  0662  0870               	movf	i1i2c_send_ack@ack,w
  7581  0663  1D03               	skipz
  7582  0664  1696               	bsf	22,5	;volatile
  7583  0665  1903               	skipnz
  7584  0666  1296               	bcf	22,5	;volatile
  7585                           
  7586                           ;pic12f1840_i2c.c: 100: SSP1CON2bits.ACKEN = 1;
  7587  0667  1616               	bsf	22,4	;volatile
  7588  0668  0008               	return
  7589  0669                     __end_ofi1_i2c_send_ack:	
  7590  0669                     __ptext67:	
  7591 ;; *************** function i1_i2c_restart *****************
  7592 ;; Defined at:
  7593 ;;		line 87 in file "pic12f1840_i2c.c"
  7594 ;; Parameters:    Size  Location     Type
  7595 ;;		None
  7596 ;; Auto vars:     Size  Location     Type
  7597 ;;		None
  7598 ;; Return value:  Size  Location     Type
  7599 ;;		None               void
  7600 ;; Registers used:
  7601 ;;		wreg, status,2, status,0, pclath, cstack
  7602 ;; Tracked objects:
  7603 ;;		On entry : 1F/4
  7604 ;;		On exit  : 1F/4
  7605 ;;		Unchanged: 0/0
  7606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7607 ;;      Params:         0       0       0       0
  7608 ;;      Locals:         0       0       0       0
  7609 ;;      Temps:          0       0       0       0
  7610 ;;      Totals:         0       0       0       0
  7611 ;;Total ram usage:        0 bytes
  7612 ;; Hardware stack levels used:    1
  7613 ;; Hardware stack levels required when called:    1
  7614 ;; This function calls:
  7615 ;;		i1_i2c_wait
  7616 ;; This function is called by:
  7617 ;;		_mcp23017_read_reg
  7618 ;;		_ds1307_read_addr
  7619 ;;		i1_ds1307_get_clock
  7620 ;; This function uses a non-reentrant model
  7621 ;;
  7622                           
  7623                           
  7624                           ;psect for function i1_i2c_restart
  7625  0669                     i1_i2c_restart:	
  7626                           
  7627                           ;pic12f1840_i2c.c: 88: i2c_wait();
  7628                           
  7629                           ;incstack = 0
  7630                           ; Regs used in i1_i2c_restart: [wreg+status,2+status,0+pclath+cstack]
  7631  0669  266C               	fcall	i1_i2c_wait
  7632                           
  7633                           ;pic12f1840_i2c.c: 89: SSP1CON2bits.RSEN = 1;
  7634  066A  1496               	bsf	22,1	;volatile
  7635  066B  0008               	return
  7636  066C                     __end_ofi1_i2c_restart:	
  7637  066C                     __ptext69:	
  7638 ;; *************** function i1_i2c_wait *****************
  7639 ;; Defined at:
  7640 ;;		line 76 in file "pic12f1840_i2c.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;		None               void
  7647 ;; Registers used:
  7648 ;;		wreg, status,2
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/4
  7651 ;;		On exit  : 1F/4
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7654 ;;      Params:         0       0       0       0
  7655 ;;      Locals:         0       0       0       0
  7656 ;;      Temps:          0       0       0       0
  7657 ;;      Totals:         0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used:    1
  7660 ;; This function calls:
  7661 ;;		Nothing
  7662 ;; This function is called by:
  7663 ;;		i1_i2c_start
  7664 ;;		i1_i2c_restart
  7665 ;;		i1_i2c_stop
  7666 ;;		i1_i2c_send_ack
  7667 ;;		i1_i2c_send_address
  7668 ;;		i1_i2c_send_data
  7669 ;;		i1_i2c_read_data
  7670 ;; This function uses a non-reentrant model
  7671 ;;
  7672                           
  7673                           
  7674                           ;psect for function i1_i2c_wait
  7675  066C                     i1_i2c_wait:	
  7676  066C                     i1l2013:	
  7677                           ;pic12f1840_i2c.c: 79: while ((SSP1CON2 & 0x1F) || (SSPSTATbits.R_nW));
  7678                           
  7679                           ;incstack = 0
  7680                           ; Regs used in i1_i2c_wait: [wreg+status,2]
  7681                           
  7682  066C  0024               	movlb	4	; select bank4
  7683  066D  0816               	movf	22,w	;volatile
  7684  066E  391F               	andlw	31
  7685  066F  1D03               	btfss	3,2
  7686  0670  2E6C               	goto	i1l2013
  7687  0671  1D14               	btfss	20,2	;volatile
  7688  0672  0008               	return
  7689  0673  2E6C               	goto	i1l2013
  7690  0674                     __end_ofi1_i2c_wait:	
  7691  0674                     __ptext65:	
  7692 ;; *************** function i1_i2c_send_data *****************
  7693 ;; Defined at:
  7694 ;;		line 115 in file "pic12f1840_i2c.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;  data            1    wreg     unsigned char 
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;  data            1    0[COMMON] unsigned char 
  7699 ;; Return value:  Size  Location     Type
  7700 ;;		None               void
  7701 ;; Registers used:
  7702 ;;		wreg, status,2, status,0, pclath, cstack
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/4
  7705 ;;		On exit  : 1F/4
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7708 ;;      Params:         0       0       0       0
  7709 ;;      Locals:         1       0       0       0
  7710 ;;      Temps:          0       0       0       0
  7711 ;;      Totals:         1       0       0       0
  7712 ;;Total ram usage:        1 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; Hardware stack levels required when called:    1
  7715 ;; This function calls:
  7716 ;;		i1_i2c_wait
  7717 ;; This function is called by:
  7718 ;;		_mcp23017_read_reg
  7719 ;;		_ds1307_read_addr
  7720 ;;		_ds1307_write_addr
  7721 ;;		_ds1307_set_clock
  7722 ;;		i1_mcp23017_write_reg
  7723 ;;		i1_ds1307_get_clock
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           
  7728                           ;psect for function i1_i2c_send_data
  7729  0674                     i1_i2c_send_data:	
  7730                           
  7731                           ;incstack = 0
  7732                           ; Regs used in i1_i2c_send_data: [wreg+status,2+status,0+pclath+cstack]
  7733                           ;i1i2c_send_data@data stored from wreg
  7734  0674  00F0               	movwf	i1i2c_send_data@data
  7735                           
  7736                           ;pic12f1840_i2c.c: 116: i2c_wait();
  7737  0675  266C               	fcall	i1_i2c_wait
  7738                           
  7739                           ;pic12f1840_i2c.c: 117: SSPBUF = data;
  7740  0676  0870               	movf	i1i2c_send_data@data,w
  7741  0677  0091               	movwf	17	;volatile
  7742  0678  0008               	return
  7743  0679                     __end_ofi1_i2c_send_data:	
  7744  0679                     __ptext64:	
  7745 ;; *************** function i1_i2c_start *****************
  7746 ;; Defined at:
  7747 ;;		line 82 in file "pic12f1840_i2c.c"
  7748 ;; Parameters:    Size  Location     Type
  7749 ;;		None
  7750 ;; Auto vars:     Size  Location     Type
  7751 ;;		None
  7752 ;; Return value:  Size  Location     Type
  7753 ;;		None               void
  7754 ;; Registers used:
  7755 ;;		wreg, status,2, status,0, pclath, cstack
  7756 ;; Tracked objects:
  7757 ;;		On entry : 0/0
  7758 ;;		On exit  : 1F/4
  7759 ;;		Unchanged: 0/0
  7760 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7761 ;;      Params:         0       0       0       0
  7762 ;;      Locals:         0       0       0       0
  7763 ;;      Temps:          0       0       0       0
  7764 ;;      Totals:         0       0       0       0
  7765 ;;Total ram usage:        0 bytes
  7766 ;; Hardware stack levels used:    1
  7767 ;; Hardware stack levels required when called:    1
  7768 ;; This function calls:
  7769 ;;		i1_i2c_wait
  7770 ;; This function is called by:
  7771 ;;		_mcp23017_read_reg
  7772 ;;		_ds1307_read_addr
  7773 ;;		_ds1307_write_addr
  7774 ;;		_ds1307_set_clock
  7775 ;;		i1_mcp23017_write_reg
  7776 ;;		i1_ds1307_get_clock
  7777 ;; This function uses a non-reentrant model
  7778 ;;
  7779                           
  7780                           
  7781                           ;psect for function i1_i2c_start
  7782  0679                     i1_i2c_start:	
  7783                           
  7784                           ;pic12f1840_i2c.c: 83: i2c_wait();
  7785                           
  7786                           ;incstack = 0
  7787                           ; Regs used in i1_i2c_start: [wreg+status,2+status,0+pclath+cstack]
  7788  0679  266C               	fcall	i1_i2c_wait
  7789                           
  7790                           ;pic12f1840_i2c.c: 84: SSP1CON2bits.SEN = 1;
  7791  067A  1416               	bsf	22,0	;volatile
  7792  067B  0008               	return
  7793  067C                     __end_ofi1_i2c_start:	
  7794  067C                     __ptext63:	
  7795 ;; *************** function i1_i2c_stop *****************
  7796 ;; Defined at:
  7797 ;;		line 92 in file "pic12f1840_i2c.c"
  7798 ;; Parameters:    Size  Location     Type
  7799 ;;		None
  7800 ;; Auto vars:     Size  Location     Type
  7801 ;;		None
  7802 ;; Return value:  Size  Location     Type
  7803 ;;		None               void
  7804 ;; Registers used:
  7805 ;;		wreg, status,2, status,0, pclath, cstack
  7806 ;; Tracked objects:
  7807 ;;		On entry : 1F/4
  7808 ;;		On exit  : 1F/4
  7809 ;;		Unchanged: 0/0
  7810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7811 ;;      Params:         0       0       0       0
  7812 ;;      Locals:         0       0       0       0
  7813 ;;      Temps:          0       0       0       0
  7814 ;;      Totals:         0       0       0       0
  7815 ;;Total ram usage:        0 bytes
  7816 ;; Hardware stack levels used:    1
  7817 ;; Hardware stack levels required when called:    1
  7818 ;; This function calls:
  7819 ;;		i1_i2c_wait
  7820 ;; This function is called by:
  7821 ;;		_mcp23017_read_reg
  7822 ;;		_ds1307_read_addr
  7823 ;;		_ds1307_write_addr
  7824 ;;		_ds1307_set_clock
  7825 ;;		i1_mcp23017_write_reg
  7826 ;;		i1_ds1307_get_clock
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           
  7831                           ;psect for function i1_i2c_stop
  7832  067C                     i1_i2c_stop:	
  7833                           
  7834                           ;pic12f1840_i2c.c: 93: i2c_wait();
  7835                           
  7836                           ;incstack = 0
  7837                           ; Regs used in i1_i2c_stop: [wreg+status,2+status,0+pclath+cstack]
  7838  067C  266C               	fcall	i1_i2c_wait
  7839                           
  7840                           ;pic12f1840_i2c.c: 94: SSP1CON2bits.PEN = 1;
  7841  067D  1516               	bsf	22,2	;volatile
  7842  067E  0008               	return
  7843  067F                     __end_ofi1_i2c_stop:	
  7844  067F                     __ptext46:	
  7845 ;; *************** function _ds1307_stop_clock *****************
  7846 ;; Defined at:
  7847 ;;		line 114 in file "ds1307.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;		None
  7850 ;; Auto vars:     Size  Location     Type
  7851 ;;  tsec            1    4[COMMON] unsigned char 
  7852 ;; Return value:  Size  Location     Type
  7853 ;;		None               void
  7854 ;; Registers used:
  7855 ;;		wreg, status,2, status,0, pclath, cstack
  7856 ;; Tracked objects:
  7857 ;;		On entry : 0/0
  7858 ;;		On exit  : 1F/1
  7859 ;;		Unchanged: 0/0
  7860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7861 ;;      Params:         0       0       0       0
  7862 ;;      Locals:         1       0       0       0
  7863 ;;      Temps:          0       0       0       0
  7864 ;;      Totals:         1       0       0       0
  7865 ;;Total ram usage:        1 bytes
  7866 ;; Hardware stack levels used:    1
  7867 ;; Hardware stack levels required when called:    3
  7868 ;; This function calls:
  7869 ;;		_ds1307_read_addr
  7870 ;;		_ds1307_write_addr
  7871 ;; This function is called by:
  7872 ;;		_update_clock
  7873 ;;		_ds1307_set_clock
  7874 ;; This function uses a non-reentrant model
  7875 ;;
  7876                           
  7877                           
  7878                           ;psect for function _ds1307_stop_clock
  7879  067F                     _ds1307_stop_clock:	
  7880                           
  7881                           ;ds1307.c: 119: uint8_t tsec;
  7882                           ;ds1307.c: 120: tsec = ds1307_read_addr(DS1307_REG_SECONDS);
  7883                           
  7884                           ;incstack = 0
  7885                           ; Regs used in _ds1307_stop_clock: [wreg+status,2+status,0+pclath+cstack]
  7886  067F  3000               	movlw	0
  7887  0680  260F  3183         	fcall	_ds1307_read_addr
  7888  0682  00F4               	movwf	ds1307_stop_clock@tsec
  7889                           
  7890                           ;ds1307.c: 121: ds1307_write_addr(DS1307_REG_SECONDS, (tsec | 0x80));
  7891  0683  3880               	iorlw	128
  7892  0684  00F2               	movwf	ds1307_write_addr@value
  7893  0685  3000               	movlw	0
  7894  0686  25BB               	fcall	_ds1307_write_addr
  7895                           
  7896                           ;ds1307.c: 122: g_reg_data[DS1307_REG_SECONDS] = g_reg_data[DS1307_REG_SECONDS] | 0x80;
  7897  0687  0021               	movlb	1	; select bank1
  7898  0688  17A0               	bsf	_g_reg_data^(0+128),7
  7899  0689  0008               	return
  7900  068A                     __end_of_ds1307_stop_clock:	
  7901  068A                     __ptext83:	
  7902 ;; *************** function _ds1307_get_day_of_month *****************
  7903 ;; Defined at:
  7904 ;;		line 249 in file "ds1307.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;		None
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;		None
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      unsigned char 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0, pclath, cstack
  7913 ;; Tracked objects:
  7914 ;;		On entry : 1F/0
  7915 ;;		On exit  : 1E/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7918 ;;      Params:         0       0       0       0
  7919 ;;      Locals:         0       0       0       0
  7920 ;;      Temps:          0       0       0       0
  7921 ;;      Totals:         0       0       0       0
  7922 ;;Total ram usage:        0 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    2
  7925 ;; This function calls:
  7926 ;;		_bcd_to_dec
  7927 ;; This function is called by:
  7928 ;;		_update_clock
  7929 ;;		_ds1307_date_formatted
  7930 ;; This function uses a non-reentrant model
  7931 ;;
  7932                           
  7933                           
  7934                           ;psect for function _ds1307_get_day_of_month
  7935  068A                     _ds1307_get_day_of_month:	
  7936                           
  7937                           ;ds1307.c: 251: return bcd_to_dec(g_reg_data[DS1307_REG_DAY_OM] & 0x3F);
  7938                           
  7939                           ;incstack = 0
  7940                           ; Regs used in _ds1307_get_day_of_month: [wreg+status,2+status,0+pclath+cstack]
  7941  068A  0021               	movlb	1	; select bank1
  7942  068B  0824               	movf	(_g_reg_data^(0+128)+4),w
  7943  068C  393F               	andlw	63
  7944  068D  2D0D               	ljmp	_bcd_to_dec
  7945  068E                     __end_of_ds1307_get_day_of_month:	
  7946  068E                     __ptext82:	
  7947 ;; *************** function _ds1307_get_month *****************
  7948 ;; Defined at:
  7949 ;;		line 260 in file "ds1307.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      unsigned char 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2, status,0, pclath, cstack
  7958 ;; Tracked objects:
  7959 ;;		On entry : 1F/0
  7960 ;;		On exit  : 1E/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7963 ;;      Params:         0       0       0       0
  7964 ;;      Locals:         0       0       0       0
  7965 ;;      Temps:          0       0       0       0
  7966 ;;      Totals:         0       0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used:    1
  7969 ;; Hardware stack levels required when called:    2
  7970 ;; This function calls:
  7971 ;;		_bcd_to_dec
  7972 ;; This function is called by:
  7973 ;;		_update_clock
  7974 ;;		_ds1307_date_formatted
  7975 ;; This function uses a non-reentrant model
  7976 ;;
  7977                           
  7978                           
  7979                           ;psect for function _ds1307_get_month
  7980  068E                     _ds1307_get_month:	
  7981                           
  7982                           ;ds1307.c: 261: return bcd_to_dec(g_reg_data[DS1307_REG_MONTH]);
  7983                           
  7984                           ;incstack = 0
  7985                           ; Regs used in _ds1307_get_month: [wreg+status,2+status,0+pclath+cstack]
  7986  068E  0021               	movlb	1	; select bank1
  7987  068F  0825               	movf	(_g_reg_data^(0+128)+5),w
  7988  0690  2D0D               	ljmp	_bcd_to_dec
  7989  0691                     __end_of_ds1307_get_month:	
  7990  0691                     __ptext81:	
  7991 ;; *************** function _ds1307_get_year *****************
  7992 ;; Defined at:
  7993 ;;		line 270 in file "ds1307.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      unsigned char 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, status,0, pclath, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 1F/0
  8004 ;;		On exit  : 1E/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8007 ;;      Params:         0       0       0       0
  8008 ;;      Locals:         0       0       0       0
  8009 ;;      Temps:          0       0       0       0
  8010 ;;      Totals:         0       0       0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used:    1
  8013 ;; Hardware stack levels required when called:    2
  8014 ;; This function calls:
  8015 ;;		_bcd_to_dec
  8016 ;; This function is called by:
  8017 ;;		_update_clock
  8018 ;;		_ds1307_date_formatted
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           
  8023                           ;psect for function _ds1307_get_year
  8024  0691                     _ds1307_get_year:	
  8025                           
  8026                           ;ds1307.c: 272: return bcd_to_dec(g_reg_data[DS1307_REG_YEAR]);
  8027                           
  8028                           ;incstack = 0
  8029                           ; Regs used in _ds1307_get_year: [wreg+status,2+status,0+pclath+cstack]
  8030  0691  0021               	movlb	1	; select bank1
  8031  0692  0826               	movf	(_g_reg_data^(0+128)+6),w
  8032  0693  2D0D               	ljmp	_bcd_to_dec
  8033  0694                     __end_of_ds1307_get_year:	
  8034  0694                     __ptext80:	
  8035 ;; *************** function ___lwdiv *****************
  8036 ;; Defined at:
  8037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lwdiv.c"
  8038 ;; Parameters:    Size  Location     Type
  8039 ;;  divisor         2    0[COMMON] unsigned int 
  8040 ;;  dividend        2    2[COMMON] unsigned int 
  8041 ;; Auto vars:     Size  Location     Type
  8042 ;;  quotient        2    4[COMMON] unsigned int 
  8043 ;;  counter         1    6[COMMON] unsigned char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  2    0[COMMON] unsigned int 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2, status,0
  8048 ;; Tracked objects:
  8049 ;;		On entry : 1F/0
  8050 ;;		On exit  : 1F/0
  8051 ;;		Unchanged: 1F/0
  8052 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8053 ;;      Params:         4       0       0       0
  8054 ;;      Locals:         3       0       0       0
  8055 ;;      Temps:          0       0       0       0
  8056 ;;      Totals:         7       0       0       0
  8057 ;;Total ram usage:        7 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_sprintf
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           
  8067                           ;psect for function ___lwdiv
  8068  0694                     ___lwdiv:	
  8069                           
  8070                           ;incstack = 0
  8071                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  8072  0694  01F4               	clrf	___lwdiv@quotient
  8073  0695  01F5               	clrf	___lwdiv@quotient+1
  8074  0696  0871               	movf	___lwdiv@divisor+1,w
  8075  0697  0470               	iorwf	___lwdiv@divisor,w
  8076  0698  1903               	skipnz
  8077  0699  2EB4               	goto	i1l2299
  8078  069A  01F6               	clrf	___lwdiv@counter
  8079  069B                     L12:	
  8080  069B  0AF6               	incf	___lwdiv@counter,f
  8081  069C  1BF1               	btfsc	___lwdiv@divisor+1,7
  8082  069D  2EA1               	goto	i1l2287
  8083  069E  35F0               	lslf	___lwdiv@divisor,f
  8084  069F  0DF1               	rlf	___lwdiv@divisor+1,f
  8085  06A0  2E9B               	goto	L12
  8086  06A1                     i1l2287:	
  8087  06A1  35F4               	lslf	___lwdiv@quotient,f
  8088  06A2  0DF5               	rlf	___lwdiv@quotient+1,f
  8089  06A3  0871               	movf	___lwdiv@divisor+1,w
  8090  06A4  0273               	subwf	___lwdiv@dividend+1,w
  8091  06A5  1D03               	skipz
  8092  06A6  2EA9               	goto	u122_25
  8093  06A7  0870               	movf	___lwdiv@divisor,w
  8094  06A8  0272               	subwf	___lwdiv@dividend,w
  8095  06A9                     u122_25:	
  8096  06A9  1C03               	skipc
  8097  06AA  2EB0               	goto	i1l2295
  8098  06AB  0870               	movf	___lwdiv@divisor,w
  8099  06AC  02F2               	subwf	___lwdiv@dividend,f
  8100  06AD  0871               	movf	___lwdiv@divisor+1,w
  8101  06AE  3BF3               	subwfb	___lwdiv@dividend+1,f
  8102  06AF  1474               	bsf	___lwdiv@quotient,0
  8103  06B0                     i1l2295:	
  8104  06B0  36F1               	lsrf	___lwdiv@divisor+1,f
  8105  06B1  0CF0               	rrf	___lwdiv@divisor,f
  8106  06B2  0BF6               	decfsz	___lwdiv@counter,f
  8107  06B3  2EA1               	goto	i1l2287
  8108  06B4                     i1l2299:	
  8109  06B4  0875               	movf	___lwdiv@quotient+1,w
  8110  06B5  00F1               	movwf	?___lwdiv+1
  8111  06B6  0874               	movf	___lwdiv@quotient,w
  8112  06B7  00F0               	movwf	?___lwdiv
  8113  06B8  0008               	return
  8114  06B9                     __end_of___lwdiv:	
  8115  06B9                     __ptext79:	
  8116 ;; *************** function ___lwmod *****************
  8117 ;; Defined at:
  8118 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\lwmod.c"
  8119 ;; Parameters:    Size  Location     Type
  8120 ;;  divisor         2    7[COMMON] unsigned int 
  8121 ;;  dividend        2    9[COMMON] unsigned int 
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;  counter         1   11[COMMON] unsigned char 
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  2    7[COMMON] unsigned int 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2, status,0
  8128 ;; Tracked objects:
  8129 ;;		On entry : 1F/0
  8130 ;;		On exit  : 1F/0
  8131 ;;		Unchanged: 1F/0
  8132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8133 ;;      Params:         4       0       0       0
  8134 ;;      Locals:         1       0       0       0
  8135 ;;      Temps:          0       0       0       0
  8136 ;;      Totals:         5       0       0       0
  8137 ;;Total ram usage:        5 bytes
  8138 ;; Hardware stack levels used:    1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_sprintf
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           
  8147                           ;psect for function ___lwmod
  8148  06B9                     ___lwmod:	
  8149                           
  8150                           ;incstack = 0
  8151                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  8152  06B9  0878               	movf	___lwmod@divisor+1,w
  8153  06BA  0477               	iorwf	___lwmod@divisor,w
  8154  06BB  1903               	skipnz
  8155  06BC  2ED4               	goto	i1l2319
  8156  06BD  01FB               	clrf	___lwmod@counter
  8157  06BE                     L11:	
  8158  06BE  0AFB               	incf	___lwmod@counter,f
  8159  06BF  1BF8               	btfsc	___lwmod@divisor+1,7
  8160  06C0  2EC4               	goto	i1l2311
  8161  06C1  35F7               	lslf	___lwmod@divisor,f
  8162  06C2  0DF8               	rlf	___lwmod@divisor+1,f
  8163  06C3  2EBE               	goto	L11
  8164  06C4                     i1l2311:	
  8165  06C4  0878               	movf	___lwmod@divisor+1,w
  8166  06C5  027A               	subwf	___lwmod@dividend+1,w
  8167  06C6  1D03               	skipz
  8168  06C7  2ECA               	goto	u126_25
  8169  06C8  0877               	movf	___lwmod@divisor,w
  8170  06C9  0279               	subwf	___lwmod@dividend,w
  8171  06CA                     u126_25:	
  8172  06CA  1C03               	skipc
  8173  06CB  2ED0               	goto	i1l2315
  8174  06CC  0877               	movf	___lwmod@divisor,w
  8175  06CD  02F9               	subwf	___lwmod@dividend,f
  8176  06CE  0878               	movf	___lwmod@divisor+1,w
  8177  06CF  3BFA               	subwfb	___lwmod@dividend+1,f
  8178  06D0                     i1l2315:	
  8179  06D0  36F8               	lsrf	___lwmod@divisor+1,f
  8180  06D1  0CF7               	rrf	___lwmod@divisor,f
  8181  06D2  0BFB               	decfsz	___lwmod@counter,f
  8182  06D3  2EC4               	goto	i1l2311
  8183  06D4                     i1l2319:	
  8184  06D4  087A               	movf	___lwmod@dividend+1,w
  8185  06D5  00F8               	movwf	?___lwmod+1
  8186  06D6  0879               	movf	___lwmod@dividend,w
  8187  06D7  00F7               	movwf	?___lwmod
  8188  06D8  0008               	return
  8189  06D9                     __end_of___lwmod:	
  8190  06D9                     PL2:	
  8191  06D9  0821               	movf	sprintf@f+1,w
  8192  06DA  00A9               	movwf	??_sprintf+1
  8193  06DB  0820               	movf	sprintf@f,w
  8194  06DC  00A8               	movwf	??_sprintf
  8195  06DD  0AA0               	incf	sprintf@f,f
  8196  06DE  1903               	skipnz
  8197  06DF  0AA1               	incf	sprintf@f+1,f
  8198  06E0  0084               	movwf	4
  8199  06E1  0829               	movf	??_sprintf+1,w
  8200  06E2  0085               	movwf	5
  8201  06E3  0800               	movf	0,w	;code access
  8202  06E4  00B3               	movwf	sprintf@c
  8203  06E5  0008               	return
  8204  06E6                     __end_ofPL2:	
  8205  06E6                     PL4:	
  8206  06E6  00A8               	movwf	??_sprintf
  8207  06E7  3000               	movlw	low (_dpowers| (0+32768))
  8208  06E8  01A9               	clrf	??_sprintf+1
  8209  06E9  35A8               	lslf	??_sprintf,f
  8210  06EA  0DA9               	rlf	??_sprintf+1,f
  8211  06EB  0728               	addwf	??_sprintf,w
  8212  06EC  0084               	movwf	4
  8213  06ED  3088               	movlw	high (_dpowers| (0+32768))
  8214  06EE  3D29               	addwfc	??_sprintf+1,w
  8215  06EF  0085               	movwf	5
  8216  06F0  3F00               	moviw [0]fsr0
  8217  06F1  0008               	return
  8218  06F2                     __end_ofPL4:	
  8219  06F2                     PL6:	
  8220  06F2  0086               	movwf	6
  8221  06F3  0187               	clrf	7
  8222  06F4  0833               	movf	sprintf@c,w
  8223  06F5  0081               	movwf	1
  8224  06F6  0AB1               	incf	sprintf@sp,f
  8225  06F7  0008               	return
  8226  06F8                     __end_ofPL6:	
  8227  06F8                     PL8:	
  8228  06F8  0820               	movf	sprintf@f,w
  8229  06F9  0084               	movwf	4
  8230  06FA  0821               	movf	sprintf@f+1,w
  8231  06FB  0085               	movwf	5
  8232  06FC  0800               	movf	0,w	;code access
  8233  06FD  0008               	return
  8234  06FE                     __end_ofPL8:	
  8235  06FE                     PL10:	
  8236  06FE  0020               	movlb	0	; select bank0
  8237  06FF  00A6               	movwf	?_sprintf+6
  8238  0700  01A7               	clrf	?_sprintf+7
  8239  0701  087C               	movf	ds1307_time_formatted@p_str_time,w
  8240  0702  0008               	return
  8241  0703                     __end_ofPL10:	
  8242  0703                     PL12:	
  8243  0703  0477               	iorwf	??_ds1307_set_hours,w
  8244  0704  0021               	movlb	1	; select bank1
  8245  0705  00A2               	movwf	(_g_reg_data^(0+128)+2)
  8246  0706  0008               	return
  8247  0707                     __end_ofPL12:	
  8248  0707                     __ptext78:	
  8249 ;; *************** function _isdigit *****************
  8250 ;; Defined at:
  8251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32 - PRO\sources\common\isdigit.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  c               1    wreg     unsigned char 
  8254 ;; Auto vars:     Size  Location     Type
  8255 ;;  c               1    1[COMMON] unsigned char 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;		None               void
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0
  8260 ;; Tracked objects:
  8261 ;;		On entry : 1F/0
  8262 ;;		On exit  : 1F/0
  8263 ;;		Unchanged: 1F/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8265 ;;      Params:         0       0       0       0
  8266 ;;      Locals:         2       0       0       0
  8267 ;;      Temps:          0       0       0       0
  8268 ;;      Totals:         2       0       0       0
  8269 ;;Total ram usage:        2 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_sprintf
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function _isdigit
  8280  0707                     _isdigit:	
  8281                           
  8282                           ;incstack = 0
  8283                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  8284                           ;isdigit@c stored from wreg
  8285  0707  00F1               	movwf	isdigit@c
  8286  0708  303A               	movlw	58
  8287  0709  01F0               	clrf	_isdigit$1061
  8288  070A  0271               	subwf	isdigit@c,w
  8289  070B  1803               	skipnc
  8290  070C  2F13               	goto	i1l2273
  8291  070D  3030               	movlw	48
  8292  070E  0271               	subwf	isdigit@c,w
  8293  070F  1C03               	skipc
  8294  0710  2F13               	goto	i1l2273
  8295  0711  01F0               	clrf	_isdigit$1061
  8296  0712  0AF0               	incf	_isdigit$1061,f
  8297  0713                     i1l2273:	
  8298  0713  0C70               	rrf	_isdigit$1061,w
  8299  0714  0008               	return
  8300  0715                     __end_of_isdigit:	


Data Sizes:
    Strings     63
    Constant    10
    Data        0
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     42      47
    BANK1            80     17      34
    BANK2            80      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_6(CODE[15]), STR_5(CODE[16]), STR_4(CODE[15]), STR_3(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), tmr_isr@date(BANK0[10]), tmr_isr@time(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S866$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    lcd_write@str	PTR unsigned char  size(2) Largest target is 10
		 -> tmr_isr@pos(BANK0[2]), STR_2(CODE[7]), STR_1(CODE[7]), tmr_isr@date(BANK0[10]), 
		 -> tmr_isr@time(BANK0[10]), 

    ds1307_date_formatted@p_str_date	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@date(BANK0[10]), 

    ds1307_time_formatted@p_str_time	PTR unsigned char  size(1) Largest target is 10
		 -> tmr_isr@time(BANK0[10]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr_isr in COMMON

    _tmr_isr->_lcd_write
    _tmr_isr->_update_clock
    _update_clock->_ds1307_switch_to_12hr
    _update_clock->_ds1307_switch_to_24hr
    i1_ds1307_get_clock->i1_i2c_send_address
    _ds1307_switch_to_24hr->_ds1307_set_hours
    _ds1307_switch_to_12hr->_ds1307_set_hours
    _ds1307_set_hours->_dec_to_bcd
    _ds1307_set_year->_dec_to_bcd
    _ds1307_set_seconds->_dec_to_bcd
    _ds1307_set_month->_dec_to_bcd
    _ds1307_set_minutes->_dec_to_bcd
    _ds1307_set_day_of_month->_dec_to_bcd
    _dec_to_bcd->___lbmod
    _ds1307_set_clock->_ds1307_start_clock
    _ds1307_set_clock->_ds1307_stop_clock
    _ds1307_stop_clock->_ds1307_read_addr
    _ds1307_stop_clock->_ds1307_write_addr
    _ds1307_start_clock->_ds1307_read_addr
    _ds1307_start_clock->_ds1307_write_addr
    _ds1307_write_addr->i1_i2c_send_address
    _ds1307_read_addr->i1_i2c_send_address
    _lcd_write->_lcd_data
    _lcd_data->i1__send_byte
    _lcd_goto->i1_lcd_command
    i1_lcd_command->i1__send_byte
    i1__send_byte->i1__send_nibble
    i1_mcp23017_ioa_send_byte->i1_mcp23017_write_reg
    i1_mcp23017_write_reg->i1_i2c_send_address
    _keypad_scan->_mcp23017_read_reg
    _mcp23017_read_reg->i1_i2c_send_address
    _ds1307_is_pm->_ds1307_get_hours
    _ds1307_get_hours->_bcd_to_dec
    _ds1307_get_seconds->_bcd_to_dec
    _ds1307_get_minutes->_bcd_to_dec
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _ds1307_get_year->_bcd_to_dec
    _ds1307_get_month->_bcd_to_dec
    _ds1307_get_day_of_month->_bcd_to_dec
    _bcd_to_dec->___bmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr_isr in BANK0

    _tmr_isr->_sprintf
    _ds1307_time_formatted->_sprintf
    _ds1307_date_formatted->_sprintf

Critical Paths under _main in BANK1

    _main->_i2c_init
    _main->_lcd_initialize
    _mcp23017_init->_mcp23017_set_slave_addr
    _lcd_initialize->_lcd_flags_set
    _lcd_flags_set->_lcd_command
    _lcd_command->__send_byte
    __send_byte->__send_nibble
    __set_4bit_interface->__send_nibble
    _mcp23017_ioa_send_byte->_mcp23017_write_reg
    _keypad_init->_mcp23017_write_reg
    _mcp23017_write_reg->_i2c_send_address
    _init->_write_t1
    _i2c_init->___lldiv
    _ds1307_init->_ds1307_get_clock
    _ds1307_get_clock->_i2c_send_address

Critical Paths under _tmr_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _tmr_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   13033
                        _ds1307_init
                           _i2c_init
                               _init
                        _keypad_init
                     _lcd_initialize
                      _mcp23017_init
 ---------------------------------------------------------------------------------
 (1) _mcp23017_init                                        1     1      0      44
                                              1 BANK1      1     1      0
            _mcp23017_set_slave_addr
 ---------------------------------------------------------------------------------
 (2) _mcp23017_set_slave_addr                              1     1      0      22
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       3     3      0   10326
                                             14 BANK1      3     3      0
                __set_4bit_interface
                      _lcd_backlight
                        _lcd_command
                      _lcd_flags_set
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _lcd_flags_set                                        4     2      2    3406
                                             10 BANK1      4     2      2
                        _lcd_command
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          2     2      0    2328
                                              8 BANK1      2     2      0
                         __send_byte
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) __send_byte                                           1     1      0    1186
                                              7 BANK1      1     1      0
                       __send_nibble
 ---------------------------------------------------------------------------------
 (2) _lcd_backlight                                        1     1      0    1142
                                              4 BANK1      1     1      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (2) __set_4bit_interface                                  1     1      0    2262
                                              7 BANK1      1     1      0
                       __send_nibble
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (5) __send_nibble                                         3     3      0    1142
                                              4 BANK1      3     3      0
             _mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (4) _mcp23017_ioa_send_byte                               0     0      0    1120
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0    1120
                 _mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (2) _mcp23017_write_reg                                   2     1      1    1120
                                              2 BANK1      2     1      1
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (1) _init                                                 4     1      3     318
                                              2 BANK1      4     1      3
                           _write_t1
 ---------------------------------------------------------------------------------
 (2) _write_t1                                             2     0      2     146
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_init                                             4     0      4     420
                                             13 BANK1      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     312
                                              0 BANK1     13     5      8
 ---------------------------------------------------------------------------------
 (1) _ds1307_init                                          0     0      0     805
                   _ds1307_get_clock
 ---------------------------------------------------------------------------------
 (2) _ds1307_get_clock                                     1     1      0     805
                                              2 BANK1      1     1      0
                      _i2c_read_data
                        _i2c_restart
                       _i2c_send_ack
                   _i2c_send_address
                      _i2c_send_data
                          _i2c_start
                           _i2c_stop
 ---------------------------------------------------------------------------------
 (3) _i2c_stop                                             0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_start                                            0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_data                                        1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_address                                     2     1      1     670
                                              0 BANK1      2     1      1
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_send_ack                                         1     1      0      22
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_restart                                          0     0      0       0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (3) _i2c_read_data                                        1     1      0      23
                                              0 BANK1      1     1      0
                           _i2c_wait
 ---------------------------------------------------------------------------------
 (4) _i2c_wait                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _tmr_isr                                            22    22      0   25417
                                             20 BANK0     22    22      0
              _ds1307_date_formatted
              _ds1307_time_formatted
                    _keypad_read_key
                           _lcd_goto
                          _lcd_write
                            _sprintf
                       _update_clock
                 i1_ds1307_get_clock
                    i1_lcd_backlight
                         i1_write_t1
 ---------------------------------------------------------------------------------
 (11) i1_write_t1                                          2     0      2      70
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (11) i1_lcd_backlight                                     1     1      0     394
                                              4 COMMON     1     1      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _update_clock                                        3     3      0   13552
                                             11 COMMON     3     3      0
                         _adjust_val
            _ds1307_get_day_of_month
                   _ds1307_get_hours
                 _ds1307_get_minutes
                   _ds1307_get_month
                 _ds1307_get_seconds
                    _ds1307_get_year
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_clock
            _ds1307_set_day_of_month
                   _ds1307_set_hours
                 _ds1307_set_minutes
                   _ds1307_set_month
                   _ds1307_set_pm_am
                 _ds1307_set_seconds
                    _ds1307_set_year
                  _ds1307_stop_clock
              _ds1307_switch_to_12hr
              _ds1307_switch_to_24hr
                 i1_ds1307_get_clock
 ---------------------------------------------------------------------------------
 (11) i1_ds1307_get_clock                                  1     1      0     415
                                              2 COMMON     1     1      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_24hr                               2     2      0    1343
                                              9 COMMON     2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_switch_to_12hr                               2     2      0    1052
                                              9 COMMON     2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
                   _ds1307_set_hours
                 _ds1307_set_hr_mode
                   _ds1307_set_pm_am
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_pm_am                                    1     1      0      22
                                              0 COMMON     1     1      0
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hr_mode                                  1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _ds1307_set_hours                                    2     2      0     603
                                              7 COMMON     2     2      0
                         _dec_to_bcd
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_year                                     1     1      0     537
                                              7 COMMON     1     1      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_seconds                                  2     2      0     537
                                              7 COMMON     2     2      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_month                                    1     1      0     559
                                              7 COMMON     1     1      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_minutes                                  1     1      0     537
                                              7 COMMON     1     1      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_day_of_month                             1     1      0     559
                                              7 COMMON     1     1      0
                         _dec_to_bcd
 ---------------------------------------------------------------------------------
 (14) _dec_to_bcd                                          2     2      0     493
                                              5 COMMON     2     2      0
                            ___lbdiv
                            ___lbmod
 ---------------------------------------------------------------------------------
 (15) ___lbmod                                             5     4      1     223
                                              0 COMMON     5     4      1
 ---------------------------------------------------------------------------------
 (15) ___lbdiv                                             4     3      1     226
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (12) _ds1307_set_clock                                    1     1      0    2396
                                              5 COMMON     1     1      0
                 _ds1307_start_clock
                  _ds1307_stop_clock
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) _ds1307_stop_clock                                   1     1      0    1013
                                              4 COMMON     1     1      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_start_clock                                  1     1      0    1013
                                              4 COMMON     1     1      0
                   _ds1307_read_addr
                  _ds1307_write_addr
 ---------------------------------------------------------------------------------
 (13) _ds1307_write_addr                                   2     1      1     598
                                              2 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (13) _ds1307_read_addr                                    2     2      0     392
                                              2 COMMON     2     2      0
                    i1_i2c_read_data
                      i1_i2c_restart
                     i1_i2c_send_ack
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (12) i1_i2c_send_ack                                      1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) _adjust_val                                          4     1      3    1376
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (11) _lcd_write                                           5     3      2    1242
                                             10 COMMON     4     2      2
                                              0 BANK0      1     1      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (12) _lcd_data                                            2     2      0     832
                                              8 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (11) _lcd_goto                                            3     2      1    1224
                                             10 COMMON     3     2      1
                      i1_lcd_command
 ---------------------------------------------------------------------------------
 (12) i1_lcd_command                                       2     2      0     832
                                              8 COMMON     2     2      0
                       i1__send_byte
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (13) i1__send_byte                                        1     1      0     438
                                              7 COMMON     1     1      0
                     i1__send_nibble
 ---------------------------------------------------------------------------------
 (14) i1__send_nibble                                      3     3      0     394
                                              4 COMMON     3     3      0
           i1_mcp23017_ioa_send_byte
 ---------------------------------------------------------------------------------
 (12) i1_mcp23017_ioa_send_byte                            0     0      0     372
               i1_mcp23017_write_reg
 ---------------------------------------------------------------------------------
 (13) i1_mcp23017_write_reg                                2     1      1     372
                                              2 COMMON     2     1      1
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (11) _keypad_read_key                                     1     1      0     505
                                              4 COMMON     1     1      0
                        _keypad_scan
 ---------------------------------------------------------------------------------
 (12) _keypad_scan                                         0     0      0     370
                  _mcp23017_read_reg
 ---------------------------------------------------------------------------------
 (13) _mcp23017_read_reg                                   2     2      0     370
                                              2 COMMON     2     2      0
                    i1_i2c_read_data
                      i1_i2c_restart
                 i1_i2c_send_address
                    i1_i2c_send_data
                        i1_i2c_start
                         i1_i2c_stop
 ---------------------------------------------------------------------------------
 (14) i1_i2c_stop                                          0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_start                                         0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_data                                     1     1      0      22
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (14) i1_i2c_send_address                                  2     1      1     280
                                              0 COMMON     2     1      1
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_restart                                       0     0      0       0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (12) i1_i2c_read_data                                     1     1      0      23
                                              0 COMMON     1     1      0
                         i1_i2c_wait
 ---------------------------------------------------------------------------------
 (15) i1_i2c_wait                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _ds1307_time_formatted                               1     1      0    3187
                                             12 COMMON     1     1      0
                   _ds1307_get_hours
                 _ds1307_get_minutes
                 _ds1307_get_seconds
                _ds1307_is_12hr_mode
                       _ds1307_is_pm
                            _sprintf
 ---------------------------------------------------------------------------------
 (13) _ds1307_is_pm                                        2     2      0     314
                                              6 COMMON     2     2      0
                   _ds1307_get_hours
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_get_hours                                    1     1      0     290
                                              5 COMMON     1     1      0
                         _bcd_to_dec
                _ds1307_is_12hr_mode
 ---------------------------------------------------------------------------------
 (14) _ds1307_is_12hr_mode                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_seconds                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_minutes                                  0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (11) _ds1307_date_formatted                               1     1      0    2759
                                             12 COMMON     1     1      0
            _ds1307_get_day_of_month
                   _ds1307_get_month
                    _ds1307_get_year
                            _sprintf
 ---------------------------------------------------------------------------------
 (11) _sprintf                                            21    13      8    1907
                                              0 BANK0     20    12      8
                             ___bmul
                            ___lwdiv
                            ___lwmod
            _ds1307_get_day_of_month (ARG)
                   _ds1307_get_hours (ARG)
                 _ds1307_get_minutes (ARG)
                   _ds1307_get_month (ARG)
                 _ds1307_get_seconds (ARG)
                    _ds1307_get_year (ARG)
                            _isdigit
 ---------------------------------------------------------------------------------
 (12) _isdigit                                             2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (12) ___lwmod                                             5     1      4     287
                                              7 COMMON     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (12) ___lwdiv                                             7     3      4     290
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_year                                     0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_month                                    0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (12) _ds1307_get_day_of_month                             0     0      0     264
                         _bcd_to_dec
 ---------------------------------------------------------------------------------
 (15) _bcd_to_dec                                          2     2      0     264
                                              3 COMMON     2     2      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (16) ___bmul                                              3     2      1     220
                                              0 COMMON     3     2      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ds1307_init
     _ds1307_get_clock
       _i2c_read_data
         _i2c_wait
       _i2c_restart
         _i2c_wait
       _i2c_send_ack
         _i2c_wait
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _i2c_init
     ___lldiv
   _init
     _write_t1
   _keypad_init
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _lcd_initialize
     __set_4bit_interface
       __send_nibble
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_backlight
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_command
       __send_byte
         __send_nibble
           _mcp23017_ioa_send_byte
             _mcp23017_write_reg
               _i2c_send_address
                 _i2c_wait
               _i2c_send_data
                 _i2c_wait
               _i2c_start
                 _i2c_wait
               _i2c_stop
                 _i2c_wait
       _mcp23017_ioa_send_byte
         _mcp23017_write_reg
           _i2c_send_address
             _i2c_wait
           _i2c_send_data
             _i2c_wait
           _i2c_start
             _i2c_wait
           _i2c_stop
             _i2c_wait
     _lcd_flags_set
       _lcd_command
         __send_byte
           __send_nibble
             _mcp23017_ioa_send_byte
               _mcp23017_write_reg
                 _i2c_send_address
                   _i2c_wait
                 _i2c_send_data
                   _i2c_wait
                 _i2c_start
                   _i2c_wait
                 _i2c_stop
                   _i2c_wait
         _mcp23017_ioa_send_byte
           _mcp23017_write_reg
             _i2c_send_address
               _i2c_wait
             _i2c_send_data
               _i2c_wait
             _i2c_start
               _i2c_wait
             _i2c_stop
               _i2c_wait
     _mcp23017_write_reg
       _i2c_send_address
         _i2c_wait
       _i2c_send_data
         _i2c_wait
       _i2c_start
         _i2c_wait
       _i2c_stop
         _i2c_wait
   _mcp23017_init
     _mcp23017_set_slave_addr

 _tmr_isr (ROOT)
   _ds1307_date_formatted
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _ds1307_time_formatted
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _sprintf
       ___bmul
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ds1307_get_day_of_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_hours (ARG)
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_get_minutes (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_month (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_seconds (ARG)
         _bcd_to_dec
           ___bmul
       _ds1307_get_year (ARG)
         _bcd_to_dec
           ___bmul
       _isdigit (ARG)
   _keypad_read_key
     _keypad_scan
       _mcp23017_read_reg
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   _lcd_goto
     i1_lcd_command
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _lcd_write
     _lcd_data
       i1__send_byte
         i1__send_nibble
           i1_mcp23017_ioa_send_byte
             i1_mcp23017_write_reg
               i1_i2c_send_address
                 i1_i2c_wait
               i1_i2c_send_data
                 i1_i2c_wait
               i1_i2c_start
                 i1_i2c_wait
               i1_i2c_stop
                 i1_i2c_wait
       i1_mcp23017_ioa_send_byte
         i1_mcp23017_write_reg
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
   _sprintf
     ___bmul
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ds1307_get_day_of_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours (ARG)
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_month (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds (ARG)
       _bcd_to_dec
         ___bmul
     _ds1307_get_year (ARG)
       _bcd_to_dec
         ___bmul
     _isdigit (ARG)
   _update_clock
     _adjust_val
     _ds1307_get_day_of_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_hours
       _bcd_to_dec
         ___bmul
       _ds1307_is_12hr_mode
     _ds1307_get_minutes
       _bcd_to_dec
         ___bmul
     _ds1307_get_month
       _bcd_to_dec
         ___bmul
     _ds1307_get_seconds
       _bcd_to_dec
         ___bmul
     _ds1307_get_year
       _bcd_to_dec
         ___bmul
     _ds1307_is_12hr_mode
     _ds1307_is_pm
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
     _ds1307_set_clock
       _ds1307_start_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       _ds1307_stop_clock
         _ds1307_read_addr
           i1_i2c_read_data
             i1_i2c_wait
           i1_i2c_restart
             i1_i2c_wait
           i1_i2c_send_ack
             i1_i2c_wait
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
         _ds1307_write_addr
           i1_i2c_send_address
             i1_i2c_wait
           i1_i2c_send_data
             i1_i2c_wait
           i1_i2c_start
             i1_i2c_wait
           i1_i2c_stop
             i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
     _ds1307_set_day_of_month
       _dec_to_bcd
         ___lbdiv
         ___lbmod
     _ds1307_set_hours
       _dec_to_bcd
         ___lbdiv
         ___lbmod
       _ds1307_is_12hr_mode
     _ds1307_set_minutes
       _dec_to_bcd
         ___lbdiv
         ___lbmod
     _ds1307_set_month
       _dec_to_bcd
         ___lbdiv
         ___lbmod
     _ds1307_set_pm_am
       _ds1307_is_12hr_mode
     _ds1307_set_seconds
       _dec_to_bcd
         ___lbdiv
         ___lbmod
     _ds1307_set_year
       _dec_to_bcd
         ___lbdiv
         ___lbmod
     _ds1307_stop_clock
       _ds1307_read_addr
         i1_i2c_read_data
           i1_i2c_wait
         i1_i2c_restart
           i1_i2c_wait
         i1_i2c_send_ack
           i1_i2c_wait
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
       _ds1307_write_addr
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
     _ds1307_switch_to_12hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___lbdiv
           ___lbmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
       _ds1307_set_pm_am
         _ds1307_is_12hr_mode
     _ds1307_switch_to_24hr
       _ds1307_get_hours
         _bcd_to_dec
           ___bmul
         _ds1307_is_12hr_mode
       _ds1307_is_12hr_mode
       _ds1307_is_pm
         _ds1307_get_hours
           _bcd_to_dec
             ___bmul
           _ds1307_is_12hr_mode
         _ds1307_is_12hr_mode
       _ds1307_set_hours
         _dec_to_bcd
           ___lbdiv
           ___lbmod
         _ds1307_is_12hr_mode
       _ds1307_set_hr_mode
     i1_ds1307_get_clock
       i1_i2c_read_data
         i1_i2c_wait
       i1_i2c_restart
         i1_i2c_wait
       i1_i2c_send_ack
         i1_i2c_wait
       i1_i2c_send_address
         i1_i2c_wait
       i1_i2c_send_data
         i1_i2c_wait
       i1_i2c_start
         i1_i2c_wait
       i1_i2c_stop
         i1_i2c_wait
   i1_ds1307_get_clock
     i1_i2c_read_data
       i1_i2c_wait
     i1_i2c_restart
       i1_i2c_wait
     i1_i2c_send_ack
       i1_i2c_wait
     i1_i2c_send_address
       i1_i2c_wait
     i1_i2c_send_data
       i1_i2c_wait
     i1_i2c_start
       i1_i2c_wait
     i1_i2c_stop
       i1_i2c_wait
   i1_lcd_backlight
     i1_mcp23017_ioa_send_byte
       i1_mcp23017_write_reg
         i1_i2c_send_address
           i1_i2c_wait
         i1_i2c_send_data
           i1_i2c_wait
         i1_i2c_start
           i1_i2c_wait
         i1_i2c_stop
           i1_i2c_wait
   i1_write_t1

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      5F       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50     2A      2F       6       58.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50     11      22       8       42.5%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      5F      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Aug 05 20:46:35 2014

  __size_of_mcp23017_ioa_send_byte 0004                       _update_clock 03C1  
 __size_of_ds1307_set_day_of_month 000D                       lcd_data@data 0079  
                   ___bmul@product 0071                        __CFG_CP$OFF 0000  
                               PL2 06D9                                 PL4 06E6  
                               PL6 06F2                                 PL8 06F8  
                      _SSPSTATbits 0214                                 l21 028B  
                  i1_lcd_backlight 0715                                PL10 06FE  
                              PL12 0703                                l500 0163  
                              l174 00DA                       __CFG_CPD$OFF 0000  
                      lcd_goto@col 007A                       __CFG_BORV$LO 0000  
                              wreg 0009                        lcd_goto@row 007B  
                ??_ds1307_get_year 0075                       __CFG_LVP$OFF 0000  
                             l2039 01EE                               l2363 020E  
                             l2355 01FA                               l2615 02BE  
                             l2607 02A1                               l2619 02C4  
                             l2571 0161                               l2573 0166  
                             l2591 0193                               l2575 0168  
                             l2583 016F                               l2577 016A  
                             l2585 0183                               l2579 016C  
                             l2589 018D                               l2679 0101  
                             l1987 0237                               l1995 024F  
                             STR_1 0838                               STR_2 083F  
                             STR_3 0846                               STR_4 0829  
                             STR_5 080A                               STR_6 081A  
                             u1655 02B3                               u1685 0269  
                             u1917 00F0                               u1927 014C  
                             u1937 0159                               u1947 01A7  
                             u1957 01C5                               u1967 01DA  
                             u1977 01E8                       __CFG_WRT$OFF 0000  
                    __CFG_FCMEN$ON 0000           ?_mcp23017_set_slave_addr 0070  
         __size_of_keypad_read_key 001B                      _i2c_read_data 0224  
                ?_i2c_send_address 00B1                               _g_bl 004A  
                  ??_lcd_backlight 00B5                               _main 00B8  
                             _init 02CD              __size_ofi1__send_byte 0009  
                             fsr0h 0005                               fsr1h 0007  
                             fsr0l 0004                               indf0 0000  
                             indf1 0001                               fsr1l 0006  
                             btemp 007E                       lcd_goto@addr 007C  
                    __CFG_BOREN$ON 0000                               ltemp 007E  
               ??_i2c_send_address 00B2                               start 00A6  
                             ttemp 007E                               wtemp 007E  
                    __CFG_IESO$OFF 0000               i2c_send_address@mode 00B1  
       ??i1_mcp23017_ioa_send_byte 0074                  ??_ds1307_set_year 0077  
                ?_ds1307_get_clock 0070                      ?_i2c_send_ack 0070  
                ___bmul@multiplier 0072                  ?_ds1307_get_hours 0070  
                    ??_i2c_restart 00B1                  ?_ds1307_get_month 0070  
                    _i2c_send_data 01F2                 ??_ds1307_get_clock 00B3  
               ??_ds1307_get_hours 0075                 ??_ds1307_get_month 0075  
       __size_of_mcp23017_read_reg 0019       __size_of_ds1307_is_12hr_mode 0005  
                       i1_write_t1 07CC                              ?_main 0070  
                            ?_init 00B3                    __end_of___lbdiv 1000  
                    __CFG_WDTE$OFF 0000                    __end_of___lbmod 0FE8  
                  __end_of___lldiv 02CD                    __end_of___lwdiv 06B9  
                  ??_lcd_flags_set 00BD                    __end_of___lwmod 06D9  
                            i1l197 03E5                              i1l393 050B  
                            i1l398 04FC                              i1l914 0FF3  
                ?_ds1307_read_addr 0070                              _TMR1H 0017  
              update_clock@up_down 007C                              _TMR1L 0016  
                    __CFG_PWRTE$ON 0000                 ??_ds1307_read_addr 0072  
           _mcp23017_ioa_send_byte 01EE      __size_ofi1_mcp23017_write_reg 0010  
                     i1__send_byte 077B               __end_of__send_nibble 01EE  
              __set_4bit_interface 01BB                    __end_of_dpowers 080A  
                     ?_keypad_init 0070                       ?_keypad_scan 0070  
                  __end_of_isdigit 0715                        ?i1_i2c_wait 0070  
                      ?i1_i2c_stop 0070            ??_ds1307_switch_to_12hr 0079  
          ??_ds1307_switch_to_24hr 0079        __size_ofi1_i2c_send_address 0008  
                   ?_i2c_read_data 0070                              ltemp0 007E  
                            ltemp1 0082                              ltemp2 0086  
                            ltemp3 0080                  ?_ds1307_set_clock 0070  
                ?_ds1307_set_pm_am 0070                  ?_ds1307_set_hours 0070  
                  __end_of_tmr_isr 00A6                              ttemp0 007E  
                            ttemp1 0081                              ttemp2 0084  
                            ttemp3 0087                              ttemp4 007F  
                ?_ds1307_set_month 0070                              status 0003  
                            wtemp0 007E                              wtemp1 0080  
                            wtemp2 0082                              wtemp3 0084  
                            wtemp4 0086                              wtemp5 0088  
                            wtemp6 007F                    __end_of_sprintf 05AF  
                  ___lbdiv@divisor 0070                 ??_ds1307_set_clock 0075  
                  ___lbdiv@counter 0072                 ??_ds1307_set_pm_am 0070  
               ??_ds1307_set_hours 0077                 ??_ds1307_set_month 0077  
      __size_ofi1_ds1307_get_clock 0028                      ??_ds1307_init 00B4  
                   ??_i2c_send_ack 00B1                       lcd_write@str 007A  
          __end_ofi1_lcd_backlight 071D                    update_clock@val 007D  
          mcp23017_write_reg@value 00B3                     ?_i2c_send_data 0070  
                   __CFG_MCLRE$OFF 0000                ds1307_set_year@year 0077  
                  __initialization 00A8               ?__set_4bit_interface 0070  
                     __end_of_main 00DB                       __end_of_init 02F5  
                 __end_of_i2c_init 028E                   __end_of_i2c_wait 023F  
                 __end_of_i2c_stop 0252                    i1write_t1@value 0070  
              __end_of_i2c_restart 024F                             ??_main 00C2  
                           ??_init 00B6          i1mcp23017_write_reg@value 0072  
               _g_slave_address_7b 00B0            mcp23017_init@address_3b 00B2  
       __end_of_ds1307_set_hr_mode 04FF                     __CFG_PLLEN$OFF 0000  
           __size_ofi1_lcd_command 000E         __end_of_ds1307_set_minutes 0F98  
       __end_of_ds1307_set_seconds 0FC1                             i1l2013 066C  
                           i1l2103 0FFE                             i1l2111 0FD4  
                           i1l2043 05B1                             i1l2311 06C4  
                           i1l2119 0FE4                             i1l2153 04B2  
                           i1l2225 04C9                             i1l2315 06D0  
                           i1l2227 04D1                             i1l2501 054A  
                           i1l2245 04E8                             i1l2319 06D4  
                           i1l2503 0553                             u200_27 0795  
                           i1l2351 04A2                             i1l2273 0713  
                           i1l2513 0564                             i1l2345 049C  
                           i1l2249 032F                             i1l2089 0FEE  
                           i1l2433 0378                             i1l2339 0492  
                           i1l2099 0FFB                             i1l2427 036F  
                           i1l2541 05A6                             i1l2349 04A1  
                           i1l2453 0353                             i1l2295 06B0  
                           i1l2287 06A1                             i1l2535 058B  
                           i1l2527 0578                             i1l2519 0566  
                           i1l2543 051A                             u201_27 07A2  
                           i1l2545 05AA                             i1l2801 07C4  
                           i1l2449 034D                             i1l2299 06B4  
                           i1l2459 05DA                             i1l2627 063A  
                           u122_25 06A9                             i1l2485 0527  
                           i1l2821 03AD                             i1l2805 07C7  
                           i1l2469 05E7                             u106_25 0FD7  
                           i1l2741 03DF                             i1l2495 0530  
                           i1l2831 0723                             i1l2639 064A  
                           i1l2903 002E                             i1l2497 0549  
                           i1l2817 03A2                             i1l2833 0725  
                           i1l2841 0736                             i1l2753 03F6  
                           i1l2729 03C7                             i1l2905 0041  
                           i1l2827 071F                             i1l2851 073F  
                           i1l2771 0444                             i1l2755 03F9  
                           i1l2747 03EE                             i1l2763 0403  
                           i1l2829 0721                             i1l2773 0455  
                           i1l2765 0413                             i1l2757 03FB  
                           i1l2839 0728                             i1l2775 0465  
                           i1l2767 0423                             i1l2759 03FC  
                           i1l2783 0470                             i1l2793 07B8  
                           i1l2769 0433                             i1l2785 0488  
                           i1l2779 046D                             i1l2939 00A3  
                           i1l2891 001F                             i1l2883 0010  
                           i1l2893 0021                             i1l2885 0015  
                           i1l2799 07C6                             i1l2887 001A  
                           i1l2899 0027                             u126_25 06CA  
                           u156_25 0571            ??_ds1307_time_formatted 007C  
                           u198_27 076A                             u199_27 0778  
                           _SSPADD 0212                             _SSPBUF 0211  
            ds1307_get_hours@hours 0075                 __size_of_i2c_start 0003  
                    ?_ds1307_is_pm 0070                      dec_to_bcd@dec 0076  
                  i1_i2c_read_data 0651            _ds1307_set_day_of_month 0FA5  
                 __end_of_lcd_data 076D              ??__set_4bit_interface 00B8  
                ??_keypad_read_key 0074                   __end_of_lcd_goto 073D  
             __size_of_lcd_command 0010                             ___bmul 05AF  
                        ??___lbdiv 0071                     __CFG_STVREN$ON 0000  
                        ??___lbmod 0071                          ??___lldiv 00B9  
                        ??___lwdiv 0074                          ??___lwmod 007B  
         ?_ds1307_get_day_of_month 0070                        ?i1_write_t1 0070  
                i1i2c_send_ack@ack 0070                __end_of_ds1307_init 0253  
              __size_ofi1_i2c_wait 0008                __size_ofi1_i2c_stop 0003  
                  i1_i2c_send_data 0674            __size_ofi1__send_nibble 0024  
                     ?i1_i2c_start 0070        __size_of_mcp23017_write_reg 0011  
                 _g_last_valid_key 004D                          ??_isdigit 0070  
                        ??_tmr_isr 007E                   ??_lcd_initialize 00BF  
                  ??_i2c_read_data 00B1                          ??_sprintf 0028  
              i1__send_nibble@data 0076                   ___lbdiv@dividend 0071  
                 __end_of_write_t1 0314         __end_of_ds1307_start_clock 033A  
                  ___lbmod@divisor 0070            __end_of__initialization 00B5  
                  ___lbmod@counter 0073         ds1307_switch_to_12hr@pm_am 0079  
               _ds1307_get_minutes 04B8                 _ds1307_get_seconds 04BB  
                   ??_ds1307_is_pm 0076                    ??_i2c_send_data 00B1  
                   init@load_value 00B3                      i1_lcd_command 076D  
                 ?i1_lcd_backlight 0070                ___bmul@multiplicand 0070  
                   __pcstackCOMMON 0070             __size_of_mcp23017_init 0003  
                      _i2c_restart 024C                ?_ds1307_get_minutes 0070  
              ?_ds1307_get_seconds 0070         ds1307_switch_to_24hr@pm_am 0079  
                       __end_ofPL2 06E6                         __end_ofPL4 06F2  
                       __end_ofPL6 06F8                         __end_ofPL8 06FE  
                  _ds1307_get_year 0691                   ___lbdiv@quotient 0073  
               lcd_flags_set@flags 00BB                         _bcd_to_dec 050D  
               lcd_flags_set@index 00BE                 lcd_flags_set@value 00BC  
                __end_of_i2c_start 024C                  _ds1307_stop_clock 067F  
            __size_of__send_nibble 0026                 ?_ds1307_stop_clock 0070  
             __end_of_i2c_send_ack 0237               ??_ds1307_get_minutes 0075  
             ??_ds1307_get_seconds 0075                  i1__send_byte@data 0077  
               __size_of_lcd_write 0022                  _ds1307_write_addr 05BB  
                  _ds1307_set_year 0F84                         _dec_to_bcd 0FC1  
              _ds1307_is_12hr_mode 04A4                         __pbssBANK0 004A  
                       __pbssBANK1 00A0                ??_ds1307_stop_clock 0074  
               ?_ds1307_write_addr 0072               __size_of_keypad_init 0010  
          __end_ofi1_i2c_read_data 0658               __size_of_keypad_scan 0003  
             i1lcd_command@command 0079                          ?_i2c_init 00BE  
              __size_ofi1_write_t1 0008                          ?_i2c_wait 0070  
                        ?_i2c_stop 0070                         _adjust_val 0489  
        ??_ds1307_set_day_of_month 0077                     ?i1_lcd_command 0070  
            _ds1307_date_formatted 0318                         _g_counter1 004C  
  __end_of_ds1307_get_day_of_month 068E                ??_ds1307_write_addr 0073  
                      _ds1307_init 0252                         __pmaintext 00B8  
          __end_ofi1_i2c_send_data 0679                         __send_byte 02FC  
             ds1307_read_addr@addr 0072                         _g_reg_data 00A0  
            __end_ofi1_i2c_restart 066C                            ?___bmul 0070  
                     __send_nibble 01C8                         __pintentry 0004  
             ?_ds1307_is_12hr_mode 0070   __size_of_mcp23017_set_slave_addr 0004  
        __size_of_i2c_send_address 000A          __end_of_ds1307_stop_clock 068A  
          ?_mcp23017_ioa_send_byte 0070                            _LCDPort 00AF  
        __size_of_ds1307_get_clock 002A          __size_of_ds1307_get_hours 000F  
        __size_of_ds1307_get_month 0003          __end_of_ds1307_write_addr 05CA  
                    _mcp23017_init 0305                            _SSPCON1 0215  
                          _SSPCON2 0216                          ?_lcd_data 0070  
                     ??i1_i2c_wait 0070                          ?_lcd_goto 007A  
                     ??i1_i2c_stop 0070                         ??_i2c_init 00C2  
                       ??_i2c_wait 00B1     __size_of_ds1307_switch_to_12hr 0021  
                       ??_i2c_stop 00B1     __size_of_ds1307_switch_to_24hr 0022  
    __end_of_ds1307_switch_to_12hr 035B      __end_of_ds1307_switch_to_24hr 037D  
        __size_of_ds1307_read_addr 001A              __end_of_lcd_backlight 02FC  
     __end_ofi1_mcp23017_write_reg 05DA            __end_of_ds1307_get_year 0694  
            ds1307_stop_clock@tsec 0074                    __size_of___bmul 000C  
                          ___lbdiv 0FE8              ??_ds1307_is_12hr_mode 0070  
                          ___lbmod 0FD0                  __end_of_lcd_write 075F  
                          ___lldiv 028E                            ___lwdiv 0694  
                          ___lwmod 06B9            __size_ofi1_i2c_send_ack 0009  
         lcd_flags_set@instruction 00BD          __size_of_ds1307_set_clock 001C  
                   i1__send_nibble 0784          __size_of_ds1307_set_pm_am 000E  
        __size_of_ds1307_set_hours 0021     __end_of_mcp23017_ioa_send_byte 01F2  
        __size_of_ds1307_set_month 000D                 __end_ofi1_i2c_wait 0674  
               __end_ofi1_i2c_stop 067F                        ?_bcd_to_dec 0070  
                          __ptext1 0305                            __ptext2 0314  
                          __ptext3 00EB                            __ptext4 015F  
                          __ptext5 019A                            __ptext6 02FC  
                          __ptext7 02F5                            __ptext8 01BB  
                          __ptext9 01C8                          ?_write_t1 00B1  
            ds1307_set_pm_am@pm_am 0070                          _T1CONbits 0018  
          __end_of_ds1307_set_year 0F8E                            _dpowers 0800  
             __end_of_ds1307_is_pm 04D3                            _isdigit 0707  
__size_ofi1_mcp23017_ioa_send_byte 0006               __size_ofi1_i2c_start 0003  
        ?i1_mcp23017_ioa_send_byte 0070              __end_of_lcd_flags_set 019A  
                   ?_mcp23017_init 0070              ds1307_set_hours@hours 0078  
       __end_ofi1_i2c_send_address 0660                            _tmr_isr 0004  
                       ??_lcd_data 0078                            _sprintf 0517  
                          clrloop0 07D5                        ?_dec_to_bcd 0070  
                       ??_lcd_goto 007B               end_of_initialization 00B5  
                  _keypad_read_key 07AE                   ?i1_i2c_read_data 0070  
       __end_ofi1_ds1307_get_clock 0651                        ?_adjust_val 0070  
               _ds1307_set_hr_mode 04F4                    ??i1_lcd_command 0078  
   __size_of_ds1307_time_formatted 0044             ?_ds1307_date_formatted 0070  
    __end_of_ds1307_time_formatted 03C1                 _ds1307_set_minutes 0F8E  
               _ds1307_set_seconds 0FB2                    ___lldiv@divisor 00B1  
                  ___lldiv@counter 00BD              ds1307_set_minutes@min 0077  
            ds1307_set_seconds@sec 0078      mcp23017_write_reg@reg_address 00B4  
              ?_ds1307_set_hr_mode 0070                        ?__send_byte 0070  
                 ?i1_i2c_send_data 0070             __end_ofi1__send_nibble 07A8  
              ?_ds1307_set_minutes 0070                ?_ds1307_set_seconds 0070  
                  adjust_val@value 0073                       __pstringtext 0800  
                     ??i1_write_t1 0072         __size_of_ds1307_stop_clock 000B  
          i2c_send_address@address 00B2                     _g_reload_value 00AD  
            __size_of_i2c_send_ack 000B              ds1307_set_month@month 0077  
                       ??_write_t1 00B3                   __CFG_FOSC$INTOSC 0000  
                 ___lbmod@dividend 0072         __size_of_ds1307_write_addr 000F  
                        _TRISAbits 008C               ??_ds1307_set_hr_mode 0070  
 __size_of_ds1307_get_day_of_month 0004          i1i2c_send_address@address 0071  
             ??_ds1307_set_minutes 0077               ??_ds1307_set_seconds 0077  
                i2c_send_data@data 00B1                        ___lbmod@rem 0074  
      __end_of__set_4bit_interface 01C8                 __end_ofi1_write_t1 07D4  
              __size_of_bcd_to_dec 000A                      ??_lcd_command 00B9  
                  lcd_initialize@i 00C1                         lcd_write@i 0020  
                     _i2c_send_ack 022C                   ?_ds1307_get_year 0070  
                    ?_update_clock 0070                       ?_i2c_restart 0070  
  ds1307_date_formatted@p_str_date 007C            _mcp23017_set_slave_addr 0314  
                  ?i1__send_nibble 0070                 _ds1307_start_clock 032F  
                   __end_of___bmul 05BB         __end_of_mcp23017_write_reg 01BB  
              __size_of_dec_to_bcd 000F                   _i2c_send_address 023F  
mcp23017_set_slave_addr@address_3b 00B1                __size_of_adjust_val 001B  
                  ??_mcp23017_init 00B2                ?_ds1307_start_clock 0070  
                 ?_ds1307_set_year 0070                   _ds1307_get_clock 01FA  
          __end_of_keypad_read_key 07C9                        __end_ofPL10 0703  
                      __end_ofPL12 0707                start_initialization 00A8  
                ds1307_get_clock@r 00B3                   _ds1307_get_hours 04A9  
                 _ds1307_get_month 068E                     update_clock@pm 007B  
                        _i2c_start 0249               i1_mcp23017_write_reg 05CA  
              __size_of__send_byte 0009              __end_of_i2c_read_data 022C  
     mcp23017_read_reg@reg_address 0072                 lcd_command@command 00BA  
                 _ds1307_read_addr 060F                        tmr_isr@date 0034  
                      tmr_isr@time 003E               ??_ds1307_start_clock 0074  
                __size_of_i2c_init 003B                  __size_of_i2c_wait 0008  
                __size_of_i2c_stop 0003                       ?_ds1307_init 0070  
                   ??_update_clock 007B              __end_of_i2c_send_data 01FA  
                         ??___bmul 0071                     i1_i2c_send_ack 0660  
              __end_of_lcd_command 01AA    ds1307_time_formatted@p_str_time 007C  
                 _ds1307_set_clock 05DA              __size_of_ds1307_is_pm 0014  
                 _ds1307_set_pm_am 04FF                   _ds1307_set_hours 04D3  
                 _ds1307_set_month 0F98    i1mcp23017_write_reg@reg_address 0073  
         __size_ofi1_lcd_backlight 0008                    i2c_send_ack@ack 00B1  
           ds1307_start_clock@tsec 0074                          ___latbits 0001  
                    __pcstackBANK0 0020                      __pcstackBANK1 00B1  
            ?i1_mcp23017_write_reg 0072                      ?i1__send_byte 0070  
                       ?_i2c_start 0070                __end_of__stringdata 0849  
                    ??_keypad_init 00B5                      ??_keypad_scan 0074  
      __size_of_ds1307_get_minutes 0003        __size_of_ds1307_get_seconds 0004  
                     _isdigit$1061 0070               i1lcd_backlight@state 0074  
                __size_of_lcd_data 000E                  __size_of_lcd_goto 0020  
                ds1307_is_pm@is_pm 0077                        sprintf@_val 002D  
                      sprintf@prec 0032                          _g_clk_pos 004B  
                     _ds1307_is_pm 04BF          ??_mcp23017_set_slave_addr 00B1  
                    init@prescaler 00B5            __size_of_lcd_initialize 0074  
                 ___lwdiv@dividend 0072             __end_ofi1_i2c_send_ack 0669  
                        _g_old_key 004E   __end_ofi1_mcp23017_ioa_send_byte 07AE  
                         ?___lbdiv 0070                           ?___lbmod 0070  
                         ?___lldiv 00B1                           ?___lwdiv 0070  
                         ?___lwmod 0077                       ??_bcd_to_dec 0073  
         i1i2c_read_data@read_data 0070                          _lcd_write 073D  
                         ?_isdigit 0070                  __size_of_write_t1 000C  
                 ?_keypad_read_key 0070                     ??i1__send_byte 0077  
          _ds1307_get_day_of_month 068A                   ___lwdiv@quotient 0074  
                         ?_tmr_isr 0070                       ??_dec_to_bcd 0075  
                         ?_sprintf 0020             __size_ofi1_i2c_restart 0003  
         ?_ds1307_set_day_of_month 0070            ??_ds1307_date_formatted 007C  
                  __send_byte@data 00B8                       ??_adjust_val 0073  
              __end_of_keypad_init 00EB                __end_of_keypad_scan 07CC  
                        clear_ram0 07D4                           _PIE1bits 0091  
      __end_of_ds1307_is_12hr_mode 04A9                 __end_of_bcd_to_dec 0517  
                      _lcd_command 019A              _ds1307_switch_to_12hr 033A  
            _ds1307_switch_to_24hr 035B                 i1_i2c_send_address 0658  
           ds1307_set_hr_mode@mode 0070                           _PIR1bits 0011  
                     ??__send_byte 00B8                    ?i1_i2c_send_ack 0070  
                         _SSP1CON2 0216                 i1_ds1307_get_clock 0629  
             __size_of_i2c_restart 0003                ?i1_i2c_send_address 0070  
               __end_of_dec_to_bcd 0FD0                      ??i1_i2c_start 0070  
                      __stringdata 080A                         ?_lcd_write 007A  
               keypad_read_key@key 0074                ?i1_ds1307_get_clock 0070  
               __end_of_adjust_val 04A4    __end_of_mcp23017_set_slave_addr 0318  
           ??i1_mcp23017_write_reg 0073             __size_of_lcd_backlight 0007  
                ds1307_set_clock@r 0075                  ??i1_lcd_backlight 0074  
             __end_of_update_clock 0489                        ??_i2c_start 00B1  
         ds1307_switch_to_12hr@hrs 007A           ds1307_switch_to_24hr@hrs 007A  
               __end_of__send_byte 0305               ??i1_i2c_send_address 0071  
       ds1307_read_addr@read_value 0073           __end_of_i2c_send_address 0249  
                         _i2c_init 0253                           _i2c_wait 0237  
                         _i2c_stop 024F               ??i1_ds1307_get_clock 0072  
                 ??i1__send_nibble 0074              __end_ofi1_lcd_command 077B  
                       tmr_isr@pos 0048           __end_of_ds1307_get_clock 0224  
         __end_of_ds1307_get_hours 04B8           __end_of_ds1307_get_month 0691  
            _ds1307_time_formatted 037D             __size_of_lcd_flags_set 003B  
         __size_ofi1_i2c_read_data 0007               __size_of_ds1307_init 0001  
                    i1_i2c_restart 0669                   __size_of___lbdiv 0018  
                 __size_of___lbmod 0018                   __size_of___lldiv 003F  
                 __size_of___lwdiv 0025                   __size_of___lwmod 0020  
                 i2c_init@clock_hz 00BE           i1_mcp23017_ioa_send_byte 07A8  
         __end_of_ds1307_read_addr 0629                         _ANSELAbits 018C  
         __size_ofi1_i2c_send_data 0005          ??_ds1307_get_day_of_month 0075  
                    bcd_to_dec@bcd 0074    __end_of_ds1307_set_day_of_month 0FB2  
                 __size_of_isdigit 000E                    ___lwdiv@divisor 0070  
      __size_of_ds1307_set_hr_mode 000B                __end_ofi1_i2c_start 067C  
                  ___lwdiv@counter 0076                           __ptext10 01EE  
               _mcp23017_write_reg 01AA                           __ptext11 00DB  
                         __ptext20 0249                           __ptext12 01AA  
                         __ptext21 01F2                           __ptext13 02CD  
                         __ptext30 03C1                           __ptext22 023F  
                         __ptext14 0308                           __ptext31 0629  
                         __ptext23 022C                           __ptext15 0253  
                         __ptext40 0F8E                           __ptext32 035B  
                         __ptext24 024C                           __ptext16 028E  
                         __ptext41 0FA5                           __ptext33 033A  
                         __ptext25 0224                           __ptext17 0252  
                         __ptext50 0660                           __ptext42 0FC1  
                         __ptext34 04FF                           __ptext26 0237  
                         __ptext18 01FA                           __ptext51 0489  
                         __ptext43 0FD0                           __ptext35 04F4  
                         __ptext19 024F                           __ptext60 07AE  
                         __ptext52 073D                           __ptext44 0FE8  
                         __ptext36 04D3                           __ptext28 07CC  
                         __ptext61 07C9                           __ptext53 075F  
                         __ptext45 05DA                           __ptext37 0F84  
                         __ptext29 0715                           __ptext70 037D  
                         __ptext62 05F6                           __ptext54 071D  
                         __ptext46 067F                           __ptext38 0FB2  
                         __ptext71 04BF                           __ptext63 067C  
                         __ptext55 076D                           __ptext47 032F  
                         __ptext39 0F98                           __ptext80 0694  
                         __ptext72 04A9                           __ptext64 0679  
                         __ptext56 077B                           __ptext48 05BB  
                         __ptext81 0691                           __ptext73 04A4  
                         __ptext65 0674                           __ptext57 0784  
                         __ptext49 060F                           __ptext82 068E  
                         __ptext74 04BB                           __ptext66 0658  
                         __ptext58 07A8                           __ptext83 068A  
                         __ptext75 04B8                           __ptext67 0669  
                         __ptext59 05CA                           __ptext84 050D  
                         __ptext76 0318                           __ptext68 0651  
                         __ptext85 05AF                           __ptext77 0517  
                         __ptext69 066C                           __ptext78 0707  
                         __ptext79 06B9                       _SSP1CON2bits 0216  
                         _lcd_data 075F                        _keypad_init 00DB  
                      _keypad_scan 07C9        __size_of_ds1307_set_minutes 000A  
      __size_of_ds1307_set_seconds 000F                           _lcd_goto 071D  
                 __size_of_tmr_isr 00A2                   __size_of_sprintf 0098  
         __end_of_ds1307_set_clock 05F6           __end_of_ds1307_set_pm_am 050D  
         __end_of_ds1307_set_hours 04F4           __end_of_ds1307_set_month 0FA5  
              ?_mcp23017_write_reg 00B3                      __size_of_main 0023  
                    __size_of_init 0028             ?_ds1307_switch_to_12hr 0070  
           ?_ds1307_switch_to_24hr 0070                     _lcd_initialize 00EB  
                    _lcd_backlight 02F5           ??_mcp23017_ioa_send_byte 00B5  
             __end_ofi1__send_byte 0784         ds1307_set_day_of_month@dom 0077  
                   ?i1_i2c_restart 0070       __size_of__set_4bit_interface 000D  
                    ?__send_nibble 0070                  __send_nibble@data 00B7  
              i1i2c_send_data@data 0070               ??_mcp23017_write_reg 00B4  
                _mcp23017_read_reg 05F6                        ??_lcd_write 007C  
                         _write_t1 0308           __size_of_ds1307_get_year 0003  
           ds1307_write_addr@value 0072                 ?_mcp23017_read_reg 0070  
                       _INTCONbits 000B                  adjust_val@lim_dwn 0070  
            __end_of_mcp23017_init 0308                      _lcd_flags_set 015F  
                         isdigit@c 0071                        pic14e$flags 007E  
                adjust_val@up_down 0072                 lcd_backlight@state 00B5  
              ??_mcp23017_read_reg 0072                           intlevel1 0000  
                        sprintf@ap 002C           __size_of_ds1307_set_year 000A  
                        sprintf@sp 0031                   ___lwmod@dividend 0079  
           __end_of_lcd_initialize 015F                   ___lldiv@dividend 00B5  
                __CFG_CLKOUTEN$OFF 0000        __size_of_ds1307_start_clock 000B  
           ?_ds1307_time_formatted 0070                     ?_lcd_backlight 0070  
              i1ds1307_get_clock@r 0072                         _OSCCONbits 0099  
                   ??__send_nibble 00B5              ds1307_write_addr@addr 0073  
        __end_of_mcp23017_read_reg 060F                   adjust_val@lim_up 0071  
           __size_of_i2c_read_data 0008                        i1_i2c_start 0679  
            __size_of_update_clock 00C8                  ??i1_i2c_read_data 0070  
                         sprintf@c 0033                           sprintf@f 0020  
                 ___lldiv@quotient 00B9                    ___lwmod@divisor 0077  
                   _display_config 00A7         __end_of_ds1307_get_minutes 04BB  
       __end_of_ds1307_get_seconds 04BF             mcp23017_read_reg@value 0073  
                  ___lwmod@counter 007B                     ?_lcd_flags_set 00BB  
           i2c_read_data@read_data 00B1             __size_of_i2c_send_data 0008  
                ??i1_i2c_send_data 0070                         i1_i2c_wait 066C  
                       i1_i2c_stop 067C     __size_of_ds1307_date_formatted 0017  
    __end_of_ds1307_date_formatted 032F                   ??i1_i2c_send_ack 0070  
                  ?_lcd_initialize 0070             i1i2c_send_address@mode 0070  
                     ?_lcd_command 0070                    ??i1_i2c_restart 0070  
                    write_t1@value 00B1  
